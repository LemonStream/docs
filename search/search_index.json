{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 Welcome to the MacroQuest Documentation. Note This documentation is a work in progress. Please help us by contributing updates and corrections! About MacroQuest \u00b6 MacroQuest, also known as MQ, or most recently MQNext, is the next generation in development of the platform for the customization and automation of EverQuest . MacroQuest is, and has always been, open source software. MacroQuest is as useful as you wish to make it. You can utilize it just for the capabilities of the map and other plugins, or you can further enhance EverQuest through the use of lua scripts, macros, or designing your own plugin. However, there are some issues you need to understand: First and foremost, the use of MacroQuest is a violation of the EULA of EverQuest. This means that if you use MacroQuest, you risk your account being suspended for a period of time, or in extreme cases, having your account(s) permanently banned. If you are not prepared for such circumstances, stop here and do not continue. MacroQuest does not run out of the box! It requires you to build it. MacroQuest \u00b6 Getting Started Building MacroQuest Macros/Snippets Plugins Getting Help \u00b6 Discord MQ Macro/Snippet Problems MQ Plugin Problems References \u00b6 Macro Reference Hacker Stuff Text Editors and Syntax Files","title":"Introduction"},{"location":"#introduction","text":"Welcome to the MacroQuest Documentation. Note This documentation is a work in progress. Please help us by contributing updates and corrections!","title":"Introduction"},{"location":"#about-macroquest","text":"MacroQuest, also known as MQ, or most recently MQNext, is the next generation in development of the platform for the customization and automation of EverQuest . MacroQuest is, and has always been, open source software. MacroQuest is as useful as you wish to make it. You can utilize it just for the capabilities of the map and other plugins, or you can further enhance EverQuest through the use of lua scripts, macros, or designing your own plugin. However, there are some issues you need to understand: First and foremost, the use of MacroQuest is a violation of the EULA of EverQuest. This means that if you use MacroQuest, you risk your account being suspended for a period of time, or in extreme cases, having your account(s) permanently banned. If you are not prepared for such circumstances, stop here and do not continue. MacroQuest does not run out of the box! It requires you to build it.","title":"About MacroQuest"},{"location":"#macroquest","text":"Getting Started Building MacroQuest Macros/Snippets Plugins","title":"MacroQuest"},{"location":"#getting-help","text":"Discord MQ Macro/Snippet Problems MQ Plugin Problems","title":"Getting Help"},{"location":"#references","text":"Macro Reference Hacker Stuff Text Editors and Syntax Files","title":"References"},{"location":"tags/","text":"Tags \u00b6 command \u00b6 /mqclear /mqfont /mqmin /custombind /classhud /defaulthud /hud /loadhud /zonehud /inote /highlight /mapclick /mapfilter /maphide /mapnames /mapshow /i /iconnect /istatus /telnet /aa /advloot /alert /alias /altkey /banklist /beep /beepontells /bind /break /call /caption /captioncolor /cast /cecho /charinfo /cleanup /clearerrors /click /combine /continue /ctrlkey /declare /delay /deletevar /destroy /docommand /doevents /doors /doortarget /dosocial /drop /dumpbinds /echo /endmacro /eqtarget /exec /face /filter /flashontells /for /foreground /goto /help /hotbutton /identify /if /ini /invoke /itemnotify /items /itemtarget /keepkeys /keypress /listmacros /loadcfg /loadspells /location /loginname /look /lootall /macro /makemevisible /memspell /mouseto /mqcopylayout /mqlog /mqpause /mqtarget /multiline /netstatusxpos /netstatusypos /next /nomodkey /noparse /notify /plugin /popcustom /popup /popupecho /ranged /reloadui /removeaura /removebuff /removelev /removepetbuff /return /screenmode /selectitem /sellitem /setautorun /seterror /setprio /setwintitle /shiftkey /skills /spellslotinfo /spew /squelch /substitute /target /timed /timestamp /unload /updateitems /useitem /varcalc /vardata /varset /where /while /who /whofilter /whotarget /windows /windowstate /lootnodrop datatype \u00b6 DataType:bazaar DataType:bazaaritem MQ2EQIM:DataType:buddy DataType:FPS MQ2IRC:DataType:irc achievement achievementcat achievementobj altability argb array augtype auratype bandolier body bool buff byte cachedbuff character charselectlist class corpse currentzone deity double dynamiczone dzmember dztimer everquest evolving fellowship fellowshipmember float ground group groupmember heading ini inifile inifilesection inifilesectionkey int int64 invslot item itemspell keyring keyringitem macro macroquest math mercenary merchant pet plugin race raid raidmember range skill spawn spell string switch target task taskmember ticks time timer timestamp type window worldlocation xtarget zone lua \u00b6 Lua Events and Binds LuaRocks Modules MacroScript to Lua macro \u00b6 AAPurchase.inc Advanced Fishing Afcleric.mac - nils AutoBot.mac-V4.28+ AutoBot.mac Barter Cleric.mac - nytemyst Clockwork Grease Maker Defense.inc DRShmbot GemOpt.inc GenBot Group Language Trainer Guild Buff Bot Loot Any Corpse Modbot 4.0 ModBot Necro Helper Ninjadvloot.inc Puller.inc QuickBeg.inc RDCommon.ini Related Include Files Rogue Helper Command List Rogue Helper Script Examples Sk.mac - nytemyst Snare Spell Routines.inc Spell Skill Trainer Wait4Rez.inc plugin \u00b6 MQ2AutoLogin MQ2Chat MQ2EQBugFix MQ2Labels MQ2Bzsrch MQ2ChatWnd MQ2CustomBinds MQ2HUD MQ2ItemDisplay MQ2Map MQ2Web MQ2EQIM MQ2FPS MQ2IRC MQ2Telnet tlo \u00b6 TLO:Bazaar TLO:FPS TLO:Irc Achievement AdvLoot Alert Alias AltAbility Bool Corpse Cursor Defined DisplayItem DoorTarget DynamicZone EverQuest Familiar FindItem FindItemBank FindItemBankCount FindItemCount Float FrameLimiter Friends GameTime Ground GroundItemCount Group Heading If Illusion Ini Int ItemTarget LastSpawn LineOfSight Macro MacroQuest Math Me Mercenary Merchant Mount NearestSpawn Pet Plugin Raid Range Select SelectedItem Skill Spawn SpawnCount Spell Switch Target Task Time Type Window Zone","title":"Tags"},{"location":"tags/#tags","text":"","title":"Tags"},{"location":"tags/#command","text":"/mqclear /mqfont /mqmin /custombind /classhud /defaulthud /hud /loadhud /zonehud /inote /highlight /mapclick /mapfilter /maphide /mapnames /mapshow /i /iconnect /istatus /telnet /aa /advloot /alert /alias /altkey /banklist /beep /beepontells /bind /break /call /caption /captioncolor /cast /cecho /charinfo /cleanup /clearerrors /click /combine /continue /ctrlkey /declare /delay /deletevar /destroy /docommand /doevents /doors /doortarget /dosocial /drop /dumpbinds /echo /endmacro /eqtarget /exec /face /filter /flashontells /for /foreground /goto /help /hotbutton /identify /if /ini /invoke /itemnotify /items /itemtarget /keepkeys /keypress /listmacros /loadcfg /loadspells /location /loginname /look /lootall /macro /makemevisible /memspell /mouseto /mqcopylayout /mqlog /mqpause /mqtarget /multiline /netstatusxpos /netstatusypos /next /nomodkey /noparse /notify /plugin /popcustom /popup /popupecho /ranged /reloadui /removeaura /removebuff /removelev /removepetbuff /return /screenmode /selectitem /sellitem /setautorun /seterror /setprio /setwintitle /shiftkey /skills /spellslotinfo /spew /squelch /substitute /target /timed /timestamp /unload /updateitems /useitem /varcalc /vardata /varset /where /while /who /whofilter /whotarget /windows /windowstate /lootnodrop","title":"command"},{"location":"tags/#datatype","text":"DataType:bazaar DataType:bazaaritem MQ2EQIM:DataType:buddy DataType:FPS MQ2IRC:DataType:irc achievement achievementcat achievementobj altability argb array augtype auratype bandolier body bool buff byte cachedbuff character charselectlist class corpse currentzone deity double dynamiczone dzmember dztimer everquest evolving fellowship fellowshipmember float ground group groupmember heading ini inifile inifilesection inifilesectionkey int int64 invslot item itemspell keyring keyringitem macro macroquest math mercenary merchant pet plugin race raid raidmember range skill spawn spell string switch target task taskmember ticks time timer timestamp type window worldlocation xtarget zone","title":"datatype"},{"location":"tags/#lua","text":"Lua Events and Binds LuaRocks Modules MacroScript to Lua","title":"lua"},{"location":"tags/#macro","text":"AAPurchase.inc Advanced Fishing Afcleric.mac - nils AutoBot.mac-V4.28+ AutoBot.mac Barter Cleric.mac - nytemyst Clockwork Grease Maker Defense.inc DRShmbot GemOpt.inc GenBot Group Language Trainer Guild Buff Bot Loot Any Corpse Modbot 4.0 ModBot Necro Helper Ninjadvloot.inc Puller.inc QuickBeg.inc RDCommon.ini Related Include Files Rogue Helper Command List Rogue Helper Script Examples Sk.mac - nytemyst Snare Spell Routines.inc Spell Skill Trainer Wait4Rez.inc","title":"macro"},{"location":"tags/#plugin","text":"MQ2AutoLogin MQ2Chat MQ2EQBugFix MQ2Labels MQ2Bzsrch MQ2ChatWnd MQ2CustomBinds MQ2HUD MQ2ItemDisplay MQ2Map MQ2Web MQ2EQIM MQ2FPS MQ2IRC MQ2Telnet","title":"plugin"},{"location":"tags/#tlo","text":"TLO:Bazaar TLO:FPS TLO:Irc Achievement AdvLoot Alert Alias AltAbility Bool Corpse Cursor Defined DisplayItem DoorTarget DynamicZone EverQuest Familiar FindItem FindItemBank FindItemBankCount FindItemCount Float FrameLimiter Friends GameTime Ground GroundItemCount Group Heading If Illusion Ini Int ItemTarget LastSpawn LineOfSight Macro MacroQuest Math Me Mercenary Merchant Mount NearestSpawn Pet Plugin Raid Range Select SelectedItem Skill Spawn SpawnCount Spell Switch Target Task Time Type Window Zone","title":"tlo"},{"location":"lua/","text":"Lua Scripting in MacroQuest \u00b6 Lua is in general a robust language with a multitude of tutorials and resources widely available: Main Lua Page with getting started and documentation Programming in Lua Tutorials Point Coldblooded's Lua autocompletion. Requires this VSCode extension. MQ definitions IMGUI definitions I won't cover language conventions or features, just mention that mq2lua is built on LuaJIT 2.0.5 if you need to know the specific flavor. Command Reference \u00b6 /lua [COMMAND] {OPTIONS} MQ2Lua: A lua script binding plugin. run -- run lua script from file location parse -- parse a lua string with an available mq namespace stop -- stop one or all running lua scripts pause -- pause one or all running lua scripts conf -- set or view configuration variable reloadconf -- reload configuration ps -- ps-like process listing info -- info for a process -h, -?, help -- displays this help text run the first argument is a script name (.lua is optional) additional arguments will be passed as arguments to the script parse all arguments will be interpreted as a lua script (via loadstring ) the mq namespace is provided for you (as mq ) stop no argument will stop all running scripts will accept script name or PID as an argument to stop individual scripts pause no argument will attempt to pause or resume all running scripts if all scripts are paused or resumed, will toggle state on all of them otherwise, will just pause any running scripts will accept script name or PID as an argument to pause or resume individual scripts conf arguments are option and value if only option is specified, will just echo the value reloadconf just reloads the config after it has been edited ps provides a table of processes with a quick status takes a list of statuses to filter the list ( STARTING , RUNNING , PAUSED , EXITED ) defaults to listing RUNNING and PAUSED scripts info displays detailed information about the status of a script takes a PID or a script name defaults to an unfiltered ps list when no script is specified TLO & Datatypes \u00b6 One new TLO is provided, Lua . This is a transparent accessor to the new lua datatype, and takes no index because it is a global state. The new datatypes (and their members) are as follows: lua PIDs (string) - a comma-delimited list of integer PIDs that have info to access Dir (string) - the base lua scripts directory Turbo (int) - the turbo value RequirePaths (string) - the semicolon-delimited value for lua require search paths CRequirePaths (string) - the semicolon-delimited value for dll require search paths Script (luainfo) - the accessor to get info on individual scripts. Accepts a PID as an index, or will default to the last executed script that has finished running. luainfo (accessed using the Script accessor above) PID (int)- the PID of the running or most recently executed version of this script Name (string) - the name of the script Path (string) - the full path of the script Arguments (string) - a comma delimited list of arguments passed to the script StartTime (string) - The time the most recent execution of the script was started EndTime (string) - The time the most recent execution of the script ended or NULL if the script has not ended ReturnCount (int) - The number of returns from the script, will be 0 if the script has not ended Return (string) - if not indexed, a comma-delimited list of return values. Accepts an integer index to get a single return value if there is more than one Status (string) - The execution status of the script First Script Step \u00b6 The first thing to do when writing a lua script for MQ2 is to require('mq') . The 'mq' package is built into the plugin and is what provides access to all of the lua-mq bridge bindings. Everything that binds lua to mq is going to be accessed like mq.something , with one exception. The single exception is that the built-in lua function print() has been redirected to write to the mq chat. Special functions provided at the base level are: print('string') as noted before mq.delay(val, --[[optional]]callback) where val can be an integer (which denotes milliseconds of delay) or a string that ends in 's' 'm' or 'ms' to have delays with human readable durations. The callback is optinal and is a function which evaluates to true or false to decide whether to end the delay early. mq.join(args...) where args must be convertible to string inside lua. This will join all the arguments into a single string mq.exit() force exits the script, ignoring the normal lua return flow mq.bind('/command', callback) where the callback is a lua function to execute when the user enters /command mq.unbind('/command') un-binds the command so that it will no longer function mq.event('name', 'matcher text', callback) where the callback is a lua function to execute when the text matching the matcher is detected mq.unevent('name') unregisters the event 'name' so that it won't react to the text anymore mq.doevents(optional 'event') will process queued events (binds don't queue, they execute automatically, this is only for events). No arguments will process all events in the queue, and optionally you can pass in a single event that you wish to process and all other events will remain queued(but not flushed). mq.flushevents(optional 'event') clears all events in the queue without processing them. No arguments will flush all events in the queue, and optionally you can pass in a single event that you wish to flush. mq.parse(string) runs the string through the macro parser and returns the result as a string (regardles of the data type returned). This is not a replacement for mq.TLO or mq.TLO.MacroVariable and is only for complex operations where neither of those will work (generally converting from old ini/macro formats) mq.TLO noted in TLO Bindings below mq.cmd and mq.cmdf noted in Command Bindings below mq.imgui noted in ImGui Bindings below Lua Bindings \u00b6 TLO Bindings \u00b6 TLOs are the same as macro TLOs, just accessed via the lua API. The reason for exposing these is to allow a quick conversion from macros directly into lua. The quick rules to convert are as follows: Remove the ${} prepend the expression with mq.TLO. replace all [] with () wrap all strings with quotes (double or single, it doesn't matter) append () to the end to finally bring the result into lua For example, let's take the macro data value of ${Me.Buff[Spirit of Wolf].ID} . To convert this into lua following the steps, you get this: Me.Buff[Spirit of Wolf].ID mq.TLO.Me.Buff[Spirit of Wolf].ID mq.TLO.Me.Buff(Spirit of Wolf).ID mq.TLO.Me.Buff('Spirit of Wolf').ID mq.TLO.Me.Buff('Spirit of Wolf').ID() Something in particular to note. While things like mq.TLO.Math and mq.TLO.SomeString.Equals will work, it would be much better if you just bring those types into lua and do lua operations on them. so do mq.TLO.SomeString() == 'thatstring' or instead of mq.TLO.Math('1 + 1') just do 1 + 1 . Take advantage of the medium! Command Bindings \u00b6 This binding allows you to pass commands to EQ. It is very dumb in that it can take any value, and will just prepend a / in front of it and send it to the EQ parser. Any arguments passed to it are stringified (in lua), concatenated (with a space delimiter), and sent as part of the command. So for instance, mq.cmd('/who all fred') will end up getting passed to EQ as /who all fred . You can also use cmdf to provide a format string: mq.cmdf('/who all %s', someStringValue) ImGui Bindings \u00b6 ImGui is a feature that lua supports that has no equivalent in the macro world. For full documentation of the source binding API, this page has the source: sol2 ImGui Bindings . As mq may have different needs, we can expand this as time goes on, and if that happens, then we will add a page on this wiki to document all the available bindings. To use imgui, you must register a callback using mq.imgui.init('name', callback) . The callback will be a function that will be called every imgui update, and will usually be the code to render your imgui windows. To remove the callback, you can use mq.imgui.destroy('name') and the callback will unregister and no longer render on imgui updates. Additional Bindings \u00b6 In addition to the full set of binds in the MSeys repo, we have also added the following: Drag and drop support \u00b6 -- ImGui.BeginDragDropSource(...) -- Parameters: int (flags) [O] -- Returns: bool (isDragged) -- Overloads isDragged = ImGui . BeginDragDropSource () isDragged = ImGui . BeginDragDropSource ( ImGuiDragDropFlags . SourceNoPreviewTooltip ) -- ImGui.EndDragDropSource() ImGui . EndDragDropSource () -- ImGui.BeginDragDropTarget() -- Returns: bool (isDropped) isDropped = ImGui . BeginDragDropTarget () -- ImGui.EndDragDropTarget() ImGui . EndDragDropTarget () -- ImGui.SetDragDropPayload(...) -- Parameters: text (type), object(data), int (cond) [O] -- Returns: bool -- Overloads ImGui . SetDragDropPayload ( 'ITEMN' , i ) ImGui . SetDragDropPayload ( 'ITEMN' , i , ImGuiCond . Always ) -- ImGui.AcceptDragDropPayload(...) -- Parameters: text (type), flags (cond) [O] -- Returns: object -- Overloads payload = ImGui . AcceptDragDropPayload ( 'ITEMN' ) payload = ImGui . AcceptDragDropPayload ( 'ITEMN' , ImGuiDragDropFlags . AcceptNoDrawDefaultRect ) -- ImGui.GetDragDropPayload() -- Returns: object payload = ImGui . GetDragDropPayload () EQ Icon rendering \u00b6 -- Get the table of icons, which live in an animation texture anim = mq . FindTextureAnimation ( 'A_SpellIcons' ) ... -- once you know the index of the icon inside the texture, set the cell anim : SetTextureCell ( spell . SpellIcon ()) -- render the texture at the cell ImGui . RenderTextureAnimation ( anim ) Events and Binds \u00b6 As alluded to earlier, lua supports events and binds similar to the macro language. The details of how to use them are documented here . Including Modules \u00b6 In general, if you have some lua code from somewhere, you can simply require('thescript') and it will be usable in your code. The fishb example does this with an external behavior tree module. There is something special to consider about loading modules like this -- they can sometimes be quite large, and in order to prevent some errors the implementation of mq2lua turns off the normal frame yielding operation to load requires. What this means is that your client can hang when you require a file, especially if it is large. The good news is that lua caches requires, so it will only hang on the first load, and won't hang again until the plugin restarts. There is another type of module that lua can include: compiled dlls. This is slightly more complex because you have to build it against the version of lua that we use in mq2lua. Luckily, this version of lua is in our vcpkg repo, so everything you need to link against is available in the mq git. LuaRocks is a great resource for these kinds of packages, and I have made detailed instructions for building these here . Config Options \u00b6 turboNum the number of instructions that will be processed before yielding the frame default: 500 luaDir the path where lua scripts live, relative to the MQ2 root directory default: 'lua' luaRequirePaths list of additional require lookup paths, written in lua require lookup format appends the global package.path in lua environments default: empty list dllRequirePaths list of additional require lookup paths for c modules, written in lua require lookup format appends the global package.cpath in lua environments default: empty list infoGC the time to garbage collect ps and info output so they don't always persist in memory accepts numbers (in milliseconds) or strings ending in 'h', 'm', 's', or 'ms' for hours, minutes, seconds, and milliseconds default: 1 hour squelchStatus a flag to set whether or not to print lua status messages when running, pausing, and stopping scripts default: false (do not squelch)","title":"Lua Scripting in MacroQuest"},{"location":"lua/#lua-scripting-in-macroquest","text":"Lua is in general a robust language with a multitude of tutorials and resources widely available: Main Lua Page with getting started and documentation Programming in Lua Tutorials Point Coldblooded's Lua autocompletion. Requires this VSCode extension. MQ definitions IMGUI definitions I won't cover language conventions or features, just mention that mq2lua is built on LuaJIT 2.0.5 if you need to know the specific flavor.","title":"Lua Scripting in MacroQuest"},{"location":"lua/#command-reference","text":"/lua [COMMAND] {OPTIONS} MQ2Lua: A lua script binding plugin. run -- run lua script from file location parse -- parse a lua string with an available mq namespace stop -- stop one or all running lua scripts pause -- pause one or all running lua scripts conf -- set or view configuration variable reloadconf -- reload configuration ps -- ps-like process listing info -- info for a process -h, -?, help -- displays this help text run the first argument is a script name (.lua is optional) additional arguments will be passed as arguments to the script parse all arguments will be interpreted as a lua script (via loadstring ) the mq namespace is provided for you (as mq ) stop no argument will stop all running scripts will accept script name or PID as an argument to stop individual scripts pause no argument will attempt to pause or resume all running scripts if all scripts are paused or resumed, will toggle state on all of them otherwise, will just pause any running scripts will accept script name or PID as an argument to pause or resume individual scripts conf arguments are option and value if only option is specified, will just echo the value reloadconf just reloads the config after it has been edited ps provides a table of processes with a quick status takes a list of statuses to filter the list ( STARTING , RUNNING , PAUSED , EXITED ) defaults to listing RUNNING and PAUSED scripts info displays detailed information about the status of a script takes a PID or a script name defaults to an unfiltered ps list when no script is specified","title":"Command Reference"},{"location":"lua/#tlo-datatypes","text":"One new TLO is provided, Lua . This is a transparent accessor to the new lua datatype, and takes no index because it is a global state. The new datatypes (and their members) are as follows: lua PIDs (string) - a comma-delimited list of integer PIDs that have info to access Dir (string) - the base lua scripts directory Turbo (int) - the turbo value RequirePaths (string) - the semicolon-delimited value for lua require search paths CRequirePaths (string) - the semicolon-delimited value for dll require search paths Script (luainfo) - the accessor to get info on individual scripts. Accepts a PID as an index, or will default to the last executed script that has finished running. luainfo (accessed using the Script accessor above) PID (int)- the PID of the running or most recently executed version of this script Name (string) - the name of the script Path (string) - the full path of the script Arguments (string) - a comma delimited list of arguments passed to the script StartTime (string) - The time the most recent execution of the script was started EndTime (string) - The time the most recent execution of the script ended or NULL if the script has not ended ReturnCount (int) - The number of returns from the script, will be 0 if the script has not ended Return (string) - if not indexed, a comma-delimited list of return values. Accepts an integer index to get a single return value if there is more than one Status (string) - The execution status of the script","title":"TLO &amp; Datatypes"},{"location":"lua/#first-script-step","text":"The first thing to do when writing a lua script for MQ2 is to require('mq') . The 'mq' package is built into the plugin and is what provides access to all of the lua-mq bridge bindings. Everything that binds lua to mq is going to be accessed like mq.something , with one exception. The single exception is that the built-in lua function print() has been redirected to write to the mq chat. Special functions provided at the base level are: print('string') as noted before mq.delay(val, --[[optional]]callback) where val can be an integer (which denotes milliseconds of delay) or a string that ends in 's' 'm' or 'ms' to have delays with human readable durations. The callback is optinal and is a function which evaluates to true or false to decide whether to end the delay early. mq.join(args...) where args must be convertible to string inside lua. This will join all the arguments into a single string mq.exit() force exits the script, ignoring the normal lua return flow mq.bind('/command', callback) where the callback is a lua function to execute when the user enters /command mq.unbind('/command') un-binds the command so that it will no longer function mq.event('name', 'matcher text', callback) where the callback is a lua function to execute when the text matching the matcher is detected mq.unevent('name') unregisters the event 'name' so that it won't react to the text anymore mq.doevents(optional 'event') will process queued events (binds don't queue, they execute automatically, this is only for events). No arguments will process all events in the queue, and optionally you can pass in a single event that you wish to process and all other events will remain queued(but not flushed). mq.flushevents(optional 'event') clears all events in the queue without processing them. No arguments will flush all events in the queue, and optionally you can pass in a single event that you wish to flush. mq.parse(string) runs the string through the macro parser and returns the result as a string (regardles of the data type returned). This is not a replacement for mq.TLO or mq.TLO.MacroVariable and is only for complex operations where neither of those will work (generally converting from old ini/macro formats) mq.TLO noted in TLO Bindings below mq.cmd and mq.cmdf noted in Command Bindings below mq.imgui noted in ImGui Bindings below","title":"First Script Step"},{"location":"lua/#lua-bindings","text":"","title":"Lua Bindings"},{"location":"lua/#tlo-bindings","text":"TLOs are the same as macro TLOs, just accessed via the lua API. The reason for exposing these is to allow a quick conversion from macros directly into lua. The quick rules to convert are as follows: Remove the ${} prepend the expression with mq.TLO. replace all [] with () wrap all strings with quotes (double or single, it doesn't matter) append () to the end to finally bring the result into lua For example, let's take the macro data value of ${Me.Buff[Spirit of Wolf].ID} . To convert this into lua following the steps, you get this: Me.Buff[Spirit of Wolf].ID mq.TLO.Me.Buff[Spirit of Wolf].ID mq.TLO.Me.Buff(Spirit of Wolf).ID mq.TLO.Me.Buff('Spirit of Wolf').ID mq.TLO.Me.Buff('Spirit of Wolf').ID() Something in particular to note. While things like mq.TLO.Math and mq.TLO.SomeString.Equals will work, it would be much better if you just bring those types into lua and do lua operations on them. so do mq.TLO.SomeString() == 'thatstring' or instead of mq.TLO.Math('1 + 1') just do 1 + 1 . Take advantage of the medium!","title":"TLO Bindings"},{"location":"lua/#command-bindings","text":"This binding allows you to pass commands to EQ. It is very dumb in that it can take any value, and will just prepend a / in front of it and send it to the EQ parser. Any arguments passed to it are stringified (in lua), concatenated (with a space delimiter), and sent as part of the command. So for instance, mq.cmd('/who all fred') will end up getting passed to EQ as /who all fred . You can also use cmdf to provide a format string: mq.cmdf('/who all %s', someStringValue)","title":"Command Bindings"},{"location":"lua/#imgui-bindings","text":"ImGui is a feature that lua supports that has no equivalent in the macro world. For full documentation of the source binding API, this page has the source: sol2 ImGui Bindings . As mq may have different needs, we can expand this as time goes on, and if that happens, then we will add a page on this wiki to document all the available bindings. To use imgui, you must register a callback using mq.imgui.init('name', callback) . The callback will be a function that will be called every imgui update, and will usually be the code to render your imgui windows. To remove the callback, you can use mq.imgui.destroy('name') and the callback will unregister and no longer render on imgui updates.","title":"ImGui Bindings"},{"location":"lua/#additional-bindings","text":"In addition to the full set of binds in the MSeys repo, we have also added the following:","title":"Additional Bindings"},{"location":"lua/#drag-and-drop-support","text":"-- ImGui.BeginDragDropSource(...) -- Parameters: int (flags) [O] -- Returns: bool (isDragged) -- Overloads isDragged = ImGui . BeginDragDropSource () isDragged = ImGui . BeginDragDropSource ( ImGuiDragDropFlags . SourceNoPreviewTooltip ) -- ImGui.EndDragDropSource() ImGui . EndDragDropSource () -- ImGui.BeginDragDropTarget() -- Returns: bool (isDropped) isDropped = ImGui . BeginDragDropTarget () -- ImGui.EndDragDropTarget() ImGui . EndDragDropTarget () -- ImGui.SetDragDropPayload(...) -- Parameters: text (type), object(data), int (cond) [O] -- Returns: bool -- Overloads ImGui . SetDragDropPayload ( 'ITEMN' , i ) ImGui . SetDragDropPayload ( 'ITEMN' , i , ImGuiCond . Always ) -- ImGui.AcceptDragDropPayload(...) -- Parameters: text (type), flags (cond) [O] -- Returns: object -- Overloads payload = ImGui . AcceptDragDropPayload ( 'ITEMN' ) payload = ImGui . AcceptDragDropPayload ( 'ITEMN' , ImGuiDragDropFlags . AcceptNoDrawDefaultRect ) -- ImGui.GetDragDropPayload() -- Returns: object payload = ImGui . GetDragDropPayload ()","title":"Drag and drop support"},{"location":"lua/#eq-icon-rendering","text":"-- Get the table of icons, which live in an animation texture anim = mq . FindTextureAnimation ( 'A_SpellIcons' ) ... -- once you know the index of the icon inside the texture, set the cell anim : SetTextureCell ( spell . SpellIcon ()) -- render the texture at the cell ImGui . RenderTextureAnimation ( anim )","title":"EQ Icon rendering"},{"location":"lua/#events-and-binds","text":"As alluded to earlier, lua supports events and binds similar to the macro language. The details of how to use them are documented here .","title":"Events and Binds"},{"location":"lua/#including-modules","text":"In general, if you have some lua code from somewhere, you can simply require('thescript') and it will be usable in your code. The fishb example does this with an external behavior tree module. There is something special to consider about loading modules like this -- they can sometimes be quite large, and in order to prevent some errors the implementation of mq2lua turns off the normal frame yielding operation to load requires. What this means is that your client can hang when you require a file, especially if it is large. The good news is that lua caches requires, so it will only hang on the first load, and won't hang again until the plugin restarts. There is another type of module that lua can include: compiled dlls. This is slightly more complex because you have to build it against the version of lua that we use in mq2lua. Luckily, this version of lua is in our vcpkg repo, so everything you need to link against is available in the mq git. LuaRocks is a great resource for these kinds of packages, and I have made detailed instructions for building these here .","title":"Including Modules"},{"location":"lua/#config-options","text":"turboNum the number of instructions that will be processed before yielding the frame default: 500 luaDir the path where lua scripts live, relative to the MQ2 root directory default: 'lua' luaRequirePaths list of additional require lookup paths, written in lua require lookup format appends the global package.path in lua environments default: empty list dllRequirePaths list of additional require lookup paths for c modules, written in lua require lookup format appends the global package.cpath in lua environments default: empty list infoGC the time to garbage collect ps and info output so they don't always persist in memory accepts numbers (in milliseconds) or strings ending in 'h', 'm', 's', or 'ms' for hours, minutes, seconds, and milliseconds default: 1 hour squelchStatus a flag to set whether or not to print lua status messages when running, pausing, and stopping scripts default: false (do not squelch)","title":"Config Options"},{"location":"lua/events-and-binds/","tags":["lua"],"text":"Lua Events and Binds \u00b6 Events and binds are very similar to their macro counterparts, but use the fact that Lua functions are first class to allow you to simply specify callback functions that will process events and binds when they get processed. The callbacks will require a specific signature to work, so this page is here to document how to use callbacks. Lua Events \u00b6 When you set up an event, you call mq.event('name', 'matcher text', callback) . The name is just a string to identify the event with so you can remove it later with mq.unevent('name') if the event is no longer necessary. The matcher text is the same matcher text that everyone is used to from macro events, where #*# is an uncaptured wildcard and #1# is a captured wildcard that will be the first argument. More arguments are similarly captured, so you can specify the argument order in a callback. The callback is the important feature of Lua. It expects a function with a signature of (line, arg1, arg2, etc) that will process the text of the event (the full matched line and the captured arguments, ordered by number). A simple example would look like this: local function callback ( line , arg1 , arg2 ) print ( arg1 ) print ( arg2 ) end mq . event ( 'mysay' , '#1# says, #2#' , callback ) Finally, events will not automatically process (much like in the macro language) -- you will have to call mq.doevents() when it makes sense in your lua script to process the queue of captured events: while not terminate do mq . doevents () mq . delay ( 1 ) -- just yield the frame every loop end Lua Binds \u00b6 Binds are very similar to events (and even use the same backend code) with a couple of important differences. Instead of capturing arbitrary text, it will pass arguments specified by the user, and it will execute at the beginning of the next frame always (no need to call mq.doevents() ). When you set up a bind, you call mq.bind('/command', callback) . The command is simultaneously what the user will input to call the bind, and what the bind is indexed by to unbind with mq.unbind('/command') when you no longer want the bind to function while your script is running. The callback now has a function signature of (arg1, arg2, etc) . A simple example would look like this: local callback = function (...) local args = {...} local str = '' for i = 1 , # args , 1 do if i > 1 then str = str .. ' ' str = str .. args [ i ] end print ( str ) end mq . bind ( '/myecho' , callback ) That's all that is required to implement an echo command.","title":"Lua Events and Binds"},{"location":"lua/events-and-binds/#lua-events-and-binds","text":"Events and binds are very similar to their macro counterparts, but use the fact that Lua functions are first class to allow you to simply specify callback functions that will process events and binds when they get processed. The callbacks will require a specific signature to work, so this page is here to document how to use callbacks.","title":"Lua Events and Binds"},{"location":"lua/events-and-binds/#lua-events","text":"When you set up an event, you call mq.event('name', 'matcher text', callback) . The name is just a string to identify the event with so you can remove it later with mq.unevent('name') if the event is no longer necessary. The matcher text is the same matcher text that everyone is used to from macro events, where #*# is an uncaptured wildcard and #1# is a captured wildcard that will be the first argument. More arguments are similarly captured, so you can specify the argument order in a callback. The callback is the important feature of Lua. It expects a function with a signature of (line, arg1, arg2, etc) that will process the text of the event (the full matched line and the captured arguments, ordered by number). A simple example would look like this: local function callback ( line , arg1 , arg2 ) print ( arg1 ) print ( arg2 ) end mq . event ( 'mysay' , '#1# says, #2#' , callback ) Finally, events will not automatically process (much like in the macro language) -- you will have to call mq.doevents() when it makes sense in your lua script to process the queue of captured events: while not terminate do mq . doevents () mq . delay ( 1 ) -- just yield the frame every loop end","title":"Lua Events"},{"location":"lua/events-and-binds/#lua-binds","text":"Binds are very similar to events (and even use the same backend code) with a couple of important differences. Instead of capturing arbitrary text, it will pass arguments specified by the user, and it will execute at the beginning of the next frame always (no need to call mq.doevents() ). When you set up a bind, you call mq.bind('/command', callback) . The command is simultaneously what the user will input to call the bind, and what the bind is indexed by to unbind with mq.unbind('/command') when you no longer want the bind to function while your script is running. The callback now has a function signature of (arg1, arg2, etc) . A simple example would look like this: local callback = function (...) local args = {...} local str = '' for i = 1 , # args , 1 do if i > 1 then str = str .. ' ' str = str .. args [ i ] end print ( str ) end mq . bind ( '/myecho' , callback ) That's all that is required to implement an echo command.","title":"Lua Binds"},{"location":"lua/luarocks-modules/","tags":["lua"],"text":"LuaRocks Modules \u00b6 MacroQuest includes helpers for lua script writers to allow their users to install modules from LuaRocks. MacroQuest also includes luarocks.exe with the compile for facilitating this install. The repository of tested LuaRocks exists at https://luarocks.macroquest.org/ and these are all verified as working. Packages can be added by submitting a pull request to the MQ LuaRocks Repo config Script Writer's Guide to using PackageMan \u00b6 PackageMan is the primary helper for installing LuaRocks modules. The simplest method for package installation is PackageMan.Require. However, there are also functions for InstallAndLoad and just Install. PackageMan.Require \u00b6 The simplest method of installing a required package is PackageMan.Require. This will check for the package, try to install it if it is not found, and try to load it after the install. If it fails, Require returns a customizable message that tells the user what happened. By default this message just states that there was a failure. An example of how to require lsqlite3 for your script is: local mq = require ( 'mq' ) local PackageMan = require ( 'mq/PackageMan' ) local sql = PackageMan . Require ( 'lsqlite3' ) This will contact the default MacroQuest rock server, install lsqlite3 and load it to be used under the sql variable. If there is a failure, the simplest message (\"Failed to load package lsqlite3\") will be displayed to the user. Require also supports overloads for packages that do not have the same name as their luarocks name would suggest. In this case, you can use two parameters for Require. An example of this is lfs. The name of the package is \"luafilesystem\" but when you load it, you load it with \"lfs\" so you can pass that information to Require as below: local mq = require ( 'mq' ) local PackageMan = require ( 'mq/PackageMan' ) local lfs = PackageMan . Require ( 'luafilesystem' , 'lfs' ) This will perform the same steps as above, but once the package is installed it uses the lfs name instead of the luafilesystem name for loading. Lastly, you can use Require to send your own custom message if you do not like the default message. This is the third overload for Require. For example, in the case that you want to return the message \"[ScriptNameHere] LFS failed to install and is required for this script\" you can do so as: local mq = require ( 'mq' ) local PackageMan = require ( 'mq/PackageMan' ) local lfs = PackageMan . Require ( 'luafilesystem' , 'lfs' , '[ScriptNameHere] LFS failed to install and is required for this sript' ) The default message should suffice for most usages. In all cases, when there is a failure to load the package using Require, your script will be exited. If you'd like more control, you can use the other functions of PackageMan. PackageMan.InstallAndLoad \u00b6 For most use cases, Require should be sufficient. However, for more granular control over what happens when a package fails to load, you can start with InstallAndLoad. This will attempt to install the package and load it. It does not check to see if the package is installed first, as that is up to the script writer. The mq/utils library has an example of an Include function which will try to load a library and gracefully fail. An example of using this library to do your own error handling on a package install is below: local mq = require ( 'mq' ) local PackageMan = require ( 'mq/PackageMan' ) local Utils = require ( 'mq/Utils' ) local sql = Utils . Library . Include ( 'lsqlite3' ) if not sql then sql = PackageMan . InstallAndLoad ( 'lsqlite3' ) end if not sql then print ( 'Could not load or install lsqlite3' ) end Because Utils.Library.Include is a graceful failure, the above code will try to load the library, install and try to load it if the initial load fails, and lastly print a message if it is still not loaded. This is useful if your script does not have a strict dependency on the library and would only use the library if it was available. InstallAndLoad also can be overloaded with an additional parameter for packages where the name is different. Referencing luafilesystem, the appropriate usage for InstallAndLoad would be: local mq = require ( 'mq' ) local PackageMan = require ( 'mq/PackageMan' ) local Utils = require ( 'mq/Utils' ) local lfs = Utils . Library . Include ( 'lfs' ) if not lfs then lfs = PackageMan . InstallAndLoad ( 'luafilesystem' , 'lfs' ) end if not lfs then print ( 'Could not load or install luafilesystem/lfs' ) end Unlike Require, InstallAndLoad does not have a third overload for a message, since you are expected to handle your own failure messages. PackageMan.Install \u00b6 If Require or InstallAndLoad does not meet your needs, then Install provides the most granular control over installing a package. Again, for most people Require should be sufficient. However, Install will allow you to determine the REASON for failures, which none of the other methods do. Install is also only responsible for installing your package, it will not try to load your package at all and it does not check if the package is already installed. The return on Install is a numerical error code, the most up to date details for which can be found in the source for PackageMan.lua. The most relevant return code that a script writer would probably be handling is error code 2 -- the user declined the installation of the package. One example of usage is below: local mq = require ( 'mq' ) local PackageMan = require ( 'mq/PackageMan' ) local Utils = require ( 'mq/Utils' ) local sql = Utils . Library . Include ( 'lsqlite3' ) if not sql then if PackageMan . Install ( 'lsqlite3' ) == 2 then print ( 'User canceled the install, cannot proceed' ) mq . exit () else sql = require ( 'lsqlite3' ) end end Advanced Configuration \u00b6 PackageMan includes parameters repoUrl and repoName for pointing users at your own repo should you want to beta test with users. However, use this at your own risk as there is no setup of maintaining multiple versions of packages from different repos. Step-by-Step Building a LuaRocks Module for MQ \u00b6 While the easiest method is to allow MQ's team to build the module you're looking for, if you're trying to build something locally for testing, one set of instructions are below. This is one method of compiling using LuaRocks with the Lua SQLite3 library. These instructions are available in generic form in the official installation instructions ; but this covers the specific details needed for MQ. Grab LuaRocks for Windows at the LuaRocks download page (you want the legacy windows package, because you will need to build it yourself) Extract the zip to someplace nice. Open up the developer command prompt for VS and navigate to the aforementioned nice place. C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community>cd C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32 C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32> If you have not built mq2lua (in VS), do so now. It will run the vcpkg install of luajit that we need to run luarocks with. You can alternately just install it through the MQ vcpkg environment, but this is the simplest way to get what you need. Run install.bat with /SELFCONTAINED , using /P to point to the install directory, and (most importantly) /INC , /LIB , and /BIN to point to the mq install of luajit that you just built, and /NOADMIN because this is a local install. Hit enter when prompted: C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32>.\\install.bat /P C:\\Users\\dannu\\Downloads\\luarocks_install /SELFCONTAINED /INC \"C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit\" /LIB \"C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib\" /BIN \"C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\tools\" /NOADMIN C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32>rem=rem --[[--lua LuaRocks 3.6.x installer. ======================== == Checking system... == ======================== Attempting to install without admin privileges... Looking for Lua interpreter Found luajit.exe, testing it... checking for C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib\\lua5.1.lib checking for C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib\\lua51.lib Found lua51.lib checking for C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit\\lua.h Found lua.h *** WARNING ***: could not analyse the runtime used, defaulting to MSVCR80 Runtime check completed. arch: 14c -> IMAGE_FILE_MACHINE_I386 Looking for Microsoft toolchain matching runtime MSVCR80 and architecture x86 checking: HKLM\\Software\\Microsoft\\VisualStudio\\8.0\\Setup\\VC checking: HKLM\\Software\\Microsoft\\VCExpress\\8.0\\Setup\\VS Cannot auto-detect Windows SDK version from MSVCR80 ========================== == System check results == ========================== Will configure LuaRocks with the following paths: LuaRocks : C:\\Users\\dannu\\Downloads\\luarocks_install Config file : C:\\Users\\dannu\\Downloads\\luarocks_install\\config-5.1.lua Rocktree : C:\\Users\\dannu\\Downloads\\luarocks_install\\systree Lua interpreter : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\tools\\luajit.exe binaries : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\tools libraries : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib includes : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit architecture: x86 binary link : lua51.lib with runtime MSVCR80.dll Compiler : Microsoft (make sure it is in your path before using LuaRocks) Press <ENTER> to start installing, or press <CTRL>+<C> to abort. Use install /? for installation options. ============================ == Installing LuaRocks... == ============================ Installing LuaRocks in C:\\Users\\dannu\\Downloads\\luarocks_install... Created LuaRocks command: C:\\Users\\dannu\\Downloads\\luarocks_install\\luarocks.bat Created LuaRocks command: C:\\Users\\dannu\\Downloads\\luarocks_install\\luarocks-admin.bat Configuring LuaRocks... Created LuaRocks hardcoded settings file: C:\\Users\\dannu\\Downloads\\luarocks_install\\lua\\luarocks\\core\\hardcoded.lua Created LuaRocks config file: C:\\Users\\dannu\\Downloads\\luarocks_install\\config-5.1.lua Creating rocktrees... Created system rocktree : \"C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\" Local user rocktree exists : \"C:\\Users\\dannu\\AppData\\Roaming\\LuaRocks\" ============================ == LuaRocks is installed! == ============================ You may want to add the following elements to your paths; Lua interpreter; PATH : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\tools PATHEXT : .LUA LuaRocks; PATH : C:\\Users\\dannu\\Downloads\\luarocks_install LUA_PATH : C:\\Users\\dannu\\Downloads\\luarocks_install\\lua\\?.lua;C:\\Users\\dannu\\Downloads\\luarocks_install\\lua\\?\\init.lua Local user rocktree (Note: %APPDATA% is user dependent); PATH : %APPDATA%\\LuaRocks\\bin LUA_PATH : %APPDATA%\\LuaRocks\\share\\lua\\5.1\\?.lua;%APPDATA%\\LuaRocks\\share\\lua\\5.1\\?\\init.lua LUA_CPATH: %APPDATA%\\LuaRocks\\lib\\lua\\5.1\\?.dll System rocktree PATH : C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\\bin LUA_PATH : C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\\share\\lua\\5.1\\?.lua;C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\\share\\lua\\5.1\\?\\init.lua LUA_CPATH: C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\\lib\\lua\\5.1\\?.dll Note that the %APPDATA% element in the paths above is user specific and it MUST be replaced by its actual value. For the current user that value is: C:\\Users\\dannu\\AppData\\Roaming. C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32> Navigate to the path you specified with the /P switch C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32>cd C:\\Users\\dannu\\Downloads\\luarocks_install C:\\Users\\dannu\\Downloads\\luarocks_install> Run luarocks.bat to install lsqlite3complete , which will build it with cl (this is why you needed to do this in the developer console) C:\\Users\\dannu\\Downloads\\luarocks_install>.\\luarocks.bat install lsqlite3complete Installing https://luarocks.org/lsqlite3complete-0.9.5-1.src.rock lsqlite3complete 0.9.5-1 depends on lua >= 5.1, < 5.5 (5.1-1 provided by VM) cl /nologo /MD /O2 -c -Folsqlite3.obj -IC:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit lsqlite3.c -DLSQLITE_VERSION=\"0.9.5\" -Dluaopen_lsqlite3=luaopen_lsqlite3complete lsqlite3.c cl /nologo /MD /O2 -c -Fosqlite3.obj -IC:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit sqlite3.c -DLSQLITE_VERSION=\"0.9.5\" -Dluaopen_lsqlite3=luaopen_lsqlite3complete sqlite3.c link -dll -def:lsqlite3complete.def -out:lsqlite3complete.dll C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib/lua51.lib lsqlite3.obj sqlite3.obj Microsoft (R) Incremental Linker Version 14.28.29913.0 Copyright (C) Microsoft Corporation. All rights reserved. Creating library lsqlite3complete.lib and object lsqlite3complete.exp LINK : warning LNK4098: defaultlib 'LIBCMT' conflicts with use of other libs; use /NODEFAULTLIB:library No existing manifest. Attempting to rebuild... lsqlite3complete 0.9.5-1 is now installed in C:\\Users\\dannu\\Downloads\\luarocks_install\\systree (license: MIT) C:\\Users\\dannu\\Downloads\\luarocks_install> You now have a dll in systree\\lib\\lua\\5.1\\lsqlite3complete.dll that you can copy into your mq lua directory (wherever you lua script lives) and use it with require('lsqlite3complete')","title":"LuaRocks Modules"},{"location":"lua/luarocks-modules/#luarocks-modules","text":"MacroQuest includes helpers for lua script writers to allow their users to install modules from LuaRocks. MacroQuest also includes luarocks.exe with the compile for facilitating this install. The repository of tested LuaRocks exists at https://luarocks.macroquest.org/ and these are all verified as working. Packages can be added by submitting a pull request to the MQ LuaRocks Repo config","title":"LuaRocks Modules"},{"location":"lua/luarocks-modules/#script-writers-guide-to-using-packageman","text":"PackageMan is the primary helper for installing LuaRocks modules. The simplest method for package installation is PackageMan.Require. However, there are also functions for InstallAndLoad and just Install.","title":"Script Writer's Guide to using PackageMan"},{"location":"lua/luarocks-modules/#packagemanrequire","text":"The simplest method of installing a required package is PackageMan.Require. This will check for the package, try to install it if it is not found, and try to load it after the install. If it fails, Require returns a customizable message that tells the user what happened. By default this message just states that there was a failure. An example of how to require lsqlite3 for your script is: local mq = require ( 'mq' ) local PackageMan = require ( 'mq/PackageMan' ) local sql = PackageMan . Require ( 'lsqlite3' ) This will contact the default MacroQuest rock server, install lsqlite3 and load it to be used under the sql variable. If there is a failure, the simplest message (\"Failed to load package lsqlite3\") will be displayed to the user. Require also supports overloads for packages that do not have the same name as their luarocks name would suggest. In this case, you can use two parameters for Require. An example of this is lfs. The name of the package is \"luafilesystem\" but when you load it, you load it with \"lfs\" so you can pass that information to Require as below: local mq = require ( 'mq' ) local PackageMan = require ( 'mq/PackageMan' ) local lfs = PackageMan . Require ( 'luafilesystem' , 'lfs' ) This will perform the same steps as above, but once the package is installed it uses the lfs name instead of the luafilesystem name for loading. Lastly, you can use Require to send your own custom message if you do not like the default message. This is the third overload for Require. For example, in the case that you want to return the message \"[ScriptNameHere] LFS failed to install and is required for this script\" you can do so as: local mq = require ( 'mq' ) local PackageMan = require ( 'mq/PackageMan' ) local lfs = PackageMan . Require ( 'luafilesystem' , 'lfs' , '[ScriptNameHere] LFS failed to install and is required for this sript' ) The default message should suffice for most usages. In all cases, when there is a failure to load the package using Require, your script will be exited. If you'd like more control, you can use the other functions of PackageMan.","title":"PackageMan.Require"},{"location":"lua/luarocks-modules/#packagemaninstallandload","text":"For most use cases, Require should be sufficient. However, for more granular control over what happens when a package fails to load, you can start with InstallAndLoad. This will attempt to install the package and load it. It does not check to see if the package is installed first, as that is up to the script writer. The mq/utils library has an example of an Include function which will try to load a library and gracefully fail. An example of using this library to do your own error handling on a package install is below: local mq = require ( 'mq' ) local PackageMan = require ( 'mq/PackageMan' ) local Utils = require ( 'mq/Utils' ) local sql = Utils . Library . Include ( 'lsqlite3' ) if not sql then sql = PackageMan . InstallAndLoad ( 'lsqlite3' ) end if not sql then print ( 'Could not load or install lsqlite3' ) end Because Utils.Library.Include is a graceful failure, the above code will try to load the library, install and try to load it if the initial load fails, and lastly print a message if it is still not loaded. This is useful if your script does not have a strict dependency on the library and would only use the library if it was available. InstallAndLoad also can be overloaded with an additional parameter for packages where the name is different. Referencing luafilesystem, the appropriate usage for InstallAndLoad would be: local mq = require ( 'mq' ) local PackageMan = require ( 'mq/PackageMan' ) local Utils = require ( 'mq/Utils' ) local lfs = Utils . Library . Include ( 'lfs' ) if not lfs then lfs = PackageMan . InstallAndLoad ( 'luafilesystem' , 'lfs' ) end if not lfs then print ( 'Could not load or install luafilesystem/lfs' ) end Unlike Require, InstallAndLoad does not have a third overload for a message, since you are expected to handle your own failure messages.","title":"PackageMan.InstallAndLoad"},{"location":"lua/luarocks-modules/#packagemaninstall","text":"If Require or InstallAndLoad does not meet your needs, then Install provides the most granular control over installing a package. Again, for most people Require should be sufficient. However, Install will allow you to determine the REASON for failures, which none of the other methods do. Install is also only responsible for installing your package, it will not try to load your package at all and it does not check if the package is already installed. The return on Install is a numerical error code, the most up to date details for which can be found in the source for PackageMan.lua. The most relevant return code that a script writer would probably be handling is error code 2 -- the user declined the installation of the package. One example of usage is below: local mq = require ( 'mq' ) local PackageMan = require ( 'mq/PackageMan' ) local Utils = require ( 'mq/Utils' ) local sql = Utils . Library . Include ( 'lsqlite3' ) if not sql then if PackageMan . Install ( 'lsqlite3' ) == 2 then print ( 'User canceled the install, cannot proceed' ) mq . exit () else sql = require ( 'lsqlite3' ) end end","title":"PackageMan.Install"},{"location":"lua/luarocks-modules/#advanced-configuration","text":"PackageMan includes parameters repoUrl and repoName for pointing users at your own repo should you want to beta test with users. However, use this at your own risk as there is no setup of maintaining multiple versions of packages from different repos.","title":"Advanced Configuration"},{"location":"lua/luarocks-modules/#step-by-step-building-a-luarocks-module-for-mq","text":"While the easiest method is to allow MQ's team to build the module you're looking for, if you're trying to build something locally for testing, one set of instructions are below. This is one method of compiling using LuaRocks with the Lua SQLite3 library. These instructions are available in generic form in the official installation instructions ; but this covers the specific details needed for MQ. Grab LuaRocks for Windows at the LuaRocks download page (you want the legacy windows package, because you will need to build it yourself) Extract the zip to someplace nice. Open up the developer command prompt for VS and navigate to the aforementioned nice place. C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community>cd C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32 C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32> If you have not built mq2lua (in VS), do so now. It will run the vcpkg install of luajit that we need to run luarocks with. You can alternately just install it through the MQ vcpkg environment, but this is the simplest way to get what you need. Run install.bat with /SELFCONTAINED , using /P to point to the install directory, and (most importantly) /INC , /LIB , and /BIN to point to the mq install of luajit that you just built, and /NOADMIN because this is a local install. Hit enter when prompted: C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32>.\\install.bat /P C:\\Users\\dannu\\Downloads\\luarocks_install /SELFCONTAINED /INC \"C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit\" /LIB \"C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib\" /BIN \"C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\tools\" /NOADMIN C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32>rem=rem --[[--lua LuaRocks 3.6.x installer. ======================== == Checking system... == ======================== Attempting to install without admin privileges... Looking for Lua interpreter Found luajit.exe, testing it... checking for C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib\\lua5.1.lib checking for C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib\\lua51.lib Found lua51.lib checking for C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit\\lua.h Found lua.h *** WARNING ***: could not analyse the runtime used, defaulting to MSVCR80 Runtime check completed. arch: 14c -> IMAGE_FILE_MACHINE_I386 Looking for Microsoft toolchain matching runtime MSVCR80 and architecture x86 checking: HKLM\\Software\\Microsoft\\VisualStudio\\8.0\\Setup\\VC checking: HKLM\\Software\\Microsoft\\VCExpress\\8.0\\Setup\\VS Cannot auto-detect Windows SDK version from MSVCR80 ========================== == System check results == ========================== Will configure LuaRocks with the following paths: LuaRocks : C:\\Users\\dannu\\Downloads\\luarocks_install Config file : C:\\Users\\dannu\\Downloads\\luarocks_install\\config-5.1.lua Rocktree : C:\\Users\\dannu\\Downloads\\luarocks_install\\systree Lua interpreter : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\tools\\luajit.exe binaries : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\tools libraries : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib includes : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit architecture: x86 binary link : lua51.lib with runtime MSVCR80.dll Compiler : Microsoft (make sure it is in your path before using LuaRocks) Press <ENTER> to start installing, or press <CTRL>+<C> to abort. Use install /? for installation options. ============================ == Installing LuaRocks... == ============================ Installing LuaRocks in C:\\Users\\dannu\\Downloads\\luarocks_install... Created LuaRocks command: C:\\Users\\dannu\\Downloads\\luarocks_install\\luarocks.bat Created LuaRocks command: C:\\Users\\dannu\\Downloads\\luarocks_install\\luarocks-admin.bat Configuring LuaRocks... Created LuaRocks hardcoded settings file: C:\\Users\\dannu\\Downloads\\luarocks_install\\lua\\luarocks\\core\\hardcoded.lua Created LuaRocks config file: C:\\Users\\dannu\\Downloads\\luarocks_install\\config-5.1.lua Creating rocktrees... Created system rocktree : \"C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\" Local user rocktree exists : \"C:\\Users\\dannu\\AppData\\Roaming\\LuaRocks\" ============================ == LuaRocks is installed! == ============================ You may want to add the following elements to your paths; Lua interpreter; PATH : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\tools PATHEXT : .LUA LuaRocks; PATH : C:\\Users\\dannu\\Downloads\\luarocks_install LUA_PATH : C:\\Users\\dannu\\Downloads\\luarocks_install\\lua\\?.lua;C:\\Users\\dannu\\Downloads\\luarocks_install\\lua\\?\\init.lua Local user rocktree (Note: %APPDATA% is user dependent); PATH : %APPDATA%\\LuaRocks\\bin LUA_PATH : %APPDATA%\\LuaRocks\\share\\lua\\5.1\\?.lua;%APPDATA%\\LuaRocks\\share\\lua\\5.1\\?\\init.lua LUA_CPATH: %APPDATA%\\LuaRocks\\lib\\lua\\5.1\\?.dll System rocktree PATH : C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\\bin LUA_PATH : C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\\share\\lua\\5.1\\?.lua;C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\\share\\lua\\5.1\\?\\init.lua LUA_CPATH: C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\\lib\\lua\\5.1\\?.dll Note that the %APPDATA% element in the paths above is user specific and it MUST be replaced by its actual value. For the current user that value is: C:\\Users\\dannu\\AppData\\Roaming. C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32> Navigate to the path you specified with the /P switch C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32>cd C:\\Users\\dannu\\Downloads\\luarocks_install C:\\Users\\dannu\\Downloads\\luarocks_install> Run luarocks.bat to install lsqlite3complete , which will build it with cl (this is why you needed to do this in the developer console) C:\\Users\\dannu\\Downloads\\luarocks_install>.\\luarocks.bat install lsqlite3complete Installing https://luarocks.org/lsqlite3complete-0.9.5-1.src.rock lsqlite3complete 0.9.5-1 depends on lua >= 5.1, < 5.5 (5.1-1 provided by VM) cl /nologo /MD /O2 -c -Folsqlite3.obj -IC:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit lsqlite3.c -DLSQLITE_VERSION=\"0.9.5\" -Dluaopen_lsqlite3=luaopen_lsqlite3complete lsqlite3.c cl /nologo /MD /O2 -c -Fosqlite3.obj -IC:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit sqlite3.c -DLSQLITE_VERSION=\"0.9.5\" -Dluaopen_lsqlite3=luaopen_lsqlite3complete sqlite3.c link -dll -def:lsqlite3complete.def -out:lsqlite3complete.dll C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib/lua51.lib lsqlite3.obj sqlite3.obj Microsoft (R) Incremental Linker Version 14.28.29913.0 Copyright (C) Microsoft Corporation. All rights reserved. Creating library lsqlite3complete.lib and object lsqlite3complete.exp LINK : warning LNK4098: defaultlib 'LIBCMT' conflicts with use of other libs; use /NODEFAULTLIB:library No existing manifest. Attempting to rebuild... lsqlite3complete 0.9.5-1 is now installed in C:\\Users\\dannu\\Downloads\\luarocks_install\\systree (license: MIT) C:\\Users\\dannu\\Downloads\\luarocks_install> You now have a dll in systree\\lib\\lua\\5.1\\lsqlite3complete.dll that you can copy into your mq lua directory (wherever you lua script lives) and use it with require('lsqlite3complete')","title":"Step-by-Step Building a LuaRocks Module for MQ"},{"location":"lua/macro-to-lua/","tags":["lua"],"text":"MacroScript to Lua \u00b6 Ported from RedGuides: MacroScript to Lua . Pardon the clunkiness. This guide will cover some of the more common building blocks of code found in macros, and ways they may be written in Lua. They may not be the only ways or the best ways, but hopefully they are useful to see. The purpose of this guide is primarily to help those who know the macro language, but not necessarily Lua or other programming languages, to be able to write new scripts in Lua. Its not to suggest that existing macros should be rewritten in Lua, although that may be a good learning exercise as well. Before getting started, its recommended to have VS Code (not the same thing as Visual Studio) installed for working with Lua files. it provides syntax highlighting out of the box and some extended capabilities when adding a Lua language server extension. Coldblooded also wrote some autocompletion utilities for MQ and ImGui which are linked below. VS Code also has an MQ macro extension, vscodemq2 which is a nice added bonus. Resources \u00b6 Getting Started Getting Started \u00b6 To get started, this guide will cover the basics of a Lua script, without getting into any of the MQ integrations. Terminology \u00b6 lua script: Like a macro, Lua scripts are run in game by issuing a command like /lua run examples/demo_tables where examples/demo_tables.lua is a Lua script which exists in the MQ Lua folder. variable: A variable is a symbolic name for some information. Variables are declared in a lua script like local script_name = 'demo_tables' . This would define the script_name variable which can then be referenced elsewhere in the script, and its value would be the string, demo_tables . Variables can be local or global , but should typically always be made local . function: A function in lua is a callable, reusable block of code. Functions can take 0 or more arguments, as well as return 0 or more results. Lua functions would be comparable to subroutines in macro script. table: In Lua, nearly everything is a table. Tables are the main data structure for the language. Think of tables as a combination of arrays, maps, sets, lists, etc. from other languages. Tables store a collection of key, value pairs, and the values can be accessed by their keys. The keys can be numbers or strings. When the keys are contiguous numbers from 1 to N, then the table can be accessed in a similar fashion to an array. They can also be iterated over by index (like an array) or by key (like a map). userdata: Lua represents arbitrary C data as the type userdata . There will be more on this later, but it is important to note that all unevaluated data returned to Lua from MQ is of type userdata . nil: The Lua equivalent of macros NULL . nil is Luas representation of no value. One common thing to do is check that a variable is not nil, i.e. the variable has a value. This might look like if mob then do_something() end . This is the same as if mob ~= nil then do_something() end . string: A string is used for data values that are made up of ordered sequences of characters, such as \"hello world\". Strings are only mentioned here because in macros, everything was a string, and in lua not everything is treated as a string. In Lua, like most programming languages, strings belong inside of quotes. This was not required in macros. For example, local name = aquietone would fail. local name = \"aquietone\" would work. literal: Defining this word here just to highlight the difference between macro script and pretty much any other programming language in the world. A literal would be something like the number 2 or the string \"hello world\" . Specifically for strings, as mentioned a few times throughout this guide, they must be in single ( ' ) or double ( \" ) quotes. This differs from macro script where strings don't need to be in quotes. true/false: Boolean values in Lua. They must be written lowercase, not to be confused with TRUE and FALSE seen in macros. One quick note on true/false in Lua is that numbers do not behave like booleans in conditions like they do in macros or several other languages. if my_int_variable then where my_int_variable is 0 would not evaluate to false . To compare numbers in if statements, the == or ~= operators should be used. Hello World \u00b6 PIL: Hello World The typical Hello World example for a Lua script is relatively short. No functions need to be written, no variables declared. Simply create a file in the MQ Lua folder called helloworld.lua with the following content: print ( 'Hello, world' ) And then execute the script in game by running the command: /lua run helloworld This script calls the built in Lua print function to print the string Hello, world . It will print to the MQ console window. The Lua print function behaves the same way as /echo in macro script. Variables \u00b6 PIL: Local Variables and Blocks Lua can have both local and global variables within the scope of a lua script, similar to a macro. In most cases, variables probably don't need to be made global. Global variables may have some use cases as script grow and begin to include multiple other scripts, but even then they are unlikely to be necessary, and most likely problems can be solved other ways. To declare a variable, its as simple as: -- DEBUG_FLAGS will be a global variable with a value of 0 DEBUG_FLAGS = 0 -- healPct will be a local variable with a value of 70 local healPct = 70 -- mobName will be a local variable which stores the string \"Fippy Darkpaw\" local mobName = \"Fippy Darkpaw\" NOTE: -- is used to write comments (text which will not be executed as part of the script) in Lua. Local variables are valid for the block of code in which they are declared in. For example: local myLevel = mq . TLO . Me . Level () if myLevel > 5 then local canUseKick = true end print ( canUseKick ) The above code snippet defines a local variable inside the if block, so it is no longer in scope after the end of the if block. The print statement will output nil because canUseKick is no longer in scope. The entirety of a lua script is also one code block. Local variables defined at the top level of the script can be referenced anywhere else in the script below where they have been defined. However, its always best to define variables as close as possible to where they will be used, and with as limited scope as possible. Variables in Lua are not strongly typed, and can be assigned all sorts of values to any variable. To keep code simple and easy to follow, avoid reusing one variable for multiple different types of data. Just note that there is nothing stopping assigning a variable a number value in one line, and then assigning it a string value in the next. The following code snippet shows some macro variable related commands and their lua equivalents: Create a local variable scriptName with the value helloworld . | /declare variable_name type scope value /declare scriptName string local helloworld local scriptName = 'helloworld' Create a global variable with the value 1 : /declare mobCount int global 1 mobCount = 1 Update the value of variable mobCount to 2 : /varset mobCount 2 mobCount = 2 Perform some math operation on a variable: /varcalc mobCount ${mobCount}+1 mobCount = mobCount + 1 Store an MQ DataType in a variable: /declare nearestNPC spawn local /vardata nearestNPC Spawn[npc targetable] local nearestNPC = nil nearestNPC = mq . TLO . Spawn ( 'npc targetable' ) Output \u00b6 In Lua, output text to the console using print . Do not use mq.cmd.echo or mq.cmd('/echo ...') . Macro: /echo some text Lua: print('Some text') Print colored text using the same color codes as /echo : Macro: /echo \\arRed text Lua: print('\\arRed text') Print the value of a variable: Macro: /echo ${scriptName} Lua: print(scriptName) Print the value of a string variable with some other text. .. is used to concatenate strings: PIL: String concatenation Macro: /echo Script Name: ${scriptName} Lua: print('Script Name: '..scriptName) NOTE: This requires that the type of data stored in the variable scriptName be a string. Another way is to use a formatted string: Lua: print(string.format('Script Name: %s', scriptName)) Another syntax for formatted strings: Lua: print(('Script Name: %s'):format(scriptName)) Refer to the C++ printf reference for details on formatted string specifiers. TIP: %s in a formatted string can cope with a variable being nil . Also check out Knightly's Write.lua resource for debug logging helpers. Functions \u00b6 PIL: Functions Lua functions are the equivalent of macro subroutines. Like variables, functions can be declared as local or global . In most cases, they don't need to be defined globally. Example 1: A function which takes no arguments Macro: Sub echoMyName /echo ${Me.Name} /return Sub Main /call echoMyName /return Lua: local function printMyName () print ( mq . TLO . Me . Name ()) end printMyName () Example 2: A function with 1 named argument Macro: Sub Main /declare scriptName global helloworld /call eyecatcher \"section about subroutines\" /return Sub eyecatcher(string message) /echo \\ar${scriptName}: \\a-x${message} /return Lua: local scriptName = 'helloworld' -- Define a local function which prints a formatted string with the script name and a message: local function eyecatcher ( message ) print ( string.format ( ' \\a r%s: \\a -x%s' , scriptName , message )) end -- Call the function which we just defined, similar to a macro /call eyecatcher \"section about subroutines\" eyecatcher ( 'section about subroutines' ) Example 3: A function with multiple named arguments Macro: Sub somefunc(bool arg1, int arg2) /echo ${arg1} /echo ${arg2} /return Sub Main /declare debug bool local true /declare id int local ${Me.ID} /call somefunc ${debug} ${id} /return Lua: local function somefunc ( arg1 , arg2 ) print ( arg1 ) print ( arg2 ) end local debug = true local id = mq . TLO . Me . ID () somefunc ( debug , id ) Example 4: A function with a variable number of arguments: PIL: Variable number of arguments local function print_values (...) local arg = {...} for _ , value in ipairs ( arg ) do print ( value ) end end local name = mq . TLO . Me . Name () local level = mq . TLO . Me . Level () local class = mq . TLO . Me . Class () print_values ( name , level , class ) Tables \u00b6 Before getting into flow control, some knowledge of Lua tables is needed. They will be used in several of the examples. In lua, tables are the goto data structure for arrays, maps, pretty much everything. Tables store key/value pairs. The keys can be numbers or strings. They aren't required to be contiguous numbers, but if using the table as an array, then they must be. NOTE: Lua array tables start from index 1. Array table examples: Define an array by passing just a set of values. It will automatically give each value an index starting from 1 . local priests = { 'clr' , 'dru' , 'shm' } Values can also be indexed explicitly: local casters = { [ 1 ] = 'enc' , [ 2 ] = 'mag' , [ 3 ] = 'nec' , [ 4 ] = 'wiz' } Lua also provides a table function for appending to arrays: local tanks = {} table.insert ( tanks , 'war' ) table.insert ( tanks , 'pal' ) table.insert ( tanks , 'shd' ) To access a value directly by its index (pretty uncommon, probably): print ( priests [ 2 ]) This would print dru . Tables can also be maps instead of arrays: local mez_classes = { brd = true , enc = true } Values from the table can be looked up by key: print ( mez_classes . brd ) print ( mez_classes [ 'brd' ]) local key = 'enc' print ( mez_classes [ key ]) While the above examples each just show grabbing a table value directly by index or key, tables will probably more often be accessed by iterating over the values. This will be covered more in the examples under the section on control flow. Deciding whether a table should be an array or a map depends on the application and how the data will be used. The examples coming up prefer using tables as maps so that values could be looked up directly by key without having to iterate over the table to find the value. One approach is to treat the table similar to a Set data structure, where the key is the unique value in the table like class short names, and the value is just true . Lua Sets provides an example helper function to create sets like this. Command Line Args/Parameters \u00b6 Lua provides access to command line arguments through the use of the same ... which was introduced earlier with functions for variable number of arguments. Below is an example which iterates over the arguments which the script is called with: local args = {...} print ( 'Script called with ' ..# args .. ' arguments:' ) for i , arg in ipairs ( args ) do print ( string.format ( 'arg[%d]: %s' , i , arg )) end Add this code to a lua script testarg1.lua and execute it with: /lua run testarg1 assist ini server_toon.ini This would output: Script called with 3 arguments : arg [ 1 ]: assist arg [ 2 ]: ini arg [ 3 ]: server_toon . ini Another example, uses named key/value arguments to add the args directly to a settings table: local settings = {} local current_key = nil for _ , arg in ipairs ( args ) do if not current_key then current_key = arg else settings [ current_key ] = arg current_key = nil end end for key , value in pairs ( settings ) do print ( string.format ( 'Settings[%s]=%s' , key , value )) end Add this code to a lua script testarg2.lua and execute it with: /lua run testarg2 role assist ini server_toon.ini This would output: Settings[role]=assist Settings[ini]=server_toon.ini Require \u00b6 The Lua require function is used to load one Lua file from another. For example, Write.lua , by Knightly, is a library which provides useful functions for logging. Write.lua is meant to be used by other scripts, and would be included with a statement like local write = require('write') . This would then allow a script to call the functions from Write.lua such as write.debug('my debug message here') . This is similar to include files in macros, though works slightly differently. Include files in macros make the macro behave as if the included files code was all inserted directly where the include was done. In Lua, the results of requiring another Lua file are typically stored into a variable. So, if a script is required, and it returns a table containing several helper functions, then that table is stored into a variable and those functions are accessed through that variable. Require is also how MQ makes its own functionality available to Lua scripts, such as TLOs, events, bindings and commands which will all be discussed later. In short, its all made available by including the following line: local mq = require 'mq' This provides access to all the MQ functionality that has been made available to lua, and assigns it into the variable mq . A short example using require: Create a file named utils.lua -- Create a table which will hold everything we want to be exported from this lua file local utils = {} -- Add a function to the utils table under the key \"perform_some_task\" utils . perform_some_task = function () print ( 'successfully performed some task' ) end -- Return the utils table containing our function return utils Then include utils.lua into the main script using a require statement: local utils = require 'utils' utils . perform_some_task () Scope and Processing Order \u00b6 Scope was touched on a little bit earlier when talking about variables. The same applies to functions as well. Its always important to be aware of where variables or functions are defined, and when they will be in the correct scope to be referenced. An important part of this is understanding that Lua scripts are processed top down. A variable or function can only be referenced by code that occurs after it has been declared. Compare these three examples: local function print_version () print ( version ) end local version = '1.0.0' print_version () This will print nil because version has not been defined ahead of the function print_version , so it will be printing an unknown variable. local version = '1.0.0' local function print_version () print ( version ) end print_version () This will print 1.0.0 because version has been defined ahead of the function print_version , so it will be able to find the correct variable. local function print_version ( version ) print ( version ) end local version = '1.0.0' print_version ( version ) While the second example works, it sort of treats version like a global variable. The scope of the version variable could be limited by passing it as an argument to the function instead. Control Flow \u00b6 PIL: Control Structures A number of options are provided to control the flow of the script, such as if then else, for loops, while loops and repeat until. If then else \u00b6 PIL: if then else If conditions from macros should look pretty similar in lua. Macro: /declare my_name string local noone /declare max_level int local 115 /if (${my_name.Equal[noone]}) { /echo the values match } /if (${Me.Level} < ${max_level}) { /echo must get more levels } | In macros, conditions usually have to check .ID on something /if (${Me.Invulnerable.ID}) { /removebuff ${Me.Invulnerable} } Lua: local my_name = 'noone' local max_level = 115 if my_name == 'noone' then print ( 'the values match' ) end if mq . TLO . Me . Level () < max_level then print ( 'must get more levels' ) end -- In Lua, conditions should be able to just check something is not nil, without -- having to check the ID. if mq . TLO . Me . Invulnerable () then mq . cmdf ( '/removebuff %s' , mq . TLO . Me . Invulnerable ()) end Macro: /if (${my_name.NotEqual[someone]}) { /echo =~ is not equals in lua } Lua: if my_name ~= 'someone' then print ( '~= is not equals in lua' ) end NOTE: Do not write a condition that combines both not and == . For example, instead of this: if not myName == 'aquietone' then use this: if myName ~= 'aquietone' then For Loops \u00b6 PIL: For Loops For loops in lua are most often going to be iterating over table values. This is done using either pairs or ipairs . Both pairs(a_table) and ipairs(a_table) will return 2 values on each pass of the loop, the key and the value for that key. pairs iterates over all keys in a table (treats the table as a map). for class , value in pairs ( mez_classes ) do print ( string.format ( 'Class %s can mez: %s' , class , value )) end ipairs iterates over contiguous numeric keys in a table starting from index 1 (treats the table as an array). for index , value in ipairs ( casters ) do print ( string.format ( 'casters[%d]=%s' , index , value )) end PIL: Numeric For Lua also allowed to iterate over a range like 1 to N: for spellIter = 1 , 5 do print ( mq . TLO . Me . Book ( spellIter ). Name ()) end Or, an example taken from pocketfarm.mac but changed so it doesn't print a lot of stuff: Macro: /for i 1 to ${SpawnCount[pc targetable]} /if (${NearestSpawn[${i},pc targetable].Name.Equal[${Me.Name}]}) { /echo ${NearestSpawn[${i},pc targetable].Name.Length} } /next i Lua: for i = 1 , mq . TLO . SpawnCount ( 'pc targetable' )() do if mq . TLO . NearestSpawn ( i .. ', pc targetable' ). Name () == mq . TLO . Me . Name () then print ( mq . TLO . NearestSpawn ( i .. ', pc targetable' ). Name . Length ()) end end While Loops \u00b6 PIL: While Loops While loops can also be used to iterate over a range: local loop = 1 while loop < 3 do print ( 'Loop #' .. loop ) loop = loop + 1 end Repeat Until \u00b6 PIL: Repeat Until There is also repeat until: repeat print ( 'Loop #' .. loop ) loop = loop - 1 until loop == 0 /goto \u00b6 This is only mentioned here because it is commonly used in macros. Avoid using this in Lua. While Lua also has goto, it should be possible to handle most situations with normal flow control like those described above. MQ \u00b6 The first line to most lua scripts written for MQ will be local mq = require 'mq' which provides access to all the MQ functionality. TLOs \u00b6 Top Level Objects, or TLOs, are how data is accessed from MQ. This should already be a pretty familiar concept from doing just about anything with MQ, including echoing data to the console, writing conditions in KissAssist INIs, writing macros, writing reacts, etc. We use TLOs every day. Some examples include ${Me} , ${Target} , ${Spawn} and ${FindItem} . To access TLOs using the mq variable: local mq = require 'mq' local assist_name = mq . TLO . Group . MainAssist . CleanName () print ( string.format ( 'Assisting: %s' , assist_name )) local mq = require 'mq' if mq . TLO . Target () then local mob_hp = mq . TLO . Target . PctHPs () if mob_hp < 98 then print ( string.format ( 'Assisting on %s' , mq . TLO . Target . CleanName ())) -- call some assist code end end local mq = require 'mq' local target = mq . TLO . Target if target () then if target . Distance3D () > 15 then print ( 'Moving closer to target' ) -- call some movement code end end In general, to convert from a TLO in macro format to a TLO in Lua format, strip the ${ } and add mq.TLO. on the front. If the goal is to evaluate the data to a Lua type, add () on the end. For example, ${Me.PctHPs} becomes mq.TLO.Me.PctHPs() . Background on Lua userdata: PIL: Userdata print ( 'type(mq.TLO.Me.Name) == ' .. type ( mq . TLO . Me . Name )) -- prints userdata print ( 'type(mq.TLO.Me.Name()) == ' .. type ( mq . TLO . Me . Name ())) -- prints string Data returned by MQ is always of type userdata. Adding () on the end will convert the MQ userdata to the appropriate lua datatype. print ( 'type(mq.TLO.Spawn(\"npc\") == ' .. type ( mq . TLO . Spawn ( \"npc\" ))) -- The following print would throw an error because userdata cannot be concatenated to a string print ( 'mq.TLO.Spawn(\"npc\") == ' .. mq . TLO . Spawn ( \"npc\" )) print ( 'type(mq.TLO.Spawn(\"npc\")() == ' .. type ( mq . TLO . Spawn ( \"npc\" )())) print ( 'mq.TLO.Spawn(\"npc\")() == ' .. mq . TLO . Spawn ( \"npc\" )()) Commands \u00b6 Execute EQ and MQ commands from Lua scripts like so: mq . cmd ( '/keypress DUCK' ) mq . delay ( 1000 ) mq . cmd ( '/keypress DUCK' ) To run a command with formatted input, use mq.cmdf : mq . cmdf ( '/echo %s' , mq . TLO . Me . Name ()) Bindings \u00b6 Lua Events and Binds Define a function for the bind to call when its executed local function bind_help () print ( 'some helpful text' ) end Assign the function to a command that can be run in game: mq . bind ( '/howto' , bind_help ) Binds can be removed using mq.unbind(bindCommand) . Events \u00b6 Lua Events and Binds First step is to define the function which will be called when the event triggers: local function event_handler () print ( 'entered event_handler' ) end Next, define the event using mq.event and pass the event name, match text, and the function. mq . event ( 'BrokenPole' , \"#*#You can't fish without a fishing pole, go buy one.#*#\" , event_handler ) Then later, typically in the main run loop of the script, call mq.doevents . mq . doevents () Similar to macros, events can also be flushed with mq.flushevents() . Events can be deregistered using mq.unevent(eventName) . Macro ${Select[...]} Statements \u00b6 Lua doesn't have ${Select[...]} quite like the macro language does, but it has other solutions: Use a loop and iterate through values: Consider a select statement like ${Select[${Me.Class.ShortName},clr,dru,shm]} local my_class = mq . TLO . Me . Class . ShortName () for _ , class in ipairs ({ 'clr' , 'dru' , 'shm' }) do if my_class == class then -- assign something or perform some action based on matching class end end Use logical operators like \"or\" (https://www.lua.org/pil/3.3.html) Consider a select statement like ${Select[${role},pullertank,tank]} local role = 'tank' if role == 'pullertank' or role == 'tank' then -- assign something or perform some action based on matching role end Use tables by checking for the presence of the value in the table Consider a select statement like ${Select[${Zone.ID},345,344,202,203,279,151,33506]} local safe_zones = { [ 345 ] = true , [ 344 ] = true , [ 202 ] = true , [ 203 ] = true , [ 279 ] = true , [ 151 ] = true , [ 33506 ] = true } local current_zone = mq . TLO . Zone . ID () if safe_zones [ current_zone ] then -- disable some functionality because we are in a safe zone end The above example checks the current zone ID against a list of zone IDs which have been classified as safe zones. local mez_classes = { brd = true , enc = true } local my_class = mq . TLO . Me . Class . ShortName () if mez_classes [ my_class ] then -- enter into mez handling routines end The above example checks the characters class against a list of mez capable classes to gate entering mez handling functions. Taking this a bit further, table values can also be functions: local function enc_mez () print ( 'handle mezzing as an enc' ) end local function brd_mez () print ( 'handle mezzing as a brd' ) end local mez_funcs = { enc = enc_mez , brd = brd_mez } local my_class = mq . TLO . Me . Class . ShortName () if mez_funcs [ my_class ] then mez_funcs [ my_class ]() -- call the function from the table end Macro /delay \u00b6 Use mq.delay to achieve the same thing as a macros /delay command. Delay a fixed amount of time: print ( 'wait 1 second then print again' ) mq . delay ( 1000 ) print ( 'finished waiting' ) Delay with a condition to end the delay early: local function should_stop_waiting () -- implement some more complex condition for when to break -- early from the delay. return not mq . TLO . Me . Casting () end print ( 'wait 5 seconds or until should_stop_waiting() returns true' ) mq . delay ( 5000 , should_stop_waiting ) print ( 'finished waiting' ) This provides a function which will be called, which should return true or false, to decide whether to cancel the delay. Macro Sub Main Function \u00b6 Lua scripts are processed from top to bottom, and don't actually require code to be inside of a function, unlike how macros always have a Sub Main where execution begins. Think of the entire lua file itself as the main function, entering at line 1 of the file when the script is run. There will often times still be blocks of code that perform a similar function to the main subroutine of a macro, like the typical /while or /goto loops people are familiar with from macros. For example, consider a macro Sub Main like below: Sub Main /while (1) { /doevents /call check_target /delay 10 } /return This could be accomplished in lua using a while loop: while true do mq . doevents () check_target () mq . delay ( 10 ) end Code like the above example will usually be near the bottom of the file, due to how lua scripts are processed. Variables and functions can only refer to things which have already been defined, i.e. were declared earlier in the file (unless defined globally, but avoid that unless necessary). Alternatively, the code could be placed inside of a function, which is then called later on near the bottom of the file. local function main () while true do mq . doevents () mq . delay ( 100 ) end end main () Macro /call and ${Macro.Return} \u00b6 Macro subroutines call other subroutines using /call my_function \"${arg1}\" . Lua functions are just called like my_function(arg1) . Macro subroutines return results using /return ${result} . Lua functions return similarly, using return result . Example: The macro Main sub calls subroutine IsPluginLoaded with argument \"mq2eqbc\". IsPluginLoaded returns the result of the Plugin.IsLoaded TLO Member, which is TRUE or FALSE. Sub IsPluginLoaded(plugin) /if (${Plugin[${plugin}].IsLoaded}) /return TRUE /return FALSE Sub Main /call IsPluginLoaded \"mq2eqbc\" /echo ${Macro.Return} /return Example: The lua script calls function IsPluginLoaded with argument 'mq2eqbc'. IsPluginLoaded returns the result of the Plugin.IsLoaded TLO Member, which is true or false. local function IsPluginLoaded ( plugin ) return mq . TLO . Plugin ( plugin ). IsLoaded () end local eqbcLoaded = IsPluginLoaded ( 'mq2eqbc' ) print ( eqbcLoaded ) mq.parse \u00b6 The mq.parse command allows to evaluate a macro expression in Lua and assign the result to a variable. This could be useful if reading macro expressions such as conditions like those in KA or reacts from an INI file. local mq = require 'mq' local IF_STMT = '${If[%s,1,0]}' local function testCondition ( condition ) -- the output from mq.parse is a string return mq . parse ( IF_STMT : format ( condition )) == '1' end -- pretend these conditions were just read in from some config file like a KA INI local conditions = { '${Me.PctHPs}<50' , '${Me.PctHPs}>50' , } for _ , condition in ipairs ( conditions ) do if testCondition ( condition ) then print (( 'Condition \"%s\" was true' ): format ( condition )) else print (( 'Condition \"%s\" was false' ): format ( condition )) end end Other commonly used TLOs \u00b6 Math : Prefer to use the native math operations supported in Lua. There's no need to use ${Math.Calc[]} or /varcalc when the language can already do 1 + 1 . For other operations like rounding, floor, ceiling, see the math library . String : Lua provides plenty of string related operations which can be found here . There should be no need to use the String TLO. .Equal and .NotEqual : No need to use macro language sorts of comparators, just use lua == and ~= instead. .Arg[|,2] : Lua provides many examples for splitting strings which remove the need to use macro .Arg . Storage \u00b6 Lua can support the same storage mechanisms that were used in macros, such as INI files, JSON, YAML, sqlite. The native Lua YAML and JSON implementations aren't particularly great, usually they have some caveats and often don't maintain formatting / pretty printing of files. They may be ok if users are never expected to hand edit the files, but that rarely seems to be the case in MQ. One new storage method which Lua makes available, is to simply persist Lua tables to a file which can then be loaded using standard Lua calls. INI \u00b6 Lua has a library LIP.lua which can be included, which some scripts have already been using. Buttonmaster, MAUI and a few others each use LIP, but with slight modifications like for supporting a wider variety of keys. This replaces the need for the INI TLO from MQ. However, it is also still possible to use the INI TLO and /ini commands. SQLite \u00b6 Some Lua scripts are including an sqlite3 DLL which can be used to connect to an SQLite database. This DLL has been compiled against the version of Lua used in MQ and works well. TradeSkill Construction Set NeXT and the Entropy macro are two example usages of use this. Lua Tables \u00b6 Several implementations are available online for persisting Lua tables to a file. Table serialization is also covered in Programming in Lua. Most of the implementations include both the writing and reading of tables to and from a file. Extras \u00b6 The /lua parse command \u00b6 MQ provides a command line utility for parsing lua, which is pretty useful for debugging. It automatically includes local mq = require('mq') , and can be used like: /lua parse mq.TLO.Me.Name() It can do much more than that, including multiple statements strung together, loops, etc. The output gets printed to the console. /lua parse i = 1 while mq.TLO.NearestSpawn(i..', pc')() do print(mq.TLO.NearestSpawn(i..', pc')) i=i+1 end The above example would print the name of PCs incrementing over a NearestSpawn search. VS Code Extensions \u00b6 In addition to ColdBlooded's emmylua definitions mentioned at the beginning, some other extensions mentioned often include: Rainbow Brackets Indent Rainbow Vscodemq2 Codemap For the codemap extension, add a reference to this javascript file (ColdBlooded's handywork again) to the codemap section in settings.json : \"codemap.mac\": \"<location of that file>\", \"use strict\" ; Object . defineProperty ( exports , \"__esModule\" , { value : true }); const fs = require ( \"fs\" ); class mapper { static read_all_lines ( file ) { let text = fs . readFileSync ( file , 'utf8' ); return text . split ( /\\r?\\n/g ); } static generate ( file ) { \"\" . match ( /.* \\(.*\\) {/g ); let members = []; try { let line_num = 0 ; mapper . read_all_lines ( file ) . forEach ( line => { line_num ++ ; line = line . trimStart (); if ( line . startsWith ( \"Sub \" )) members . push ( ` ${ line . substr ( 4 ) } | ${ line_num } |function` ); else if ( line . startsWith ( \": \" )) members . push ( ` ${ line . substr ( 1 ) } | ${ line_num } |level2` ); }); } catch ( error ) { } return members ; } } exports . mapper = mapper ; //# sourceMappingURL=mapper_md.js.map Mixing Lua and Macro \u00b6 Macro variables have always been available through the command line while a macro is running. For example, when running a macro that created a global variable MainAssistID , then it is possible to /echo ${MainAssistID} and see the value of that variable at any time. Similarly, macro variables could be updated from the console using /varset . Lua variables are not exposed in the same way, regardless of whether they are global or local. One Lua script cannot access variables from another separately running Lua script, or by the lua parse command. Lua does have access to Macro variables, through mq.TLO.Macro.Variable('macro_variable_name')() . This makes it possible to do something like use Lua to create an ImGui based UI for an existing macro. Common Problems \u00b6 Comparing values with data from mq.TLO.Something : Due to the difference between userdata and regular lua types like numbers or strings, comparisons will often fail when the values visibly look like they should be the expected type. Example: if mq . TLO . Target . CleanName == 'aquietone' then This will never succeed because mq.TLO.Target.CleanName is of type userdata , not string . It needs () on the end to trigger the evaluation from userdata to a lua string , like: if mq . TLO . Target . CleanName () == 'aquietone' Example: if mq . TLO . Target . PctHPs < 90 then This will have the same issue, printing mq.TLO.Target.PctHPs will look like a number, but it is actually userdata , and it needs to be evaluated by adding () . Command line argument types for bindings are always going to be passed into the bind function as strings. tonumber(variable) can be used to convert the type to a number in order to accept a number input to a binding command. If the input can not be parsed to a valid number, then tonumber(variable) will return nil .","title":"MacroScript to Lua"},{"location":"lua/macro-to-lua/#macroscript-to-lua","text":"Ported from RedGuides: MacroScript to Lua . Pardon the clunkiness. This guide will cover some of the more common building blocks of code found in macros, and ways they may be written in Lua. They may not be the only ways or the best ways, but hopefully they are useful to see. The purpose of this guide is primarily to help those who know the macro language, but not necessarily Lua or other programming languages, to be able to write new scripts in Lua. Its not to suggest that existing macros should be rewritten in Lua, although that may be a good learning exercise as well. Before getting started, its recommended to have VS Code (not the same thing as Visual Studio) installed for working with Lua files. it provides syntax highlighting out of the box and some extended capabilities when adding a Lua language server extension. Coldblooded also wrote some autocompletion utilities for MQ and ImGui which are linked below. VS Code also has an MQ macro extension, vscodemq2 which is a nice added bonus.","title":"MacroScript to Lua"},{"location":"lua/macro-to-lua/#resources","text":"Getting Started","title":"Resources"},{"location":"lua/macro-to-lua/#getting-started","text":"To get started, this guide will cover the basics of a Lua script, without getting into any of the MQ integrations.","title":"Getting Started"},{"location":"lua/macro-to-lua/#terminology","text":"lua script: Like a macro, Lua scripts are run in game by issuing a command like /lua run examples/demo_tables where examples/demo_tables.lua is a Lua script which exists in the MQ Lua folder. variable: A variable is a symbolic name for some information. Variables are declared in a lua script like local script_name = 'demo_tables' . This would define the script_name variable which can then be referenced elsewhere in the script, and its value would be the string, demo_tables . Variables can be local or global , but should typically always be made local . function: A function in lua is a callable, reusable block of code. Functions can take 0 or more arguments, as well as return 0 or more results. Lua functions would be comparable to subroutines in macro script. table: In Lua, nearly everything is a table. Tables are the main data structure for the language. Think of tables as a combination of arrays, maps, sets, lists, etc. from other languages. Tables store a collection of key, value pairs, and the values can be accessed by their keys. The keys can be numbers or strings. When the keys are contiguous numbers from 1 to N, then the table can be accessed in a similar fashion to an array. They can also be iterated over by index (like an array) or by key (like a map). userdata: Lua represents arbitrary C data as the type userdata . There will be more on this later, but it is important to note that all unevaluated data returned to Lua from MQ is of type userdata . nil: The Lua equivalent of macros NULL . nil is Luas representation of no value. One common thing to do is check that a variable is not nil, i.e. the variable has a value. This might look like if mob then do_something() end . This is the same as if mob ~= nil then do_something() end . string: A string is used for data values that are made up of ordered sequences of characters, such as \"hello world\". Strings are only mentioned here because in macros, everything was a string, and in lua not everything is treated as a string. In Lua, like most programming languages, strings belong inside of quotes. This was not required in macros. For example, local name = aquietone would fail. local name = \"aquietone\" would work. literal: Defining this word here just to highlight the difference between macro script and pretty much any other programming language in the world. A literal would be something like the number 2 or the string \"hello world\" . Specifically for strings, as mentioned a few times throughout this guide, they must be in single ( ' ) or double ( \" ) quotes. This differs from macro script where strings don't need to be in quotes. true/false: Boolean values in Lua. They must be written lowercase, not to be confused with TRUE and FALSE seen in macros. One quick note on true/false in Lua is that numbers do not behave like booleans in conditions like they do in macros or several other languages. if my_int_variable then where my_int_variable is 0 would not evaluate to false . To compare numbers in if statements, the == or ~= operators should be used.","title":"Terminology"},{"location":"lua/macro-to-lua/#hello-world","text":"PIL: Hello World The typical Hello World example for a Lua script is relatively short. No functions need to be written, no variables declared. Simply create a file in the MQ Lua folder called helloworld.lua with the following content: print ( 'Hello, world' ) And then execute the script in game by running the command: /lua run helloworld This script calls the built in Lua print function to print the string Hello, world . It will print to the MQ console window. The Lua print function behaves the same way as /echo in macro script.","title":"Hello World"},{"location":"lua/macro-to-lua/#variables","text":"PIL: Local Variables and Blocks Lua can have both local and global variables within the scope of a lua script, similar to a macro. In most cases, variables probably don't need to be made global. Global variables may have some use cases as script grow and begin to include multiple other scripts, but even then they are unlikely to be necessary, and most likely problems can be solved other ways. To declare a variable, its as simple as: -- DEBUG_FLAGS will be a global variable with a value of 0 DEBUG_FLAGS = 0 -- healPct will be a local variable with a value of 70 local healPct = 70 -- mobName will be a local variable which stores the string \"Fippy Darkpaw\" local mobName = \"Fippy Darkpaw\" NOTE: -- is used to write comments (text which will not be executed as part of the script) in Lua. Local variables are valid for the block of code in which they are declared in. For example: local myLevel = mq . TLO . Me . Level () if myLevel > 5 then local canUseKick = true end print ( canUseKick ) The above code snippet defines a local variable inside the if block, so it is no longer in scope after the end of the if block. The print statement will output nil because canUseKick is no longer in scope. The entirety of a lua script is also one code block. Local variables defined at the top level of the script can be referenced anywhere else in the script below where they have been defined. However, its always best to define variables as close as possible to where they will be used, and with as limited scope as possible. Variables in Lua are not strongly typed, and can be assigned all sorts of values to any variable. To keep code simple and easy to follow, avoid reusing one variable for multiple different types of data. Just note that there is nothing stopping assigning a variable a number value in one line, and then assigning it a string value in the next. The following code snippet shows some macro variable related commands and their lua equivalents: Create a local variable scriptName with the value helloworld . | /declare variable_name type scope value /declare scriptName string local helloworld local scriptName = 'helloworld' Create a global variable with the value 1 : /declare mobCount int global 1 mobCount = 1 Update the value of variable mobCount to 2 : /varset mobCount 2 mobCount = 2 Perform some math operation on a variable: /varcalc mobCount ${mobCount}+1 mobCount = mobCount + 1 Store an MQ DataType in a variable: /declare nearestNPC spawn local /vardata nearestNPC Spawn[npc targetable] local nearestNPC = nil nearestNPC = mq . TLO . Spawn ( 'npc targetable' )","title":"Variables"},{"location":"lua/macro-to-lua/#output","text":"In Lua, output text to the console using print . Do not use mq.cmd.echo or mq.cmd('/echo ...') . Macro: /echo some text Lua: print('Some text') Print colored text using the same color codes as /echo : Macro: /echo \\arRed text Lua: print('\\arRed text') Print the value of a variable: Macro: /echo ${scriptName} Lua: print(scriptName) Print the value of a string variable with some other text. .. is used to concatenate strings: PIL: String concatenation Macro: /echo Script Name: ${scriptName} Lua: print('Script Name: '..scriptName) NOTE: This requires that the type of data stored in the variable scriptName be a string. Another way is to use a formatted string: Lua: print(string.format('Script Name: %s', scriptName)) Another syntax for formatted strings: Lua: print(('Script Name: %s'):format(scriptName)) Refer to the C++ printf reference for details on formatted string specifiers. TIP: %s in a formatted string can cope with a variable being nil . Also check out Knightly's Write.lua resource for debug logging helpers.","title":"Output"},{"location":"lua/macro-to-lua/#functions","text":"PIL: Functions Lua functions are the equivalent of macro subroutines. Like variables, functions can be declared as local or global . In most cases, they don't need to be defined globally. Example 1: A function which takes no arguments Macro: Sub echoMyName /echo ${Me.Name} /return Sub Main /call echoMyName /return Lua: local function printMyName () print ( mq . TLO . Me . Name ()) end printMyName () Example 2: A function with 1 named argument Macro: Sub Main /declare scriptName global helloworld /call eyecatcher \"section about subroutines\" /return Sub eyecatcher(string message) /echo \\ar${scriptName}: \\a-x${message} /return Lua: local scriptName = 'helloworld' -- Define a local function which prints a formatted string with the script name and a message: local function eyecatcher ( message ) print ( string.format ( ' \\a r%s: \\a -x%s' , scriptName , message )) end -- Call the function which we just defined, similar to a macro /call eyecatcher \"section about subroutines\" eyecatcher ( 'section about subroutines' ) Example 3: A function with multiple named arguments Macro: Sub somefunc(bool arg1, int arg2) /echo ${arg1} /echo ${arg2} /return Sub Main /declare debug bool local true /declare id int local ${Me.ID} /call somefunc ${debug} ${id} /return Lua: local function somefunc ( arg1 , arg2 ) print ( arg1 ) print ( arg2 ) end local debug = true local id = mq . TLO . Me . ID () somefunc ( debug , id ) Example 4: A function with a variable number of arguments: PIL: Variable number of arguments local function print_values (...) local arg = {...} for _ , value in ipairs ( arg ) do print ( value ) end end local name = mq . TLO . Me . Name () local level = mq . TLO . Me . Level () local class = mq . TLO . Me . Class () print_values ( name , level , class )","title":"Functions"},{"location":"lua/macro-to-lua/#tables","text":"Before getting into flow control, some knowledge of Lua tables is needed. They will be used in several of the examples. In lua, tables are the goto data structure for arrays, maps, pretty much everything. Tables store key/value pairs. The keys can be numbers or strings. They aren't required to be contiguous numbers, but if using the table as an array, then they must be. NOTE: Lua array tables start from index 1. Array table examples: Define an array by passing just a set of values. It will automatically give each value an index starting from 1 . local priests = { 'clr' , 'dru' , 'shm' } Values can also be indexed explicitly: local casters = { [ 1 ] = 'enc' , [ 2 ] = 'mag' , [ 3 ] = 'nec' , [ 4 ] = 'wiz' } Lua also provides a table function for appending to arrays: local tanks = {} table.insert ( tanks , 'war' ) table.insert ( tanks , 'pal' ) table.insert ( tanks , 'shd' ) To access a value directly by its index (pretty uncommon, probably): print ( priests [ 2 ]) This would print dru . Tables can also be maps instead of arrays: local mez_classes = { brd = true , enc = true } Values from the table can be looked up by key: print ( mez_classes . brd ) print ( mez_classes [ 'brd' ]) local key = 'enc' print ( mez_classes [ key ]) While the above examples each just show grabbing a table value directly by index or key, tables will probably more often be accessed by iterating over the values. This will be covered more in the examples under the section on control flow. Deciding whether a table should be an array or a map depends on the application and how the data will be used. The examples coming up prefer using tables as maps so that values could be looked up directly by key without having to iterate over the table to find the value. One approach is to treat the table similar to a Set data structure, where the key is the unique value in the table like class short names, and the value is just true . Lua Sets provides an example helper function to create sets like this.","title":"Tables"},{"location":"lua/macro-to-lua/#command-line-argsparameters","text":"Lua provides access to command line arguments through the use of the same ... which was introduced earlier with functions for variable number of arguments. Below is an example which iterates over the arguments which the script is called with: local args = {...} print ( 'Script called with ' ..# args .. ' arguments:' ) for i , arg in ipairs ( args ) do print ( string.format ( 'arg[%d]: %s' , i , arg )) end Add this code to a lua script testarg1.lua and execute it with: /lua run testarg1 assist ini server_toon.ini This would output: Script called with 3 arguments : arg [ 1 ]: assist arg [ 2 ]: ini arg [ 3 ]: server_toon . ini Another example, uses named key/value arguments to add the args directly to a settings table: local settings = {} local current_key = nil for _ , arg in ipairs ( args ) do if not current_key then current_key = arg else settings [ current_key ] = arg current_key = nil end end for key , value in pairs ( settings ) do print ( string.format ( 'Settings[%s]=%s' , key , value )) end Add this code to a lua script testarg2.lua and execute it with: /lua run testarg2 role assist ini server_toon.ini This would output: Settings[role]=assist Settings[ini]=server_toon.ini","title":"Command Line Args/Parameters"},{"location":"lua/macro-to-lua/#require","text":"The Lua require function is used to load one Lua file from another. For example, Write.lua , by Knightly, is a library which provides useful functions for logging. Write.lua is meant to be used by other scripts, and would be included with a statement like local write = require('write') . This would then allow a script to call the functions from Write.lua such as write.debug('my debug message here') . This is similar to include files in macros, though works slightly differently. Include files in macros make the macro behave as if the included files code was all inserted directly where the include was done. In Lua, the results of requiring another Lua file are typically stored into a variable. So, if a script is required, and it returns a table containing several helper functions, then that table is stored into a variable and those functions are accessed through that variable. Require is also how MQ makes its own functionality available to Lua scripts, such as TLOs, events, bindings and commands which will all be discussed later. In short, its all made available by including the following line: local mq = require 'mq' This provides access to all the MQ functionality that has been made available to lua, and assigns it into the variable mq . A short example using require: Create a file named utils.lua -- Create a table which will hold everything we want to be exported from this lua file local utils = {} -- Add a function to the utils table under the key \"perform_some_task\" utils . perform_some_task = function () print ( 'successfully performed some task' ) end -- Return the utils table containing our function return utils Then include utils.lua into the main script using a require statement: local utils = require 'utils' utils . perform_some_task ()","title":"Require"},{"location":"lua/macro-to-lua/#scope-and-processing-order","text":"Scope was touched on a little bit earlier when talking about variables. The same applies to functions as well. Its always important to be aware of where variables or functions are defined, and when they will be in the correct scope to be referenced. An important part of this is understanding that Lua scripts are processed top down. A variable or function can only be referenced by code that occurs after it has been declared. Compare these three examples: local function print_version () print ( version ) end local version = '1.0.0' print_version () This will print nil because version has not been defined ahead of the function print_version , so it will be printing an unknown variable. local version = '1.0.0' local function print_version () print ( version ) end print_version () This will print 1.0.0 because version has been defined ahead of the function print_version , so it will be able to find the correct variable. local function print_version ( version ) print ( version ) end local version = '1.0.0' print_version ( version ) While the second example works, it sort of treats version like a global variable. The scope of the version variable could be limited by passing it as an argument to the function instead.","title":"Scope and Processing Order"},{"location":"lua/macro-to-lua/#control-flow","text":"PIL: Control Structures A number of options are provided to control the flow of the script, such as if then else, for loops, while loops and repeat until.","title":"Control Flow"},{"location":"lua/macro-to-lua/#if-then-else","text":"PIL: if then else If conditions from macros should look pretty similar in lua. Macro: /declare my_name string local noone /declare max_level int local 115 /if (${my_name.Equal[noone]}) { /echo the values match } /if (${Me.Level} < ${max_level}) { /echo must get more levels } | In macros, conditions usually have to check .ID on something /if (${Me.Invulnerable.ID}) { /removebuff ${Me.Invulnerable} } Lua: local my_name = 'noone' local max_level = 115 if my_name == 'noone' then print ( 'the values match' ) end if mq . TLO . Me . Level () < max_level then print ( 'must get more levels' ) end -- In Lua, conditions should be able to just check something is not nil, without -- having to check the ID. if mq . TLO . Me . Invulnerable () then mq . cmdf ( '/removebuff %s' , mq . TLO . Me . Invulnerable ()) end Macro: /if (${my_name.NotEqual[someone]}) { /echo =~ is not equals in lua } Lua: if my_name ~= 'someone' then print ( '~= is not equals in lua' ) end NOTE: Do not write a condition that combines both not and == . For example, instead of this: if not myName == 'aquietone' then use this: if myName ~= 'aquietone' then","title":"If then else"},{"location":"lua/macro-to-lua/#for-loops","text":"PIL: For Loops For loops in lua are most often going to be iterating over table values. This is done using either pairs or ipairs . Both pairs(a_table) and ipairs(a_table) will return 2 values on each pass of the loop, the key and the value for that key. pairs iterates over all keys in a table (treats the table as a map). for class , value in pairs ( mez_classes ) do print ( string.format ( 'Class %s can mez: %s' , class , value )) end ipairs iterates over contiguous numeric keys in a table starting from index 1 (treats the table as an array). for index , value in ipairs ( casters ) do print ( string.format ( 'casters[%d]=%s' , index , value )) end PIL: Numeric For Lua also allowed to iterate over a range like 1 to N: for spellIter = 1 , 5 do print ( mq . TLO . Me . Book ( spellIter ). Name ()) end Or, an example taken from pocketfarm.mac but changed so it doesn't print a lot of stuff: Macro: /for i 1 to ${SpawnCount[pc targetable]} /if (${NearestSpawn[${i},pc targetable].Name.Equal[${Me.Name}]}) { /echo ${NearestSpawn[${i},pc targetable].Name.Length} } /next i Lua: for i = 1 , mq . TLO . SpawnCount ( 'pc targetable' )() do if mq . TLO . NearestSpawn ( i .. ', pc targetable' ). Name () == mq . TLO . Me . Name () then print ( mq . TLO . NearestSpawn ( i .. ', pc targetable' ). Name . Length ()) end end","title":"For Loops"},{"location":"lua/macro-to-lua/#while-loops","text":"PIL: While Loops While loops can also be used to iterate over a range: local loop = 1 while loop < 3 do print ( 'Loop #' .. loop ) loop = loop + 1 end","title":"While Loops"},{"location":"lua/macro-to-lua/#repeat-until","text":"PIL: Repeat Until There is also repeat until: repeat print ( 'Loop #' .. loop ) loop = loop - 1 until loop == 0","title":"Repeat Until"},{"location":"lua/macro-to-lua/#goto","text":"This is only mentioned here because it is commonly used in macros. Avoid using this in Lua. While Lua also has goto, it should be possible to handle most situations with normal flow control like those described above.","title":"/goto"},{"location":"lua/macro-to-lua/#mq","text":"The first line to most lua scripts written for MQ will be local mq = require 'mq' which provides access to all the MQ functionality.","title":"MQ"},{"location":"lua/macro-to-lua/#tlos","text":"Top Level Objects, or TLOs, are how data is accessed from MQ. This should already be a pretty familiar concept from doing just about anything with MQ, including echoing data to the console, writing conditions in KissAssist INIs, writing macros, writing reacts, etc. We use TLOs every day. Some examples include ${Me} , ${Target} , ${Spawn} and ${FindItem} . To access TLOs using the mq variable: local mq = require 'mq' local assist_name = mq . TLO . Group . MainAssist . CleanName () print ( string.format ( 'Assisting: %s' , assist_name )) local mq = require 'mq' if mq . TLO . Target () then local mob_hp = mq . TLO . Target . PctHPs () if mob_hp < 98 then print ( string.format ( 'Assisting on %s' , mq . TLO . Target . CleanName ())) -- call some assist code end end local mq = require 'mq' local target = mq . TLO . Target if target () then if target . Distance3D () > 15 then print ( 'Moving closer to target' ) -- call some movement code end end In general, to convert from a TLO in macro format to a TLO in Lua format, strip the ${ } and add mq.TLO. on the front. If the goal is to evaluate the data to a Lua type, add () on the end. For example, ${Me.PctHPs} becomes mq.TLO.Me.PctHPs() . Background on Lua userdata: PIL: Userdata print ( 'type(mq.TLO.Me.Name) == ' .. type ( mq . TLO . Me . Name )) -- prints userdata print ( 'type(mq.TLO.Me.Name()) == ' .. type ( mq . TLO . Me . Name ())) -- prints string Data returned by MQ is always of type userdata. Adding () on the end will convert the MQ userdata to the appropriate lua datatype. print ( 'type(mq.TLO.Spawn(\"npc\") == ' .. type ( mq . TLO . Spawn ( \"npc\" ))) -- The following print would throw an error because userdata cannot be concatenated to a string print ( 'mq.TLO.Spawn(\"npc\") == ' .. mq . TLO . Spawn ( \"npc\" )) print ( 'type(mq.TLO.Spawn(\"npc\")() == ' .. type ( mq . TLO . Spawn ( \"npc\" )())) print ( 'mq.TLO.Spawn(\"npc\")() == ' .. mq . TLO . Spawn ( \"npc\" )())","title":"TLOs"},{"location":"lua/macro-to-lua/#commands","text":"Execute EQ and MQ commands from Lua scripts like so: mq . cmd ( '/keypress DUCK' ) mq . delay ( 1000 ) mq . cmd ( '/keypress DUCK' ) To run a command with formatted input, use mq.cmdf : mq . cmdf ( '/echo %s' , mq . TLO . Me . Name ())","title":"Commands"},{"location":"lua/macro-to-lua/#bindings","text":"Lua Events and Binds Define a function for the bind to call when its executed local function bind_help () print ( 'some helpful text' ) end Assign the function to a command that can be run in game: mq . bind ( '/howto' , bind_help ) Binds can be removed using mq.unbind(bindCommand) .","title":"Bindings"},{"location":"lua/macro-to-lua/#events","text":"Lua Events and Binds First step is to define the function which will be called when the event triggers: local function event_handler () print ( 'entered event_handler' ) end Next, define the event using mq.event and pass the event name, match text, and the function. mq . event ( 'BrokenPole' , \"#*#You can't fish without a fishing pole, go buy one.#*#\" , event_handler ) Then later, typically in the main run loop of the script, call mq.doevents . mq . doevents () Similar to macros, events can also be flushed with mq.flushevents() . Events can be deregistered using mq.unevent(eventName) .","title":"Events"},{"location":"lua/macro-to-lua/#macro-select-statements","text":"Lua doesn't have ${Select[...]} quite like the macro language does, but it has other solutions: Use a loop and iterate through values: Consider a select statement like ${Select[${Me.Class.ShortName},clr,dru,shm]} local my_class = mq . TLO . Me . Class . ShortName () for _ , class in ipairs ({ 'clr' , 'dru' , 'shm' }) do if my_class == class then -- assign something or perform some action based on matching class end end Use logical operators like \"or\" (https://www.lua.org/pil/3.3.html) Consider a select statement like ${Select[${role},pullertank,tank]} local role = 'tank' if role == 'pullertank' or role == 'tank' then -- assign something or perform some action based on matching role end Use tables by checking for the presence of the value in the table Consider a select statement like ${Select[${Zone.ID},345,344,202,203,279,151,33506]} local safe_zones = { [ 345 ] = true , [ 344 ] = true , [ 202 ] = true , [ 203 ] = true , [ 279 ] = true , [ 151 ] = true , [ 33506 ] = true } local current_zone = mq . TLO . Zone . ID () if safe_zones [ current_zone ] then -- disable some functionality because we are in a safe zone end The above example checks the current zone ID against a list of zone IDs which have been classified as safe zones. local mez_classes = { brd = true , enc = true } local my_class = mq . TLO . Me . Class . ShortName () if mez_classes [ my_class ] then -- enter into mez handling routines end The above example checks the characters class against a list of mez capable classes to gate entering mez handling functions. Taking this a bit further, table values can also be functions: local function enc_mez () print ( 'handle mezzing as an enc' ) end local function brd_mez () print ( 'handle mezzing as a brd' ) end local mez_funcs = { enc = enc_mez , brd = brd_mez } local my_class = mq . TLO . Me . Class . ShortName () if mez_funcs [ my_class ] then mez_funcs [ my_class ]() -- call the function from the table end","title":"Macro ${Select[...]} Statements"},{"location":"lua/macro-to-lua/#macro-delay","text":"Use mq.delay to achieve the same thing as a macros /delay command. Delay a fixed amount of time: print ( 'wait 1 second then print again' ) mq . delay ( 1000 ) print ( 'finished waiting' ) Delay with a condition to end the delay early: local function should_stop_waiting () -- implement some more complex condition for when to break -- early from the delay. return not mq . TLO . Me . Casting () end print ( 'wait 5 seconds or until should_stop_waiting() returns true' ) mq . delay ( 5000 , should_stop_waiting ) print ( 'finished waiting' ) This provides a function which will be called, which should return true or false, to decide whether to cancel the delay.","title":"Macro /delay"},{"location":"lua/macro-to-lua/#macro-sub-main-function","text":"Lua scripts are processed from top to bottom, and don't actually require code to be inside of a function, unlike how macros always have a Sub Main where execution begins. Think of the entire lua file itself as the main function, entering at line 1 of the file when the script is run. There will often times still be blocks of code that perform a similar function to the main subroutine of a macro, like the typical /while or /goto loops people are familiar with from macros. For example, consider a macro Sub Main like below: Sub Main /while (1) { /doevents /call check_target /delay 10 } /return This could be accomplished in lua using a while loop: while true do mq . doevents () check_target () mq . delay ( 10 ) end Code like the above example will usually be near the bottom of the file, due to how lua scripts are processed. Variables and functions can only refer to things which have already been defined, i.e. were declared earlier in the file (unless defined globally, but avoid that unless necessary). Alternatively, the code could be placed inside of a function, which is then called later on near the bottom of the file. local function main () while true do mq . doevents () mq . delay ( 100 ) end end main ()","title":"Macro Sub Main Function"},{"location":"lua/macro-to-lua/#macro-call-and-macroreturn","text":"Macro subroutines call other subroutines using /call my_function \"${arg1}\" . Lua functions are just called like my_function(arg1) . Macro subroutines return results using /return ${result} . Lua functions return similarly, using return result . Example: The macro Main sub calls subroutine IsPluginLoaded with argument \"mq2eqbc\". IsPluginLoaded returns the result of the Plugin.IsLoaded TLO Member, which is TRUE or FALSE. Sub IsPluginLoaded(plugin) /if (${Plugin[${plugin}].IsLoaded}) /return TRUE /return FALSE Sub Main /call IsPluginLoaded \"mq2eqbc\" /echo ${Macro.Return} /return Example: The lua script calls function IsPluginLoaded with argument 'mq2eqbc'. IsPluginLoaded returns the result of the Plugin.IsLoaded TLO Member, which is true or false. local function IsPluginLoaded ( plugin ) return mq . TLO . Plugin ( plugin ). IsLoaded () end local eqbcLoaded = IsPluginLoaded ( 'mq2eqbc' ) print ( eqbcLoaded )","title":"Macro /call and ${Macro.Return}"},{"location":"lua/macro-to-lua/#mqparse","text":"The mq.parse command allows to evaluate a macro expression in Lua and assign the result to a variable. This could be useful if reading macro expressions such as conditions like those in KA or reacts from an INI file. local mq = require 'mq' local IF_STMT = '${If[%s,1,0]}' local function testCondition ( condition ) -- the output from mq.parse is a string return mq . parse ( IF_STMT : format ( condition )) == '1' end -- pretend these conditions were just read in from some config file like a KA INI local conditions = { '${Me.PctHPs}<50' , '${Me.PctHPs}>50' , } for _ , condition in ipairs ( conditions ) do if testCondition ( condition ) then print (( 'Condition \"%s\" was true' ): format ( condition )) else print (( 'Condition \"%s\" was false' ): format ( condition )) end end","title":"mq.parse"},{"location":"lua/macro-to-lua/#other-commonly-used-tlos","text":"Math : Prefer to use the native math operations supported in Lua. There's no need to use ${Math.Calc[]} or /varcalc when the language can already do 1 + 1 . For other operations like rounding, floor, ceiling, see the math library . String : Lua provides plenty of string related operations which can be found here . There should be no need to use the String TLO. .Equal and .NotEqual : No need to use macro language sorts of comparators, just use lua == and ~= instead. .Arg[|,2] : Lua provides many examples for splitting strings which remove the need to use macro .Arg .","title":"Other commonly used TLOs"},{"location":"lua/macro-to-lua/#storage","text":"Lua can support the same storage mechanisms that were used in macros, such as INI files, JSON, YAML, sqlite. The native Lua YAML and JSON implementations aren't particularly great, usually they have some caveats and often don't maintain formatting / pretty printing of files. They may be ok if users are never expected to hand edit the files, but that rarely seems to be the case in MQ. One new storage method which Lua makes available, is to simply persist Lua tables to a file which can then be loaded using standard Lua calls.","title":"Storage"},{"location":"lua/macro-to-lua/#ini","text":"Lua has a library LIP.lua which can be included, which some scripts have already been using. Buttonmaster, MAUI and a few others each use LIP, but with slight modifications like for supporting a wider variety of keys. This replaces the need for the INI TLO from MQ. However, it is also still possible to use the INI TLO and /ini commands.","title":"INI"},{"location":"lua/macro-to-lua/#sqlite","text":"Some Lua scripts are including an sqlite3 DLL which can be used to connect to an SQLite database. This DLL has been compiled against the version of Lua used in MQ and works well. TradeSkill Construction Set NeXT and the Entropy macro are two example usages of use this.","title":"SQLite"},{"location":"lua/macro-to-lua/#lua-tables","text":"Several implementations are available online for persisting Lua tables to a file. Table serialization is also covered in Programming in Lua. Most of the implementations include both the writing and reading of tables to and from a file.","title":"Lua Tables"},{"location":"lua/macro-to-lua/#extras","text":"","title":"Extras"},{"location":"lua/macro-to-lua/#the-lua-parse-command","text":"MQ provides a command line utility for parsing lua, which is pretty useful for debugging. It automatically includes local mq = require('mq') , and can be used like: /lua parse mq.TLO.Me.Name() It can do much more than that, including multiple statements strung together, loops, etc. The output gets printed to the console. /lua parse i = 1 while mq.TLO.NearestSpawn(i..', pc')() do print(mq.TLO.NearestSpawn(i..', pc')) i=i+1 end The above example would print the name of PCs incrementing over a NearestSpawn search.","title":"The /lua parse command"},{"location":"lua/macro-to-lua/#vs-code-extensions","text":"In addition to ColdBlooded's emmylua definitions mentioned at the beginning, some other extensions mentioned often include: Rainbow Brackets Indent Rainbow Vscodemq2 Codemap For the codemap extension, add a reference to this javascript file (ColdBlooded's handywork again) to the codemap section in settings.json : \"codemap.mac\": \"<location of that file>\", \"use strict\" ; Object . defineProperty ( exports , \"__esModule\" , { value : true }); const fs = require ( \"fs\" ); class mapper { static read_all_lines ( file ) { let text = fs . readFileSync ( file , 'utf8' ); return text . split ( /\\r?\\n/g ); } static generate ( file ) { \"\" . match ( /.* \\(.*\\) {/g ); let members = []; try { let line_num = 0 ; mapper . read_all_lines ( file ) . forEach ( line => { line_num ++ ; line = line . trimStart (); if ( line . startsWith ( \"Sub \" )) members . push ( ` ${ line . substr ( 4 ) } | ${ line_num } |function` ); else if ( line . startsWith ( \": \" )) members . push ( ` ${ line . substr ( 1 ) } | ${ line_num } |level2` ); }); } catch ( error ) { } return members ; } } exports . mapper = mapper ; //# sourceMappingURL=mapper_md.js.map","title":"VS Code Extensions"},{"location":"lua/macro-to-lua/#mixing-lua-and-macro","text":"Macro variables have always been available through the command line while a macro is running. For example, when running a macro that created a global variable MainAssistID , then it is possible to /echo ${MainAssistID} and see the value of that variable at any time. Similarly, macro variables could be updated from the console using /varset . Lua variables are not exposed in the same way, regardless of whether they are global or local. One Lua script cannot access variables from another separately running Lua script, or by the lua parse command. Lua does have access to Macro variables, through mq.TLO.Macro.Variable('macro_variable_name')() . This makes it possible to do something like use Lua to create an ImGui based UI for an existing macro.","title":"Mixing Lua and Macro"},{"location":"lua/macro-to-lua/#common-problems","text":"Comparing values with data from mq.TLO.Something : Due to the difference between userdata and regular lua types like numbers or strings, comparisons will often fail when the values visibly look like they should be the expected type. Example: if mq . TLO . Target . CleanName == 'aquietone' then This will never succeed because mq.TLO.Target.CleanName is of type userdata , not string . It needs () on the end to trigger the evaluation from userdata to a lua string , like: if mq . TLO . Target . CleanName () == 'aquietone' Example: if mq . TLO . Target . PctHPs < 90 then This will have the same issue, printing mq.TLO.Target.PctHPs will look like a number, but it is actually userdata , and it needs to be evaluated by adding () . Command line argument types for bindings are always going to be passed into the bind function as strings. tonumber(variable) can be used to convert the type to a number in order to accept a number input to a binding command. If the input can not be parsed to a valid number, then tonumber(variable) will return nil .","title":"Common Problems"},{"location":"macros/","text":"Macro Reference \u00b6 The use of macros is what really makes MacroQuest2 extremely powerful. Additional in-game functionality like the map , cross-zone targeting, enhanced /who , custom binds, the HUD and plugins are useful, but macroing is what **Macro**Quest is all about. See Getting Started for some introductory information about macros. This page is concerned primarily with all the relevant information required to create your own macros. Macro Fundamentals \u00b6 The MQ2 scripting language primarily involves the use of Slash Commands , variables , Top-Level Objects and some Flow Control to help the macro along. Accessing and manipulating data can be done with: Variables MQ2Data Top-Level Objects Data Types Slash Commands Things that can be added to the macro file: Comments Macro Directives Custom Events Controlling macro execution is done with: Flow Control Operators Subroutines and Functions Include Files \u00b6 An effective way to store subroutines which are used in multiple macros is by using include files. Include files hold code just like macros, but do not have a Main subroutine. To use an include file, add \"#include FileNameHere\" in your macro. Include files can be any file type that works with plain text, such as .txt or .ini, but .inc is the most common file type. Macro Tips \u00b6 Sometimes you find a macro, and it's ALMOST what you need it for. In those cases, just edit the macro for your use. Take a look at this tutorial: Editing Existing Macros Be patient and expect to fail a few times. If your macro involved killing stuff, expect to die a few times to perfect your macro. Remember to check your syntax. Most of the common problems people run into are becuase they haven't closed their {}'s, []'s and ()'s properly. If you have to, start at the end of the troublesome section and start matching up the {}'s, []'s and ()'s by hand. It can really help sometimes to just print the macro and start crossing them out. For people using Utraedit, here is an addition you can make to your UltraEdit Syntax File that will give you some syntax highlighting and reformatting.","title":"Macro Reference"},{"location":"macros/#macro-reference","text":"The use of macros is what really makes MacroQuest2 extremely powerful. Additional in-game functionality like the map , cross-zone targeting, enhanced /who , custom binds, the HUD and plugins are useful, but macroing is what **Macro**Quest is all about. See Getting Started for some introductory information about macros. This page is concerned primarily with all the relevant information required to create your own macros.","title":"Macro Reference"},{"location":"macros/#macro-fundamentals","text":"The MQ2 scripting language primarily involves the use of Slash Commands , variables , Top-Level Objects and some Flow Control to help the macro along. Accessing and manipulating data can be done with: Variables MQ2Data Top-Level Objects Data Types Slash Commands Things that can be added to the macro file: Comments Macro Directives Custom Events Controlling macro execution is done with: Flow Control Operators Subroutines and Functions","title":"Macro Fundamentals"},{"location":"macros/#include-files","text":"An effective way to store subroutines which are used in multiple macros is by using include files. Include files hold code just like macros, but do not have a Main subroutine. To use an include file, add \"#include FileNameHere\" in your macro. Include files can be any file type that works with plain text, such as .txt or .ini, but .inc is the most common file type.","title":"Include Files"},{"location":"macros/#macro-tips","text":"Sometimes you find a macro, and it's ALMOST what you need it for. In those cases, just edit the macro for your use. Take a look at this tutorial: Editing Existing Macros Be patient and expect to fail a few times. If your macro involved killing stuff, expect to die a few times to perfect your macro. Remember to check your syntax. Most of the common problems people run into are becuase they haven't closed their {}'s, []'s and ()'s properly. If you have to, start at the end of the troublesome section and start matching up the {}'s, []'s and ()'s by hand. It can really help sometimes to just print the macro and start crossing them out. For people using Utraedit, here is an addition you can make to your UltraEdit Syntax File that will give you some syntax highlighting and reformatting.","title":"Macro Tips"},{"location":"macros/beginners-guide-datatypes/","text":"Beginners Guide to TLOs and DataVars \u00b6 Introduction \u00b6 Top-Level Objects (TLOs) are basically \"built-in\" global variables that contain information from the EQ client. Usage \u00b6 In order to use these built-in variables, you need to pick a Top-Level Object to start with, and then \"build\" the variable by adding one or more DataType members of that TLO. It's best understood with some examples. Note: TLOs and members are all case sensitive, so enter them exactly as seen. Example 1: Mana Percentage \u00b6 Say you want to display your current Mana Percentage in a HUD or use it in a macro. First off, you look through the list of TLOs and pick one that best suits the information you're looking for. The Me TLO looks like a good bet. Opening that page, you see that the Me TLO has access to the character datatype and the spawn datatype. The character datatype contains information about your own character, mostly things that only you will know (eg. how much mana you have, what spells you have loaded, etc). Since your character is also a spawn in the EQ world (ie. other people can see you and interact with you), you are also able to access the spawn datatype, which gives information that other characters in the same zone may know (eg. your location, your race, your class, etc). Since we're looking for your Mana Percentage, this is something that only you can know, so choose the character datatype page. This will display a list of all the members that are available to character . In the front of each datatype is an italic word, which is the datatype that the member belongs to. It may seem a bit confusing right now but should get easier as we progress to more complex examples. Scroll down the list until you find a member that looks like it will give us what we need. The PctMana member looks good. The int in front of PctMana shows that it is an integer. Since we're expecting a number, this seems correct. Click on the int link and you'll notice another table similar to the character datatype. This table has all the members of the int datatype. Note that the bottom line of the list is **To String_ , which is the default for the datatype. The default for the_ int datatype is the number. Since we're just looking for the number, we can stop here. So now we can \"build\" our variable. Remember, all variables start with a $-sign and are surrounded by braces { }. We start with our TLO: ${Me Then we add a period to indicate that we want to include a member of Me : ${Me. Now we add the first datatype, PctMana : ${Me.PctMana Now PctMana is an int and the default for int is just the number, so we don't need to add any members of int . So we can close off the variable now: ${Me.PctMana} To test this variable, you can echo it in the EQ client. So typing the following will echo your mana percentage to the MQ2 chat window: /echo ${Me.PctMana} Example 2: Class ShortName \u00b6 The next example deals with getting your class short name (the 3-letter abbreviation of your class). Find the most likely TLO again. Again, the Me TLO looks best. Find the member you would like to select. To find the members of Me , go to Character Scrolling through the members of Me , Class looks like the best candidate. The class datatype has a default of \"Same as Name\". Looking at the Name member, we can see that it is the \"long name\" of the class (eg. Enchanter). We're actually looking for the short name, so we need to find a member of class found here Class . Funny enough, ShortName looks like it will do the job. ShortName is a string datatype and the default for this datatype (surprisingly) is the string, and since we're looking for a 3-letter string, this is perfect. So now we've found our endpoint, we can build the variable as before. Start with the TLO: ${Me Add the first member ${Me.Class Since we need a member of Class , we add another period and the next member ${Me.Class.ShortName We've now arrived at the end of our variable, so we \"close\" it here ${Me.Class.ShortName} Again, to test, we echo the variable and see that the result is what we expect. /echo ${Me.Class.ShortName} Example 3: Comparison using a string \u00b6 For the next example, we will use the variable and compare it to a string in an if statement. Let's say we want to echo something if we're a bard, and something else if we're not. We'll be using the same ShortName example as above, but since we don't just want to echo the current short name, we have to go a step further. Go back to the ShortName member and you'll see that it is a string datatype. Under the string datatype, you'll see the Equals member. This is the one we'll be using. Equals is a bool datatype, which means that it doesn't have any members. It will return 1 if true and 0 if false, which is good enough for our test. In the following example, I'll be using an /if statement. For the purposes of this example, you don't need to understand how they work, but they're the staple of MQ2, so it's a good idea to have a look at the Flow Control page and familiarize yourself with /if and its friends. Returning to the example though, let's build the variable. We'll start with where we left off in the previous example. Since we want to access a member of ShortName , we won't close it off: /if (${Me.Class.ShortName You'll notice that the Equals datatype has square brackets after it, which means that you need to enter something between the brackets. This can be another variable or just a string. For this example, we're checking if we're a bard: /if (${Me.Class.ShortName.Equals[BRD] Remember that we're using ShortName , so we need to include the 3-letter abbreviation. Since this is the end of the variable ( Equals is a bool ), we can close it off: /if (${Me.Class.ShortName.Equals[BRD]} But this is actually an /if statement, and we need to close that off to, so lets make it echo something if we're a bard. /if (${Me.Class.ShortName.Equal[BRD]}) { /echo Catch me if you can! } We'll flesh this out a bit more by echoing one thing if we're a bard and another if we're not: /if (${Me.Class.ShortName.Equal[BRD]}) { /echo Catch me if you can! } else { /echo Nerf bards! }","title":"Beginners Guide to TLOs and DataVars"},{"location":"macros/beginners-guide-datatypes/#beginners-guide-to-tlos-and-datavars","text":"","title":"Beginners Guide to TLOs and DataVars"},{"location":"macros/beginners-guide-datatypes/#introduction","text":"Top-Level Objects (TLOs) are basically \"built-in\" global variables that contain information from the EQ client.","title":"Introduction"},{"location":"macros/beginners-guide-datatypes/#usage","text":"In order to use these built-in variables, you need to pick a Top-Level Object to start with, and then \"build\" the variable by adding one or more DataType members of that TLO. It's best understood with some examples. Note: TLOs and members are all case sensitive, so enter them exactly as seen.","title":"Usage"},{"location":"macros/beginners-guide-datatypes/#example-1-mana-percentage","text":"Say you want to display your current Mana Percentage in a HUD or use it in a macro. First off, you look through the list of TLOs and pick one that best suits the information you're looking for. The Me TLO looks like a good bet. Opening that page, you see that the Me TLO has access to the character datatype and the spawn datatype. The character datatype contains information about your own character, mostly things that only you will know (eg. how much mana you have, what spells you have loaded, etc). Since your character is also a spawn in the EQ world (ie. other people can see you and interact with you), you are also able to access the spawn datatype, which gives information that other characters in the same zone may know (eg. your location, your race, your class, etc). Since we're looking for your Mana Percentage, this is something that only you can know, so choose the character datatype page. This will display a list of all the members that are available to character . In the front of each datatype is an italic word, which is the datatype that the member belongs to. It may seem a bit confusing right now but should get easier as we progress to more complex examples. Scroll down the list until you find a member that looks like it will give us what we need. The PctMana member looks good. The int in front of PctMana shows that it is an integer. Since we're expecting a number, this seems correct. Click on the int link and you'll notice another table similar to the character datatype. This table has all the members of the int datatype. Note that the bottom line of the list is **To String_ , which is the default for the datatype. The default for the_ int datatype is the number. Since we're just looking for the number, we can stop here. So now we can \"build\" our variable. Remember, all variables start with a $-sign and are surrounded by braces { }. We start with our TLO: ${Me Then we add a period to indicate that we want to include a member of Me : ${Me. Now we add the first datatype, PctMana : ${Me.PctMana Now PctMana is an int and the default for int is just the number, so we don't need to add any members of int . So we can close off the variable now: ${Me.PctMana} To test this variable, you can echo it in the EQ client. So typing the following will echo your mana percentage to the MQ2 chat window: /echo ${Me.PctMana}","title":"Example 1: Mana Percentage"},{"location":"macros/beginners-guide-datatypes/#example-2-class-shortname","text":"The next example deals with getting your class short name (the 3-letter abbreviation of your class). Find the most likely TLO again. Again, the Me TLO looks best. Find the member you would like to select. To find the members of Me , go to Character Scrolling through the members of Me , Class looks like the best candidate. The class datatype has a default of \"Same as Name\". Looking at the Name member, we can see that it is the \"long name\" of the class (eg. Enchanter). We're actually looking for the short name, so we need to find a member of class found here Class . Funny enough, ShortName looks like it will do the job. ShortName is a string datatype and the default for this datatype (surprisingly) is the string, and since we're looking for a 3-letter string, this is perfect. So now we've found our endpoint, we can build the variable as before. Start with the TLO: ${Me Add the first member ${Me.Class Since we need a member of Class , we add another period and the next member ${Me.Class.ShortName We've now arrived at the end of our variable, so we \"close\" it here ${Me.Class.ShortName} Again, to test, we echo the variable and see that the result is what we expect. /echo ${Me.Class.ShortName}","title":"Example 2: Class ShortName"},{"location":"macros/beginners-guide-datatypes/#example-3-comparison-using-a-string","text":"For the next example, we will use the variable and compare it to a string in an if statement. Let's say we want to echo something if we're a bard, and something else if we're not. We'll be using the same ShortName example as above, but since we don't just want to echo the current short name, we have to go a step further. Go back to the ShortName member and you'll see that it is a string datatype. Under the string datatype, you'll see the Equals member. This is the one we'll be using. Equals is a bool datatype, which means that it doesn't have any members. It will return 1 if true and 0 if false, which is good enough for our test. In the following example, I'll be using an /if statement. For the purposes of this example, you don't need to understand how they work, but they're the staple of MQ2, so it's a good idea to have a look at the Flow Control page and familiarize yourself with /if and its friends. Returning to the example though, let's build the variable. We'll start with where we left off in the previous example. Since we want to access a member of ShortName , we won't close it off: /if (${Me.Class.ShortName You'll notice that the Equals datatype has square brackets after it, which means that you need to enter something between the brackets. This can be another variable or just a string. For this example, we're checking if we're a bard: /if (${Me.Class.ShortName.Equals[BRD] Remember that we're using ShortName , so we need to include the 3-letter abbreviation. Since this is the end of the variable ( Equals is a bool ), we can close it off: /if (${Me.Class.ShortName.Equals[BRD]} But this is actually an /if statement, and we need to close that off to, so lets make it echo something if we're a bard. /if (${Me.Class.ShortName.Equal[BRD]}) { /echo Catch me if you can! } We'll flesh this out a bit more by echoing one thing if we're a bard and another if we're not: /if (${Me.Class.ShortName.Equal[BRD]}) { /echo Catch me if you can! } else { /echo Nerf bards! }","title":"Example 3: Comparison using a string"},{"location":"macros/comments/","text":"Comments \u00b6 Comments Comments are descriptive lines in a macro to make reading easier. These are not executed when the macro runs. Single line comments start with | : | This is a single line comment. Multi line comments can also be used. Multi-line comments begin with |** and end with **| . |** This is a multiple line comment where you could use this form of commenting **|","title":"Comments"},{"location":"macros/comments/#comments","text":"Comments Comments are descriptive lines in a macro to make reading easier. These are not executed when the macro runs. Single line comments start with | : | This is a single line comment. Multi line comments can also be used. Multi-line comments begin with |** and end with **| . |** This is a multiple line comment where you could use this form of commenting **|","title":"Comments"},{"location":"macros/custom-events/","text":"Custom Events \u00b6 Basic Event Usage \u00b6 The Custom Event system allows you to trigger Subroutines off of any text that reaches the EQ client. Basically any text that is displayed in an EQ chat window, or in the MQ2 chat window can be used. You are able to use parts of the text as parameters for your event subroutine. An example of an #event is below: #event Invite \"BillyBob invites you to join a group.\" This means that when the text \"BillyBob invites you to join a group.\" appears on screen, the event will queue up. It's important to remember that the event will not trigger it's subroutine until you allow it to in your macro. You do so by adding \"/doevents\" or \"/doevents Invite\" at an appropriate point in your macro. When your macro hits the /doevents line, it will trigger any events that are queued up. At this point, the macro will look for the appropriately named subroutine, which in the above case is \"Sub Event_Invite\". So to flesh out the example above, we should have the following macro: #event Invite \"BillyBob invites you to join a group.\" Sub Main :mainloop /doevents /delay 0 /goto :mainloop /return Sub Event_Invite /echo BillyBob invited me! /return This will keep running /doevents and when it senses the #event trigger text, it will /echo the text in the Event Sub. Using part of the #event text as a variable \u00b6 Now while the above example is pretty useful (eg. you can accept the invite in the Sub Event_Invite), what if we want to accept invites from more than one person? We could create two separate events and have them each echo a different piece of text. Or we could use part of the event text as a variable and manipulate it in the subroutine . You can do this by marking out the part of text you want to use as a variable. In the above example, we'll use the inviter's name: #event Invite \"#1# invites you to join a group.\" Sub Main :mainloop /doevents /goto :mainloop /return Sub Event_Invite(Line,Inviter) /echo ${Inviter} invited me! /return A few things to note about the above example: Firstly, we use #1# to mark the first variable that we'd like passed to our Sub. If you want more than one variable to be passed, you can use #2# and greater to indicate other variables. Secondly, the above Sub has two variables passed to it - ${Line} and ${Inviter}. 1. The #event system will always pass the entire line of matched text to the subroutine as the first variable. Even if you don't wish to use the entire line of text, you need to define the variable. Using \"Line\" as the first variable is very common. However the first variable can be called whatever you'd like, especially if you'd like to use the line in your Sub! The next variable, Inviter, is the one we're interested in, and will match whatever's between the first set of # symbols in the #event line. So when the text \"PeggySue invites you to a group.\" appears in a chat window, the same event will trigger, and it will echo \"PeggySue invited me!\" in the MQ2 chat window. Ignoring parts of the #event text \u00b6 You can also ignore certain parts of the trigger text by using #*#. So the example: #event Invite \"#1# invites you to join #*#\" Would trigger when someone invited you to a group or a raid. Using variables in the #event text \u00b6 You can also have the #event system parse variables at the time of the match too. In the following example: #event Follow \"#*#follow |${Me.CleanName}|'\" When the text, apart from what is between the | symbols, is matched, it then evaluates what's between the | symbols and the event is triggered if the variable matches the text. So if ${Me.CleanName} was \"PeggySue\", the following text would not be matched: BillyBob tells the raid, 'follow me' While the following text would be: BillyBob tells the raid, 'follow PeggySue' #chat Special event \u00b6 The #chat command is a special custom event. It will always pass the channel, sender and text to the Sub Event_Chat subroutine. So your Sub Event_Chat should look something like this: Sub Event_Chat(ChatChannel,ChatSender,ChatText) /echo ${ChatSender} told me ${ChatText} in ${ChatChannel} /return Variable names can be anything you choose. Timer Events \u00b6 This is another special custom event. The name of the Timer and the Original Value it was set to, are passed to the subroutine as soon as the timer reaches 0. For example: Sub Event_Timer(Timer,OriginalValue) /echo ${Timer} reached 0, original value was ${OriginalValue} /return Notes and Tips \u00b6 Because the system lets you pick the parameter number of any portion of the message, some parameters may not get defined. It's up to you to make sure you define all the needed parameters, and to make sure they're defined as the correct type (string, int, bool, etc). Pay particular attention to the syntax of your #event line. It will only trigger if the text is identical , so best to check it against text in game or in your log file. If your death event no longer works \u00b6 Note: This should be fixed as of the 20060628 MQ2 release. A common use for #event in a lot of macros was for use when you died, something like this: #event Died \"#*#You have entered#*#\" Due to a few small bugs, this event did not always work. To work around this, you can do the following: Declare an outer variable with the ID of your zone in the Main sub. Somewhere in your main loop, add a check that calls the #event if the zone is not the same. Reset the outer variable within your event. For example #event Died \"#*#You have entered#*#\" sub Main /declare zonecheck int outer ${Zone.ID} :main_loop /if (${zonecheck} != ${Zone.ID}) /call Event_Died /delay 0 /goto :main_loop /return sub Event_Died /varset zonecheck ${Zone.ID} /sit /delay 10s /afk /endmacro /return","title":"Custom Events"},{"location":"macros/custom-events/#custom-events","text":"","title":"Custom Events"},{"location":"macros/custom-events/#basic-event-usage","text":"The Custom Event system allows you to trigger Subroutines off of any text that reaches the EQ client. Basically any text that is displayed in an EQ chat window, or in the MQ2 chat window can be used. You are able to use parts of the text as parameters for your event subroutine. An example of an #event is below: #event Invite \"BillyBob invites you to join a group.\" This means that when the text \"BillyBob invites you to join a group.\" appears on screen, the event will queue up. It's important to remember that the event will not trigger it's subroutine until you allow it to in your macro. You do so by adding \"/doevents\" or \"/doevents Invite\" at an appropriate point in your macro. When your macro hits the /doevents line, it will trigger any events that are queued up. At this point, the macro will look for the appropriately named subroutine, which in the above case is \"Sub Event_Invite\". So to flesh out the example above, we should have the following macro: #event Invite \"BillyBob invites you to join a group.\" Sub Main :mainloop /doevents /delay 0 /goto :mainloop /return Sub Event_Invite /echo BillyBob invited me! /return This will keep running /doevents and when it senses the #event trigger text, it will /echo the text in the Event Sub.","title":"Basic Event Usage"},{"location":"macros/custom-events/#using-part-of-the-event-text-as-a-variable","text":"Now while the above example is pretty useful (eg. you can accept the invite in the Sub Event_Invite), what if we want to accept invites from more than one person? We could create two separate events and have them each echo a different piece of text. Or we could use part of the event text as a variable and manipulate it in the subroutine . You can do this by marking out the part of text you want to use as a variable. In the above example, we'll use the inviter's name: #event Invite \"#1# invites you to join a group.\" Sub Main :mainloop /doevents /goto :mainloop /return Sub Event_Invite(Line,Inviter) /echo ${Inviter} invited me! /return A few things to note about the above example: Firstly, we use #1# to mark the first variable that we'd like passed to our Sub. If you want more than one variable to be passed, you can use #2# and greater to indicate other variables. Secondly, the above Sub has two variables passed to it - ${Line} and ${Inviter}. 1. The #event system will always pass the entire line of matched text to the subroutine as the first variable. Even if you don't wish to use the entire line of text, you need to define the variable. Using \"Line\" as the first variable is very common. However the first variable can be called whatever you'd like, especially if you'd like to use the line in your Sub! The next variable, Inviter, is the one we're interested in, and will match whatever's between the first set of # symbols in the #event line. So when the text \"PeggySue invites you to a group.\" appears in a chat window, the same event will trigger, and it will echo \"PeggySue invited me!\" in the MQ2 chat window.","title":"Using part of the #event text as a variable"},{"location":"macros/custom-events/#ignoring-parts-of-the-event-text","text":"You can also ignore certain parts of the trigger text by using #*#. So the example: #event Invite \"#1# invites you to join #*#\" Would trigger when someone invited you to a group or a raid.","title":"Ignoring parts of the #event text"},{"location":"macros/custom-events/#using-variables-in-the-event-text","text":"You can also have the #event system parse variables at the time of the match too. In the following example: #event Follow \"#*#follow |${Me.CleanName}|'\" When the text, apart from what is between the | symbols, is matched, it then evaluates what's between the | symbols and the event is triggered if the variable matches the text. So if ${Me.CleanName} was \"PeggySue\", the following text would not be matched: BillyBob tells the raid, 'follow me' While the following text would be: BillyBob tells the raid, 'follow PeggySue'","title":"Using variables in the #event text"},{"location":"macros/custom-events/#chat-special-event","text":"The #chat command is a special custom event. It will always pass the channel, sender and text to the Sub Event_Chat subroutine. So your Sub Event_Chat should look something like this: Sub Event_Chat(ChatChannel,ChatSender,ChatText) /echo ${ChatSender} told me ${ChatText} in ${ChatChannel} /return Variable names can be anything you choose.","title":"#chat Special event"},{"location":"macros/custom-events/#timer-events","text":"This is another special custom event. The name of the Timer and the Original Value it was set to, are passed to the subroutine as soon as the timer reaches 0. For example: Sub Event_Timer(Timer,OriginalValue) /echo ${Timer} reached 0, original value was ${OriginalValue} /return","title":"Timer Events"},{"location":"macros/custom-events/#notes-and-tips","text":"Because the system lets you pick the parameter number of any portion of the message, some parameters may not get defined. It's up to you to make sure you define all the needed parameters, and to make sure they're defined as the correct type (string, int, bool, etc). Pay particular attention to the syntax of your #event line. It will only trigger if the text is identical , so best to check it against text in game or in your log file.","title":"Notes and Tips"},{"location":"macros/custom-events/#if-your-death-event-no-longer-works","text":"Note: This should be fixed as of the 20060628 MQ2 release. A common use for #event in a lot of macros was for use when you died, something like this: #event Died \"#*#You have entered#*#\" Due to a few small bugs, this event did not always work. To work around this, you can do the following: Declare an outer variable with the ID of your zone in the Main sub. Somewhere in your main loop, add a check that calls the #event if the zone is not the same. Reset the outer variable within your event. For example #event Died \"#*#You have entered#*#\" sub Main /declare zonecheck int outer ${Zone.ID} :main_loop /if (${zonecheck} != ${Zone.ID}) /call Event_Died /delay 0 /goto :main_loop /return sub Event_Died /varset zonecheck ${Zone.ID} /sit /delay 10s /afk /endmacro /return","title":"If your death event no longer works"},{"location":"macros/editing-existing-macros/","text":"Editing Existing Macros \u00b6 kharmakazy requested a macro that could loot any corpse. A macro like this already exists, so instead of inventing the wheel let's just change a current macro so it does what we need. The macro in question is called Wait4Rez.mac by FaNTuM. His macro is for when you die, it'll consent group, raid, and guild. It will then wait for a rez box, auto-accept it, wait till you finish zoning, summon your corpse, then loot all the items. One particular reason I like this macro is that its clean and efficient, and it works. Without further babble, here's FaNTuM's macro - unedited: |** Wait4rez.mac by FaNTuM This will automatically accept rez, then loot your corpse for you, leaving the specified number of items on it. Usage: </mac wait4rez 0> where 0 is the number of items to leave on corpse, 0 loots all items. 03/30/2005 **| | -------------- | -- Main Sub -- | -------------- Sub Main /declare t int outer 0 /declare loottotal int outer /declare lootslot int outer /declare lootleft int outer 1 /if (!${Defined[Param0]}) { /echo Defaulting to leaving ${lootleft} item/s on corpse } else { /varset lootleft ${Param0} } /echo Wait4rez.mac activated. Now consenting guild, raid, and group. | -------------- | -- Consents -- | -------------- /consent guild /delay 30 /consent raid /delay 30 /consent group /echo Awaiting rez: will auto-accept, then loot leaving ${lootleft} item/s on corpse | --------------------- | -- Auto-accept Rez -- | --------------------- :waitforrez /if (!${Window[ConfirmationDialogBox].Open}) { /delay 1s ${Window[ConfirmationDialogBox].Open} /goto :waitforrez } /if (${Window[ConfirmationDialogBox].Open}) /notify ConfirmationDialogBox Yes_Button leftmouseup | ---------------------------------------------- | -- Wait until fully zoned in before looting -- | ---------------------------------------------- :zonein /delay 5 /target mycorpse /delay 5 ${Target.CleanName.Equal[${Me}'s corpse]} /if (${Target.CleanName.NotEqual[${Me}'s corpse]}) /goto :zonein /if (${Target.CleanName.Equal[${Me}'s corpse]}) { /delay 3s /call Loot } else { /goto :zonein } /end | ----------------------- | -- Pull corpse close -- | ----------------------- Sub Loot :corpsepull /target mycorpse /delay 5 ${Target.CleanName.Equal[${Me}'s corpse]} /if (${Target.CleanName.NotEqual[${Me}'s corpse]}) { /echo No corpse in this zone /return } /delay 3s /corpse /delay 1s ${Target.Distance}<20 /if (${Target.Distance}>20) { /echo Corpse is too far away /return } | --------------------- | -- Open the corpse -- | --------------------- /if (${Target.CleanName.Equal[${Me}'s corpse]}) { /loot } else { /echo where did my corpse go? /return } /delay 5s ${Me.State.Equal[BIND]} /if (${Me.State.NotEqual[BIND]}) /goto :corpsepull /varset loottotal 0 | ----------------- | -- Count items -- | ----------------- /delay 3s :LootLag /if (${loottotal}!=${Corpse.Items}) { /varset loottotal ${Corpse.Items} /delay 2s /goto :LootLag } /if (${loottotal}<=${lootleft}) { /echo Looting aborted. Error in number of items to be left on corpse. /notify LootWnd DoneButton leftmouseup /return } /varset loottotal ${Math.Calc[${Corpse.Items}-${lootleft}]} | --------------------- | -- Loot the corpse -- | --------------------- /echo Looting all but ${lootleft} item(s) /for lootslot 1 to ${loottotal} :LootItem /itemnotify loot${lootslot} rightmouseup /delay 5 !${Corpse.Item[${lootslot}].ID} /if (!${Corpse.Item[${lootslot}].ID}) { /next lootslot } else { /goto :LootItem } | ----------------- | -- Doublecheck -- | ----------------- /if (${Math.Calc[${Corpse.Items}-${lootleft}]}>0) /goto :LootLag /notify LootWnd DoneButton leftmouseup /echo Done looting. ${lootleft} Item(s) left on your corpse. /return Now, first thing we can skim away is the consent section. Since we will be looting NPC corpses we have no need to consent. By a quick glance, there's only a few lines that deal with consenting: | -------------- | -- Consents -- | -------------- /consent guild /delay 30 /consent raid /delay 30 /consent group /echo Awaiting rez: will auto-accept, then loot leaving ${lootleft} item/s on corpse Now, let's look at the waiting for rez section. Again, when we kill a NPC we won't be getting a rez box, so that section can be removed as well. | --------------------- | -- Auto-accept Rez -- | --------------------- :waitforrez /if (!${Window[ConfirmationDialogBox].Open}) { /delay 1s ${Window[ConfirmationDialogBox].Open} /goto :waitforrez } /if (${Window[ConfirmationDialogBox].Open}) /notify ConfirmationDialogBox Yes_Button leftmouseup Looking at the code, the next thing it does is it waits until it's fully zoned before looting. I'd surely hope you were fully zoned before looting a NPC corpse you just killed, so there's another section we can axe. | ---------------------------------------------- | -- Wait until fully zoned in before looting -- | ---------------------------------------------- :zonein /delay 5 /target mycorpse /delay 5 ${Target.CleanName.Equal[${Me}'s corpse]} /if (${Target.CleanName.NotEqual[${Me}'s corpse]}) /goto :zonein /if (${Target.CleanName.Equal[${Me}'s corpse]}) { /delay 3s /call Loot } else { /goto :zonein } /end Here we go again - next section deals with using the built in command /corpse to summon the corpse. (In case it was moved since you had been rezzed.) | ----------------------- | -- Pull corpse close -- | ----------------------- Sub Loot :corpsepull /target mycorpse /delay 5 ${Target.CleanName.Equal[${Me}'s corpse]} /if (${Target.CleanName.NotEqual[${Me}'s corpse]}) { /echo No corpse in this zone /return } /delay 3s /corpse /delay 1s ${Target.Distance}<20 /if (${Target.Distance}>20) { /echo Corpse is too far away /return } Now the next section we run across our first spot where we will use something, and remove something from the same section. Before we do that though, we need to take a brief look into one of the most basic programming ideas, the IF-THEN statement. In plain english, an IF-THEN statement reads just like this: if A is true, then do B. Now, we can add a little to it, and add ELSE. IF-THEN-ELSE would read in plain english like this: if A is true, then B, otherwise(else) do C. Now, each programming language is different, but the basic way MacroQuest evaluates this is something similar to this: /if (A) { B } else { C } If this does not make sense to you, re-read it a few times. This is a very basic concept, don't make it harder than it is. Back on track, let's look at the next section of the Wait4Rez macro: | --------------------- | -- Open the corpse -- | --------------------- /if (${Target.CleanName.Equal[${Me}'s corpse]}) { /loot } else { /echo where did my corpse go? /return } /delay 5s ${Me.State.Equal[BIND]} /if (${Me.State.NotEqual[BIND]}) /goto :corpsepull /varset loottotal 0 Now I am NOT a coder. I learned one type of code and as soon as I got proficient, everything changed. Ever since then I haven't really done much of anything with code. Using common sense, however, we can read most of this section. Here's the section again, the bolded is plain english of what I think it means. | --------------------- | -- Open the corpse -- | --------------------- /if (${Target.CleanName.Equal[${Me}'s corpse]}) { /if`` ``(My`` ``Target's`` ``Name`` ``is`` ``Equal`` ``to`` ``Myname's`` ``corpse)`` ``{ /loot Use`` ``the`` ``EQ`` ``command`` ``/loot } else { Otherwise /echo where did my corpse go? Put`` ``this`` ``text`` ``in`` ``the`` ``MQ2`` ``Window /return End`` ``macro } /delay 5s ${Me.State.Equal[BIND]} /if (${Me.State.NotEqual[BIND]}) /goto :corpsepull /varset loottotal 0 Some of that IF-THEN-ELSE statement will not be needed for our macro. We will need the /loot part, but the rest of it can be canned. Also in that section is a delay of some sort - 5s (assuming 5 seconds) and then a statement that sorta looks like it's asking if we are binding wound. Then it has another IF-THEN statement that looks like IF you aren't in the bind wound position THEN goto :corpsepull. We removed corpsepull already, so it looks like we can get rid of the statement in whole. The /varset was put in there for a reason, and I'm not entirely sure why yet - so I'm going to leave it in. So now, we have this: |** Wait4rez.mac by FaNTuM This will automatically accept rez, then loot your corpse for you, leaving the specified number of items on it. Usage: </mac wait4rez 0> where 0 is the number of items to leave on corpse, 0 loots all items. 03/30/2005 **| \\| --------------```\\| -- Main Sub -- | -------------- `Sub Main /declare t int outer 0 /declare loottotal int outer /declare lootslot int outer /declare lootleft int outer 1 /if (!${Defined[Param0]}) { /echo Defaulting to leaving ${lootleft} item/s on corpse } else { /varset lootleft ${Param0} } /echo Wait4rez.mac activated. Now consenting guild, raid, and group. /loot | ----------------- | -- Count items -- | ----------------- /delay 3s :LootLag /if (${loottotal}!=${Corpse.Items}) { /varset loottotal ${Corpse.Items} /delay 2s /goto :LootLag } /if (${loottotal}<=${lootleft}) { /echo Looting aborted. Error in number of items to be left on corpse. /notify LootWnd DoneButton leftmouseup /return } /varset loottotal ${Math.Calc[${Corpse.Items}-${lootleft}]} | --------------------- | -- Loot the corpse -- | --------------------- /echo Looting all but ${lootleft} item(s) /for lootslot 1 to ${loottotal} :LootItem /itemnotify loot${lootslot} rightmouseup /delay 5 !${Corpse.Item[${lootslot}].ID} /if (!${Corpse.Item[${lootslot}].ID}) { /next lootslot } else { /goto :LootItem } | ----------------- | -- Doublecheck -- | ----------------- /if (${Math.Calc[${Corpse.Items}-${lootleft}]}>0) /goto :LootLag /notify LootWnd DoneButton leftmouseup /echo Done looting. ${lootleft} Item(s) left on your corpse. /return Looks like we're almost done. Now, let's change one thing that's been bothering me. FaNTuM's macro by default leaves 1 item on the corpse. If we're looting NPC's then we don't need to leave 1 item on the corpse at all. (Unless you are a Necro or you group with one often that is) Scanning the code I see: /declare lootleft int outer 1 Which I'm pretty sure is the variable that is the default of how many items to leave on the corpse. Let's try changing it to 0. I also noticed, just by looking at the code logically, that we currently have no way of targeting our corpse. Keeping it simple, let's add in a /target corpse somewhere before it attempts to open a loot window. Now, we can edit or remove the /echo statements - all /echo statements do it put text in your MQ2 Chat Window. I'm going to just delete them all - we can always add them in later if we decide we need to be told that we just looted something. Looks good - Now I'll just edit the comments at the top to better reflect what this macro does and we're finished. |** Loot.mac by TheNewGuy 20 July 2005 Make a hotkey: /mac loot.mac When something dies, push that hotkey as you are standing over the corpse. This should loot everything. This code based upon Wat4rez.mac by FaNTuM. Changed from Wait4rez.mac to loot.mac at the following URL: http://www.macroquest.org/wiki/index.php/Editing_Existing_Macros **| \\| --------------```\\| -- Main Sub -- | -------------- `Sub Main /declare t int outer 0 /declare loottotal int outer /declare lootslot int outer /declare lootleft int outer 0 /if (!${Defined[Param0]}) { } else { /varset lootleft ${Param0} } /tar corpse /loot | ----------------- | -- Count items -- | ----------------- /delay 3s :LootLag /if (${loottotal}!=${Corpse.Items}) { /varset loottotal ${Corpse.Items} /delay 2s /goto :LootLag } /if (${loottotal}<=${lootleft}) { /notify LootWnd DoneButton leftmouseup /return } /varset loottotal ${Math.Calc[${Corpse.Items}-${lootleft}]} | --------------------- | -- Loot the corpse -- | --------------------- /for lootslot 1 to ${loottotal} :LootItem /itemnotify loot${lootslot} rightmouseup /delay 5 !${Corpse.Item[${lootslot}].ID} /if (!${Corpse.Item[${lootslot}].ID}) { /next lootslot } else { /goto :LootItem } | ----------------- | -- Doublecheck -- | ----------------- /if (${Math.Calc[${Corpse.Items}-${lootleft}]}>0) /goto :LootLag /notify LootWnd DoneButton leftmouseup /return","title":"Editing Existing Macros"},{"location":"macros/editing-existing-macros/#editing-existing-macros","text":"kharmakazy requested a macro that could loot any corpse. A macro like this already exists, so instead of inventing the wheel let's just change a current macro so it does what we need. The macro in question is called Wait4Rez.mac by FaNTuM. His macro is for when you die, it'll consent group, raid, and guild. It will then wait for a rez box, auto-accept it, wait till you finish zoning, summon your corpse, then loot all the items. One particular reason I like this macro is that its clean and efficient, and it works. Without further babble, here's FaNTuM's macro - unedited: |** Wait4rez.mac by FaNTuM This will automatically accept rez, then loot your corpse for you, leaving the specified number of items on it. Usage: </mac wait4rez 0> where 0 is the number of items to leave on corpse, 0 loots all items. 03/30/2005 **| | -------------- | -- Main Sub -- | -------------- Sub Main /declare t int outer 0 /declare loottotal int outer /declare lootslot int outer /declare lootleft int outer 1 /if (!${Defined[Param0]}) { /echo Defaulting to leaving ${lootleft} item/s on corpse } else { /varset lootleft ${Param0} } /echo Wait4rez.mac activated. Now consenting guild, raid, and group. | -------------- | -- Consents -- | -------------- /consent guild /delay 30 /consent raid /delay 30 /consent group /echo Awaiting rez: will auto-accept, then loot leaving ${lootleft} item/s on corpse | --------------------- | -- Auto-accept Rez -- | --------------------- :waitforrez /if (!${Window[ConfirmationDialogBox].Open}) { /delay 1s ${Window[ConfirmationDialogBox].Open} /goto :waitforrez } /if (${Window[ConfirmationDialogBox].Open}) /notify ConfirmationDialogBox Yes_Button leftmouseup | ---------------------------------------------- | -- Wait until fully zoned in before looting -- | ---------------------------------------------- :zonein /delay 5 /target mycorpse /delay 5 ${Target.CleanName.Equal[${Me}'s corpse]} /if (${Target.CleanName.NotEqual[${Me}'s corpse]}) /goto :zonein /if (${Target.CleanName.Equal[${Me}'s corpse]}) { /delay 3s /call Loot } else { /goto :zonein } /end | ----------------------- | -- Pull corpse close -- | ----------------------- Sub Loot :corpsepull /target mycorpse /delay 5 ${Target.CleanName.Equal[${Me}'s corpse]} /if (${Target.CleanName.NotEqual[${Me}'s corpse]}) { /echo No corpse in this zone /return } /delay 3s /corpse /delay 1s ${Target.Distance}<20 /if (${Target.Distance}>20) { /echo Corpse is too far away /return } | --------------------- | -- Open the corpse -- | --------------------- /if (${Target.CleanName.Equal[${Me}'s corpse]}) { /loot } else { /echo where did my corpse go? /return } /delay 5s ${Me.State.Equal[BIND]} /if (${Me.State.NotEqual[BIND]}) /goto :corpsepull /varset loottotal 0 | ----------------- | -- Count items -- | ----------------- /delay 3s :LootLag /if (${loottotal}!=${Corpse.Items}) { /varset loottotal ${Corpse.Items} /delay 2s /goto :LootLag } /if (${loottotal}<=${lootleft}) { /echo Looting aborted. Error in number of items to be left on corpse. /notify LootWnd DoneButton leftmouseup /return } /varset loottotal ${Math.Calc[${Corpse.Items}-${lootleft}]} | --------------------- | -- Loot the corpse -- | --------------------- /echo Looting all but ${lootleft} item(s) /for lootslot 1 to ${loottotal} :LootItem /itemnotify loot${lootslot} rightmouseup /delay 5 !${Corpse.Item[${lootslot}].ID} /if (!${Corpse.Item[${lootslot}].ID}) { /next lootslot } else { /goto :LootItem } | ----------------- | -- Doublecheck -- | ----------------- /if (${Math.Calc[${Corpse.Items}-${lootleft}]}>0) /goto :LootLag /notify LootWnd DoneButton leftmouseup /echo Done looting. ${lootleft} Item(s) left on your corpse. /return Now, first thing we can skim away is the consent section. Since we will be looting NPC corpses we have no need to consent. By a quick glance, there's only a few lines that deal with consenting: | -------------- | -- Consents -- | -------------- /consent guild /delay 30 /consent raid /delay 30 /consent group /echo Awaiting rez: will auto-accept, then loot leaving ${lootleft} item/s on corpse Now, let's look at the waiting for rez section. Again, when we kill a NPC we won't be getting a rez box, so that section can be removed as well. | --------------------- | -- Auto-accept Rez -- | --------------------- :waitforrez /if (!${Window[ConfirmationDialogBox].Open}) { /delay 1s ${Window[ConfirmationDialogBox].Open} /goto :waitforrez } /if (${Window[ConfirmationDialogBox].Open}) /notify ConfirmationDialogBox Yes_Button leftmouseup Looking at the code, the next thing it does is it waits until it's fully zoned before looting. I'd surely hope you were fully zoned before looting a NPC corpse you just killed, so there's another section we can axe. | ---------------------------------------------- | -- Wait until fully zoned in before looting -- | ---------------------------------------------- :zonein /delay 5 /target mycorpse /delay 5 ${Target.CleanName.Equal[${Me}'s corpse]} /if (${Target.CleanName.NotEqual[${Me}'s corpse]}) /goto :zonein /if (${Target.CleanName.Equal[${Me}'s corpse]}) { /delay 3s /call Loot } else { /goto :zonein } /end Here we go again - next section deals with using the built in command /corpse to summon the corpse. (In case it was moved since you had been rezzed.) | ----------------------- | -- Pull corpse close -- | ----------------------- Sub Loot :corpsepull /target mycorpse /delay 5 ${Target.CleanName.Equal[${Me}'s corpse]} /if (${Target.CleanName.NotEqual[${Me}'s corpse]}) { /echo No corpse in this zone /return } /delay 3s /corpse /delay 1s ${Target.Distance}<20 /if (${Target.Distance}>20) { /echo Corpse is too far away /return } Now the next section we run across our first spot where we will use something, and remove something from the same section. Before we do that though, we need to take a brief look into one of the most basic programming ideas, the IF-THEN statement. In plain english, an IF-THEN statement reads just like this: if A is true, then do B. Now, we can add a little to it, and add ELSE. IF-THEN-ELSE would read in plain english like this: if A is true, then B, otherwise(else) do C. Now, each programming language is different, but the basic way MacroQuest evaluates this is something similar to this: /if (A) { B } else { C } If this does not make sense to you, re-read it a few times. This is a very basic concept, don't make it harder than it is. Back on track, let's look at the next section of the Wait4Rez macro: | --------------------- | -- Open the corpse -- | --------------------- /if (${Target.CleanName.Equal[${Me}'s corpse]}) { /loot } else { /echo where did my corpse go? /return } /delay 5s ${Me.State.Equal[BIND]} /if (${Me.State.NotEqual[BIND]}) /goto :corpsepull /varset loottotal 0 Now I am NOT a coder. I learned one type of code and as soon as I got proficient, everything changed. Ever since then I haven't really done much of anything with code. Using common sense, however, we can read most of this section. Here's the section again, the bolded is plain english of what I think it means. | --------------------- | -- Open the corpse -- | --------------------- /if (${Target.CleanName.Equal[${Me}'s corpse]}) { /if`` ``(My`` ``Target's`` ``Name`` ``is`` ``Equal`` ``to`` ``Myname's`` ``corpse)`` ``{ /loot Use`` ``the`` ``EQ`` ``command`` ``/loot } else { Otherwise /echo where did my corpse go? Put`` ``this`` ``text`` ``in`` ``the`` ``MQ2`` ``Window /return End`` ``macro } /delay 5s ${Me.State.Equal[BIND]} /if (${Me.State.NotEqual[BIND]}) /goto :corpsepull /varset loottotal 0 Some of that IF-THEN-ELSE statement will not be needed for our macro. We will need the /loot part, but the rest of it can be canned. Also in that section is a delay of some sort - 5s (assuming 5 seconds) and then a statement that sorta looks like it's asking if we are binding wound. Then it has another IF-THEN statement that looks like IF you aren't in the bind wound position THEN goto :corpsepull. We removed corpsepull already, so it looks like we can get rid of the statement in whole. The /varset was put in there for a reason, and I'm not entirely sure why yet - so I'm going to leave it in. So now, we have this: |** Wait4rez.mac by FaNTuM This will automatically accept rez, then loot your corpse for you, leaving the specified number of items on it. Usage: </mac wait4rez 0> where 0 is the number of items to leave on corpse, 0 loots all items. 03/30/2005 **| \\| --------------```\\| -- Main Sub -- | -------------- `Sub Main /declare t int outer 0 /declare loottotal int outer /declare lootslot int outer /declare lootleft int outer 1 /if (!${Defined[Param0]}) { /echo Defaulting to leaving ${lootleft} item/s on corpse } else { /varset lootleft ${Param0} } /echo Wait4rez.mac activated. Now consenting guild, raid, and group. /loot | ----------------- | -- Count items -- | ----------------- /delay 3s :LootLag /if (${loottotal}!=${Corpse.Items}) { /varset loottotal ${Corpse.Items} /delay 2s /goto :LootLag } /if (${loottotal}<=${lootleft}) { /echo Looting aborted. Error in number of items to be left on corpse. /notify LootWnd DoneButton leftmouseup /return } /varset loottotal ${Math.Calc[${Corpse.Items}-${lootleft}]} | --------------------- | -- Loot the corpse -- | --------------------- /echo Looting all but ${lootleft} item(s) /for lootslot 1 to ${loottotal} :LootItem /itemnotify loot${lootslot} rightmouseup /delay 5 !${Corpse.Item[${lootslot}].ID} /if (!${Corpse.Item[${lootslot}].ID}) { /next lootslot } else { /goto :LootItem } | ----------------- | -- Doublecheck -- | ----------------- /if (${Math.Calc[${Corpse.Items}-${lootleft}]}>0) /goto :LootLag /notify LootWnd DoneButton leftmouseup /echo Done looting. ${lootleft} Item(s) left on your corpse. /return Looks like we're almost done. Now, let's change one thing that's been bothering me. FaNTuM's macro by default leaves 1 item on the corpse. If we're looting NPC's then we don't need to leave 1 item on the corpse at all. (Unless you are a Necro or you group with one often that is) Scanning the code I see: /declare lootleft int outer 1 Which I'm pretty sure is the variable that is the default of how many items to leave on the corpse. Let's try changing it to 0. I also noticed, just by looking at the code logically, that we currently have no way of targeting our corpse. Keeping it simple, let's add in a /target corpse somewhere before it attempts to open a loot window. Now, we can edit or remove the /echo statements - all /echo statements do it put text in your MQ2 Chat Window. I'm going to just delete them all - we can always add them in later if we decide we need to be told that we just looted something. Looks good - Now I'll just edit the comments at the top to better reflect what this macro does and we're finished. |** Loot.mac by TheNewGuy 20 July 2005 Make a hotkey: /mac loot.mac When something dies, push that hotkey as you are standing over the corpse. This should loot everything. This code based upon Wat4rez.mac by FaNTuM. Changed from Wait4rez.mac to loot.mac at the following URL: http://www.macroquest.org/wiki/index.php/Editing_Existing_Macros **| \\| --------------```\\| -- Main Sub -- | -------------- `Sub Main /declare t int outer 0 /declare loottotal int outer /declare lootslot int outer /declare lootleft int outer 0 /if (!${Defined[Param0]}) { } else { /varset lootleft ${Param0} } /tar corpse /loot | ----------------- | -- Count items -- | ----------------- /delay 3s :LootLag /if (${loottotal}!=${Corpse.Items}) { /varset loottotal ${Corpse.Items} /delay 2s /goto :LootLag } /if (${loottotal}<=${lootleft}) { /notify LootWnd DoneButton leftmouseup /return } /varset loottotal ${Math.Calc[${Corpse.Items}-${lootleft}]} | --------------------- | -- Loot the corpse -- | --------------------- /for lootslot 1 to ${loottotal} :LootItem /itemnotify loot${lootslot} rightmouseup /delay 5 !${Corpse.Item[${lootslot}].ID} /if (!${Corpse.Item[${lootslot}].ID}) { /next lootslot } else { /goto :LootItem } | ----------------- | -- Doublecheck -- | ----------------- /if (${Math.Calc[${Corpse.Items}-${lootleft}]}>0) /goto :LootLag /notify LootWnd DoneButton leftmouseup /return","title":"Editing Existing Macros"},{"location":"macros/flow-control/","text":"Flow Control \u00b6 MQ2 provides a few ways to control the execution of your macro. If/else decisions While loops For loops Goto jumps If/else decisions \u00b6 If statement blocks are the most common form of flow control in MQ2. The syntax for an /if statement can be found here . The simplest statements are one-liners like the following: /if (${Me.Sitting}) /stand This will stand you up if you're sitting. *One-line /if statements do not require curly braces ( {} ) If you wish to execute more than one command, you must wrap your set of commands in braces: /if (${Me.Sitting}) { /stand /echo I'm standing now! } *If statements can also match multiple conditions for fine-grained control: /if (${Me.Standing} && !${Me.Combat} && !${Me.Casting.ID}) { /sit /echo Medding now } The above example will only be matched if you're currently standing and you're not in combat and you're not casting. Any of the Operators can be used to \"fine-tune\" the matching of any conditions. Also, brackets can be used to group certain sets of statements together. /if ( (${Me.Sitting} && !${Window[SpellBookWnd].Open}) || ${Me.Standing} ) /call Cast \"Complete Healing\" 10s This will only cast the spell if: I'm sitting and the spellbook window is not open OR I'm standing. You will also need the curly braces any time you're using else or else if statements. An example: /if (${Me.Sitting}) { /stand /echo I'm standing now! } else { /echo I'm already standing } Else blocks are extremely useful for catching \"everything else\" that is not matched by the /if statement. You can go one further and add some further matching with additional /if statments, like the following: /declare random int local ${Math.Rand[10]} /if (${random}<=3) { /echo The number is less than or equal to 3 } else /if (${random}<=5) { /echo The number is less than or equal to 5 } else /if (${random}<=8) { /echo The number is less than or equal to 8 } else { /echo The number is 9 or higher } You can also nest /if statements within other /if statements, to make your matching and macro flow very powerful. While loops \u00b6 Similar to for loops, while loops can be used to execute a series of commands as long as a certain set of conditions are or are not true. /while (${Me.PctHPs}<100 || ${Me.PctMana}<100) { /if (${Me.Standing}) { /echo Sitting because I am standing. /sit } /echo Resting until my hitpoints (${Me.PctHPs}%) and mana (${Me.PctMana}%) are at 100%. /delay 6s } You can end a /while loop immediately with /break or try the next iteration with /continue For loops \u00b6 For loops are used when you want to perform the same set of commands on a list of items. With a /for loop, you define a starting number, an end number and (if necessary) a number to increment by. The loop will perform the set of commands with the starting number, then will increment it (by 1 as a default, unless you specify the number) and will then re-run all the commands with the next number. It will continue to do that until it reaches the end number, at which time it will exit. Take this example, which will give a list of all your buff slots: /declare x int local /for x 1 to 15 /echo Buff ${x} is ${Me.Buff[${x}]} /next x The problem with this example is that you'll get a couple of NULLs if you have no buffs in those slots, so we can further refine the loop to make use of an /if statement as well, like this: /declare x int local /for x 1 to 15 /if (${Me.Buff[${x}].ID}) /echo Buff ${x} is ${Me.Buff[${x}]} /next x This will have a look and see if the buff in slot ${x} has an ID (remember that /if statements only deal with numbers) and if the number is positive (ie. not 0), then it will echo the buff name. You could easily list the buffs in reverse order by using \"downto\" instead of \"to\" in the /for loop. /declare x int local /for x 15 downto 1 /if (${Me.Buff[${x}].ID}) /echo Buff ${x} is ${Me.Buff[${x}]} /next x You can end a /for loop immediately with /break or try the next iteration with /continue. Goto jumps \u00b6 As with most programming and scripting languages, the use of the \"goto\" function is frowned upon (generally because it's slow and there are better ways of achieving the same result). In MQ2 it's not much different, and since MQ2 originally didn't include any type of \"while\" function, many older macros still include goto statements. First off, you need a marker to denote where the /goto function should move to. A marker is created in the following format: :marker To utilize that marker with a /goto statment, do something like the following: Sub Main /echo start here :marker /echo just passed the marker /goto :marker /return In the above example, your MQ2 chat window would be filled with \"just passed the marker\" echoed constantly until you ended the macro. We've created an infinite loop above, which is the most common use of /goto. A conditional /goto (ie. a /goto after an /if statment) is the closest you can get to a \"while\" function. Take the following example: Sub Main /declare num int local 1 :marker /echo Number is ${num} /varcalc ${num} ${num}+1 /if (${num}<=5) /goto :marker /return This would output: [MQ2] Number is 1 [MQ2] Number is 2 [MQ2] Number is 3 [MQ2] Number is 4 [MQ2] Number is 5 The macro echoes \"${num}\" and then increments it by one. If the total is less than or equal to 5, it loops back to the start. If the total is above 5, it won't loop back and will end naturally. :OnExit \u00b6 Anything included after that label will be called whenever an /endmacro command is issued. To use this feature, the label must be at the end of your 'Sub Main' function and end with a /return. Please note that this is NOT required of macros, so no macros will have to be altered unless you wish to take advantage of this feature. OnExit will not function upon a macro ending while paused. example: Sub Main /while (1) { /delay 5 } /return :OnExit /echo Should run on exit. /return","title":"Flow Control"},{"location":"macros/flow-control/#flow-control","text":"MQ2 provides a few ways to control the execution of your macro. If/else decisions While loops For loops Goto jumps","title":"Flow Control"},{"location":"macros/flow-control/#ifelse-decisions","text":"If statement blocks are the most common form of flow control in MQ2. The syntax for an /if statement can be found here . The simplest statements are one-liners like the following: /if (${Me.Sitting}) /stand This will stand you up if you're sitting. *One-line /if statements do not require curly braces ( {} ) If you wish to execute more than one command, you must wrap your set of commands in braces: /if (${Me.Sitting}) { /stand /echo I'm standing now! } *If statements can also match multiple conditions for fine-grained control: /if (${Me.Standing} && !${Me.Combat} && !${Me.Casting.ID}) { /sit /echo Medding now } The above example will only be matched if you're currently standing and you're not in combat and you're not casting. Any of the Operators can be used to \"fine-tune\" the matching of any conditions. Also, brackets can be used to group certain sets of statements together. /if ( (${Me.Sitting} && !${Window[SpellBookWnd].Open}) || ${Me.Standing} ) /call Cast \"Complete Healing\" 10s This will only cast the spell if: I'm sitting and the spellbook window is not open OR I'm standing. You will also need the curly braces any time you're using else or else if statements. An example: /if (${Me.Sitting}) { /stand /echo I'm standing now! } else { /echo I'm already standing } Else blocks are extremely useful for catching \"everything else\" that is not matched by the /if statement. You can go one further and add some further matching with additional /if statments, like the following: /declare random int local ${Math.Rand[10]} /if (${random}<=3) { /echo The number is less than or equal to 3 } else /if (${random}<=5) { /echo The number is less than or equal to 5 } else /if (${random}<=8) { /echo The number is less than or equal to 8 } else { /echo The number is 9 or higher } You can also nest /if statements within other /if statements, to make your matching and macro flow very powerful.","title":"If/else decisions"},{"location":"macros/flow-control/#while-loops","text":"Similar to for loops, while loops can be used to execute a series of commands as long as a certain set of conditions are or are not true. /while (${Me.PctHPs}<100 || ${Me.PctMana}<100) { /if (${Me.Standing}) { /echo Sitting because I am standing. /sit } /echo Resting until my hitpoints (${Me.PctHPs}%) and mana (${Me.PctMana}%) are at 100%. /delay 6s } You can end a /while loop immediately with /break or try the next iteration with /continue","title":"While loops"},{"location":"macros/flow-control/#for-loops","text":"For loops are used when you want to perform the same set of commands on a list of items. With a /for loop, you define a starting number, an end number and (if necessary) a number to increment by. The loop will perform the set of commands with the starting number, then will increment it (by 1 as a default, unless you specify the number) and will then re-run all the commands with the next number. It will continue to do that until it reaches the end number, at which time it will exit. Take this example, which will give a list of all your buff slots: /declare x int local /for x 1 to 15 /echo Buff ${x} is ${Me.Buff[${x}]} /next x The problem with this example is that you'll get a couple of NULLs if you have no buffs in those slots, so we can further refine the loop to make use of an /if statement as well, like this: /declare x int local /for x 1 to 15 /if (${Me.Buff[${x}].ID}) /echo Buff ${x} is ${Me.Buff[${x}]} /next x This will have a look and see if the buff in slot ${x} has an ID (remember that /if statements only deal with numbers) and if the number is positive (ie. not 0), then it will echo the buff name. You could easily list the buffs in reverse order by using \"downto\" instead of \"to\" in the /for loop. /declare x int local /for x 15 downto 1 /if (${Me.Buff[${x}].ID}) /echo Buff ${x} is ${Me.Buff[${x}]} /next x You can end a /for loop immediately with /break or try the next iteration with /continue.","title":"For loops"},{"location":"macros/flow-control/#goto-jumps","text":"As with most programming and scripting languages, the use of the \"goto\" function is frowned upon (generally because it's slow and there are better ways of achieving the same result). In MQ2 it's not much different, and since MQ2 originally didn't include any type of \"while\" function, many older macros still include goto statements. First off, you need a marker to denote where the /goto function should move to. A marker is created in the following format: :marker To utilize that marker with a /goto statment, do something like the following: Sub Main /echo start here :marker /echo just passed the marker /goto :marker /return In the above example, your MQ2 chat window would be filled with \"just passed the marker\" echoed constantly until you ended the macro. We've created an infinite loop above, which is the most common use of /goto. A conditional /goto (ie. a /goto after an /if statment) is the closest you can get to a \"while\" function. Take the following example: Sub Main /declare num int local 1 :marker /echo Number is ${num} /varcalc ${num} ${num}+1 /if (${num}<=5) /goto :marker /return This would output: [MQ2] Number is 1 [MQ2] Number is 2 [MQ2] Number is 3 [MQ2] Number is 4 [MQ2] Number is 5 The macro echoes \"${num}\" and then increments it by one. If the total is less than or equal to 5, it loops back to the start. If the total is above 5, it won't loop back and will end naturally.","title":"Goto jumps"},{"location":"macros/flow-control/#onexit","text":"Anything included after that label will be called whenever an /endmacro command is issued. To use this feature, the label must be at the end of your 'Sub Main' function and end with a /return. Please note that this is NOT required of macros, so no macros will have to be altered unless you wish to take advantage of this feature. OnExit will not function upon a macro ending while paused. example: Sub Main /while (1) { /delay 5 } /return :OnExit /echo Should run on exit. /return","title":":OnExit"},{"location":"macros/general-help/","text":"General Macro Help \u00b6 First off, do you have the latest copy of your macro? If you found your macro on the forums, check back to the first post and see if it has been updated since you last downloaded it. If you are unsure, or the macro writer has not included a version number, then it's easiest to just recopy the code from the forums into your macro and then save it and try again. Have you read all the documentation regarding the macro: 1. The first post on the forum normally has some text indicating how to run the macro, what it does, what its dependencies are, etc. Secondly, read all the pages in the thread about the macro. Yes, this may take you a while if its an old or established macro, but it's very likely someone else has had the same problem and the question has been answered. Check the wiki page, if your macro has one. Often they are checked and modified more frequently than the macro thread/first post. Do you have all the pre-requisites for the macro, other snippets (.inc files) and plugins required? If there are pre-requisite plugins or snippets, are they configured correctly? You will most likely need to check the forum posts for the snippet/plugin in question too (yes, more reading :). INI file maintenance \u00b6 To remove a keyname ([Section]) and all of it's valuenames and values, from an ini file: /ini \"Myfile.ini\" \"KeynameToRemove\" To remove a valuename (and all of it's values) from an ini file: /ini \"Myfile.ini\" \"Keyname\" \"ValuenameToRemove\" Macro Problems \u00b6 Couldn't open macro file: xxx.mac \u00b6 Make sure you saved the macro into the Release\\Macros directory. Make sure the macro has a .mac extension. If you cannot see an extension on the macro file, you may have your file extensions turned off. In Explorer, go to Tools - Folder Options - View tab and untick the option \"Hide extensions for known file types\" . Then rename the file and change the extension to .mac. Due to complete misuse of the String Top-Level Object, it has been removed. \u00b6 A while back, macro writers were incorrectly using the ${String} TLO in their macros. In order to prevent people from using this TLO incorrectly, thus slowing down their macros, and in an attempt to teach people to create their macros properly and efficiently from the get-go, the ${String} TLO was removed. Finding this error when running a macro generally means you have an old copy of a macro. Most macros have been updated to not use the ${String} TLO and therefore the first place you should be looking is **in the forum thread where you obtained your macro**. Fixing the error is easy when you know what to look for, but a bit more tricky in a complicated macro or if you're not a macro maker yourself. Here's a simple example that should help explain it. The code: /if (${String[${Me.Gem[1]}].NotEqual[Complete Healing]}) /memspell 1 \"Complete Healing\" What this does is check if the spell name of the spell in the first slot is \"Complete Healing\" *(the /if statement inside the brackets) . If it is not, then mem \"Complete Healing\" in slot 1 (the /memspell bit after the brackets)*. If we look in the manual, we see the following entry for the Gem reference type (part of the character reference type): {| border=\"1\" cellpadding=\"2\" cellspacing=\"0\" | spell Gem[ # ] |The name of the spell in this slot# |} The part we're interested here is the first word spell which tells you what the return type of Gem[#] will be. In this case it will return a type \"spell\". Equal or NotEqual can only be used to compare two strings (which is why people would convert the result of ${Me.Gem[1]} (\"spell\") to a string by using the ${String} TLO). While this may look fine logically, it's not the way MQ2 Data Types were designed to be used, and its more work for your PC to convert the result of the spell to a string. The way you're supposed to use the Data Types is to add more members to the end of the TLO until you get the result you're looking for. In the above example, if we look at the reference type for spell , we see the following: {| border=\"1\" cellpadding=\"2\" cellspacing=\"0\" | string Name |Name |} This shows us that we can use the .Name reference type to get a string value as a result, which can then be compared (using .Equal or .NotEqual). So now we have a piece of code like the following: ${Me.Gem[1].Name} That will output a string value which contains the name of the spell in gem slot 1. The code: ${Me.Gem[1].Name.NotEqual[Complete Healing]} Will give us a TRUE/FALSE result if you echo the above statement. So instead of wrapping ${Me.Gem[1]} in a ${String[]} TLO, we've removed the need to convert the \"spell\" result to a \"string\" result, by adding .Name to the end of the TLO, thereby making it return a string value. The above changes can be incorporated into the initial faulty line, like this: /if (${Me.Gem[1].Name.NotEqual[Complete Healing]}) /memspell 1 \"Complete Healing\" We've now removed the ${String[]} part, and still have a perfectly functioning (and faster) macro. This macro I downloaded doesn't do X (fill in as appropriate) \u00b6 If you have followed all the advice in the General Macro Help section, and you are still having problems, you may want to post your problem to the macro thread itself. Follow the instructions in Help Forums but make sure to reply to the main macro post, and do not post a new thread in any of the other Help forums. If you have a feature request for your macro, post the request in the main macro thread and the macro writer may oblige you and add your requested feature. Or failing that, dive right in and modify the macro for your own use. *Remember, many new macros are born when someone modifies an existing macro to do something more/different, and then after enough changes, it becomes a new macro in its own right.* Macros From Other Sites Not Working Properly \u00b6 If you download a macro from a site that doesn't update their macros, first search the MQ2 forums to see if there is a similar problem discussed in any threads. If that doesn't help, read the Help Forums. Post to the thread that relates to the macro in question if one exists before starting a new thread. Make sure to follow all the rules discussed before posting in the Help section of the Message Boards. The Macro does not report if it's running or not \u00b6 You may: add /echo macro_name_here is running to the Sub Main section of the actual .mac file Issue /echo ${Macro} to see the name of the macro currently running If that doesn't help, read the Help Forums and then post on the boards, making sure to follow all the rules.","title":"General Help"},{"location":"macros/general-help/#general-macro-help","text":"First off, do you have the latest copy of your macro? If you found your macro on the forums, check back to the first post and see if it has been updated since you last downloaded it. If you are unsure, or the macro writer has not included a version number, then it's easiest to just recopy the code from the forums into your macro and then save it and try again. Have you read all the documentation regarding the macro: 1. The first post on the forum normally has some text indicating how to run the macro, what it does, what its dependencies are, etc. Secondly, read all the pages in the thread about the macro. Yes, this may take you a while if its an old or established macro, but it's very likely someone else has had the same problem and the question has been answered. Check the wiki page, if your macro has one. Often they are checked and modified more frequently than the macro thread/first post. Do you have all the pre-requisites for the macro, other snippets (.inc files) and plugins required? If there are pre-requisite plugins or snippets, are they configured correctly? You will most likely need to check the forum posts for the snippet/plugin in question too (yes, more reading :).","title":"General Macro Help"},{"location":"macros/general-help/#ini-file-maintenance","text":"To remove a keyname ([Section]) and all of it's valuenames and values, from an ini file: /ini \"Myfile.ini\" \"KeynameToRemove\" To remove a valuename (and all of it's values) from an ini file: /ini \"Myfile.ini\" \"Keyname\" \"ValuenameToRemove\"","title":"INI file maintenance"},{"location":"macros/general-help/#macro-problems","text":"","title":"Macro Problems"},{"location":"macros/general-help/#couldnt-open-macro-file-xxxmac","text":"Make sure you saved the macro into the Release\\Macros directory. Make sure the macro has a .mac extension. If you cannot see an extension on the macro file, you may have your file extensions turned off. In Explorer, go to Tools - Folder Options - View tab and untick the option \"Hide extensions for known file types\" . Then rename the file and change the extension to .mac.","title":"Couldn't open macro file: xxx.mac"},{"location":"macros/general-help/#due-to-complete-misuse-of-the-string-top-level-object-it-has-been-removed","text":"A while back, macro writers were incorrectly using the ${String} TLO in their macros. In order to prevent people from using this TLO incorrectly, thus slowing down their macros, and in an attempt to teach people to create their macros properly and efficiently from the get-go, the ${String} TLO was removed. Finding this error when running a macro generally means you have an old copy of a macro. Most macros have been updated to not use the ${String} TLO and therefore the first place you should be looking is **in the forum thread where you obtained your macro**. Fixing the error is easy when you know what to look for, but a bit more tricky in a complicated macro or if you're not a macro maker yourself. Here's a simple example that should help explain it. The code: /if (${String[${Me.Gem[1]}].NotEqual[Complete Healing]}) /memspell 1 \"Complete Healing\" What this does is check if the spell name of the spell in the first slot is \"Complete Healing\" *(the /if statement inside the brackets) . If it is not, then mem \"Complete Healing\" in slot 1 (the /memspell bit after the brackets)*. If we look in the manual, we see the following entry for the Gem reference type (part of the character reference type): {| border=\"1\" cellpadding=\"2\" cellspacing=\"0\" | spell Gem[ # ] |The name of the spell in this slot# |} The part we're interested here is the first word spell which tells you what the return type of Gem[#] will be. In this case it will return a type \"spell\". Equal or NotEqual can only be used to compare two strings (which is why people would convert the result of ${Me.Gem[1]} (\"spell\") to a string by using the ${String} TLO). While this may look fine logically, it's not the way MQ2 Data Types were designed to be used, and its more work for your PC to convert the result of the spell to a string. The way you're supposed to use the Data Types is to add more members to the end of the TLO until you get the result you're looking for. In the above example, if we look at the reference type for spell , we see the following: {| border=\"1\" cellpadding=\"2\" cellspacing=\"0\" | string Name |Name |} This shows us that we can use the .Name reference type to get a string value as a result, which can then be compared (using .Equal or .NotEqual). So now we have a piece of code like the following: ${Me.Gem[1].Name} That will output a string value which contains the name of the spell in gem slot 1. The code: ${Me.Gem[1].Name.NotEqual[Complete Healing]} Will give us a TRUE/FALSE result if you echo the above statement. So instead of wrapping ${Me.Gem[1]} in a ${String[]} TLO, we've removed the need to convert the \"spell\" result to a \"string\" result, by adding .Name to the end of the TLO, thereby making it return a string value. The above changes can be incorporated into the initial faulty line, like this: /if (${Me.Gem[1].Name.NotEqual[Complete Healing]}) /memspell 1 \"Complete Healing\" We've now removed the ${String[]} part, and still have a perfectly functioning (and faster) macro.","title":"Due to complete misuse of the String Top-Level Object, it has been removed."},{"location":"macros/general-help/#this-macro-i-downloaded-doesnt-do-x-fill-in-as-appropriate","text":"If you have followed all the advice in the General Macro Help section, and you are still having problems, you may want to post your problem to the macro thread itself. Follow the instructions in Help Forums but make sure to reply to the main macro post, and do not post a new thread in any of the other Help forums. If you have a feature request for your macro, post the request in the main macro thread and the macro writer may oblige you and add your requested feature. Or failing that, dive right in and modify the macro for your own use. *Remember, many new macros are born when someone modifies an existing macro to do something more/different, and then after enough changes, it becomes a new macro in its own right.*","title":"This macro I downloaded doesn't do X (fill in as appropriate)"},{"location":"macros/general-help/#macros-from-other-sites-not-working-properly","text":"If you download a macro from a site that doesn't update their macros, first search the MQ2 forums to see if there is a similar problem discussed in any threads. If that doesn't help, read the Help Forums. Post to the thread that relates to the macro in question if one exists before starting a new thread. Make sure to follow all the rules discussed before posting in the Help section of the Message Boards.","title":"Macros From Other Sites Not Working Properly"},{"location":"macros/general-help/#the-macro-does-not-report-if-its-running-or-not","text":"You may: add /echo macro_name_here is running to the Sub Main section of the actual .mac file Issue /echo ${Macro} to see the name of the macro currently running If that doesn't help, read the Help Forums and then post on the boards, making sure to follow all the rules.","title":"The Macro does not report if it's running or not"},{"location":"macros/getting-started/","text":"Getting Started \u00b6 Macros are essentially scripts that run certain MQ2 commands when certain conditions are met. As an example, say you want to create a macro that repeatedly casts a certain spell (eg. if you were trying to train up your Divination skill). The macro could do something like this: Cast \"True North\" spell Check mana and if not enough mana to cast the above spell, sit down and rest until mana is full. If you have enough mana to cast the spell, then loop back to the beginning. Macros can also be triggered off of things that happen in game. For example, you can create a macro that waits until someone says \"Heal Me\" in group, and then casts a heal on that person. A snippet is a portion of macro code that can be re-used in lots of different macros. One of the most popular snippets of code is the spell_routines snippet, which casts a spell reliably (ie. deals with fizzles, target being out of range, etc). This snippet can be included in many different macros so that all of them benefit from the increased functionality. Snippets help keep key pieces of code separate from the main macro, which makes it easier to update portions of big macros. Please Note: VIP macros and snippets are only available on the VIP forums. Finding Macros and Snippets \u00b6 You can find Macros in the following Forums: MQ2::Macros::Macro Depot v3.0 VIP::Macros (VIP only) Snippets can be found here: MQ2::Macros::Snippets VIP::Macros (VIP only). There's no specific VIP snippet forum, so all of them are just located in the VIP macro forum. Using Macros or Snippets that you have found \u00b6 Macros \u00b6 Using a macro is simply a matter of copying and pasting the code from the forum into a text file and placing the resulting file into the Release\\Macros directory. Macros with a .mac extension can be run without typing the \".mac\". Macros with other extensions require you to type the extension for the /macro command to work. In game, you can run the macro with the following command: /macro Sometimes macros have additional arguments that you can pass to them when starting. These need to be added to the end of the /macro line, like so: /macro1 2 3 The main macro post and/or the comments at the top of the macro should tell you how the macro needs to be run. Snippets \u00b6 Just like a macro, a snippet needs to be copied into a text file. Traditionally, snippets have a .inc file extension, but there are no restrictions as to what the file is called. To use a snippet, add a line like the following examples, to the top of your macro before the Main sub: #include spell_routines.inc #include wait4rez.inc List of popular Macros and Snippets \u00b6 List of non VIP Macros List of Non-VIP Snippets/Includes Advanced Fishing Advanced Fishing macro (adv_fishing.mac) Language Macro Necro Helper Necro Helper (necrohelper.mac) Rogue Helper Rogue Helper (RH.mac) Wait4rez.mac YAFM - Yet Another Forage Macro YAST - Yet Another Spell Trainer AdvPath.inc (Pathing and Movement Snippet) Defense.inc Include file for automating tank defensive measures NinjaLoot.inc (Looting Snippet) Ninjadvloot.inc Skill_Routines.inc (Skill Trainer) Spell_Routines.inc Wait4Rez.inc List of VIP Macros List of VIP Snippets/ Includes Advbot.mac - General purpose macro suitable for all classes Afcleric.mac - nils - nils - Cleric Macro AutoBot.mac - Very popular macro suitable for all classes AutoBot.mac-V4.28+ - Another flavor of Raid Druid Cleric.mac - nytemyst - Cleric macro written by nytemyst Autoenc.mac - Enchanter Macro dRShmbot.mac - Shaman Macro Enchanter.mac - nils - nils Enchanter Macro Mage.mac - Mage Macro ModBot - Another macro suitable for all classes MyCleric.mac - Cleric Macro Shaman.mac - nils - nils Shaman Macro shambot.mac - Shaman Macro Shaman Slow Macro SimpleBeastlord.mac - Beastlord Macro SimpleWizard.mac - Wizard Macro Ranger.mac - nils - nils Ranger Macro with Auto Pull Warrior.mac - nils - nils Warrior Macro Spell_Routines.inc Wait4Rez.inc QuickBeg.inc - Buff Begging snippet Puller.inc - Include that can use pre-defined paths to pull GemOpt.inc - Include that manages the usage and optimization of spell gems, as well as memorization Creating your own Macros \u00b6 Creating your own macro is a rewarding and fun experience, although there is a bit of a learning curve if you've never scripted before. See the Macro Reference for information on how to create your own macros. Troubleshooting \u00b6 See General Help for Help and Troubleshooting information.","title":"Getting Started"},{"location":"macros/getting-started/#getting-started","text":"Macros are essentially scripts that run certain MQ2 commands when certain conditions are met. As an example, say you want to create a macro that repeatedly casts a certain spell (eg. if you were trying to train up your Divination skill). The macro could do something like this: Cast \"True North\" spell Check mana and if not enough mana to cast the above spell, sit down and rest until mana is full. If you have enough mana to cast the spell, then loop back to the beginning. Macros can also be triggered off of things that happen in game. For example, you can create a macro that waits until someone says \"Heal Me\" in group, and then casts a heal on that person. A snippet is a portion of macro code that can be re-used in lots of different macros. One of the most popular snippets of code is the spell_routines snippet, which casts a spell reliably (ie. deals with fizzles, target being out of range, etc). This snippet can be included in many different macros so that all of them benefit from the increased functionality. Snippets help keep key pieces of code separate from the main macro, which makes it easier to update portions of big macros. Please Note: VIP macros and snippets are only available on the VIP forums.","title":"Getting Started"},{"location":"macros/getting-started/#finding-macros-and-snippets","text":"You can find Macros in the following Forums: MQ2::Macros::Macro Depot v3.0 VIP::Macros (VIP only) Snippets can be found here: MQ2::Macros::Snippets VIP::Macros (VIP only). There's no specific VIP snippet forum, so all of them are just located in the VIP macro forum.","title":"Finding Macros and Snippets"},{"location":"macros/getting-started/#using-macros-or-snippets-that-you-have-found","text":"","title":"Using Macros or Snippets that you have found"},{"location":"macros/getting-started/#macros","text":"Using a macro is simply a matter of copying and pasting the code from the forum into a text file and placing the resulting file into the Release\\Macros directory. Macros with a .mac extension can be run without typing the \".mac\". Macros with other extensions require you to type the extension for the /macro command to work. In game, you can run the macro with the following command: /macro Sometimes macros have additional arguments that you can pass to them when starting. These need to be added to the end of the /macro line, like so: /macro1 2 3 The main macro post and/or the comments at the top of the macro should tell you how the macro needs to be run.","title":"Macros"},{"location":"macros/getting-started/#snippets","text":"Just like a macro, a snippet needs to be copied into a text file. Traditionally, snippets have a .inc file extension, but there are no restrictions as to what the file is called. To use a snippet, add a line like the following examples, to the top of your macro before the Main sub: #include spell_routines.inc #include wait4rez.inc","title":"Snippets"},{"location":"macros/getting-started/#list-of-popular-macros-and-snippets","text":"List of non VIP Macros List of Non-VIP Snippets/Includes Advanced Fishing Advanced Fishing macro (adv_fishing.mac) Language Macro Necro Helper Necro Helper (necrohelper.mac) Rogue Helper Rogue Helper (RH.mac) Wait4rez.mac YAFM - Yet Another Forage Macro YAST - Yet Another Spell Trainer AdvPath.inc (Pathing and Movement Snippet) Defense.inc Include file for automating tank defensive measures NinjaLoot.inc (Looting Snippet) Ninjadvloot.inc Skill_Routines.inc (Skill Trainer) Spell_Routines.inc Wait4Rez.inc List of VIP Macros List of VIP Snippets/ Includes Advbot.mac - General purpose macro suitable for all classes Afcleric.mac - nils - nils - Cleric Macro AutoBot.mac - Very popular macro suitable for all classes AutoBot.mac-V4.28+ - Another flavor of Raid Druid Cleric.mac - nytemyst - Cleric macro written by nytemyst Autoenc.mac - Enchanter Macro dRShmbot.mac - Shaman Macro Enchanter.mac - nils - nils Enchanter Macro Mage.mac - Mage Macro ModBot - Another macro suitable for all classes MyCleric.mac - Cleric Macro Shaman.mac - nils - nils Shaman Macro shambot.mac - Shaman Macro Shaman Slow Macro SimpleBeastlord.mac - Beastlord Macro SimpleWizard.mac - Wizard Macro Ranger.mac - nils - nils Ranger Macro with Auto Pull Warrior.mac - nils - nils Warrior Macro Spell_Routines.inc Wait4Rez.inc QuickBeg.inc - Buff Begging snippet Puller.inc - Include that can use pre-defined paths to pull GemOpt.inc - Include that manages the usage and optimization of spell gems, as well as memorization","title":"List of popular Macros and Snippets"},{"location":"macros/getting-started/#creating-your-own-macros","text":"Creating your own macro is a rewarding and fun experience, although there is a bit of a learning curve if you've never scripted before. See the Macro Reference for information on how to create your own macros.","title":"Creating your own Macros"},{"location":"macros/getting-started/#troubleshooting","text":"See General Help for Help and Troubleshooting information.","title":"Troubleshooting"},{"location":"macros/mqdata/","text":"MQ2Data \u00b6 MQ2Data Types \u00b6 MQ2Data types are the means by which properties or methods ( Data Types ) of TLOs ( Top-Level Objects ) are accessed and used within macros. Variables in MQ2 are treated as Top-Level Objects . The basic syntax for accessing this MQ2Data is: ${TopLevelObject[index].Member[index].Member[index]} To access a property of a TLO you begin with the TLO type you want, then append successive type members or properties until you get the result you're looking for. The use of properties can become very complex (ie. extremely long), especially when using ${Math.Calc[]}. Note: You absolutely MUST pay attention to the return types of each member and object. Make sure to always compare identical Data Types when doing comparisons (eg. string to a string, or a numeric to a numeric). Using .Equal or .NotEqual to compare .Name to .ID will give errors. For example, \\({Target.Name.Equal[\\) ]} will not work. .Name returns a string, but .ID returns an int Also be sure to look at the To String of each type. Example of building an MQ2Data string: Suppose you want to display the distance to an NPC that you have targeted. First, check the page for TLO:Target . There you can see its forms listed as \" spawn Target \". This indicates that the Target TLO has access to all the spawn reference type members. Looking at the spawn reference type, you will find a list of the properties and members of spawn, to which Target has access to. Since you want to find the distance to the target, you would select one of the Distance members. For this example we will use: float Distance Distance from player in (x,y) So you append append .Distance to the TLO name to get: Target.Distance Once you have gotten to the information you want, you MUST enclose the entire string in ${ }, so the end result of the example would be: /echo Distance to target is: ${Target.Distance} This returns the distance to your target in the float format ###.## Note: All TLOs and reference data types have access to immediate types, but ensure you use the appropriate members of the immediate types with reference types or TLOs. For example, if you wanted to convert the above float value Distance, to an int value, you could append one of the members of the float immediate type, to make it: /echo Distance to target is: ${Target.Distance.Int} MQ2Data Members \u00b6 Members can also be describd as Properties or things that are property (owned by, contained by, etc) of objects of a type. For example, the Desk type of object might have a property called Screws . The Screws property itself might be represented like this: int Screws int is a type of object which means WHOLE NUMBER while Screws is the name of the object To demonstrate that an object named Screws is a member of the Desk type, we may also say: int Desk.Screws The return type is of the last member appended (ie. int). MQ2Data Inheritance \u00b6 Inheritance is a way to get less specific about what \"type\" of object you are looking at. For example, say you have two types, like desk and woodendesk . All wooden desks are desks, but not all desks are wooden desks. So now we have woodendesk ThisDesk Remember that \"desk\" we said has a member called Screws of type int . \"woodendesk\" IS a desk, so it automatically gets a member called Screws . Therefore, \"ThisDesk.Screws\", even though it is a wooden desk and not just \"desk\", is valid.","title":"Macro Data"},{"location":"macros/mqdata/#mq2data","text":"","title":"MQ2Data"},{"location":"macros/mqdata/#mq2data-types","text":"MQ2Data types are the means by which properties or methods ( Data Types ) of TLOs ( Top-Level Objects ) are accessed and used within macros. Variables in MQ2 are treated as Top-Level Objects . The basic syntax for accessing this MQ2Data is: ${TopLevelObject[index].Member[index].Member[index]} To access a property of a TLO you begin with the TLO type you want, then append successive type members or properties until you get the result you're looking for. The use of properties can become very complex (ie. extremely long), especially when using ${Math.Calc[]}. Note: You absolutely MUST pay attention to the return types of each member and object. Make sure to always compare identical Data Types when doing comparisons (eg. string to a string, or a numeric to a numeric). Using .Equal or .NotEqual to compare .Name to .ID will give errors. For example, \\({Target.Name.Equal[\\) ]} will not work. .Name returns a string, but .ID returns an int Also be sure to look at the To String of each type. Example of building an MQ2Data string: Suppose you want to display the distance to an NPC that you have targeted. First, check the page for TLO:Target . There you can see its forms listed as \" spawn Target \". This indicates that the Target TLO has access to all the spawn reference type members. Looking at the spawn reference type, you will find a list of the properties and members of spawn, to which Target has access to. Since you want to find the distance to the target, you would select one of the Distance members. For this example we will use: float Distance Distance from player in (x,y) So you append append .Distance to the TLO name to get: Target.Distance Once you have gotten to the information you want, you MUST enclose the entire string in ${ }, so the end result of the example would be: /echo Distance to target is: ${Target.Distance} This returns the distance to your target in the float format ###.## Note: All TLOs and reference data types have access to immediate types, but ensure you use the appropriate members of the immediate types with reference types or TLOs. For example, if you wanted to convert the above float value Distance, to an int value, you could append one of the members of the float immediate type, to make it: /echo Distance to target is: ${Target.Distance.Int}","title":"MQ2Data Types"},{"location":"macros/mqdata/#mq2data-members","text":"Members can also be describd as Properties or things that are property (owned by, contained by, etc) of objects of a type. For example, the Desk type of object might have a property called Screws . The Screws property itself might be represented like this: int Screws int is a type of object which means WHOLE NUMBER while Screws is the name of the object To demonstrate that an object named Screws is a member of the Desk type, we may also say: int Desk.Screws The return type is of the last member appended (ie. int).","title":"MQ2Data Members"},{"location":"macros/mqdata/#mq2data-inheritance","text":"Inheritance is a way to get less specific about what \"type\" of object you are looking at. For example, say you have two types, like desk and woodendesk . All wooden desks are desks, but not all desks are wooden desks. So now we have woodendesk ThisDesk Remember that \"desk\" we said has a member called Screws of type int . \"woodendesk\" IS a desk, so it automatically gets a member called Screws . Therefore, \"ThisDesk.Screws\", even though it is a wooden desk and not just \"desk\", is valid.","title":"MQ2Data Inheritance"},{"location":"macros/operators/","text":"Operators \u00b6 Numeric Operator Logical Operator + Addition == Equal to - Subtraction != Not equal to / Division >= Greater than \\ Integer Division >= Greater than or equal to * Multiplication <= Less than % mod <= Less than or equal to ^ Exponent && AND & Bitwise AND || OR | Bitwise OR ! NOT ~ Bitwise NOT ^^ XOR << Bitwise shift left >> Bitwise shift right","title":"Operators"},{"location":"macros/operators/#operators","text":"Numeric Operator Logical Operator + Addition == Equal to - Subtraction != Not equal to / Division >= Greater than \\ Integer Division >= Greater than or equal to * Multiplication <= Less than % mod <= Less than or equal to ^ Exponent && AND & Bitwise AND || OR | Bitwise OR ! NOT ~ Bitwise NOT ^^ XOR << Bitwise shift left >> Bitwise shift right","title":"Operators"},{"location":"macros/subroutines/","text":"Subroutines and Functions \u00b6 General \u00b6 We know that every macro must have a Main Subroutine (see Macro Reference ). However custom Subroutines can be created as a way of re-using common code, and as a way of separating code into logical blocks or routines. Subroutines start with a Sub line and end with a /return line. When it hits the /return line, it will pass control back to the calling Sub, at the point right after it was called. When a subroutine is called, it runs all of the commands within it immediately. Accessing your subroutine from the Main or other sub can be done with the /call command. Take the following example: Sub Main /call TestSub /echo This is the main sub /return Sub TestSub /echo This is a sub /return This will echo the following into the MQ2 Chat Window: This is a sub This is the main sub Subroutine Names \u00b6 Only the following characters are allowed in the name of a subroutine: [a-z][A-Z][0-9]_ Name lookup is case insensitive. Passed Parameters \u00b6 All macros accept parameters passed to them when called. The parameters can be defined in the Sub line, or if not defined, they are available through the Param0, Param1, Param2, ... ParamN local variables while in the sub. If you don't define the types of variables, they will default to strings. The following two examples will both output the same thing: Sub Echo1(One,Two) /echo ${One} ${Two} /return Sub Echo2 /echo ${Param0} ${Param1} /return Note Any parameters passed to the sub are automatically declared as local variables for that Sub (no need to /declare them). Return Values \u00b6 A return value for the sub can be added after the /return command, and can be accessed through ${Macro.Return} by the calling macro. Take this example: Sub Add(int A, int B) /declare Sum int local ${Math.Calc[${A}+${B}]} /return ${Sum} This will take the two passed variables (A and B), add them together and return the result. To use it, you'd need call it like so: Sub Main /call Add 10 12 /echo ${Macro.Return} /return This would echo 22 in the MQ2 Chat Window. Return values can be used in Subs as well as Event Subrouties called by /doevents . Functions \u00b6 Subroutines can also be evaluated as part of an expression. The subroutine Add from the above example could also be used like so: Sub Main /echo ${Add[10,12]} /return This would also echo 22 in the MQ2 Chat Window. A function without arguments must be called as ${SomeFunction[]} . If you evaluate as sub as part of expression, the sub has no delays, its just flushes through the sub so any advanced logic or processing is not a good use. Using subroutine as an inline function should be limited to simple repetive tasks, like math or writing things or something that is not macro critical for how time moves","title":"Subroutines"},{"location":"macros/subroutines/#subroutines-and-functions","text":"","title":"Subroutines and Functions"},{"location":"macros/subroutines/#general","text":"We know that every macro must have a Main Subroutine (see Macro Reference ). However custom Subroutines can be created as a way of re-using common code, and as a way of separating code into logical blocks or routines. Subroutines start with a Sub line and end with a /return line. When it hits the /return line, it will pass control back to the calling Sub, at the point right after it was called. When a subroutine is called, it runs all of the commands within it immediately. Accessing your subroutine from the Main or other sub can be done with the /call command. Take the following example: Sub Main /call TestSub /echo This is the main sub /return Sub TestSub /echo This is a sub /return This will echo the following into the MQ2 Chat Window: This is a sub This is the main sub","title":"General"},{"location":"macros/subroutines/#subroutine-names","text":"Only the following characters are allowed in the name of a subroutine: [a-z][A-Z][0-9]_ Name lookup is case insensitive.","title":"Subroutine Names"},{"location":"macros/subroutines/#passed-parameters","text":"All macros accept parameters passed to them when called. The parameters can be defined in the Sub line, or if not defined, they are available through the Param0, Param1, Param2, ... ParamN local variables while in the sub. If you don't define the types of variables, they will default to strings. The following two examples will both output the same thing: Sub Echo1(One,Two) /echo ${One} ${Two} /return Sub Echo2 /echo ${Param0} ${Param1} /return Note Any parameters passed to the sub are automatically declared as local variables for that Sub (no need to /declare them).","title":"Passed Parameters"},{"location":"macros/subroutines/#return-values","text":"A return value for the sub can be added after the /return command, and can be accessed through ${Macro.Return} by the calling macro. Take this example: Sub Add(int A, int B) /declare Sum int local ${Math.Calc[${A}+${B}]} /return ${Sum} This will take the two passed variables (A and B), add them together and return the result. To use it, you'd need call it like so: Sub Main /call Add 10 12 /echo ${Macro.Return} /return This would echo 22 in the MQ2 Chat Window. Return values can be used in Subs as well as Event Subrouties called by /doevents .","title":"Return Values"},{"location":"macros/subroutines/#functions","text":"Subroutines can also be evaluated as part of an expression. The subroutine Add from the above example could also be used like so: Sub Main /echo ${Add[10,12]} /return This would also echo 22 in the MQ2 Chat Window. A function without arguments must be called as ${SomeFunction[]} . If you evaluate as sub as part of expression, the sub has no delays, its just flushes through the sub so any advanced logic or processing is not a good use. Using subroutine as an inline function should be limited to simple repetive tasks, like math or writing things or something that is not macro critical for how time moves","title":"Functions"},{"location":"macros/variables/","text":"MQ2DataVars \u00b6 MQ2Data was designed so that accessing information could be done utilizing a uniform system. User variables are treated as MQ2Data Top-Level Objects . Variable Basics \u00b6 Default scope is local Default type is string Default value is nothing (empty string or 0) Scopes \u00b6 global Variables of global scope ALWAYS exist until they are deleted or MacroQuest ends outer Variables of outer scope exist while a macro is running local (default) Variables of local scope only exist while within a macro function or \"Sub\" Types \u00b6 Variables can be declared as any of the types in Data Types . The default type is string. Names \u00b6 Only the following characters are allowed in the name of a variable: [a-z] A-Z [0-9]_ Name lookup is case insensitive. Manipulating Variables \u00b6 Declaring \u00b6 Variables are declared (initially defined) in the following format: /declare varname | varname [ array extents ] [ type ] [ local | global | outer ] [ defaultvalue ] The parameters must be given in order, but any after varname may be skipped to use the default. Some Examples This creates an int variable named MyVar that exists while the macro is running: /declare MyVar int outer This creates a string variable named MyVar that exists within the Sub it was created in: /declare MyVar local This creates a timer named MyTime that is set to 3000 at creation and exists while the macro is running: /declare MyTimer timer outer 3000 Arrays \u00b6 To create an array, attach square brackets to the end of the variable name and place in it the number of elements per dimension. Array Examples This creates a single-dimension local array of int with 10 elements (1-10) all 0: /declare MyArray[10] int This creates a 2-dimensional 10x10 elements(1-10,1-10) int array of scope outer with all values of 5: /declare MyArray[10,10] int outer 5 This creates a 3-dimensional array with 4x5x6 elements (1-4,1-5, 1-6) with UNDEFINED-ARRAY-ELEMENT in each location: /declare MyArray[4,5,6] string outer UNDEFINED-ARRAY-ELEMENT There is no limit to the number of dimensions or the number of elements in each dimension but use your own good judgment. Note: You cannot make an array of timers. Deleting Variables \u00b6 /deletevar is used to delete variables. Examples: Deletes the variable varname. Using * global will delete all global variables: /deletevar varname [* global] Sets a variable directly to a new value. Keep in mind that the type itself may reject this value depending on what you give it. /varset varname [newvalue] To clear the value of the variable, you may omit the new value. Setting/Changing Variables \u00b6 /varset is used to set or change a variable. Examples: This concatenates (joins one to the other) \"stuff\" to the end a string variable: /varset MyString ${MyString}stuff This inserts stuff at the front of ${MyString}: /varset MyString stuff${MyString} This sets MyInt to 123: /varset MyInt 123 This sets MyTimer to 123 seconds: /varset MyTimer 123s This sets MyFloat to 1.23: /varset MyFloat 1.23 This sets array element n to 123: /varset MyIntArray[n] 123 Setting Variables to Results of Calculations \u00b6 You can use /varcalc to set a variable directly to the numeric result of a calculation. Keep in mind that the type itself may reject this value depending on what you give it. This will NOT work on strings! Examples: /varcalc MyInt 1+2*2+1 /varcalc MyInt 1+(2*2)+1 /varcalc NumBuffSlots ${Me.FreeBuffSlots}+${Me.CountBuffs} Setting Variables to the Result of MQ2Data Strings \u00b6 /vardata varname newMQ2Datavalue Sets a variable directly to the end result of a MQ2Data string. To use this, do NOT put ${} around the outer data to parse. This is most useful for when you want to keep the result of something instead of trying to make the variable accept a string with /varset. For Example: /vardata MyFloat Math.Calc[${Me.X}+${Me.Y}] Parsing \u00b6 It is important to note that parsing of variables is performed from the inside to the outside, so any ${} inside your MQ2Data statement gets evaluated before continuing. Example ${MyString${MyVar}} The parser first evaluates ${MyVar}. If MyVar's value is 1, this gives us ${MyString1}. ${MyString1} is then evaluated, giving the value of whatever MyString1 is. \\({\\) } will get the value of a MQ2Data query stored in MyString. This could be Me.Buff[1], or a variable name, or anything that is valid inside ${}. There is no limit to this recursion. \\({\\) { \\({\\) { \\({\\) { \\({\\) { \\({\\) }}}}}}}}} will evaluate inside to outside until there is nothing left to evaluate. This is also true for arrays: \\({MyArray[\\) ]} has no problems.","title":"Variables"},{"location":"macros/variables/#mq2datavars","text":"MQ2Data was designed so that accessing information could be done utilizing a uniform system. User variables are treated as MQ2Data Top-Level Objects .","title":"MQ2DataVars"},{"location":"macros/variables/#variable-basics","text":"Default scope is local Default type is string Default value is nothing (empty string or 0)","title":"Variable Basics"},{"location":"macros/variables/#scopes","text":"global Variables of global scope ALWAYS exist until they are deleted or MacroQuest ends outer Variables of outer scope exist while a macro is running local (default) Variables of local scope only exist while within a macro function or \"Sub\"","title":"Scopes"},{"location":"macros/variables/#types","text":"Variables can be declared as any of the types in Data Types . The default type is string.","title":"Types"},{"location":"macros/variables/#names","text":"Only the following characters are allowed in the name of a variable: [a-z] A-Z [0-9]_ Name lookup is case insensitive.","title":"Names"},{"location":"macros/variables/#manipulating-variables","text":"","title":"Manipulating Variables"},{"location":"macros/variables/#declaring","text":"Variables are declared (initially defined) in the following format: /declare varname | varname [ array extents ] [ type ] [ local | global | outer ] [ defaultvalue ] The parameters must be given in order, but any after varname may be skipped to use the default. Some Examples This creates an int variable named MyVar that exists while the macro is running: /declare MyVar int outer This creates a string variable named MyVar that exists within the Sub it was created in: /declare MyVar local This creates a timer named MyTime that is set to 3000 at creation and exists while the macro is running: /declare MyTimer timer outer 3000","title":"Declaring"},{"location":"macros/variables/#arrays","text":"To create an array, attach square brackets to the end of the variable name and place in it the number of elements per dimension. Array Examples This creates a single-dimension local array of int with 10 elements (1-10) all 0: /declare MyArray[10] int This creates a 2-dimensional 10x10 elements(1-10,1-10) int array of scope outer with all values of 5: /declare MyArray[10,10] int outer 5 This creates a 3-dimensional array with 4x5x6 elements (1-4,1-5, 1-6) with UNDEFINED-ARRAY-ELEMENT in each location: /declare MyArray[4,5,6] string outer UNDEFINED-ARRAY-ELEMENT There is no limit to the number of dimensions or the number of elements in each dimension but use your own good judgment. Note: You cannot make an array of timers.","title":"Arrays"},{"location":"macros/variables/#deleting-variables","text":"/deletevar is used to delete variables. Examples: Deletes the variable varname. Using * global will delete all global variables: /deletevar varname [* global] Sets a variable directly to a new value. Keep in mind that the type itself may reject this value depending on what you give it. /varset varname [newvalue] To clear the value of the variable, you may omit the new value.","title":"Deleting Variables"},{"location":"macros/variables/#settingchanging-variables","text":"/varset is used to set or change a variable. Examples: This concatenates (joins one to the other) \"stuff\" to the end a string variable: /varset MyString ${MyString}stuff This inserts stuff at the front of ${MyString}: /varset MyString stuff${MyString} This sets MyInt to 123: /varset MyInt 123 This sets MyTimer to 123 seconds: /varset MyTimer 123s This sets MyFloat to 1.23: /varset MyFloat 1.23 This sets array element n to 123: /varset MyIntArray[n] 123","title":"Setting/Changing Variables"},{"location":"macros/variables/#setting-variables-to-results-of-calculations","text":"You can use /varcalc to set a variable directly to the numeric result of a calculation. Keep in mind that the type itself may reject this value depending on what you give it. This will NOT work on strings! Examples: /varcalc MyInt 1+2*2+1 /varcalc MyInt 1+(2*2)+1 /varcalc NumBuffSlots ${Me.FreeBuffSlots}+${Me.CountBuffs}","title":"Setting Variables to Results of Calculations"},{"location":"macros/variables/#setting-variables-to-the-result-of-mq2data-strings","text":"/vardata varname newMQ2Datavalue Sets a variable directly to the end result of a MQ2Data string. To use this, do NOT put ${} around the outer data to parse. This is most useful for when you want to keep the result of something instead of trying to make the variable accept a string with /varset. For Example: /vardata MyFloat Math.Calc[${Me.X}+${Me.Y}]","title":"Setting Variables to the Result of MQ2Data Strings"},{"location":"macros/variables/#parsing","text":"It is important to note that parsing of variables is performed from the inside to the outside, so any ${} inside your MQ2Data statement gets evaluated before continuing. Example ${MyString${MyVar}} The parser first evaluates ${MyVar}. If MyVar's value is 1, this gives us ${MyString1}. ${MyString1} is then evaluated, giving the value of whatever MyString1 is. \\({\\) } will get the value of a MQ2Data query stored in MyString. This could be Me.Buff[1], or a variable name, or anything that is valid inside ${}. There is no limit to this recursion. \\({\\) { \\({\\) { \\({\\) { \\({\\) { \\({\\) }}}}}}}}} will evaluate inside to outside until there is nothing left to evaluate. This is also true for arrays: \\({MyArray[\\) ]} has no problems.","title":"Parsing"},{"location":"macros/gallery/","text":"Examples \u00b6 Chat-Sub \u00b6 This is an example of a cleric bot with both loop based decision and instanced based dissision. Created for and freely shared by Belgarion |Cleric Automation |Set target name /Varset Toon \"Character Name\" turbo Chat Tell Event Root \"#*#Root#*#\" Event HPBuff \"#*#HPBuff#*#\" Event Heal \"#*#Heal#*#\" Sub Main /declare Toon string Global /declare HPlower /declare HPhigher /declare CharID /declare MyID /declare Range /declare ManaWarn /varset HPlower 30 /Varset HPhigher 55 /Varset ManaWarn 50 /varset Range 50 /varset Toon \"Character Name\" /Target ${Toon} /Delay 10 /varset ToonID ${Target.ID} /Target myself /Delay 10 /Varset MyID ${Target.ID} body /if ( \\({Me.Casting.ID}\\) /goto :body /target \\({Toon} /If \\(\\) \\<\\) ) /Tell \\({Toon} LOM !!! \\({Me.PctMana} /If \\(\\) ==\\) ) /goto :Attack /if \\(${Me.PctHPs}\\<80\\) /goto :heal3 /if \\(${Target.PctHPs}\\<${HPlower}\\) /goto :heal1 /if ( \\({Target.PctHPs}\\<\\) ) /goto :heal2 /goto :body heal1 /face /Tell ${Toon} Quick Heal Incomming 8) /cast 2 /if (${Me.Standing} && !${Me.Mount.ID}) /sit /goto :body heal2 /face /tell ${Toon} Healing you up 8) /cast 9 /if (${Me.Standing} && !${Me.Mount.ID}) /sit /goto :body heal3 /target myself /cast 4 /if (${Me.Standing} && !${Me.Mount.ID}) /sit /goto :body Attack /If (${Me.PctMana}<${ManaWarn}) /Tell ${Toon} LOM !!! ${Me.PctMana} |/Doevents /delay 20 /assist ${Toon} /IF (${Target.ID}==${CharID}) /goto :Attack /If (${Target.ID}==${MyID}) /goto :Attack /If (${Target.Distance}>${Range}) /goto :Attack /keypress 9 /delay 60 /cast 7 /goto :body /Return Sub Event_Root /Tell ${Toon} Root Incomming /delay 10 /assist ${Toon} /delay 10 /Cast 6 /Return Sub Event_HPBuff /Tell ${Toon} HP Buff Incomming /delay 10 /Target ${Toon} /delay 10 /Cast 5 /Return Sub Event_Heal /Tell ${Toon} Heal on demand Incomming /delay 10 /Target ${Toon} /delay 10 /Cast 9 /Return The Problem is in the return to Sub main from the Sub Event on the /doevents call. To remedy replace /Return with /Return Main or /goto :body. Macro Errors \u00b6 With the recent changes for ${String[ an attempt was made to fix an existing statement. :CounterLoop /if (${String[${Ini[${FileName},${SectionName},${ArrayType}${nValues}]}].Equal[null]}) { /varcalc nValues ${nValues}-1 /goto :MakeArray } /varcalc nValues ${nValues}+1 /goto :CounterLoop Error: Unparsable in calculation 'E' adv_fishing.mac@145(ReadINI(FileName,SectionName,ArrayType)):/if ($Ini{$FileName},${SectionName},${ArrayType}${nValues}]}.Equal[null]}){adv_Fishing.mac@41(Main): /call ReadINI FishingLoot.ini \"$Zone.Name}\" Loot Failed to parse /if condition (NULL.Equal}), non-numeric encountered. Attempted fixes: assumption - remove string syntax and clear check for null value, /if (${Ini[${FileName},${SectionName},${ArrayType}${nValues}] > 0) this resulted in script working but all loot was dropped, the array was not populated from ini file. Solution: :CounterLoop /if (${Ini[${FileName},${SectionName},${ArrayType}${nValues},NULL].Equal[NULL]}) { /varcalc nValues ${nValues}-1 /goto :MakeArray } /varcalc nValues ${nValues}+1 /goto :CounterLoop This was able to make the macro work. I doubt this was the only solution but after some suggestions by others this block of code worked.","title":"Examples"},{"location":"macros/gallery/#examples","text":"","title":"Examples"},{"location":"macros/gallery/#chat-sub","text":"This is an example of a cleric bot with both loop based decision and instanced based dissision. Created for and freely shared by Belgarion |Cleric Automation |Set target name /Varset Toon \"Character Name\" turbo Chat Tell Event Root \"#*#Root#*#\" Event HPBuff \"#*#HPBuff#*#\" Event Heal \"#*#Heal#*#\" Sub Main /declare Toon string Global /declare HPlower /declare HPhigher /declare CharID /declare MyID /declare Range /declare ManaWarn /varset HPlower 30 /Varset HPhigher 55 /Varset ManaWarn 50 /varset Range 50 /varset Toon \"Character Name\" /Target ${Toon} /Delay 10 /varset ToonID ${Target.ID} /Target myself /Delay 10 /Varset MyID ${Target.ID} body /if ( \\({Me.Casting.ID}\\) /goto :body /target \\({Toon} /If \\(\\) \\<\\) ) /Tell \\({Toon} LOM !!! \\({Me.PctMana} /If \\(\\) ==\\) ) /goto :Attack /if \\(${Me.PctHPs}\\<80\\) /goto :heal3 /if \\(${Target.PctHPs}\\<${HPlower}\\) /goto :heal1 /if ( \\({Target.PctHPs}\\<\\) ) /goto :heal2 /goto :body heal1 /face /Tell ${Toon} Quick Heal Incomming 8) /cast 2 /if (${Me.Standing} && !${Me.Mount.ID}) /sit /goto :body heal2 /face /tell ${Toon} Healing you up 8) /cast 9 /if (${Me.Standing} && !${Me.Mount.ID}) /sit /goto :body heal3 /target myself /cast 4 /if (${Me.Standing} && !${Me.Mount.ID}) /sit /goto :body Attack /If (${Me.PctMana}<${ManaWarn}) /Tell ${Toon} LOM !!! ${Me.PctMana} |/Doevents /delay 20 /assist ${Toon} /IF (${Target.ID}==${CharID}) /goto :Attack /If (${Target.ID}==${MyID}) /goto :Attack /If (${Target.Distance}>${Range}) /goto :Attack /keypress 9 /delay 60 /cast 7 /goto :body /Return Sub Event_Root /Tell ${Toon} Root Incomming /delay 10 /assist ${Toon} /delay 10 /Cast 6 /Return Sub Event_HPBuff /Tell ${Toon} HP Buff Incomming /delay 10 /Target ${Toon} /delay 10 /Cast 5 /Return Sub Event_Heal /Tell ${Toon} Heal on demand Incomming /delay 10 /Target ${Toon} /delay 10 /Cast 9 /Return The Problem is in the return to Sub main from the Sub Event on the /doevents call. To remedy replace /Return with /Return Main or /goto :body.","title":"Chat-Sub"},{"location":"macros/gallery/#macro-errors","text":"With the recent changes for ${String[ an attempt was made to fix an existing statement. :CounterLoop /if (${String[${Ini[${FileName},${SectionName},${ArrayType}${nValues}]}].Equal[null]}) { /varcalc nValues ${nValues}-1 /goto :MakeArray } /varcalc nValues ${nValues}+1 /goto :CounterLoop Error: Unparsable in calculation 'E' adv_fishing.mac@145(ReadINI(FileName,SectionName,ArrayType)):/if ($Ini{$FileName},${SectionName},${ArrayType}${nValues}]}.Equal[null]}){adv_Fishing.mac@41(Main): /call ReadINI FishingLoot.ini \"$Zone.Name}\" Loot Failed to parse /if condition (NULL.Equal}), non-numeric encountered. Attempted fixes: assumption - remove string syntax and clear check for null value, /if (${Ini[${FileName},${SectionName},${ArrayType}${nValues}] > 0) this resulted in script working but all loot was dropped, the array was not populated from ini file. Solution: :CounterLoop /if (${Ini[${FileName},${SectionName},${ArrayType}${nValues},NULL].Equal[NULL]}) { /varcalc nValues ${nValues}-1 /goto :MakeArray } /varcalc nValues ${nValues}+1 /goto :CounterLoop This was able to make the macro work. I doubt this was the only solution but after some suggestions by others this block of code worked.","title":"Macro Errors"},{"location":"macros/gallery/aapurchase.inc/","tags":["macro"],"text":"AAPurchase.inc \u00b6 Description \u00b6 This macro will do the following: -Purchase AA's based on an array created from an ini file. -Allow you to specify how many levels of a skill to purchase. -Skip any AA that you are too low to purchase at your level. -Inform you that it was not able to purchase the skill yet and tell you how much you have and how much it costs. -Inform you of the skill it purchased and how much it cost. -Inform you that you were not able to purchase a skill yet and what level is requires. -Inform you when a skill you have defined is maxed, and will skip to the next in the list. -Inform you to define new AA's you when all current defined AA's are maxed. -Will detect if you do not have Fast AA Purchase on and cconfirm you want to purchase the AA. -Allows you to define your own ini section so that you can add shroud abilities to purchase without losing your characters list to purchase. -Warn you when you have 27+ AA's banked. -Switch you to 100% level XP when ou reach 30 banked AA's You can find the latest version of in this post. Usage \u00b6 -Create an AA_CharacterName.ini and place the following in it. [AAtoBuy] AACount=2 AA1=Combat Agility|2 AA2=Combat Stability|M ```` \\ -- Thanks Spudman for creating a dump macro that will dump all your non maxed AA's. You can get it here http://macroquest.org/phpBB2/viewtopic.php?p=139521#139521 -AACount would be the number of total AA's you are adding to the ini file. -AA1 would be the first AA you want to train. AA2 would be the second. Add more to your hearts content. There is no max limit. But it will take longer to run, especially if you do not clean up the list removing those you have already maxed. -The |2 would tell it to only purchase to ability level 2. For instance AC would purchase until it reached 2/28 and then skip to the next in the list. -The |M would tell it to purchase to the max ability level. -Add \"#include AAPurchase.inc\" into your macro. -Add \"/call AAInit\" or \"/call AAInit inisection\" into the initialization section of your macro. This should allow for autodetection of earned AA's and trigger the purchase sub. That is it. However, if you earn AA's while zoning the autodetection will not work. If that is the case: -Add \"/call AAPicker\" anywhere into your main loop. Macro Version \u00b6 If you want to run the include as a macro create the below: AAPurchase.mac \\#include AAPurchase.inc``` Sub Main(IniSection) /call AAInit ${IniSection} `/call AAPicker /return ```` \\ and then just run '/mac AAPurcahse' or optionally '/mac AAPurcahse inisection' to load a shroud's abilities that you defined in the 'inisection' you entered. Advanced \u00b6 Change this to change which channel you send your notifications to. Ex: /bc , /echo , /mqlog #define def_channel_ /echo ```` \\ Also from fearless, if you want to know who is training what when using /mqlog use this #define def_channel_ \"/mqlog $[Me.Name}\" ``","title":"AAPurchase.inc"},{"location":"macros/gallery/aapurchase.inc/#aapurchaseinc","text":"","title":"AAPurchase.inc"},{"location":"macros/gallery/aapurchase.inc/#description","text":"This macro will do the following: -Purchase AA's based on an array created from an ini file. -Allow you to specify how many levels of a skill to purchase. -Skip any AA that you are too low to purchase at your level. -Inform you that it was not able to purchase the skill yet and tell you how much you have and how much it costs. -Inform you of the skill it purchased and how much it cost. -Inform you that you were not able to purchase a skill yet and what level is requires. -Inform you when a skill you have defined is maxed, and will skip to the next in the list. -Inform you to define new AA's you when all current defined AA's are maxed. -Will detect if you do not have Fast AA Purchase on and cconfirm you want to purchase the AA. -Allows you to define your own ini section so that you can add shroud abilities to purchase without losing your characters list to purchase. -Warn you when you have 27+ AA's banked. -Switch you to 100% level XP when ou reach 30 banked AA's You can find the latest version of in this post.","title":"Description"},{"location":"macros/gallery/aapurchase.inc/#usage","text":"-Create an AA_CharacterName.ini and place the following in it. [AAtoBuy] AACount=2 AA1=Combat Agility|2 AA2=Combat Stability|M ```` \\ -- Thanks Spudman for creating a dump macro that will dump all your non maxed AA's. You can get it here http://macroquest.org/phpBB2/viewtopic.php?p=139521#139521 -AACount would be the number of total AA's you are adding to the ini file. -AA1 would be the first AA you want to train. AA2 would be the second. Add more to your hearts content. There is no max limit. But it will take longer to run, especially if you do not clean up the list removing those you have already maxed. -The |2 would tell it to only purchase to ability level 2. For instance AC would purchase until it reached 2/28 and then skip to the next in the list. -The |M would tell it to purchase to the max ability level. -Add \"#include AAPurchase.inc\" into your macro. -Add \"/call AAInit\" or \"/call AAInit inisection\" into the initialization section of your macro. This should allow for autodetection of earned AA's and trigger the purchase sub. That is it. However, if you earn AA's while zoning the autodetection will not work. If that is the case: -Add \"/call AAPicker\" anywhere into your main loop.","title":"Usage"},{"location":"macros/gallery/aapurchase.inc/#macro-version","text":"If you want to run the include as a macro create the below: AAPurchase.mac \\#include AAPurchase.inc``` Sub Main(IniSection) /call AAInit ${IniSection} `/call AAPicker /return ```` \\ and then just run '/mac AAPurcahse' or optionally '/mac AAPurcahse inisection' to load a shroud's abilities that you defined in the 'inisection' you entered.","title":"Macro Version"},{"location":"macros/gallery/aapurchase.inc/#advanced","text":"Change this to change which channel you send your notifications to. Ex: /bc , /echo , /mqlog #define def_channel_ /echo ```` \\ Also from fearless, if you want to know who is training what when using /mqlog use this #define def_channel_ \"/mqlog $[Me.Name}\" ``","title":"Advanced"},{"location":"macros/gallery/advanced-fishing/","tags":["macro"],"text":"Advanced Fishing \u00b6 The Advanced Fishing macro by Panther can be obtained here . Requirements \u00b6 Fisherman's Companion You can obtain the Fisherman's Companion by giving 2 Nightmare Cichlid Bones and 2 Vallorian Discus Bones (both usually available in the bazaar) to Ramos Jerwan in Plane of Knowledge. Features \u00b6 FishingLoot.ini file for zone specific fishing Uses Fisherman's Companion to autocast Brell's Fishin' Pole Statistics on your fishing progress GM Watch and auto macro exit","title":"Advanced Fishing"},{"location":"macros/gallery/advanced-fishing/#advanced-fishing","text":"The Advanced Fishing macro by Panther can be obtained here .","title":"Advanced Fishing"},{"location":"macros/gallery/advanced-fishing/#requirements","text":"Fisherman's Companion You can obtain the Fisherman's Companion by giving 2 Nightmare Cichlid Bones and 2 Vallorian Discus Bones (both usually available in the bazaar) to Ramos Jerwan in Plane of Knowledge.","title":"Requirements"},{"location":"macros/gallery/advanced-fishing/#features","text":"FishingLoot.ini file for zone specific fishing Uses Fisherman's Companion to autocast Brell's Fishin' Pole Statistics on your fishing progress GM Watch and auto macro exit","title":"Features"},{"location":"macros/gallery/afcleric.mac-nils/","tags":["macro"],"text":"Afcleric.mac - nils \u00b6 forum link \u00b6 AFCleric.mac nils downloads \u00b6 AFCleric.mac - nils Required Plugins \u00b6 MQ2Debuffs MQ2EQBC MQ2Exchange MQ2MoveUtils Required Include Files \u00b6 QuickBeg.inc Spell_Routines.inc Wait4Rez.inc Ninjadvloot.inc included with zip AFClericCCH.inc included with zip Previous Versions \u00b6 Original AFCleric by Fantum409 AFCleric by DigitalMocking Jan.2005 Updates \u00b6 Updated: Added aura support for a single aura. Added hammer routine. Apr.19/07 Spell section in the ini file now requires Gem#, item or alt for all gems except YaulpSpellGem and NukeOneGem, will change them in the next update. You will need to make the change to your ini file. Added looting, not tested but should work. Ini entry is useAutoLoot=TRUE/FALSE. Alias is /autoloot. I will put a link to the *Ninjadvloot thread later for those not familiar with it and it's ini file. Added anchor support, resets automatically when you get the followstop command. /anchor Added 3 commands to the chat event, gheal, hot me and patch me, if you had them in the buff section you should take them out now. Removed the Resplendent Cure code, just use the CureStuff section in the ini now and you will need to be running MQ2Debuffs plugin. I set up the sample ini's CureStuff section to work a little better. Updated for Stacks change and updated for the newest QuickBeg Cleaned up a lot of /if statements, lots left to do yet. Most likely other changes that I don't remember and this version is not fully tested so let me know if I screwed something up. May 21/07 Not sure what all I have done to this since it's last update but here is what I remember. UseWard should now work with named mobs, it should activate the Fervent Benediction and higher AA's. You should stand up after being hit with an FD spell. I changed the DoBuff routine so hopefully if asked for a group spell by more than one it should only cast it once. It is on a 2 minute timer before the next check for that spell, also resets if a different group spell is requested in that 2 minutes. It is not a great system but has helped so far by not looking as obvious by casting a group spell on the same group 2 or 3 times in a row. I changed the follow routine to use uw if you are underwater. If you zone into a water zone while following it will switch automatically but if following on land and then into water you will need to re-issue the follow command I was experimenting with Promised Renewal, the routine is still there and is hard coded to use gem8. I am not sure yet if I should just use the spell in place of complete healing or change my routine so it works better with it. Some new commands are: pop infusion will activate Infusion of the Faithful AA clickzone will click the nearest zone door book or whatever sayzone will target senders target and say the zone text example: /bc sayzone wish to go will target senders target and say wish to go (bugged, tank's target is temporary fix) Commands \u00b6 /anchor /echo Setting Anchor /autoloot /echo ToggleVar Auto Looting,useAutoLoot,Settings,useAutoLoot, /automok /echo ToggleVar Auto MoK,UseAutoMok,Settings,UseAutoMok, /automount /echo Toggling AutoMount /autostun /echo ToggleVar Auto Stun,UseAutoStun,Settings,UseAutoStun, /buffbeg /echo ToggleVar Buff Begging,BegForBuffs,Settings,BegForBuffs, /buffradius /echo ToggleString Setting NPC Buff Radius,NPCBuffRadius,Settings,NPCBuffRadius, /casterhot /echo ToggleString Setting Caster Hot Pct,CasterHotPoint,Heal_Percentages,CasterHotPoint, /casterpatch /echo ToggleString Setting Caster Patch Pct,CasterPatchPoint,Heal_Percentages,CasterPatchPoint, /dacast /echo ToggleString Setting DA Cast Point,DaCastPoint,Heal_Percentages,DaCastPoint, /defaultmt /echo ToggleString Setting Default MT,DefaultMT,Settings,DefaultMT, /doraidbuffs /echo ToggleVar Setting Raid Buffing,DoRaidBuffs,RaidBuffs,DoRaidBuffs, /divarb /echo ToggleString Setting Divine Arbitration Cast Point,DivArbPoint,Heal_Percentages,DivArbPoint, /dobufftells /echo ToggleVar Do Buff Tells,DoBuffTells,DoBuffStuff,DoBuffTells, /docures /echo ToggleVar Auto Curing,DoCures,CureStuff,DoCures, /donukes /echo ToggleVar Using Nukes,DoNuke,NukeStuff,DoNuke, /meleemode /echo ToggleVar Melee Mode,MeleeMode,Settings,MeleeMode, /necshmpatch /echo ToggleString Setting Nec Shm Patch Pct,NecShmPatchPoint,Heal_Percentages,NecShmPatchPoint, /nukeat /echo ToggleString Setting Nuke At,NukeAt,NukeStuff,NukeAt, /nukedelay /echo ToggleString Setting Nuke Delay,NukeDelay,NukeStuff,NukeDelay, /pethealpct /echo ToggleString Setting Pet Heal Pct,PetHealPoint,Pet_Settings,PetHealPoint, /useaura /echo ToggleVar Setting use aura,UseAura,SelfBuffStuff,UseAura, /useda /echo ToggleVar Setting use DA,UseDA,DAStuff,UseDA, /usehammer /echo ToggleVar Using Hammer,UseHammer,Settings,UseHammer, /usehot /echo ToggleVar Using HoT,UseHot,Settings,UseHot, /userenewal /echo ToggleVar Use Promised Renewal,UseRenewal,Settings,UseRenewal /useyaulp /echo Toggling UseYaulp /useward /echo ToggleVar Use Ward,UseWard,Settings,UseWard /secondtank /echo ToggleString Setting Second Tank,SecondTank,Settings,SecondTank, /selfhealpct /echo ToggleString Setting Self Heal Pct,SelfHealPoint,Heal_Percentages,SelfHealPoint, /tankhealpct /echo ToggleString Setting Tank Heal Pct,TankHealPoint,Heal_Percentages,TankHealPoint, /toggletank /echo Setting new main tank to: /turnundead /echo ToggleVar Setting Turn Undead,TurnUndead,Settings,TurnUndead, /healspell /echo ToggleString Setting Heal Spell,HealSpell,Spells,HealSpell, undeadskin - cast Sunskin gheal - cast groupheal hot me - cast hotspell patch me - cast patchheal invisoff - click off inviso buff pop infusion - cast infusion AA foeoff - click off Flight of Eeagles follow - start following toon that issued the command - toon has to be on master list follow stop - stop following a toon clickzone - click nearest zoneline (book, zonedoor, etc.) - has to be within distance of 12 sayzone - will target requestor's target and echo the following text sent with the command - currently uses tank's target (bugged, tank's target is temporary fix) mana check - report mana percent in channel slowcamp - sits and camps to desktop (fails if toon is on a mount) rezz me - will target and attempt to rezz the requestor's corpse, will use epic if available leaveraid - will disband you from a raid FAQ \u00b6 You can do /bc wod sym spell haste and it should cast them all in that order, usefull after rezzes and to do /bc mgb groupsym, can also be used this way to give more than one toon a command at the same time /bc focus symbolme p10 wod sayzone and clickzone this works nice now although I have not tried clickzone on every type of zone there is I did try a lot and it never failed. You will find a new entry in your ini files usually in the first section called ZoneDelay, this delay is for sayzone so that your whole grope doesn't /say all at the same time. You will want the person who initializes the command to have the longest delay, here is how I have mine set up Warrior 1 Cleric 10 Shaman 20 Druid 30 Enchanter 40 Ranger 50 So the warrior would say the text first, 1 second later the cleric would and every second after that another would until 5 seconds after giving the command my ranger would finaly say it. Nuking is automatic and the frequency depends on the NukeDelay that you set in the ini (can be changed on the fly with /nukedelay #). Look for the NukeStuff section in your ini. Also if you look at Sub Nuke there is a line that will return out of that sub when your tanks hp's are below 80% and as stated earlier in this thread you can lower that if you feel comfortable nuking at less than that The conditions for the macro to give the /sit command are: AutoSit has to be true, your mana % has to be less than what you have SitAt set to, your not on a mount, your not casting, you don't have your yaulp buff on, you don't have your divine avatar buff on, you are standing, the nearest NPC is farther away than you have DistanceToSit set at, your hit points are greater than 80% and you are not following. If any one of those conditions are not met the macro will not do the /sit. The only other times /sit is used is right after a rezz and that should keep you sitting until you have 500 mana. The other time is if you give the slowcamp command. The Moked event works perfectly. It does have some strict conditions, first you need to have the spell memmed and it has to be ready to cast, second your tank needs to be 90% or higher hps and third the mob has to be above 75% not to mention the macro has to be free to run the event and not in another function like healing someone in the group or whatever and your cleric needs to be able to see the DS spam. If all those conditions are true it will work every time. If you want to change the conditions edit Sub Event_DamageShield but it has worked for me the way it is for almost 2 years. The mob you are fighting has to have a DS in order to for Sub Event_DamageShield to be triggered, here are the 3 trigger lines event DamageShield \"#1# was burned#*#\" event DamageShield \"#1# was pierced by#*#\" event DamageShield \"#1# was tormented#*#\" can I use | to set up multiple tanks to watch? It will only watch 1 tank the way it is set up and the tank doesn't need to be in your group. It would be able to watch 1 tank out of it's group and would also try to heal any in it's group in modes 2 and 3 and if they are a war, shd or pal it would try to use HealSpell first. The only other way would be for the other tanks to ask for a heal when they needed it, you could do that as a buff request or add another entry to the chat event for HealSpell but it may not be that reliable subroutine MedTime gets called if your mana is 98% or less","title":"Afcleric.mac - nils"},{"location":"macros/gallery/afcleric.mac-nils/#afclericmac-nils","text":"","title":"Afcleric.mac - nils"},{"location":"macros/gallery/afcleric.mac-nils/#forum-link","text":"AFCleric.mac","title":"forum link"},{"location":"macros/gallery/afcleric.mac-nils/#nils-downloads","text":"AFCleric.mac - nils","title":"nils downloads"},{"location":"macros/gallery/afcleric.mac-nils/#required-plugins","text":"MQ2Debuffs MQ2EQBC MQ2Exchange MQ2MoveUtils","title":"Required Plugins"},{"location":"macros/gallery/afcleric.mac-nils/#required-include-files","text":"QuickBeg.inc Spell_Routines.inc Wait4Rez.inc Ninjadvloot.inc included with zip AFClericCCH.inc included with zip","title":"Required Include Files"},{"location":"macros/gallery/afcleric.mac-nils/#previous-versions","text":"Original AFCleric by Fantum409 AFCleric by DigitalMocking Jan.2005","title":"Previous Versions"},{"location":"macros/gallery/afcleric.mac-nils/#updates","text":"Updated: Added aura support for a single aura. Added hammer routine. Apr.19/07 Spell section in the ini file now requires Gem#, item or alt for all gems except YaulpSpellGem and NukeOneGem, will change them in the next update. You will need to make the change to your ini file. Added looting, not tested but should work. Ini entry is useAutoLoot=TRUE/FALSE. Alias is /autoloot. I will put a link to the *Ninjadvloot thread later for those not familiar with it and it's ini file. Added anchor support, resets automatically when you get the followstop command. /anchor Added 3 commands to the chat event, gheal, hot me and patch me, if you had them in the buff section you should take them out now. Removed the Resplendent Cure code, just use the CureStuff section in the ini now and you will need to be running MQ2Debuffs plugin. I set up the sample ini's CureStuff section to work a little better. Updated for Stacks change and updated for the newest QuickBeg Cleaned up a lot of /if statements, lots left to do yet. Most likely other changes that I don't remember and this version is not fully tested so let me know if I screwed something up. May 21/07 Not sure what all I have done to this since it's last update but here is what I remember. UseWard should now work with named mobs, it should activate the Fervent Benediction and higher AA's. You should stand up after being hit with an FD spell. I changed the DoBuff routine so hopefully if asked for a group spell by more than one it should only cast it once. It is on a 2 minute timer before the next check for that spell, also resets if a different group spell is requested in that 2 minutes. It is not a great system but has helped so far by not looking as obvious by casting a group spell on the same group 2 or 3 times in a row. I changed the follow routine to use uw if you are underwater. If you zone into a water zone while following it will switch automatically but if following on land and then into water you will need to re-issue the follow command I was experimenting with Promised Renewal, the routine is still there and is hard coded to use gem8. I am not sure yet if I should just use the spell in place of complete healing or change my routine so it works better with it. Some new commands are: pop infusion will activate Infusion of the Faithful AA clickzone will click the nearest zone door book or whatever sayzone will target senders target and say the zone text example: /bc sayzone wish to go will target senders target and say wish to go (bugged, tank's target is temporary fix)","title":"Updates"},{"location":"macros/gallery/afcleric.mac-nils/#commands","text":"/anchor /echo Setting Anchor /autoloot /echo ToggleVar Auto Looting,useAutoLoot,Settings,useAutoLoot, /automok /echo ToggleVar Auto MoK,UseAutoMok,Settings,UseAutoMok, /automount /echo Toggling AutoMount /autostun /echo ToggleVar Auto Stun,UseAutoStun,Settings,UseAutoStun, /buffbeg /echo ToggleVar Buff Begging,BegForBuffs,Settings,BegForBuffs, /buffradius /echo ToggleString Setting NPC Buff Radius,NPCBuffRadius,Settings,NPCBuffRadius, /casterhot /echo ToggleString Setting Caster Hot Pct,CasterHotPoint,Heal_Percentages,CasterHotPoint, /casterpatch /echo ToggleString Setting Caster Patch Pct,CasterPatchPoint,Heal_Percentages,CasterPatchPoint, /dacast /echo ToggleString Setting DA Cast Point,DaCastPoint,Heal_Percentages,DaCastPoint, /defaultmt /echo ToggleString Setting Default MT,DefaultMT,Settings,DefaultMT, /doraidbuffs /echo ToggleVar Setting Raid Buffing,DoRaidBuffs,RaidBuffs,DoRaidBuffs, /divarb /echo ToggleString Setting Divine Arbitration Cast Point,DivArbPoint,Heal_Percentages,DivArbPoint, /dobufftells /echo ToggleVar Do Buff Tells,DoBuffTells,DoBuffStuff,DoBuffTells, /docures /echo ToggleVar Auto Curing,DoCures,CureStuff,DoCures, /donukes /echo ToggleVar Using Nukes,DoNuke,NukeStuff,DoNuke, /meleemode /echo ToggleVar Melee Mode,MeleeMode,Settings,MeleeMode, /necshmpatch /echo ToggleString Setting Nec Shm Patch Pct,NecShmPatchPoint,Heal_Percentages,NecShmPatchPoint, /nukeat /echo ToggleString Setting Nuke At,NukeAt,NukeStuff,NukeAt, /nukedelay /echo ToggleString Setting Nuke Delay,NukeDelay,NukeStuff,NukeDelay, /pethealpct /echo ToggleString Setting Pet Heal Pct,PetHealPoint,Pet_Settings,PetHealPoint, /useaura /echo ToggleVar Setting use aura,UseAura,SelfBuffStuff,UseAura, /useda /echo ToggleVar Setting use DA,UseDA,DAStuff,UseDA, /usehammer /echo ToggleVar Using Hammer,UseHammer,Settings,UseHammer, /usehot /echo ToggleVar Using HoT,UseHot,Settings,UseHot, /userenewal /echo ToggleVar Use Promised Renewal,UseRenewal,Settings,UseRenewal /useyaulp /echo Toggling UseYaulp /useward /echo ToggleVar Use Ward,UseWard,Settings,UseWard /secondtank /echo ToggleString Setting Second Tank,SecondTank,Settings,SecondTank, /selfhealpct /echo ToggleString Setting Self Heal Pct,SelfHealPoint,Heal_Percentages,SelfHealPoint, /tankhealpct /echo ToggleString Setting Tank Heal Pct,TankHealPoint,Heal_Percentages,TankHealPoint, /toggletank /echo Setting new main tank to: /turnundead /echo ToggleVar Setting Turn Undead,TurnUndead,Settings,TurnUndead, /healspell /echo ToggleString Setting Heal Spell,HealSpell,Spells,HealSpell, undeadskin - cast Sunskin gheal - cast groupheal hot me - cast hotspell patch me - cast patchheal invisoff - click off inviso buff pop infusion - cast infusion AA foeoff - click off Flight of Eeagles follow - start following toon that issued the command - toon has to be on master list follow stop - stop following a toon clickzone - click nearest zoneline (book, zonedoor, etc.) - has to be within distance of 12 sayzone - will target requestor's target and echo the following text sent with the command - currently uses tank's target (bugged, tank's target is temporary fix) mana check - report mana percent in channel slowcamp - sits and camps to desktop (fails if toon is on a mount) rezz me - will target and attempt to rezz the requestor's corpse, will use epic if available leaveraid - will disband you from a raid","title":"Commands"},{"location":"macros/gallery/afcleric.mac-nils/#faq","text":"You can do /bc wod sym spell haste and it should cast them all in that order, usefull after rezzes and to do /bc mgb groupsym, can also be used this way to give more than one toon a command at the same time /bc focus symbolme p10 wod sayzone and clickzone this works nice now although I have not tried clickzone on every type of zone there is I did try a lot and it never failed. You will find a new entry in your ini files usually in the first section called ZoneDelay, this delay is for sayzone so that your whole grope doesn't /say all at the same time. You will want the person who initializes the command to have the longest delay, here is how I have mine set up Warrior 1 Cleric 10 Shaman 20 Druid 30 Enchanter 40 Ranger 50 So the warrior would say the text first, 1 second later the cleric would and every second after that another would until 5 seconds after giving the command my ranger would finaly say it. Nuking is automatic and the frequency depends on the NukeDelay that you set in the ini (can be changed on the fly with /nukedelay #). Look for the NukeStuff section in your ini. Also if you look at Sub Nuke there is a line that will return out of that sub when your tanks hp's are below 80% and as stated earlier in this thread you can lower that if you feel comfortable nuking at less than that The conditions for the macro to give the /sit command are: AutoSit has to be true, your mana % has to be less than what you have SitAt set to, your not on a mount, your not casting, you don't have your yaulp buff on, you don't have your divine avatar buff on, you are standing, the nearest NPC is farther away than you have DistanceToSit set at, your hit points are greater than 80% and you are not following. If any one of those conditions are not met the macro will not do the /sit. The only other times /sit is used is right after a rezz and that should keep you sitting until you have 500 mana. The other time is if you give the slowcamp command. The Moked event works perfectly. It does have some strict conditions, first you need to have the spell memmed and it has to be ready to cast, second your tank needs to be 90% or higher hps and third the mob has to be above 75% not to mention the macro has to be free to run the event and not in another function like healing someone in the group or whatever and your cleric needs to be able to see the DS spam. If all those conditions are true it will work every time. If you want to change the conditions edit Sub Event_DamageShield but it has worked for me the way it is for almost 2 years. The mob you are fighting has to have a DS in order to for Sub Event_DamageShield to be triggered, here are the 3 trigger lines event DamageShield \"#1# was burned#*#\" event DamageShield \"#1# was pierced by#*#\" event DamageShield \"#1# was tormented#*#\" can I use | to set up multiple tanks to watch? It will only watch 1 tank the way it is set up and the tank doesn't need to be in your group. It would be able to watch 1 tank out of it's group and would also try to heal any in it's group in modes 2 and 3 and if they are a war, shd or pal it would try to use HealSpell first. The only other way would be for the other tanks to ask for a heal when they needed it, you could do that as a buff request or add another entry to the chat event for HealSpell but it may not be that reliable subroutine MedTime gets called if your mana is 98% or less","title":"FAQ"},{"location":"macros/gallery/autobot.mac-v4.28%2B/","tags":["macro"],"text":"AutoBot.mac-V4.28+ \u00b6 Description \u00b6 AutoBot.mac by A_Druid_00 is a versatile macro for automating a lot of tasks for your character in group, raid and solo situations. This wiki includes many updates/changes done by Gomer,gSe7eN,trevyn,Warlock45,and others. Requirements \u00b6 AutoBot.mac does not run on a default MQ compilation, it has a few extra dependencies. Some of the below items are plugins and need to be compiled, just like MacroQuest2. Please read the appropriate documentation for each plugin. The Include files should be added to the same directory that AutoBot will be run from. Plugins: MQ2MoveUtils by Outlander This is so the macro knows about stick, /makecamp, and /moveto. Check out the wiki . MQ2Exchange by Wassup This is so that item swapping, casting, and swapping back will work MQ2Debuffs by pinkfloydx33 This is so the macro can keep track of your debuff counters. MQ2Melee by s0rcier So as to properly configure melee/ranged combat and various options thereof, check out the wiki . *Optional: MQ2AutoLogin to change to your trader Includes Files: Wait4Rez.inc Handles pre-rez situations. spell_routines.inc Handles spell casting, from gems, items and AAs. QuickBeg2.inc Handles buff begging. Ninjadvloot.inc Handles looting. Defense.inc Handles automatic engagement of defensive disc/aa/items for tanks. AAPurchase.incHandles automatic purchase of AA based on INI entries. Getting Started \u00b6 Pointers for AutoBot stuffs. (We should make a multi-boxing wiki sometime, we could link it here...) In addition to the documentation for the various plugins used directly by AutoBot (see links in Requirements ) The following is useful info on other plugins you can use to enhance your AutoBot experience. MQ2Clip by Vaft, Cr4zyb4rd, et al. Manages the clip plane of backgrounded sessions. Your CPU will thank you. MQ2FPS by Lax. Helps manage framerates of EQ sessions, greatly helps multi-botting... Check out the wiki MQ2Eqbc by Omnictrl Is an alternative way to communicate with your bots. Configure your EQBC.ini with the following: [Last Connect] Server=192.168.1.101 (This must be edited to match the ip and port you have the server listening to) Port=2112 [Settings] AutoConnect=1 AllowControl=1 You will also need to change the channel setting in your AutoBot.ini from \"i say\" to \"bc\" to use it for bot to bot communication. Don't forget that if you are getting identify spam that you check loot.ini and QB2Settings.ini for any i say or i msg commands. QB2Settings.ini defaults to i msg and needs to be changed if using EQBC. Recommend MQ2NetBots , MQ2NetStat , and MQ2NetHeal to go along with this. More information available on Page 59 of the original AutoBot thread. Using AutoBot.mac \u00b6 1) The main macro file, 'yyy.mac' (called 'RaidDruid.mac' in the .zip file) can be named to 'AutoBot.mac' or 'AnythingYouWant.mac'. 2) To start the macro in EverQuest with MQ2 running; type '/macro yyy.mac Note: The first time you run the macro, it will generate an ini file called RD_xxx.ini 3) Configure your RD_xxx.ini, where 'xxx' is your character name. 3a) Peruse through RDCommon.ini and add in any mobs you might want to have certains spells ignore. I tend to put Guild Lobby and PoK NPCs as immune to mez, makes life simpler when walking around and I forget to pause my bots. You will also find the MasterList here. 4)Restart Autobot after configuring RD_xxx.ini. 5) Enjoy the show. Bot Commands \u00b6 There are a few non-alias (no / required) commands available to Autobot. These commands will cause the bots to respond to a few general status/movement commands without the obvious /alias, for easy use in a group setting. Bots will only respond to commands sent by someone in the MasterList buffqueue This command has your bot respond in your ChatChannel with the # of buffs left in his \"buff queue\". Handy for deciding whether to continue pulling/crawling after a group wipe. Keep in mind that some longer cast spells such as Night's Dark Terror for enchanters have extremely long recast times, and so can sit in the queue for a while. break This will make your bots visible (they will click off all invisibility or IVU buffs). camp here This command will cause any other toons using Autobot to utilize MQ2Moveutil's \"make camp\" function, using he location coordinates you are standing on when issuing the command. follow This command will have your bots /stick to you. They will sit to med if needed and within your LeashLength. They will also break off to attack if /domelee is turned on and the MA is fighting something. They will also service buff requests and do debuffing if applicable and they are not moving. guard here Those toons you have the Guard function turned on will utilize MQ2MoveUtils camp function to set up a tightly controlled camp radius where that character is currently standing. mana All bots with a mana pool bigger than 0 will report their current % mana in your /chatchannel. medtime All bots with a mana pool bigger than 0 will report their currently estimated time to full mana based on their current Mana Regen divided by their mana level. move up This command tells your bots to move up to your current location. If they are set to /makecamp, they will reset their camp X and Y loc to your current position. If they are following, they will resume following once they reach your position (This is handy for positioning your bots in front of doors/bridges before moving through/across them) stop This command tells the bots to stop following wherever they happen to be standing. use keyword XXX YYY This command will cause the toon to say the keyword XXX to target YYY. Example: \"use keyword when gribble\" who has XXXX This command will have the toon check their inventory for the item. It will announce in the chat channel if it is in your bank, bags, top level inventory, or a worn item. If the item is an augment and mounted, it will say what item the augments is in. Send me to XXXXX This will cause a listening wizard or druid to cast zehphyr/translocate XXX on the requester, uses same keywords as portto portto XXXXX This will cause your wizard or druid bot to port using their group port spells, provided they have them in their spellbook. Current accepted keywords are: Druid alra arcstone barindu blightfire brell buriedsea butcher cobalt commons combine dawnshroud direwild domain east (karana) emerald (jungle) feerrott greatdivide grimling grounds karana (north) iceclad lavastorm Lceanium loping misty moors natimbi nexus pok ro shards skyfire south (emerald jungle) steamfont steppes stonebrunt succor surefall tempest time tox twilight undershore wakening Wizard: alra arcstone barindu bloodfield brell cazic cobalt combine|dreadlands commons dawnshroud dragonscale ej|emerald (emerald jungle) gfay (greater faydark) gd|greatdivide grimling grounds karana (north) katta iceclad icefall Lceanium moors (blightfire moors) natimbi nek nexus nro pok|knowledge sarith skyfire shards slaughter sro sunderock time tox twilight twk|west karana (ethernere tainted west karana) undershore wakening wkarna succor Slash Commands \u00b6 AutoBot.mac comes with a great set of predefined Slash Commands for easy and fast in-game configuration. Uber macro pause/unpause hotkey (bound to for me, unlike normal EQ hotkeys 1-10, it works even while casting) Add the following lines to MQ2CustomBinds .txt: name=StartPauseDB down=/docommand ${If[!${Macro.Name.Equal[RaidDruid.mac]}, /mac RaidDruid.mac, /varset RDPause ${If[${RDPause}==1,0,1]}]} up= Then in game type _/bind StartPauseDB _ to bind that to your __ key. When pressed your __ key will start AutoBot if it's not already started. If it's already running it will toggle the pause on the macro. Here's a full list, divided into sub-sections for each category of Slash Commands there are (Each toggle alias works by itself, or will take an argument of ON/OFF, TRUE/FALSE, or 1/0): Melee \u00b6 /dodefense Toggles usage of the defensive measures in Defense.inc (currently only works for SK,PAL, and WAR) /domelee Toggles automatic engaging of the MA's target in melee.(Must have the plugin MQ2Melee configured properly) /domercassist Toggles whether you want the macro to engage mercenaries (so you can better control when they engage) /domercstance Toggles automatic changing of the bot's mercenary stance based on if the MA's target is named (or higher level) or mercenary's aggro /doranged Toggles automatic engaging of /autofire if MA's target is with in NPCradius and beyond range distance /mercengagehps Set the HP% you want the macro to engage your mercenaries, if you have /domercassist on /guard Toggles the guard function on|off /rangedist XXX set the minimum distance away from mob before engaging /autofire. The EQ minumum is 30. /reportdefense Toggles reporting for Defense.inc events /status This will toggle the group \"status\" checking part of the guard function, allowing the guard toon to pause for group members below 50mana or 30endurance, for 60 second per check. /stickarg XXX sets melee arguments for stick during fights General \u00b6 /addalert ${Target.CleanName} Adds targetted NPC to the list which will be ignored in the RDCommon.ini and will perform normally when near these npc's not treating them as hostile. ${Target.CleanName} can also be replaced with the name of the mob typed out or the ini file can be manually edited. /assistdelay Sets the amount of time the bot will wait between MA assists. (Ex. /assistdelay 5s) /assistma Toggles assisting of your designated MA1, MA2, and MA3. Turning this off essentially disables Melee, Nuking, DoTing, and Debuffing /autoninja Toggles auto looting of the nearest corpse after each XP gained message. Will only loot droppable items. Must have the plugin MQ2MoveUtils for this to work. /autosit Toggles auto sitting to med. Not much to say here. /changetank Toggles automatic changing to MA2 or MA3 when MA1 dies (need to have /usegroupassist and /useraidassist both off, still testing) /chatchannel Sets the chat channel the bot reports to, (Ex. /chatchannel \"i say\"\ufffd) /docanni Toggles auto casting of your cannibalization spell when below your MedPct and above your CanniHPs. Also works for wizard harvest, mana robe, and necromancer Lich spells. **/doports**Toggles whether your druid or wizard bot will respond to portto comands /doyaulp Toggles auto casting of your yaulp spell when below your MedPct and there are NPCs within your NPCRadius. /engagehps Sets the % of the mobs HPs you want to start melee/debuffing/dotting/nuking (Ex. /engagehps 95) /ma1 Assigns a PC as Main Assist 1. (Ex. /ma1 BoDuke) /ma2 Assigns a PC as Main Assist 2. (Ex. /ma2 LukeDuke) /ma3 Assigns a PC as Main Assist 3. (Ex. /ma3 DaisyDuke) /leashlength Sets the distance your bot will allow itself to get from his follow target before resuming follow (Ex. /leashlength 25) /listspells Returns a list of all configured Spell Sets in your ini. /loadini \"IniFileName\" Loads a pre-configured ini file. /medpct Sets the % of Mana you want to sit or summon your horse at. (Ex. /medpct 50) /npcradchk Sets the Radius (in feet) around you that defines how close mobs are allow before you stop buffing to avoid aggro (Ex. /npcradchk 100) /npcradius Sets the Radius (in feet) around you that you want to watch NPCs using Assist healing and Assisting the MA (Ex. /npcradius 200) /npczradius Sets the Radius (in feet) above/below you that you want to watch NPCs using Assist healing and Assisting the MA (Ex. /npczradius 200) /rdpause Toggles AutoBot's active functions on and off. /relaytells Toggles automatic reporting of tells sent to the bot in your configured /chatchannel /reportevents Toggles automatic reporting of your bot's status messages such as low food/drink, stunned/unstunned, encumbered, etc. /reportmana Toggles automatic reporting of your mana status if you get below the medpct, only reports once before going above the medpct. /reportmanapct Defines the point at which you want to start reporting your mana status to your chat channel. /reporttoggles Toggles automatic reporting of your toggle status of any /commands you send your bot in the ChatChannel. /reportwow Toggles automatic reporting of Wrath of the Wild on the MA /saveini \"IniFileName\" Creates an ini file named \"IniFileName\" /sitdelay Sets the amount of time you want to wait before sitting after casting any spell that might be considered aggro. (Ex. /sitdelay 5s) /stophps Sets the % of the mob's HPs you want to stop nuking and debuffing. (Ex. /stophps 10) /targetlock Toggles using non-assist target lock /useepic Toggles automatic use of epic /usegroupassist Toggles automatic assigning of the group's main assist as MA1 /usegroupma Toggles automatic assigning of the gorup's main assist as MA1 /usegrouptank Toggles automatic assigning of the group's main tank as MA1 /usemount Toggles automatic mount summoning at your /medpct, if this is off and /autosit is on, it will sit to med instead of summoning a mount. /useraidassist Toggles using the raid's main assist (assist 1) as MA1 /useraidma Toggles using the raid's main assist (assist 1) as MA1 Healing \u00b6 /aeheal Toggles on AE Healing. This creates an array of every PC within PCRadius, and cycles through every one of them, checking their HPs against your defined HealPct, and casts heals if appropriate. Super handy on mobs with AE Rampage or AE Damage effects. /assistheal Toggles on Assist Healing. This creates an array of every NPC within NPCRadius, and assists them to find the target of their aggression, and heals that target if necessary. Super handy for general clearing on raids before getting to named. Also causes target to constantly ping-pong wildly all over the place trying to find a target to heal /cancelpct Set this to the percentage of HPs you want AutoBot to cancel heals at. (Ex. /cancelpct 90) /checkgroup Sets the number of seconds you'd like to wait between HP evaluations /delayedhealpct XX Sets the percentage of HPs to cast delayed heal on MA1 /divarbhps Sets the % HPs you want to cast Divine Arbitration at if a groupmember gets below it (Ex. /divarbhps 25) /dointerrupting Toggles interrupting debuffs/nukes/dots to heal group members. Some people like to just let their group members die instead of ducking a nuke to heal them. This is for those people! /doretort Toggles automatic casting of the listed Retort spell on MA1 /doward Toggles automatic casting of the listed Ward spell on MA1 /healchannel Sets the channel your bots use to report heals when they are cast. /healfd Toggles healing of FD classes (SK, Necro, Monk) only while they are FD (Ex. /healfd ON will only heal if they are FD) /healgroup Toggles healing of your group. With this on, it will heal groupmembers that are below HealPct /healmefirst Toggles healing of yourself over any group members. If you are mid-cast to heal someone else and your HPs fall below the HealPct, you will cancel it and heal yourself first. Self preservation at its finest. /healpct Sets the % of HPs you want to heal other PCs at. (ex. /healpct 70) /healpets Toggles healing of any pets in the group if they are below the PetHealPct /healramp Toggles automatic healing of your Rampage tank anytime a RAMPAGE message is detected. /healxtarget Toggles activation of healing PC and pets on the extended target window. /pcradius Sets the Radius (in feet) around you that you want to watch PC HPs using AE healing (Ex. /pcradius 200) /pczradius Sets the Radius (in feet) above and below you that you want to watch PC HPs using AE healing (Ex. /pczradius 50) /pethealpct Sets the % of HPs you will heal pets at. (Ex. /pethealpct 40) /ramptank Sets the Rampage Tank that you check whenever a RAMPAGE message is seen with /healramp on. (Ex. /ramptank UncleJesse) /reportheals Toggles automatic reporting of heals in the ChatChannel /reportinterrupts Toggles automatic reporting of interrupts to heal in the ChatChannel /reportsotw Toggles automatic reporting of Spirit of the Wood in the ChatChannel /sotw Toggle auto casting of Spirit of the Wood /sotwpct Set this to the average group HP percentage you want it to auto cast Spirit of the Wood at. (Ex. /sotwpct 75) /tankhealpct Sets the % you start Chealing. Due to some predictive logic the Cheal may start earlier. Set this to the abslute floor you want to start CH at. /usech Toggles using your Cheal spell on MA1 on or off. It will monitor the tank's HPs and if he's taking enough damage to be dead in less than 20 seconds, it will duck out of whatever RD is currently doing and start a CH. If the tank's HPs stop falling and level off above the TankHealPct, it will cancel CH and wait until the tank's HPs fall again. /usedelayed Toggles casting the listed Delayed Heal on MA1 /usedivarb Toggles using your divine arbitration or cleric epic 1.5 (if you have it) when a group member falls below the DivArbHPs. /usetankhot Toggles casting the listed Heal over Time spell on MA1 /waittocancel Toggle. When turned on, this will wait until your heals have less than .5 seconds left before making the decison to cancel the heal. Buffing \u00b6 AutoBot queues buff requests and casts them when appropriate. It will not cast buffs unless there are no mobs within 20 feet of the bot, it's not in combat, and it's not moving. It will hold onto those buff requests until you are no longer moving, not in combat, and there are no mobs within 20 feet. If you zone, all stored buffs are flushed, and you have to beg again. By default the bot only listens for /tells and IRC chat for buffing. If you want him to listen in other channels, you need to add #chat group to listen in group, or #chat chat to listen in EQ's chat channels; to the RaidDruid.mac file under the #chat tell line right near the top of the macro. More information on the #chat function can be found in the MacroQuest manual . Aliases: /buff \"Spell Name/Alias\" [Name | Group] Use this alias to send a buff command to your bot, will also accept buff aliases. You can use this to cast items and AAs as well as spells. If you specify Group instead of a name, it will buff your whole group with that spell, if it is a single target spell. In addition, you can cast it on any spawn including NPCs, Pets, Corpses, etc. (Ex. /buff \"Steeloak Skin\"\ufffd Bob, or /buff Oak Bob if oak is an alias for steeloak skin). If the /buff command utilizes a DoBuff alias, the buff request is queued and will not be performed during combat. If the Spell/AA/item name itself is used in the /buff command it is cast immediately. (Ex. /buff \"Exodus\" would fire right away, while /buff \"Evac\" would not). **WARNING: YOUR BOTS WILL NOT WATCH THE GROUP'S HPS OR ANYTHING ELSE WHILE EXECUTING A /BUFF COMMAND, USE IT WHEN YOU KNOW YOU DON'T NEED TO BE DOING ANYTHING ELSE IMPORTANT LIKE HEALING** /dobuffs Toggles automatic casting of buff requests made via /tell /dobufftells Toggles sending automatic replies to buff requests made via /tell /refreshbuffs Toggles automatic refreshing of buffs. Only buffs that are set to refresh in the ini will be refreshed. /reportdobuffs Toggles automatic reporting of buffs in the ChatChannel /reportselfbuffs Toggles automatic reporting of self buffs in the ChatChannel /selfbuff Toggles Self Buffing. Useful if you happen to be in an environment where having all your self buffs up puts you over the limit /wow Toggles automatic casting of Wrath of the Wild on your designated MA. I figure an extra 650 damage every 4 minutes cant hurt, since its mana free and all. Debuffing \u00b6 /debuff Toggles Auto debuffing. Pretty much all there is to say about that /debuffchannel Sets the channel your bots will use to report debuffs /dot Toggle Auto DoTing of mobs /mez Toggles Auto mezzing for those places where mez==bad /reportdebuffs Toggles reporting of debuffs in the ChatChannel /reportdots Toggles automatic report of DoTs in the ChatChannel /reportmez Toggles automatic report of Mezzes in the ChatChannel /usehott Toggles using the Health of Target's Target Leadership ability to determine a mob's aggro. Nuking \u00b6 /domancy Toggles Auto use of wizard's Pyromancy, Cryomancr, and Arcomany AA before casting spell nukes. /nuke Toggles Auto Nuking the MA's target. /nukedelay Sets the delay between chain nuking. If your tank sucks, or are in a kite group raise this delay to prevent agro. /nukeset # Sets the spellset to cast Nuke/Debuff/DoTs. If no number is given, returns the current spell set # you are nuking from. Pet \u00b6 /petbuff Toggles automatic buffing of your pet /usepet Toggles automatic summoning and sending in of pet to melee. Curing \u00b6 This portion of the macro requires the MQ2Debuffs plugin by pinkfloydx33. See the requirements . /docures Toggles auto-curing on and off. /reportcures Toggles auto-cure reporting on and off. Stuff \u00b6 This macro has been updated to utilize a programmable rest, combat, and named script checks and commands similar to MQ2Melee's holy/down shits. /docombat Toggles useage of the Combat scripts. /donamed Toggles useage of the Named scripts. /dorest Toggles usage of the Rest scripts. Bard \u00b6 This portion of the macro makes use of the MQ2Twist (See MQ2Twist wiki ) and MQ2BardSwap plugins. /addcombatsong |\"\" Adds the Alias or Song Name to the combat twist if a slot is available. /addrestsong |\"\" Adds the Alias or Song Name to the rest twist if a slot is available. /autorestoff When turned on it watches with each loop to see if any npc's are within the radius defined and will switch off rest songs if any are detected /autorestradius Sets the radius at which your bard will stop twisting when NPCs are present /combatsongs on|off Enables or Disables automatically twisting the combat twist temporarily. /delcombatsong |\"\" Removes the Alias or Song Name from the combat twist present. /delrestsong |\"\" Removes the Alias or Song Name from the rest twist if present. /listsongs combat|rest|all Lists the songs set to be twisted for the given twist type. /songalias \"Song Name\" Creates an alias for the given song name (must be in quotes if it has a space). INI entries \u00b6 .ini files will be automatically created and populated with default values if they do not exist. [MeleeStuff] \u00b6 DoMelee=1 (Set by /domelee) DoRanged=1 (0=Don't use ranged attacks, 1=Use Ranged attacks) DoMercAssist=TRUE (TRUE|1|FALSE|0) - If you want the macro to engage mercenaries so you can better control when they engage DoMercStance=FALSE (TRUE|1|FALSE|0) - Toggles use of automatic mercenary stance changes based on aggro MercEngageHPs=98 At what hp% you want the MATarget to be at before engaging StanceChange=50 (Amount off aggro to change DPS mercs from burn to balance) Guard=TRUE (TRUE|1|FALSE|0 - Toggles the guard function) StickArgs=10 pin (Set by /stickargs) DiscTotal=1 (Set this to the total number of melee disciplines you have defined) UseDiscs=1 (0=Don't Disc, 1=Use Discs) DiscName1=Furious Discipline (Set this to the name of the Discipline you want to use) DiscType1=0 (0=Defensive, 1=Offensive) DiscEndurance1=10 (Set this to the % endurance you want to be above when triggering this disc) DiscMinHPs1=10 (Set this to the min HPs of the mob or yourself that you want to trigger this disc at.) DiscMaxHPs1=90 (Set this to the max HPs of the mob or yourself that you want to trigger this disc at.) DiscSpawnCount1=2 (Set this to the # of mobs you want to have in melee range before triggering this disc.) [Settings] \u00b6 AABuy=FALSE TRUE|1|FALSE|0 - Toggles whether to automatically buy AA ASRadius=20 (Set to radius to check for mobs before sitting) ASZRadius=50 (Set to Z radius to check for mobs before sitting) AutoNinja=0 (Set by /autoninja, 0=off and 1=on) AutoSit=1 (Set by /autosit, 0=off and 1=on) DrinkGem=gem1 (Set this to gem#, item, or alt; as applicable to summon food) DrinkSpell=Abundant Drink (Set this to the name of the spell/item/alt you use to summon drink) DoShrink=FALSE (TRUE|1|FALSE|0 - Toggles whether to automatically shrink) EndMedPct=80 Endurance % to med at? FoodGem=gem1 (Set this to gem#, item, or alt; as applicable to summon food) FoodSpell=Abundant Food (Set this to the name of the spell/item/alt you use to summon food) GatherPct=10 (Set this to the % mana you want to use your Gather Mana) IRCAddress= IRC Server URL IRCPort=6667 (set to the port you want MQ2IRC to use) IRCChannel=#Name (Set to the name of the channel you want MQ2IRC to utilize, remember to put a # sign in front) LeashLength=25 (Set by /leashlength) MedPct=50 (Set by /medpct) MountItem=Black Rope Bridle (This is the item you use to summon your mount) MoveUpJitter=10 (Amount of distance before \"jittering\", to look more natual) NPCRadChk=100 (Set by /npcradchk) NPCRadius=75 (Set by /npcradius) NPCZRadius=100 (Set by /npczradius) PCRadius=200 (Set by /pcradius) PCZRadius=100 (Set by /pczradius) ShrinkGem= (Set to item or gemNumber or alt for your shrink spell) ShrinkSelfOnly=TRUE (TRUE|1|FALSE|0 - Toggles whether to automatically use shrink on yourself) ShrinkSpell= (Put the name of your shrink spell or item here) SitDelay=5s (Set by /sitdelay) UseIRC=FALSE (TRUE|1|FALSE|0 - Toggles whether to utilize MQ2IRC) UseMount=1 (Set by /usemount, 0=off and 1=on) UseRods=0 (Set by /userods) RodMana=50 (Set this to the % mana you want to be below before clicking your mod rods) RodSpell=Rod of Mystical Transvergance (Set this to the spell you use to summon mod rods) RodGem=gem1 (Set this to gem you want to cast this from, or put item for items, alt for AAs) [GeneralStuff] \u00b6 AssistDelay=5s (Set by /assistdelay) AssistMA=1 (Set by /assistma, 0=off and 1=on) CalmSpell= Put the name of your calm spell or item here CalmGem= Put gem# for spells, or item for items CanniGem1=gem6 (Set this to spell gem you want to cast your canni spell from, or put alt if an AA, or item if its an item) CanniHPs1=0 (Set this to the % HPs you want to stop using your canni AA at) CanniSpell1=Harvest (Set this to the name of your canni aa/item/spell. This section also works for Lich and any other Canni type spells that have a buff icon) CanniTotal=1 (Set this to the total cannibalization/harvest AAs/items/spells you want to check and cast) ChangeTank=FALSE (TRUE|1|FALSE|0 - Toggles automatic changing to MA2 or MA3 when MA1 dies) ChatChannel=i say (Set by /chatchannel) DoCanni=1 (Set this to 1 if you want to use your Canni AAs/items/spells when you fall below your medpct) DoWoW=1 (Set by /wow, 0=off and 1=on) DoYaulp=1 (Set this to 1 if you want to use Yaulp when mobs are close by instead of sitting) EngageHPs=95 (Set by /engagehps) InvisibilitySpell= Put the name of your invis spell or item here InvisibilityGem= Put gem# for spells, or item for items MA1=HappyGilmore (Set by /ma1) MA2=BillyMadison (Set by /ma2) MA3=MrDeeds (Set by /ma3) MaxMezLvl=93 (Set this to the maximum level your Mez spell can effect) MaxCharmLvl=89 (Set this to the Max level your Charm spell can effect) MaxCalmLvl=90 (Set this to the Max level your Calm spell can effect) Mezbroke=FALSE (TRUE|1|FALSE|0 - Toggles announcement of who broke Mez) RelayTells=1 (Set by /relaytells) ReportEvents=1 (Set by /reportevents) ReportMana=1 (Set by /reportmana) ReportManaPct=50 (Set by /reportmanapct) ReportToggles=1 (Set by /reporttoggles) ReportWoW=1 (Set by /reportwow) SpellSet1=SomeSpellSetName (Put the name of the Spell Set you want to memorize when you die while using this spell set here. Needs to match the name of the spell set you have saved in EQ to work properly) SpellSetTotal=1 (Set this to the # of unique spell sets you have defined for nukes/debuffs) StopHPs=20 (Set by /stophps) TargetLock=FALSE TRUE|1|FALSE|0 - Toggles whether to lock target when not using a MA TraderName=Traderdude01 (Set this to name of your account's Trader in order to use MQ2AutoLogin's toon switching feature via \"go to trader\" ) UseEpic=1 \\(TRUE\\|1\\|FALSE\\|0 - Toggles automatic use of Epic on MA1's target_ **UseGroupMA=TRUE** _(TRUE\\|1\\|FALSE\\|0 - Toggles whether to automatically assign the group's main assist as MA1 )_ **UseGroupTank=FALSE** _(TRUE\\|1\\|FALSE\\|0 - Toggles whether to automatically assign the group's main tank as MA1)_ **UseRaidMA=FALSE** _(TRUE\\|1\\|FALSE\\|0 - Toggles whether to automatically assign the raid's main assist \\(assist1\\) as MA1) YaulpGem1=gem6 (Set this to spell gem you want to cast your Yaulp spell from) YaulpSpell1=Yaulp VII (Set this to the name of your Yaulp spell) [HealStuff] \u00b6 AEHealing=0 (Set by /aeheal, 0=off and 1=on) AutoInterrupt=1 (Set by /interrupt, 0=off and 1=on) AssistHealing=0 (Set by /assistheal, 0=off and 1=on) BegFrantic=FALSE (TRUE|1|FALSE|0 - Toggle auto begging for frantic heals when below the BegFranticPCT) BegFranticPct=35 (Sets the amount of HP below which your toon will beg for a Frantic Heal) BegFranticChannel=BC (Sets the channel your toon will beg for Frantic Heals in) CancelPct=90 (Set by /cancelpct) CheckGroupInterval=3 (Set by /checkgroup, and sets how often you check group HP levels for healing) DelayedHeal=Promised Rehabilitation (This is your Delayed Heal spell) DelayedHealGem=Gem4 (This is the gem you will be casting the Delayed Heal from) DelayedHealPct=95 (Sets the HP% below which your toon will cast the Delayed Heal on MA1, use \"/delayedhealpct \")* \u00b6 DoRetort=TRUE* (TRUE|1|FALSE|0 - Toggles use of automatically casting Retort on MA1 during combat) UseDelayedHeal=TRUE (TRUE|1|FALSE|0 - Toggles whether to automatically cast the Delayed Heal, use \"/usedelayed\" ) DivArbHPs=20 (Set by /divarbhps) DoSotW=1 (Set by /sotw, 0=off and 1=on, Toggles casting of \"Spirit of the Wood\" or other listed spell/AA) FastHeal=Chlorotrope (This is your fast healing spell) FastHealGem=gem2 (This is the gem you cast your Fast Heal from if it's not memmed already) FranticHeal=Fifteenth Emblem (Sets which heal your toon will cast in response to a Frantic Heal call) FranticHealGem=Gem6 (Sets the gem number to memorize the Frantic Heal spell) GroupHealing=1 (Set by /healgroup, 0=off and 1=on) HealChannel=echo (Set by /healchannel) HealFD=0 (Set by /healFD, 1 only heals FD classes while FD, 0 heals normally) HealMeFirst=1 (Set by /healmefirst) HealPct=30 (Set by /healpct) HealXTarget=TRUE (TRUE|1|FALSE|0 - Toggles healing of PC and Pets on the Extended Target Window) PetHeal=Karana's Renewal (Put the name of the spell you wish to use to heal your group's pets here) PetHealGem=gem1 (Put the gem you wish to cast your pet heal from if its not memmed) PetHealing=1 (Set by /healpets) PetHealPct=50 (Set by /pethealpct) QM=TRUE (TRUE|1|FALSE|0 - Toggles automatic use of Quiet Miracle on group members whose mana is below 40m) RampHealing=0 (Set by /healramp, 0=off and 1=on) RampTank=BigDaddy (Set by /ramptank) ReportHeals=1 (Set by /reportheals) ReportInterrupts=1 (Set by /reportinterrupts) ReportSotW=1 (Set by /reportsotw) RetortSpell=Olsif's Retort (This is your Retort spell) RetortGem=Gem9 (This is the gem you want to cast the Retort spell from) SotWAA=Spirit of the Wood (This is the Actual Alt ability you have, set it to whichever one you have) SotWPct=80 (Set by /sotwpct) TankHeal=Karana's Renewal (Heal spell to use on the tank... usually your Cheal) MUST be defined and a different spell than FastHeal, even if not used. TankHealGem=gem8 (Spell slot for your tank heal spell) TankHealPct=70 (This is the % you heal MA1 at) UseBDA=0 (Set this to 1 if you want to cast Bestow Divine Aura on groupmembers when Divine Arbitration is not up) UseCH=1 (Use Chealing... or not, 1 for on, 0 for not) UseDivArb=0 (Set by /usedivarb) UseFranticHeal=TRUE (TRUE|1|FALSE|0 - Toggles whether to respond to calls for Frantic Heals) WaitToCancel=1 (Set by /waittocancel)'' [CureStuff] \u00b6 CureTotal=1 (Put your total number of cure spells here) DoCures=0 (0=Don't Cure, 1=Cure) ReportCures=0 (0=Don't Report, 1=Report) CureSpell1=Resplendent Cure (Put the name of the item, alt, or spell you use to cure with here) CureGem1=alt (Put item for item, alt for AA, or the gem# you want to use to cure with here) CurseCounters1=50 (Set this to the # of curse counters you want this to react to \\(For example if the spell cures 25 curse counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\) ) DiseaseCounters1=50 (Set this to the # of Disease counters you want this to react to \\(For example if the spell cures 25 Disease counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\) ) PoisonCounters1=50 (Set this to the # of Poison counters you want this to react to \\(For example if the spell cures 25 Poison counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\) ) [SelfBuffStuff] \u00b6 SelfBuffTotal=9 (Put your total number of self buffs here) SelfBuffs=1 (Set by /selfbuff, 0=off and 1=on) ReportSelfBuffs=1 (Set by /reportselfbuffs) SelfBuffRecheck=10s (Sets how often you check to see if your self buffs are going to fade) SelfBuff1=Shrunken Goblin Skull Earring (This is the name of the item or spell you use for self buff 1) SelfBuffIcon1=Grim Aura (This is the name of self buff 1 as it shows up in your buff window) SelfBuffGem1=item (This is the gem you cast self buff 1 from, if it's an item put item, if it's an AA put alt) SelfBuffCount1=14 (Put the number of buffs you would like to stop casting this buff after, i.e if you want to leave a couple buff slots open, set your self buffs up so that the could is never equal to your max number of buff slots) [DoBuffStuff] \u00b6 DoBuffTotal=10 (Put the total number of DoBuff entries you have here) DoBuffs=1 (Set by /dobuffs, 0=off and 1=on) ReportDoBuffs=1 (Set by /reportdobuffs) DoBuffTells=0 (Set by /dobufftells) RefreshBuffs=1 (Set by /refreshbuffs) DoBuff1=Woven Grass Boots (Put the name of the item, aa, or spell you cast this buff with here) DoBuffIcon1=Spirit of Wolf (This is the name of dobuff 1 as it would show up in your buff window) DoBuffGem1=item (This is the gem you cast dobuff 1 from, if it's an item put item, if it's an AA put alt) DoBuffMana1=0 (Set this to the % mana you'd like to be above before handling this buff request) DoBuffAliases1=SoW|Spirit| (This is the string of different buff messages you want the druid bot to respond to, separated by the |. Make sure to have a | for each buff, as it needs to count them to find out how many buff request strings to check for. Also be mindful of spaces, as the buff request will not be registered without the preceding and trailing spaces defined in the alias. Ex: If the alias were set up as | Rune |. \"I could use a Rune right about now\" would trigger the request while \"Rune\" alone would not, unless the alias is actually defined with no spaces as |Rune|). DoBuffRefresh1=1 (Set this to 1 if you want to refresh this buff when it wears off) BattleBuff1=FALSE (Set this to TRUE if you would like to cast this buff with mobs nearby and/or in Combat.) RezBuff1=FALSE (This allows the buff to be cast on a corpse, IE set rez spells to TRUE, all else FALSE) BuffGem=gem3 (Set this to the spell gem you want to cast your /buff commands from) [DebuffStuff] \u00b6 DebuffTotal=3 (Put the total number of Debuff entries you have here) DoDebuffs=1 (Set by /debuff, 0=off and 1=on) DoDoTs=1 (Set by /dot, 0=off and 1=on) DoMez=1 (Set by /mez, 0=off and 1=on) DoManaTaps=1 (0=off and 1=on) ReportDebuffs=1 (Set by /reportdebuffs) ReportDoTs=1 (Set by /reportdots) ReportMez=1 (Set by /reportmez) DebuffChannel=echo (Set by /debuffchannel) UseHoTT=1 (0=off and 1=on) MaxMobs=1 (Set this to the maximum number of mobs you would like AutoBot to keep track of) AllDebuffsFirst=1 (Set this to 1 if you want to land all your debuffs on each mob before moving on to debuff the next) DebuffMAFirst=1 (Set this to 1 if you want to land all your debuffs on the MA's target before moving on to any adds) DebuffSpell1=Hand of Ro (Put the name of the item, aa, or spell you cast this debuff with here) DebuffIcon1=Hand of Ro (This is the name of debuff 1 as it would show up in your buff window) DebuffGem1=gem5 (This is the gem you cast debuff 1 from, if it's an item put item, if it's an AA put alt) DebuffMana1=1 (Set this is to the % mana you would like to stop casting this debuff at.) DebuffHPs1=1 (Set this is to the % HPs you would like to start casting this debuff at.) DebuffStopHPs1=1 (Set this is to the % HPs you would like to stop casting this debuff at.) DebuffRecast1=3 (Set by /debuffrecast) DebuffSpellSet1=1 (This is the spell set you want to cast this debuff with. 0=all spell sets, 1=spell set #1, etc.) DebuffMAOnly1=1 (Set this is to 1 if you want to land this debuff on the MA's target only, and exclude adds.) DebuffNamedOnly1=1 (Set this is to 1 if you want to land this debuff on named targets only, and not normal XP mobs.) DebuffMessage1=%Target Debuffed by %Spell (This is your custom debuff message when you successfully land a debuff. Use %Target to report the target's name, %Spell to report the spell name, and %Duration to report the duration of the spell you just landed) Or set to None for no message. SpellType1=1 (Set this is to 0 for debuffs, 1 for DoTs, 2 for Mez, 3 for Mana Tap spells, 4 for AE Mez, and 5 for Charm.) DebuffCondition1=TRUE (Code conditions can be put here such as \"{Target.Body.Name.Equal[Undead]} or !{Target.Buff[Turgur's Swarm].ID} Default is TRUE ) [NukeStuff] \u00b6 NukeTotal=1 (Set this to the number of nukes you have defined) DoNukes=1 (Set by /nuke, 0=off and 1=on) Domancy=TRUE (Set by /domancy, FALSE=off and TRUE=on) determines if wizards will use \"mancy\" AA before casting spell NukeDelay=1 (Sets the delay in re-casting nukes, usefull when you have sucky tanks with low agro. Format for a 10 second delay is either 10s or 100) WhichNuke=1 (Sets which nuke to use 1=SpellSet #1, etc.) Nuke1=Solstice Strike (Set this to the name of the Nuke you want to cast) NukeGem1=gem7 (Set this to gem#, # being the gem you want to mem this nuke in) NukeSpellSet1=1 (Set this to the spell set you want to be using to cast this nuke) NukeStartHPs1=100 (Set this to the % of the mob's HPs you want to start dropping bombs on it. Some classes might want to use a smaller nuke when a mob gets under say 30% HPs, in order to prevent wasting mana) NukeStopHPs1=30 (Set this to the % HPs you want to stop nuking with this spell at) NukeMaxMana1=30 (The highest % mana you want to be when using this nuke. Most of us will want this at 100%, but some classes \\(such as wizards\\) might want to switch out to a small nuke when under 50m, and use a bigger one when over 50m.) NukeMinMana1=30 (Set this to the lowest % mana you want to be before you stop nuking. Essentially this is where most of us set our mana reserve for other duties such as healing, debuffing, etc. For wizards though, this provides the ability to stop nuking with one spell, and start nuking with another spell below this % using the same % for MaxMana) GoMNuke1=0 (Set this to 0 if you don't want to cast this Nuke when Gift of Mana is up. Set it to 1, and it will use this nuke when GoM is up. Another addition mainly for wizards, it provides them the opportunity to get a 1 mana cost monster nuke off, instead of wasting it on a crappy lure or something. If set to 1, it will stop debuffing in favor of nuking while Gift of Mana is up. If you want to get your debuffing done over all else, then leave this at 0. Your bots will still heal and mez normally if set to 1, but debuffs are ignored as long as the buff is up) DoConcussion=1 (0=Don't Concussion, 1=Do Concussion) ConcussionSpell=Concussion (Set this to the name of the Item, Alt, or Spell you use for Concussion) ConcussionGem=gem1 (Set this to Item for items, Alt for AAs, or gem# for Spells) DoMancy=TRUE\" (WIZ only, causes macro to change the \"pyromancy, ect\" buff according to the nuke it is about to cast) [PetStuff] \u00b6 UsePet=1 (Set by /usepet) PetMana=10 (Set this to the % mana you'd like to be above before casting your pet.) KillFlappy1=1 (0=Keep your familiar, 1=Kill your Familiar) PetFocus=Some focus item (Set this to the item you want to equip before casting your pet) PetSpell=Nature Walkers Behest (Set this to your Pet spell) PetGem=gem4 (Set this to the gem you want to cast your pet from) PetBuffTotal=1 (Set this to the total number of pet buffs you want to cast) DoPetBuffs=1 (1=pet buffing on, 0= pet buffing off) ReportPetBuffs=1 (1=pet buffing reporting on, 0= pet buffing reporting off) PetBuffRecheck=10s (Set this to how often you'd like to re-check your pet's buffs for wearing off) PetBuff1=Pet Buff Item/Spell name PetBuffIcon1=Pet Buff Item/Spell Icon name PetBuffGem1=Pet Buff Item/Spell Gem name PetShrink=1 (1=pet shrinking on, 0=pet shrinking off) PetShrinkSpell=Tiny Companion (Set this to the Name of the spell/aa/item you use to shrink your pet) PetShrinkGem=gem4 (Set this to the gem you want to shrink your pet from) PetItemTotal=1 ( Your total number of pet item buffs. If you have 2 weapons you want to summon, you currently have to define the same weapon twice, so set this accordingly) PetItemSpell1=Blazing Stone of Demise ( The name of the spell/aa/item you want to summon with) PetItemGem1=item (gem# for spells, item for items, alt for AAs.) PettHealing= (Mage Specific- TRUE/FALSE use \"self pet heals\") SelfPetHealPct= (Mage Specific- what perctage of pet HP to heal pet) SelfPetHeal= (Mage Specific- what pet only heal to use) SelfPetHealGem= (Mage Specific- what gem to use pet only heal from) PetDelayedHealing= (Mage Specific- TRUE/FALSE use Pet Delayed Heal) PetDelayedHealPct= (Mage Specific- What Hit Point percentage to cast the Pet Delayed Heal) PetDelayedHeal= (Mage Specific- What Delayed Pet Heal spell to use) PetDelayedHealGem= (Mage Specific- What gem to use Delayed Pet Heal) [HolyShit] \u00b6 TotalShit=1 (Set this to the total number of HolyShit Abilities you have defined) DoHolyShit=1 (1=On, 0=Off) HolyShit1=Oaken Guard (Name of Item/AA/Spell/disc to use) HolyShitGem1=gem9 (Put the HolyShit Gem#, alt, item, or skill) HolyShitHp1=70 (HP level you want to be below before triggering this ability) HolyShitType1=0 (0=Just cast, 1=Target yourself, 2=Target the mob hitting you, 3=Ability like \"Lay Hands\") HolyShitRUN1=0 (1=Attempt to run away from the mob towards the MA after casting this spell. 0=stand there and do nothing after casting) [CombatStuff] \u00b6 (This section is only accessed when you are in a combat state) CombatTotal=7 (Set this to the total number of Combat commands you have defined) DoCombatStuff=TRUE (TRUE|1|FALSE|0) CombatStuffRecheck=5s (Sets the amount of time between checking Combat scripts) CombatCommand1=/casting \"Mindless Hatred\" ALT (The command/script to do it all the conditions are met) CombatCondition1={Me.AltAbilityReady[Mindless Hatred]} && {Target.Distance}\\<=50 && {Me.PctAggro}\\<100 (Conditions to meet before doing the command/script) [NamedStuff] \u00b6 (This section is only access when your target is a named, the MA's target is more then 2 levels over you, or you have more then 2 mobs on your extended target window. If you wish to change this, search/look for \"/call named\" in the main loop) NamedTotal=1 (Set this to the total number of Named scripts you have defined DoNamedStuff=TRUE (on|off|TRUE|FALSE) NamedStuffRecheck=5s (Sets the amount of time between checking Named scripts) NamedCommand1=/call Cast \"Fury of Ro\" ALT (The command/script to do if the conditions are met) NamedCondition1={Me.PctAggro}\\<80 && {Me.AltAbilityReady[Fury of Ro]} (Conditions to meet before doing command/script) [RestStuff] \u00b6 (This section is called when you are not in combat) RestTotal=1 (Set this to the total number of Rest commands you have defined) DoRestStuff=TRUE (TRUE|1|FALSE|0) RestStuffRecheck=5s (Sets the amount of time between checking Rest scripts) RestCommand1=/useitem \"Huntsman's Ethereal Quiver\" (The command/script to do if all conditions are met) RestCondition1={FindItemCount[Ethereal Arrow]}\\<100 (The conditions to meet before doing the command/script) [Bard] \u00b6 DoBardSwap=False (Enables Bardswap plugin automatically on startup if set to True) DoBardMeleeSwap=False (Enables Bardswap to swap in melee weapons as well automatically on startup if set to True) AutoRestOff=0 (Set with /autorestoff) AutoRestRadius=125 (Set with /autorestradius) [Bard-Combat] \u00b6 SongsArray1-8=Song Name *(Set via /addcombatsong |. Removed with /delcombatsong |. Add in extra entries as you gain spell gems.)* [Bard-Rest] \u00b6 SongsArray9-18=Song Name *(Set via /addrestsong |. Removed with /delrestsong |.* [Bard-Aliases] \u00b6 aliasname=songname (Set via /songalias \"song name\"). Songalias is basically to make it easier to change your combat/rest lineup on the fly with /addrestsong alias. Troubleshooting/FAQ \u00b6 On \"where is my master list?!? The master list was moved to the RDCommon.ini file to avoid having to maintain a list on 50 different profile ini's. Open RDCommon.ini and use find \"MastereList\" to easily find where to put additional names. (A new command was added, in the channel your toon is listening to send \"add to masterlist newtoonname\" to have the macro add the new name to the list) On I set my ini to service XXXX skill/spell/AA/item but its not working Got something spelled wrong or not filled out properly. Check the examples again. Very rarely EQ has odd spaces in some names. I find it best to look up the spell/skill/item/AA off of Allakhazam.com and copy+paste to insure accurate spelling when troubleshooting problem INI's. On Dots/Debuffs that don't work, but (possibly) used to If in a group/raid with HoTT leadership skill set UseHoTT=1 in the ini file. If HoTT is not avialable you must set UseHoTT=0. Check to see the MaxMobs=5 is appropraite to the number of NPC's around you. Monsters that are green or sitting/laying down will never be debuffed/dotted. On Buff requests not being serviced Unless you indicate that you want the buff executed in combat the bot will not service the buff if there are NPC's nearby. You can have the macro ignore certain npcs that we know for certain arnt kos by adding their names in the RDCommon.ini .Alternatly the NPC check radius is adjustable in the ini. Also make sure that the buff name is spelled correctly just how it looks in the info window. Lastly make sure that the alias's are correct. in the example ini's it looks like this \"| convicton | viction | convic |\", however if you have it set up like that, the buff requester for all intents and purposes needs to put that word in a sentence. if you have the ini looking like this \"|convicton|viction|convic|\" with no spaces in between the \" | \" then the bot will reconize and ackowlege any tell that has any of the word alias's it sees. On Bot will assist but wont engage when set to The bigest thing you do to fix that is increase the NPCRadius=120, Also, consider verifiying, and tweaking the following as well. NPCZRadius=120, AssistMA=TRUE, , DoMelee=TRUE, AssistDelay=0s, MA1=Chuck_Norris, EngageHPs=101. aso remember that other options may be fighting for servicing. looting, selfbuffing, debuffing, buffing, etc.. so if melee is priority, turn everything but assisting off. also make sure that mq2melee is set up right. type /melee to bring up its console and see whats set and whats not. same thing goes. if your not a pet class turn off all that other stuff to prevent any chance of conflicts. On Cant load selo's into the ini Selos uses a \"````````````\" located to the left of the 1 key. On incorrectly mezed Targets (also known as: Oh why does my chanter mez my MA's target?) You need to properly set the target for the BOT by the Leader AA, or /varset MATarget ${Target.ID} as explained in \"On target acquisition\" On automatically mezzing NPCs when you don't want to Set /rdpause on the BOT you want to stop auto debuffing (rdpause stops all automatic activity), type \"/rdpause on\" \\(minus quotes\\) into your command channel to stop auto-activity on multiple BOT's at once, or add the NPC you wish to not mez to the immune/ignore list in RDCommon.ini. You will need to know the spell ID for the spell you wish not to cast and this can be found by ${Spell[My Mez Spell Name Here].ID} (Use /echo in front of ${Spell[My Mez Spell Name Here].ID} if your typing it in EQ) On Target acquisition AutoBot acquires the Main Assist's (MA) target in a number of ways. 1) By setting the MA in the bot's ini file and the assist delay, the macro will attempt to acquire the target of the MA after the set time. 2) By assigning the role Main Assist to someone in your group, the bot will acquire the MA's target that way. (if /udegroupassist or /usegroupma is on) 3) By assigning the role Main Tank to someone in your group, the bot will aquire the MT's target. (if /usegrouptank is on) 4) By manually setting the MA's target using /varset MATarget ${Target.ID} in whatever channel your bots listen to commands in. 5) By using \"/useraidassist\" or \"/useraidma\" (remember to turn off /usegroupma and /usegrouptank if you do this) the macro will aquire a target assist the raids main assist (Raid Assist 1) On non-working clickies If you have a clicky with no recast timer that isn't working. (Such as Time's Antithesis, Veil of Lost Hopes, et al...) The odds are you have an old version of MQ2. As of the 20 th of Dec Zip, these issues have been fixed. if you don't know what version of the zip you have, try simply running /echo ${FindItem[item name].Timer} and seeing what value it returns. Anything other than zero is Bad(tm) and denotes an out-of-date zip file. Update, update, update! Also your last inventory slot must NOT be a bag. Clickies usable from inventory, even if usable in other slots, will be used from base inventory slot 8. On chain-casting clickies or buffs Often times this is due to misspelling something in the INI file, or it can be the resulting buff icon differs from the spell icon in some manner. You will note there is now an \"Icon\" entry for buffs. Carefully double check the actual name of the buff ingame and match the INI to it. On out-of-date alias lists If you are attempting to reload your alias to your macroquest.ini. You must remove the Version=X.XX from RD_common.ini. Doing this will make the Version mismatch appear and reload all the alias's On healing not working On heals that never cancel even though target's health goes above CancelPct Tankheal must be defined as a valid spell and different than FastHeal=, even if you are not using Tankheals (UseCH setting). On Green (non-XP) corpses that are not auto looted These are not looted automatically. To trigger looting, at any time, send your bot \"You gain party experience!\" in whatever channel it is set to monitor. On late/not reliable buffs Bots will not buff in combat. Also it will not sit to memorize buffs if a NPC is within a certain range, although using a horse remedies this. On non-refreshing buffs on bots themselves Buffs from the [DoBuffStuff] or buff command are not rebuffed on the same bot that cast them, because you dont get a buff wear off message when they wear off yourself. If you want certain buffs kept up on your bot, you should use [SelfBuffStuff] section. On bots that keep targeting some npc, even though it hasn't been told it to assist and kill it Your MA could have a corpse close, and that is being assisted to get a target. Or you could be using an old version of autobot. On non-following bots Target someone and type /stick. If that doesnt work you have issues with MQ2MoveUtils . On Clerics that spam Complete Heals and interrupt them all Make sure you have UseDivArb set to 0 if you dont have that AA. // There's more to this than just the DivArb setting... but this might be one issue\\ On non-attacking pets/bots Check your MQ2Melee settings(the wiki for it is here ). You need a properly configured MQ2Melee for your pets/bots to attack and do other various melee-related tasks. On items being identified You aren't using the IRC plugin. By default /i is mapped to /identify. No slash commands work or error: \"DoCommand - Couldn't parse '/...' \" This usually happens when you update MQ2 and overwrite the macroquest.ini file. This file contains all the aliases (ie. the slash commands). To fix, delete the Version=X.XX line in RD_Common.ini, which will write all the aliases back to the macroquest.ini file when you restart Autobot. In general, you do not need to overwrite the Macroquest.ini file when updating MQ2. When your bot doesn't mem spells Your ini is set up wrong. Your XXXXGem#= entry needs to read \"gem#\", not just #. At least, 9 times out of 10 that's the problem. Check one of the sample ini files for an example. On My bots dont aquire targets when everything is set up properly Each toon needs a breastplate, it has to do with the way autobot checks deaths and runs the auto accept rez feature, it also disables assisting, for a good reason...","title":"AutoBot.mac-V4.28+"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#autobotmac-v428","text":"","title":"AutoBot.mac-V4.28+"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#description","text":"AutoBot.mac by A_Druid_00 is a versatile macro for automating a lot of tasks for your character in group, raid and solo situations. This wiki includes many updates/changes done by Gomer,gSe7eN,trevyn,Warlock45,and others.","title":"Description"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#requirements","text":"AutoBot.mac does not run on a default MQ compilation, it has a few extra dependencies. Some of the below items are plugins and need to be compiled, just like MacroQuest2. Please read the appropriate documentation for each plugin. The Include files should be added to the same directory that AutoBot will be run from. Plugins: MQ2MoveUtils by Outlander This is so the macro knows about stick, /makecamp, and /moveto. Check out the wiki . MQ2Exchange by Wassup This is so that item swapping, casting, and swapping back will work MQ2Debuffs by pinkfloydx33 This is so the macro can keep track of your debuff counters. MQ2Melee by s0rcier So as to properly configure melee/ranged combat and various options thereof, check out the wiki . *Optional: MQ2AutoLogin to change to your trader Includes Files: Wait4Rez.inc Handles pre-rez situations. spell_routines.inc Handles spell casting, from gems, items and AAs. QuickBeg2.inc Handles buff begging. Ninjadvloot.inc Handles looting. Defense.inc Handles automatic engagement of defensive disc/aa/items for tanks. AAPurchase.incHandles automatic purchase of AA based on INI entries.","title":"Requirements"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#getting-started","text":"Pointers for AutoBot stuffs. (We should make a multi-boxing wiki sometime, we could link it here...) In addition to the documentation for the various plugins used directly by AutoBot (see links in Requirements ) The following is useful info on other plugins you can use to enhance your AutoBot experience. MQ2Clip by Vaft, Cr4zyb4rd, et al. Manages the clip plane of backgrounded sessions. Your CPU will thank you. MQ2FPS by Lax. Helps manage framerates of EQ sessions, greatly helps multi-botting... Check out the wiki MQ2Eqbc by Omnictrl Is an alternative way to communicate with your bots. Configure your EQBC.ini with the following: [Last Connect] Server=192.168.1.101 (This must be edited to match the ip and port you have the server listening to) Port=2112 [Settings] AutoConnect=1 AllowControl=1 You will also need to change the channel setting in your AutoBot.ini from \"i say\" to \"bc\" to use it for bot to bot communication. Don't forget that if you are getting identify spam that you check loot.ini and QB2Settings.ini for any i say or i msg commands. QB2Settings.ini defaults to i msg and needs to be changed if using EQBC. Recommend MQ2NetBots , MQ2NetStat , and MQ2NetHeal to go along with this. More information available on Page 59 of the original AutoBot thread.","title":"Getting Started"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#using-autobotmac","text":"1) The main macro file, 'yyy.mac' (called 'RaidDruid.mac' in the .zip file) can be named to 'AutoBot.mac' or 'AnythingYouWant.mac'. 2) To start the macro in EverQuest with MQ2 running; type '/macro yyy.mac Note: The first time you run the macro, it will generate an ini file called RD_xxx.ini 3) Configure your RD_xxx.ini, where 'xxx' is your character name. 3a) Peruse through RDCommon.ini and add in any mobs you might want to have certains spells ignore. I tend to put Guild Lobby and PoK NPCs as immune to mez, makes life simpler when walking around and I forget to pause my bots. You will also find the MasterList here. 4)Restart Autobot after configuring RD_xxx.ini. 5) Enjoy the show.","title":"Using AutoBot.mac"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#bot-commands","text":"There are a few non-alias (no / required) commands available to Autobot. These commands will cause the bots to respond to a few general status/movement commands without the obvious /alias, for easy use in a group setting. Bots will only respond to commands sent by someone in the MasterList buffqueue This command has your bot respond in your ChatChannel with the # of buffs left in his \"buff queue\". Handy for deciding whether to continue pulling/crawling after a group wipe. Keep in mind that some longer cast spells such as Night's Dark Terror for enchanters have extremely long recast times, and so can sit in the queue for a while. break This will make your bots visible (they will click off all invisibility or IVU buffs). camp here This command will cause any other toons using Autobot to utilize MQ2Moveutil's \"make camp\" function, using he location coordinates you are standing on when issuing the command. follow This command will have your bots /stick to you. They will sit to med if needed and within your LeashLength. They will also break off to attack if /domelee is turned on and the MA is fighting something. They will also service buff requests and do debuffing if applicable and they are not moving. guard here Those toons you have the Guard function turned on will utilize MQ2MoveUtils camp function to set up a tightly controlled camp radius where that character is currently standing. mana All bots with a mana pool bigger than 0 will report their current % mana in your /chatchannel. medtime All bots with a mana pool bigger than 0 will report their currently estimated time to full mana based on their current Mana Regen divided by their mana level. move up This command tells your bots to move up to your current location. If they are set to /makecamp, they will reset their camp X and Y loc to your current position. If they are following, they will resume following once they reach your position (This is handy for positioning your bots in front of doors/bridges before moving through/across them) stop This command tells the bots to stop following wherever they happen to be standing. use keyword XXX YYY This command will cause the toon to say the keyword XXX to target YYY. Example: \"use keyword when gribble\" who has XXXX This command will have the toon check their inventory for the item. It will announce in the chat channel if it is in your bank, bags, top level inventory, or a worn item. If the item is an augment and mounted, it will say what item the augments is in. Send me to XXXXX This will cause a listening wizard or druid to cast zehphyr/translocate XXX on the requester, uses same keywords as portto portto XXXXX This will cause your wizard or druid bot to port using their group port spells, provided they have them in their spellbook. Current accepted keywords are: Druid alra arcstone barindu blightfire brell buriedsea butcher cobalt commons combine dawnshroud direwild domain east (karana) emerald (jungle) feerrott greatdivide grimling grounds karana (north) iceclad lavastorm Lceanium loping misty moors natimbi nexus pok ro shards skyfire south (emerald jungle) steamfont steppes stonebrunt succor surefall tempest time tox twilight undershore wakening Wizard: alra arcstone barindu bloodfield brell cazic cobalt combine|dreadlands commons dawnshroud dragonscale ej|emerald (emerald jungle) gfay (greater faydark) gd|greatdivide grimling grounds karana (north) katta iceclad icefall Lceanium moors (blightfire moors) natimbi nek nexus nro pok|knowledge sarith skyfire shards slaughter sro sunderock time tox twilight twk|west karana (ethernere tainted west karana) undershore wakening wkarna succor","title":"Bot Commands"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#slash-commands","text":"AutoBot.mac comes with a great set of predefined Slash Commands for easy and fast in-game configuration. Uber macro pause/unpause hotkey (bound to for me, unlike normal EQ hotkeys 1-10, it works even while casting) Add the following lines to MQ2CustomBinds .txt: name=StartPauseDB down=/docommand ${If[!${Macro.Name.Equal[RaidDruid.mac]}, /mac RaidDruid.mac, /varset RDPause ${If[${RDPause}==1,0,1]}]} up= Then in game type _/bind StartPauseDB _ to bind that to your __ key. When pressed your __ key will start AutoBot if it's not already started. If it's already running it will toggle the pause on the macro. Here's a full list, divided into sub-sections for each category of Slash Commands there are (Each toggle alias works by itself, or will take an argument of ON/OFF, TRUE/FALSE, or 1/0):","title":"Slash Commands"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#melee","text":"/dodefense Toggles usage of the defensive measures in Defense.inc (currently only works for SK,PAL, and WAR) /domelee Toggles automatic engaging of the MA's target in melee.(Must have the plugin MQ2Melee configured properly) /domercassist Toggles whether you want the macro to engage mercenaries (so you can better control when they engage) /domercstance Toggles automatic changing of the bot's mercenary stance based on if the MA's target is named (or higher level) or mercenary's aggro /doranged Toggles automatic engaging of /autofire if MA's target is with in NPCradius and beyond range distance /mercengagehps Set the HP% you want the macro to engage your mercenaries, if you have /domercassist on /guard Toggles the guard function on|off /rangedist XXX set the minimum distance away from mob before engaging /autofire. The EQ minumum is 30. /reportdefense Toggles reporting for Defense.inc events /status This will toggle the group \"status\" checking part of the guard function, allowing the guard toon to pause for group members below 50mana or 30endurance, for 60 second per check. /stickarg XXX sets melee arguments for stick during fights","title":"Melee"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#general","text":"/addalert ${Target.CleanName} Adds targetted NPC to the list which will be ignored in the RDCommon.ini and will perform normally when near these npc's not treating them as hostile. ${Target.CleanName} can also be replaced with the name of the mob typed out or the ini file can be manually edited. /assistdelay Sets the amount of time the bot will wait between MA assists. (Ex. /assistdelay 5s) /assistma Toggles assisting of your designated MA1, MA2, and MA3. Turning this off essentially disables Melee, Nuking, DoTing, and Debuffing /autoninja Toggles auto looting of the nearest corpse after each XP gained message. Will only loot droppable items. Must have the plugin MQ2MoveUtils for this to work. /autosit Toggles auto sitting to med. Not much to say here. /changetank Toggles automatic changing to MA2 or MA3 when MA1 dies (need to have /usegroupassist and /useraidassist both off, still testing) /chatchannel Sets the chat channel the bot reports to, (Ex. /chatchannel \"i say\"\ufffd) /docanni Toggles auto casting of your cannibalization spell when below your MedPct and above your CanniHPs. Also works for wizard harvest, mana robe, and necromancer Lich spells. **/doports**Toggles whether your druid or wizard bot will respond to portto comands /doyaulp Toggles auto casting of your yaulp spell when below your MedPct and there are NPCs within your NPCRadius. /engagehps Sets the % of the mobs HPs you want to start melee/debuffing/dotting/nuking (Ex. /engagehps 95) /ma1 Assigns a PC as Main Assist 1. (Ex. /ma1 BoDuke) /ma2 Assigns a PC as Main Assist 2. (Ex. /ma2 LukeDuke) /ma3 Assigns a PC as Main Assist 3. (Ex. /ma3 DaisyDuke) /leashlength Sets the distance your bot will allow itself to get from his follow target before resuming follow (Ex. /leashlength 25) /listspells Returns a list of all configured Spell Sets in your ini. /loadini \"IniFileName\" Loads a pre-configured ini file. /medpct Sets the % of Mana you want to sit or summon your horse at. (Ex. /medpct 50) /npcradchk Sets the Radius (in feet) around you that defines how close mobs are allow before you stop buffing to avoid aggro (Ex. /npcradchk 100) /npcradius Sets the Radius (in feet) around you that you want to watch NPCs using Assist healing and Assisting the MA (Ex. /npcradius 200) /npczradius Sets the Radius (in feet) above/below you that you want to watch NPCs using Assist healing and Assisting the MA (Ex. /npczradius 200) /rdpause Toggles AutoBot's active functions on and off. /relaytells Toggles automatic reporting of tells sent to the bot in your configured /chatchannel /reportevents Toggles automatic reporting of your bot's status messages such as low food/drink, stunned/unstunned, encumbered, etc. /reportmana Toggles automatic reporting of your mana status if you get below the medpct, only reports once before going above the medpct. /reportmanapct Defines the point at which you want to start reporting your mana status to your chat channel. /reporttoggles Toggles automatic reporting of your toggle status of any /commands you send your bot in the ChatChannel. /reportwow Toggles automatic reporting of Wrath of the Wild on the MA /saveini \"IniFileName\" Creates an ini file named \"IniFileName\" /sitdelay Sets the amount of time you want to wait before sitting after casting any spell that might be considered aggro. (Ex. /sitdelay 5s) /stophps Sets the % of the mob's HPs you want to stop nuking and debuffing. (Ex. /stophps 10) /targetlock Toggles using non-assist target lock /useepic Toggles automatic use of epic /usegroupassist Toggles automatic assigning of the group's main assist as MA1 /usegroupma Toggles automatic assigning of the gorup's main assist as MA1 /usegrouptank Toggles automatic assigning of the group's main tank as MA1 /usemount Toggles automatic mount summoning at your /medpct, if this is off and /autosit is on, it will sit to med instead of summoning a mount. /useraidassist Toggles using the raid's main assist (assist 1) as MA1 /useraidma Toggles using the raid's main assist (assist 1) as MA1","title":"General"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#healing","text":"/aeheal Toggles on AE Healing. This creates an array of every PC within PCRadius, and cycles through every one of them, checking their HPs against your defined HealPct, and casts heals if appropriate. Super handy on mobs with AE Rampage or AE Damage effects. /assistheal Toggles on Assist Healing. This creates an array of every NPC within NPCRadius, and assists them to find the target of their aggression, and heals that target if necessary. Super handy for general clearing on raids before getting to named. Also causes target to constantly ping-pong wildly all over the place trying to find a target to heal /cancelpct Set this to the percentage of HPs you want AutoBot to cancel heals at. (Ex. /cancelpct 90) /checkgroup Sets the number of seconds you'd like to wait between HP evaluations /delayedhealpct XX Sets the percentage of HPs to cast delayed heal on MA1 /divarbhps Sets the % HPs you want to cast Divine Arbitration at if a groupmember gets below it (Ex. /divarbhps 25) /dointerrupting Toggles interrupting debuffs/nukes/dots to heal group members. Some people like to just let their group members die instead of ducking a nuke to heal them. This is for those people! /doretort Toggles automatic casting of the listed Retort spell on MA1 /doward Toggles automatic casting of the listed Ward spell on MA1 /healchannel Sets the channel your bots use to report heals when they are cast. /healfd Toggles healing of FD classes (SK, Necro, Monk) only while they are FD (Ex. /healfd ON will only heal if they are FD) /healgroup Toggles healing of your group. With this on, it will heal groupmembers that are below HealPct /healmefirst Toggles healing of yourself over any group members. If you are mid-cast to heal someone else and your HPs fall below the HealPct, you will cancel it and heal yourself first. Self preservation at its finest. /healpct Sets the % of HPs you want to heal other PCs at. (ex. /healpct 70) /healpets Toggles healing of any pets in the group if they are below the PetHealPct /healramp Toggles automatic healing of your Rampage tank anytime a RAMPAGE message is detected. /healxtarget Toggles activation of healing PC and pets on the extended target window. /pcradius Sets the Radius (in feet) around you that you want to watch PC HPs using AE healing (Ex. /pcradius 200) /pczradius Sets the Radius (in feet) above and below you that you want to watch PC HPs using AE healing (Ex. /pczradius 50) /pethealpct Sets the % of HPs you will heal pets at. (Ex. /pethealpct 40) /ramptank Sets the Rampage Tank that you check whenever a RAMPAGE message is seen with /healramp on. (Ex. /ramptank UncleJesse) /reportheals Toggles automatic reporting of heals in the ChatChannel /reportinterrupts Toggles automatic reporting of interrupts to heal in the ChatChannel /reportsotw Toggles automatic reporting of Spirit of the Wood in the ChatChannel /sotw Toggle auto casting of Spirit of the Wood /sotwpct Set this to the average group HP percentage you want it to auto cast Spirit of the Wood at. (Ex. /sotwpct 75) /tankhealpct Sets the % you start Chealing. Due to some predictive logic the Cheal may start earlier. Set this to the abslute floor you want to start CH at. /usech Toggles using your Cheal spell on MA1 on or off. It will monitor the tank's HPs and if he's taking enough damage to be dead in less than 20 seconds, it will duck out of whatever RD is currently doing and start a CH. If the tank's HPs stop falling and level off above the TankHealPct, it will cancel CH and wait until the tank's HPs fall again. /usedelayed Toggles casting the listed Delayed Heal on MA1 /usedivarb Toggles using your divine arbitration or cleric epic 1.5 (if you have it) when a group member falls below the DivArbHPs. /usetankhot Toggles casting the listed Heal over Time spell on MA1 /waittocancel Toggle. When turned on, this will wait until your heals have less than .5 seconds left before making the decison to cancel the heal.","title":"Healing"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#buffing","text":"AutoBot queues buff requests and casts them when appropriate. It will not cast buffs unless there are no mobs within 20 feet of the bot, it's not in combat, and it's not moving. It will hold onto those buff requests until you are no longer moving, not in combat, and there are no mobs within 20 feet. If you zone, all stored buffs are flushed, and you have to beg again. By default the bot only listens for /tells and IRC chat for buffing. If you want him to listen in other channels, you need to add #chat group to listen in group, or #chat chat to listen in EQ's chat channels; to the RaidDruid.mac file under the #chat tell line right near the top of the macro. More information on the #chat function can be found in the MacroQuest manual . Aliases: /buff \"Spell Name/Alias\" [Name | Group] Use this alias to send a buff command to your bot, will also accept buff aliases. You can use this to cast items and AAs as well as spells. If you specify Group instead of a name, it will buff your whole group with that spell, if it is a single target spell. In addition, you can cast it on any spawn including NPCs, Pets, Corpses, etc. (Ex. /buff \"Steeloak Skin\"\ufffd Bob, or /buff Oak Bob if oak is an alias for steeloak skin). If the /buff command utilizes a DoBuff alias, the buff request is queued and will not be performed during combat. If the Spell/AA/item name itself is used in the /buff command it is cast immediately. (Ex. /buff \"Exodus\" would fire right away, while /buff \"Evac\" would not). **WARNING: YOUR BOTS WILL NOT WATCH THE GROUP'S HPS OR ANYTHING ELSE WHILE EXECUTING A /BUFF COMMAND, USE IT WHEN YOU KNOW YOU DON'T NEED TO BE DOING ANYTHING ELSE IMPORTANT LIKE HEALING** /dobuffs Toggles automatic casting of buff requests made via /tell /dobufftells Toggles sending automatic replies to buff requests made via /tell /refreshbuffs Toggles automatic refreshing of buffs. Only buffs that are set to refresh in the ini will be refreshed. /reportdobuffs Toggles automatic reporting of buffs in the ChatChannel /reportselfbuffs Toggles automatic reporting of self buffs in the ChatChannel /selfbuff Toggles Self Buffing. Useful if you happen to be in an environment where having all your self buffs up puts you over the limit /wow Toggles automatic casting of Wrath of the Wild on your designated MA. I figure an extra 650 damage every 4 minutes cant hurt, since its mana free and all.","title":"Buffing"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#debuffing","text":"/debuff Toggles Auto debuffing. Pretty much all there is to say about that /debuffchannel Sets the channel your bots will use to report debuffs /dot Toggle Auto DoTing of mobs /mez Toggles Auto mezzing for those places where mez==bad /reportdebuffs Toggles reporting of debuffs in the ChatChannel /reportdots Toggles automatic report of DoTs in the ChatChannel /reportmez Toggles automatic report of Mezzes in the ChatChannel /usehott Toggles using the Health of Target's Target Leadership ability to determine a mob's aggro.","title":"Debuffing"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#nuking","text":"/domancy Toggles Auto use of wizard's Pyromancy, Cryomancr, and Arcomany AA before casting spell nukes. /nuke Toggles Auto Nuking the MA's target. /nukedelay Sets the delay between chain nuking. If your tank sucks, or are in a kite group raise this delay to prevent agro. /nukeset # Sets the spellset to cast Nuke/Debuff/DoTs. If no number is given, returns the current spell set # you are nuking from.","title":"Nuking"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#pet","text":"/petbuff Toggles automatic buffing of your pet /usepet Toggles automatic summoning and sending in of pet to melee.","title":"Pet"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#curing","text":"This portion of the macro requires the MQ2Debuffs plugin by pinkfloydx33. See the requirements . /docures Toggles auto-curing on and off. /reportcures Toggles auto-cure reporting on and off.","title":"Curing"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#stuff","text":"This macro has been updated to utilize a programmable rest, combat, and named script checks and commands similar to MQ2Melee's holy/down shits. /docombat Toggles useage of the Combat scripts. /donamed Toggles useage of the Named scripts. /dorest Toggles usage of the Rest scripts.","title":"Stuff"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#bard","text":"This portion of the macro makes use of the MQ2Twist (See MQ2Twist wiki ) and MQ2BardSwap plugins. /addcombatsong |\"\" Adds the Alias or Song Name to the combat twist if a slot is available. /addrestsong |\"\" Adds the Alias or Song Name to the rest twist if a slot is available. /autorestoff When turned on it watches with each loop to see if any npc's are within the radius defined and will switch off rest songs if any are detected /autorestradius Sets the radius at which your bard will stop twisting when NPCs are present /combatsongs on|off Enables or Disables automatically twisting the combat twist temporarily. /delcombatsong |\"\" Removes the Alias or Song Name from the combat twist present. /delrestsong |\"\" Removes the Alias or Song Name from the rest twist if present. /listsongs combat|rest|all Lists the songs set to be twisted for the given twist type. /songalias \"Song Name\" Creates an alias for the given song name (must be in quotes if it has a space).","title":"Bard"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#ini-entries","text":".ini files will be automatically created and populated with default values if they do not exist.","title":"INI entries"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#meleestuff","text":"DoMelee=1 (Set by /domelee) DoRanged=1 (0=Don't use ranged attacks, 1=Use Ranged attacks) DoMercAssist=TRUE (TRUE|1|FALSE|0) - If you want the macro to engage mercenaries so you can better control when they engage DoMercStance=FALSE (TRUE|1|FALSE|0) - Toggles use of automatic mercenary stance changes based on aggro MercEngageHPs=98 At what hp% you want the MATarget to be at before engaging StanceChange=50 (Amount off aggro to change DPS mercs from burn to balance) Guard=TRUE (TRUE|1|FALSE|0 - Toggles the guard function) StickArgs=10 pin (Set by /stickargs) DiscTotal=1 (Set this to the total number of melee disciplines you have defined) UseDiscs=1 (0=Don't Disc, 1=Use Discs) DiscName1=Furious Discipline (Set this to the name of the Discipline you want to use) DiscType1=0 (0=Defensive, 1=Offensive) DiscEndurance1=10 (Set this to the % endurance you want to be above when triggering this disc) DiscMinHPs1=10 (Set this to the min HPs of the mob or yourself that you want to trigger this disc at.) DiscMaxHPs1=90 (Set this to the max HPs of the mob or yourself that you want to trigger this disc at.) DiscSpawnCount1=2 (Set this to the # of mobs you want to have in melee range before triggering this disc.)","title":"[MeleeStuff]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#settings","text":"AABuy=FALSE TRUE|1|FALSE|0 - Toggles whether to automatically buy AA ASRadius=20 (Set to radius to check for mobs before sitting) ASZRadius=50 (Set to Z radius to check for mobs before sitting) AutoNinja=0 (Set by /autoninja, 0=off and 1=on) AutoSit=1 (Set by /autosit, 0=off and 1=on) DrinkGem=gem1 (Set this to gem#, item, or alt; as applicable to summon food) DrinkSpell=Abundant Drink (Set this to the name of the spell/item/alt you use to summon drink) DoShrink=FALSE (TRUE|1|FALSE|0 - Toggles whether to automatically shrink) EndMedPct=80 Endurance % to med at? FoodGem=gem1 (Set this to gem#, item, or alt; as applicable to summon food) FoodSpell=Abundant Food (Set this to the name of the spell/item/alt you use to summon food) GatherPct=10 (Set this to the % mana you want to use your Gather Mana) IRCAddress= IRC Server URL IRCPort=6667 (set to the port you want MQ2IRC to use) IRCChannel=#Name (Set to the name of the channel you want MQ2IRC to utilize, remember to put a # sign in front) LeashLength=25 (Set by /leashlength) MedPct=50 (Set by /medpct) MountItem=Black Rope Bridle (This is the item you use to summon your mount) MoveUpJitter=10 (Amount of distance before \"jittering\", to look more natual) NPCRadChk=100 (Set by /npcradchk) NPCRadius=75 (Set by /npcradius) NPCZRadius=100 (Set by /npczradius) PCRadius=200 (Set by /pcradius) PCZRadius=100 (Set by /pczradius) ShrinkGem= (Set to item or gemNumber or alt for your shrink spell) ShrinkSelfOnly=TRUE (TRUE|1|FALSE|0 - Toggles whether to automatically use shrink on yourself) ShrinkSpell= (Put the name of your shrink spell or item here) SitDelay=5s (Set by /sitdelay) UseIRC=FALSE (TRUE|1|FALSE|0 - Toggles whether to utilize MQ2IRC) UseMount=1 (Set by /usemount, 0=off and 1=on) UseRods=0 (Set by /userods) RodMana=50 (Set this to the % mana you want to be below before clicking your mod rods) RodSpell=Rod of Mystical Transvergance (Set this to the spell you use to summon mod rods) RodGem=gem1 (Set this to gem you want to cast this from, or put item for items, alt for AAs)","title":"[Settings]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#generalstuff","text":"AssistDelay=5s (Set by /assistdelay) AssistMA=1 (Set by /assistma, 0=off and 1=on) CalmSpell= Put the name of your calm spell or item here CalmGem= Put gem# for spells, or item for items CanniGem1=gem6 (Set this to spell gem you want to cast your canni spell from, or put alt if an AA, or item if its an item) CanniHPs1=0 (Set this to the % HPs you want to stop using your canni AA at) CanniSpell1=Harvest (Set this to the name of your canni aa/item/spell. This section also works for Lich and any other Canni type spells that have a buff icon) CanniTotal=1 (Set this to the total cannibalization/harvest AAs/items/spells you want to check and cast) ChangeTank=FALSE (TRUE|1|FALSE|0 - Toggles automatic changing to MA2 or MA3 when MA1 dies) ChatChannel=i say (Set by /chatchannel) DoCanni=1 (Set this to 1 if you want to use your Canni AAs/items/spells when you fall below your medpct) DoWoW=1 (Set by /wow, 0=off and 1=on) DoYaulp=1 (Set this to 1 if you want to use Yaulp when mobs are close by instead of sitting) EngageHPs=95 (Set by /engagehps) InvisibilitySpell= Put the name of your invis spell or item here InvisibilityGem= Put gem# for spells, or item for items MA1=HappyGilmore (Set by /ma1) MA2=BillyMadison (Set by /ma2) MA3=MrDeeds (Set by /ma3) MaxMezLvl=93 (Set this to the maximum level your Mez spell can effect) MaxCharmLvl=89 (Set this to the Max level your Charm spell can effect) MaxCalmLvl=90 (Set this to the Max level your Calm spell can effect) Mezbroke=FALSE (TRUE|1|FALSE|0 - Toggles announcement of who broke Mez) RelayTells=1 (Set by /relaytells) ReportEvents=1 (Set by /reportevents) ReportMana=1 (Set by /reportmana) ReportManaPct=50 (Set by /reportmanapct) ReportToggles=1 (Set by /reporttoggles) ReportWoW=1 (Set by /reportwow) SpellSet1=SomeSpellSetName (Put the name of the Spell Set you want to memorize when you die while using this spell set here. Needs to match the name of the spell set you have saved in EQ to work properly) SpellSetTotal=1 (Set this to the # of unique spell sets you have defined for nukes/debuffs) StopHPs=20 (Set by /stophps) TargetLock=FALSE TRUE|1|FALSE|0 - Toggles whether to lock target when not using a MA TraderName=Traderdude01 (Set this to name of your account's Trader in order to use MQ2AutoLogin's toon switching feature via \"go to trader\" ) UseEpic=1 \\(TRUE\\|1\\|FALSE\\|0 - Toggles automatic use of Epic on MA1's target_ **UseGroupMA=TRUE** _(TRUE\\|1\\|FALSE\\|0 - Toggles whether to automatically assign the group's main assist as MA1 )_ **UseGroupTank=FALSE** _(TRUE\\|1\\|FALSE\\|0 - Toggles whether to automatically assign the group's main tank as MA1)_ **UseRaidMA=FALSE** _(TRUE\\|1\\|FALSE\\|0 - Toggles whether to automatically assign the raid's main assist \\(assist1\\) as MA1) YaulpGem1=gem6 (Set this to spell gem you want to cast your Yaulp spell from) YaulpSpell1=Yaulp VII (Set this to the name of your Yaulp spell)","title":"[GeneralStuff]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#healstuff","text":"AEHealing=0 (Set by /aeheal, 0=off and 1=on) AutoInterrupt=1 (Set by /interrupt, 0=off and 1=on) AssistHealing=0 (Set by /assistheal, 0=off and 1=on) BegFrantic=FALSE (TRUE|1|FALSE|0 - Toggle auto begging for frantic heals when below the BegFranticPCT) BegFranticPct=35 (Sets the amount of HP below which your toon will beg for a Frantic Heal) BegFranticChannel=BC (Sets the channel your toon will beg for Frantic Heals in) CancelPct=90 (Set by /cancelpct) CheckGroupInterval=3 (Set by /checkgroup, and sets how often you check group HP levels for healing) DelayedHeal=Promised Rehabilitation (This is your Delayed Heal spell) DelayedHealGem=Gem4 (This is the gem you will be casting the Delayed Heal from) DelayedHealPct=95 (Sets the HP% below which your toon will cast the Delayed Heal on MA1, use \"/delayedhealpct","title":"[HealStuff]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#_1","text":"DoRetort=TRUE* (TRUE|1|FALSE|0 - Toggles use of automatically casting Retort on MA1 during combat) UseDelayedHeal=TRUE (TRUE|1|FALSE|0 - Toggles whether to automatically cast the Delayed Heal, use \"/usedelayed\" ) DivArbHPs=20 (Set by /divarbhps) DoSotW=1 (Set by /sotw, 0=off and 1=on, Toggles casting of \"Spirit of the Wood\" or other listed spell/AA) FastHeal=Chlorotrope (This is your fast healing spell) FastHealGem=gem2 (This is the gem you cast your Fast Heal from if it's not memmed already) FranticHeal=Fifteenth Emblem (Sets which heal your toon will cast in response to a Frantic Heal call) FranticHealGem=Gem6 (Sets the gem number to memorize the Frantic Heal spell) GroupHealing=1 (Set by /healgroup, 0=off and 1=on) HealChannel=echo (Set by /healchannel) HealFD=0 (Set by /healFD, 1 only heals FD classes while FD, 0 heals normally) HealMeFirst=1 (Set by /healmefirst) HealPct=30 (Set by /healpct) HealXTarget=TRUE (TRUE|1|FALSE|0 - Toggles healing of PC and Pets on the Extended Target Window) PetHeal=Karana's Renewal (Put the name of the spell you wish to use to heal your group's pets here) PetHealGem=gem1 (Put the gem you wish to cast your pet heal from if its not memmed) PetHealing=1 (Set by /healpets) PetHealPct=50 (Set by /pethealpct) QM=TRUE (TRUE|1|FALSE|0 - Toggles automatic use of Quiet Miracle on group members whose mana is below 40m) RampHealing=0 (Set by /healramp, 0=off and 1=on) RampTank=BigDaddy (Set by /ramptank) ReportHeals=1 (Set by /reportheals) ReportInterrupts=1 (Set by /reportinterrupts) ReportSotW=1 (Set by /reportsotw) RetortSpell=Olsif's Retort (This is your Retort spell) RetortGem=Gem9 (This is the gem you want to cast the Retort spell from) SotWAA=Spirit of the Wood (This is the Actual Alt ability you have, set it to whichever one you have) SotWPct=80 (Set by /sotwpct) TankHeal=Karana's Renewal (Heal spell to use on the tank... usually your Cheal) MUST be defined and a different spell than FastHeal, even if not used. TankHealGem=gem8 (Spell slot for your tank heal spell) TankHealPct=70 (This is the % you heal MA1 at) UseBDA=0 (Set this to 1 if you want to cast Bestow Divine Aura on groupmembers when Divine Arbitration is not up) UseCH=1 (Use Chealing... or not, 1 for on, 0 for not) UseDivArb=0 (Set by /usedivarb) UseFranticHeal=TRUE (TRUE|1|FALSE|0 - Toggles whether to respond to calls for Frantic Heals) WaitToCancel=1 (Set by /waittocancel)''","title":"\")*"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#curestuff","text":"CureTotal=1 (Put your total number of cure spells here) DoCures=0 (0=Don't Cure, 1=Cure) ReportCures=0 (0=Don't Report, 1=Report) CureSpell1=Resplendent Cure (Put the name of the item, alt, or spell you use to cure with here) CureGem1=alt (Put item for item, alt for AA, or the gem# you want to use to cure with here) CurseCounters1=50 (Set this to the # of curse counters you want this to react to \\(For example if the spell cures 25 curse counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\) ) DiseaseCounters1=50 (Set this to the # of Disease counters you want this to react to \\(For example if the spell cures 25 Disease counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\) ) PoisonCounters1=50 (Set this to the # of Poison counters you want this to react to \\(For example if the spell cures 25 Poison counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\) )","title":"[CureStuff]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#selfbuffstuff","text":"SelfBuffTotal=9 (Put your total number of self buffs here) SelfBuffs=1 (Set by /selfbuff, 0=off and 1=on) ReportSelfBuffs=1 (Set by /reportselfbuffs) SelfBuffRecheck=10s (Sets how often you check to see if your self buffs are going to fade) SelfBuff1=Shrunken Goblin Skull Earring (This is the name of the item or spell you use for self buff 1) SelfBuffIcon1=Grim Aura (This is the name of self buff 1 as it shows up in your buff window) SelfBuffGem1=item (This is the gem you cast self buff 1 from, if it's an item put item, if it's an AA put alt) SelfBuffCount1=14 (Put the number of buffs you would like to stop casting this buff after, i.e if you want to leave a couple buff slots open, set your self buffs up so that the could is never equal to your max number of buff slots)","title":"[SelfBuffStuff]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#dobuffstuff","text":"DoBuffTotal=10 (Put the total number of DoBuff entries you have here) DoBuffs=1 (Set by /dobuffs, 0=off and 1=on) ReportDoBuffs=1 (Set by /reportdobuffs) DoBuffTells=0 (Set by /dobufftells) RefreshBuffs=1 (Set by /refreshbuffs) DoBuff1=Woven Grass Boots (Put the name of the item, aa, or spell you cast this buff with here) DoBuffIcon1=Spirit of Wolf (This is the name of dobuff 1 as it would show up in your buff window) DoBuffGem1=item (This is the gem you cast dobuff 1 from, if it's an item put item, if it's an AA put alt) DoBuffMana1=0 (Set this to the % mana you'd like to be above before handling this buff request) DoBuffAliases1=SoW|Spirit| (This is the string of different buff messages you want the druid bot to respond to, separated by the |. Make sure to have a | for each buff, as it needs to count them to find out how many buff request strings to check for. Also be mindful of spaces, as the buff request will not be registered without the preceding and trailing spaces defined in the alias. Ex: If the alias were set up as | Rune |. \"I could use a Rune right about now\" would trigger the request while \"Rune\" alone would not, unless the alias is actually defined with no spaces as |Rune|). DoBuffRefresh1=1 (Set this to 1 if you want to refresh this buff when it wears off) BattleBuff1=FALSE (Set this to TRUE if you would like to cast this buff with mobs nearby and/or in Combat.) RezBuff1=FALSE (This allows the buff to be cast on a corpse, IE set rez spells to TRUE, all else FALSE) BuffGem=gem3 (Set this to the spell gem you want to cast your /buff commands from)","title":"[DoBuffStuff]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#debuffstuff","text":"DebuffTotal=3 (Put the total number of Debuff entries you have here) DoDebuffs=1 (Set by /debuff, 0=off and 1=on) DoDoTs=1 (Set by /dot, 0=off and 1=on) DoMez=1 (Set by /mez, 0=off and 1=on) DoManaTaps=1 (0=off and 1=on) ReportDebuffs=1 (Set by /reportdebuffs) ReportDoTs=1 (Set by /reportdots) ReportMez=1 (Set by /reportmez) DebuffChannel=echo (Set by /debuffchannel) UseHoTT=1 (0=off and 1=on) MaxMobs=1 (Set this to the maximum number of mobs you would like AutoBot to keep track of) AllDebuffsFirst=1 (Set this to 1 if you want to land all your debuffs on each mob before moving on to debuff the next) DebuffMAFirst=1 (Set this to 1 if you want to land all your debuffs on the MA's target before moving on to any adds) DebuffSpell1=Hand of Ro (Put the name of the item, aa, or spell you cast this debuff with here) DebuffIcon1=Hand of Ro (This is the name of debuff 1 as it would show up in your buff window) DebuffGem1=gem5 (This is the gem you cast debuff 1 from, if it's an item put item, if it's an AA put alt) DebuffMana1=1 (Set this is to the % mana you would like to stop casting this debuff at.) DebuffHPs1=1 (Set this is to the % HPs you would like to start casting this debuff at.) DebuffStopHPs1=1 (Set this is to the % HPs you would like to stop casting this debuff at.) DebuffRecast1=3 (Set by /debuffrecast) DebuffSpellSet1=1 (This is the spell set you want to cast this debuff with. 0=all spell sets, 1=spell set #1, etc.) DebuffMAOnly1=1 (Set this is to 1 if you want to land this debuff on the MA's target only, and exclude adds.) DebuffNamedOnly1=1 (Set this is to 1 if you want to land this debuff on named targets only, and not normal XP mobs.) DebuffMessage1=%Target Debuffed by %Spell (This is your custom debuff message when you successfully land a debuff. Use %Target to report the target's name, %Spell to report the spell name, and %Duration to report the duration of the spell you just landed) Or set to None for no message. SpellType1=1 (Set this is to 0 for debuffs, 1 for DoTs, 2 for Mez, 3 for Mana Tap spells, 4 for AE Mez, and 5 for Charm.) DebuffCondition1=TRUE (Code conditions can be put here such as \"{Target.Body.Name.Equal[Undead]} or !{Target.Buff[Turgur's Swarm].ID} Default is TRUE )","title":"[DebuffStuff]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#nukestuff","text":"NukeTotal=1 (Set this to the number of nukes you have defined) DoNukes=1 (Set by /nuke, 0=off and 1=on) Domancy=TRUE (Set by /domancy, FALSE=off and TRUE=on) determines if wizards will use \"mancy\" AA before casting spell NukeDelay=1 (Sets the delay in re-casting nukes, usefull when you have sucky tanks with low agro. Format for a 10 second delay is either 10s or 100) WhichNuke=1 (Sets which nuke to use 1=SpellSet #1, etc.) Nuke1=Solstice Strike (Set this to the name of the Nuke you want to cast) NukeGem1=gem7 (Set this to gem#, # being the gem you want to mem this nuke in) NukeSpellSet1=1 (Set this to the spell set you want to be using to cast this nuke) NukeStartHPs1=100 (Set this to the % of the mob's HPs you want to start dropping bombs on it. Some classes might want to use a smaller nuke when a mob gets under say 30% HPs, in order to prevent wasting mana) NukeStopHPs1=30 (Set this to the % HPs you want to stop nuking with this spell at) NukeMaxMana1=30 (The highest % mana you want to be when using this nuke. Most of us will want this at 100%, but some classes \\(such as wizards\\) might want to switch out to a small nuke when under 50m, and use a bigger one when over 50m.) NukeMinMana1=30 (Set this to the lowest % mana you want to be before you stop nuking. Essentially this is where most of us set our mana reserve for other duties such as healing, debuffing, etc. For wizards though, this provides the ability to stop nuking with one spell, and start nuking with another spell below this % using the same % for MaxMana) GoMNuke1=0 (Set this to 0 if you don't want to cast this Nuke when Gift of Mana is up. Set it to 1, and it will use this nuke when GoM is up. Another addition mainly for wizards, it provides them the opportunity to get a 1 mana cost monster nuke off, instead of wasting it on a crappy lure or something. If set to 1, it will stop debuffing in favor of nuking while Gift of Mana is up. If you want to get your debuffing done over all else, then leave this at 0. Your bots will still heal and mez normally if set to 1, but debuffs are ignored as long as the buff is up) DoConcussion=1 (0=Don't Concussion, 1=Do Concussion) ConcussionSpell=Concussion (Set this to the name of the Item, Alt, or Spell you use for Concussion) ConcussionGem=gem1 (Set this to Item for items, Alt for AAs, or gem# for Spells) DoMancy=TRUE\" (WIZ only, causes macro to change the \"pyromancy, ect\" buff according to the nuke it is about to cast)","title":"[NukeStuff]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#petstuff","text":"UsePet=1 (Set by /usepet) PetMana=10 (Set this to the % mana you'd like to be above before casting your pet.) KillFlappy1=1 (0=Keep your familiar, 1=Kill your Familiar) PetFocus=Some focus item (Set this to the item you want to equip before casting your pet) PetSpell=Nature Walkers Behest (Set this to your Pet spell) PetGem=gem4 (Set this to the gem you want to cast your pet from) PetBuffTotal=1 (Set this to the total number of pet buffs you want to cast) DoPetBuffs=1 (1=pet buffing on, 0= pet buffing off) ReportPetBuffs=1 (1=pet buffing reporting on, 0= pet buffing reporting off) PetBuffRecheck=10s (Set this to how often you'd like to re-check your pet's buffs for wearing off) PetBuff1=Pet Buff Item/Spell name PetBuffIcon1=Pet Buff Item/Spell Icon name PetBuffGem1=Pet Buff Item/Spell Gem name PetShrink=1 (1=pet shrinking on, 0=pet shrinking off) PetShrinkSpell=Tiny Companion (Set this to the Name of the spell/aa/item you use to shrink your pet) PetShrinkGem=gem4 (Set this to the gem you want to shrink your pet from) PetItemTotal=1 ( Your total number of pet item buffs. If you have 2 weapons you want to summon, you currently have to define the same weapon twice, so set this accordingly) PetItemSpell1=Blazing Stone of Demise ( The name of the spell/aa/item you want to summon with) PetItemGem1=item (gem# for spells, item for items, alt for AAs.) PettHealing= (Mage Specific- TRUE/FALSE use \"self pet heals\") SelfPetHealPct= (Mage Specific- what perctage of pet HP to heal pet) SelfPetHeal= (Mage Specific- what pet only heal to use) SelfPetHealGem= (Mage Specific- what gem to use pet only heal from) PetDelayedHealing= (Mage Specific- TRUE/FALSE use Pet Delayed Heal) PetDelayedHealPct= (Mage Specific- What Hit Point percentage to cast the Pet Delayed Heal) PetDelayedHeal= (Mage Specific- What Delayed Pet Heal spell to use) PetDelayedHealGem= (Mage Specific- What gem to use Delayed Pet Heal)","title":"[PetStuff]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#holyshit","text":"TotalShit=1 (Set this to the total number of HolyShit Abilities you have defined) DoHolyShit=1 (1=On, 0=Off) HolyShit1=Oaken Guard (Name of Item/AA/Spell/disc to use) HolyShitGem1=gem9 (Put the HolyShit Gem#, alt, item, or skill) HolyShitHp1=70 (HP level you want to be below before triggering this ability) HolyShitType1=0 (0=Just cast, 1=Target yourself, 2=Target the mob hitting you, 3=Ability like \"Lay Hands\") HolyShitRUN1=0 (1=Attempt to run away from the mob towards the MA after casting this spell. 0=stand there and do nothing after casting)","title":"[HolyShit]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#combatstuff","text":"(This section is only accessed when you are in a combat state) CombatTotal=7 (Set this to the total number of Combat commands you have defined) DoCombatStuff=TRUE (TRUE|1|FALSE|0) CombatStuffRecheck=5s (Sets the amount of time between checking Combat scripts) CombatCommand1=/casting \"Mindless Hatred\" ALT (The command/script to do it all the conditions are met) CombatCondition1={Me.AltAbilityReady[Mindless Hatred]} && {Target.Distance}\\<=50 && {Me.PctAggro}\\<100 (Conditions to meet before doing the command/script)","title":"[CombatStuff]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#namedstuff","text":"(This section is only access when your target is a named, the MA's target is more then 2 levels over you, or you have more then 2 mobs on your extended target window. If you wish to change this, search/look for \"/call named\" in the main loop) NamedTotal=1 (Set this to the total number of Named scripts you have defined DoNamedStuff=TRUE (on|off|TRUE|FALSE) NamedStuffRecheck=5s (Sets the amount of time between checking Named scripts) NamedCommand1=/call Cast \"Fury of Ro\" ALT (The command/script to do if the conditions are met) NamedCondition1={Me.PctAggro}\\<80 && {Me.AltAbilityReady[Fury of Ro]} (Conditions to meet before doing command/script)","title":"[NamedStuff]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#reststuff","text":"(This section is called when you are not in combat) RestTotal=1 (Set this to the total number of Rest commands you have defined) DoRestStuff=TRUE (TRUE|1|FALSE|0) RestStuffRecheck=5s (Sets the amount of time between checking Rest scripts) RestCommand1=/useitem \"Huntsman's Ethereal Quiver\" (The command/script to do if all conditions are met) RestCondition1={FindItemCount[Ethereal Arrow]}\\<100 (The conditions to meet before doing the command/script)","title":"[RestStuff]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#bard_1","text":"DoBardSwap=False (Enables Bardswap plugin automatically on startup if set to True) DoBardMeleeSwap=False (Enables Bardswap to swap in melee weapons as well automatically on startup if set to True) AutoRestOff=0 (Set with /autorestoff) AutoRestRadius=125 (Set with /autorestradius)","title":"[Bard]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#bard-combat","text":"SongsArray1-8=Song Name *(Set via /addcombatsong |. Removed with /delcombatsong |. Add in extra entries as you gain spell gems.)*","title":"[Bard-Combat]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#bard-rest","text":"SongsArray9-18=Song Name *(Set via /addrestsong |. Removed with /delrestsong |.*","title":"[Bard-Rest]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#bard-aliases","text":"aliasname=songname (Set via /songalias \"song name\"). Songalias is basically to make it easier to change your combat/rest lineup on the fly with /addrestsong alias.","title":"[Bard-Aliases]"},{"location":"macros/gallery/autobot.mac-v4.28%2B/#troubleshootingfaq","text":"On \"where is my master list?!? The master list was moved to the RDCommon.ini file to avoid having to maintain a list on 50 different profile ini's. Open RDCommon.ini and use find \"MastereList\" to easily find where to put additional names. (A new command was added, in the channel your toon is listening to send \"add to masterlist newtoonname\" to have the macro add the new name to the list) On I set my ini to service XXXX skill/spell/AA/item but its not working Got something spelled wrong or not filled out properly. Check the examples again. Very rarely EQ has odd spaces in some names. I find it best to look up the spell/skill/item/AA off of Allakhazam.com and copy+paste to insure accurate spelling when troubleshooting problem INI's. On Dots/Debuffs that don't work, but (possibly) used to If in a group/raid with HoTT leadership skill set UseHoTT=1 in the ini file. If HoTT is not avialable you must set UseHoTT=0. Check to see the MaxMobs=5 is appropraite to the number of NPC's around you. Monsters that are green or sitting/laying down will never be debuffed/dotted. On Buff requests not being serviced Unless you indicate that you want the buff executed in combat the bot will not service the buff if there are NPC's nearby. You can have the macro ignore certain npcs that we know for certain arnt kos by adding their names in the RDCommon.ini .Alternatly the NPC check radius is adjustable in the ini. Also make sure that the buff name is spelled correctly just how it looks in the info window. Lastly make sure that the alias's are correct. in the example ini's it looks like this \"| convicton | viction | convic |\", however if you have it set up like that, the buff requester for all intents and purposes needs to put that word in a sentence. if you have the ini looking like this \"|convicton|viction|convic|\" with no spaces in between the \" | \" then the bot will reconize and ackowlege any tell that has any of the word alias's it sees. On Bot will assist but wont engage when set to The bigest thing you do to fix that is increase the NPCRadius=120, Also, consider verifiying, and tweaking the following as well. NPCZRadius=120, AssistMA=TRUE, , DoMelee=TRUE, AssistDelay=0s, MA1=Chuck_Norris, EngageHPs=101. aso remember that other options may be fighting for servicing. looting, selfbuffing, debuffing, buffing, etc.. so if melee is priority, turn everything but assisting off. also make sure that mq2melee is set up right. type /melee to bring up its console and see whats set and whats not. same thing goes. if your not a pet class turn off all that other stuff to prevent any chance of conflicts. On Cant load selo's into the ini Selos uses a \"````````````\" located to the left of the 1 key. On incorrectly mezed Targets (also known as: Oh why does my chanter mez my MA's target?) You need to properly set the target for the BOT by the Leader AA, or /varset MATarget ${Target.ID} as explained in \"On target acquisition\" On automatically mezzing NPCs when you don't want to Set /rdpause on the BOT you want to stop auto debuffing (rdpause stops all automatic activity), type \"/rdpause on\" \\(minus quotes\\) into your command channel to stop auto-activity on multiple BOT's at once, or add the NPC you wish to not mez to the immune/ignore list in RDCommon.ini. You will need to know the spell ID for the spell you wish not to cast and this can be found by ${Spell[My Mez Spell Name Here].ID} (Use /echo in front of ${Spell[My Mez Spell Name Here].ID} if your typing it in EQ) On Target acquisition AutoBot acquires the Main Assist's (MA) target in a number of ways. 1) By setting the MA in the bot's ini file and the assist delay, the macro will attempt to acquire the target of the MA after the set time. 2) By assigning the role Main Assist to someone in your group, the bot will acquire the MA's target that way. (if /udegroupassist or /usegroupma is on) 3) By assigning the role Main Tank to someone in your group, the bot will aquire the MT's target. (if /usegrouptank is on) 4) By manually setting the MA's target using /varset MATarget ${Target.ID} in whatever channel your bots listen to commands in. 5) By using \"/useraidassist\" or \"/useraidma\" (remember to turn off /usegroupma and /usegrouptank if you do this) the macro will aquire a target assist the raids main assist (Raid Assist 1) On non-working clickies If you have a clicky with no recast timer that isn't working. (Such as Time's Antithesis, Veil of Lost Hopes, et al...) The odds are you have an old version of MQ2. As of the 20 th of Dec Zip, these issues have been fixed. if you don't know what version of the zip you have, try simply running /echo ${FindItem[item name].Timer} and seeing what value it returns. Anything other than zero is Bad(tm) and denotes an out-of-date zip file. Update, update, update! Also your last inventory slot must NOT be a bag. Clickies usable from inventory, even if usable in other slots, will be used from base inventory slot 8. On chain-casting clickies or buffs Often times this is due to misspelling something in the INI file, or it can be the resulting buff icon differs from the spell icon in some manner. You will note there is now an \"Icon\" entry for buffs. Carefully double check the actual name of the buff ingame and match the INI to it. On out-of-date alias lists If you are attempting to reload your alias to your macroquest.ini. You must remove the Version=X.XX from RD_common.ini. Doing this will make the Version mismatch appear and reload all the alias's On healing not working On heals that never cancel even though target's health goes above CancelPct Tankheal must be defined as a valid spell and different than FastHeal=, even if you are not using Tankheals (UseCH setting). On Green (non-XP) corpses that are not auto looted These are not looted automatically. To trigger looting, at any time, send your bot \"You gain party experience!\" in whatever channel it is set to monitor. On late/not reliable buffs Bots will not buff in combat. Also it will not sit to memorize buffs if a NPC is within a certain range, although using a horse remedies this. On non-refreshing buffs on bots themselves Buffs from the [DoBuffStuff] or buff command are not rebuffed on the same bot that cast them, because you dont get a buff wear off message when they wear off yourself. If you want certain buffs kept up on your bot, you should use [SelfBuffStuff] section. On bots that keep targeting some npc, even though it hasn't been told it to assist and kill it Your MA could have a corpse close, and that is being assisted to get a target. Or you could be using an old version of autobot. On non-following bots Target someone and type /stick. If that doesnt work you have issues with MQ2MoveUtils . On Clerics that spam Complete Heals and interrupt them all Make sure you have UseDivArb set to 0 if you dont have that AA. // There's more to this than just the DivArb setting... but this might be one issue\\ On non-attacking pets/bots Check your MQ2Melee settings(the wiki for it is here ). You need a properly configured MQ2Melee for your pets/bots to attack and do other various melee-related tasks. On items being identified You aren't using the IRC plugin. By default /i is mapped to /identify. No slash commands work or error: \"DoCommand - Couldn't parse '/...' \" This usually happens when you update MQ2 and overwrite the macroquest.ini file. This file contains all the aliases (ie. the slash commands). To fix, delete the Version=X.XX line in RD_Common.ini, which will write all the aliases back to the macroquest.ini file when you restart Autobot. In general, you do not need to overwrite the Macroquest.ini file when updating MQ2. When your bot doesn't mem spells Your ini is set up wrong. Your XXXXGem#= entry needs to read \"gem#\", not just #. At least, 9 times out of 10 that's the problem. Check one of the sample ini files for an example. On My bots dont aquire targets when everything is set up properly Each toon needs a breastplate, it has to do with the way autobot checks deaths and runs the auto accept rez feature, it also disables assisting, for a good reason...","title":"Troubleshooting/FAQ"},{"location":"macros/gallery/autobot.mac/","tags":["macro"],"text":"AutoBot.mac \u00b6 Description \u00b6 AutoBot.mac by A_Druid_00 is a versatile macro for automating a lot of tasks for your character in group, raid and solo situations. Requirements \u00b6 AutoBot.mac does not run on a default MQ2 compilation, it has a few extra dependencies. Some of the below items are plugins and need to be compiled, just like MacroQuest2. Please read the appropriate documentation for each plugin. The Include files should be added to the same directory that AutoBot will be run from. Plugins: MQ2MoveUtils by Outlander This is so the macro knows about stick, /makecamp, and /moveto. Check out the wiki . MQ2Exchange by Wassup This is so that item swapping, casting, and swapping back will work MQ2Debuffs by pinkfloydx33 This is so the macro can keep track of your debuff counters. MQ2Melee by s0rcier So as to properly configure melee/ranged combat and various options thereof, check out the wiki . Includes Files: Wait4Rez.inc Handles pre-rez situations. spell_routines.inc Handles spell casting, from gems, items and AAs. QuickBeg2.inc Handles buff begging. Ninjadvloot.inc Handles looting. Getting Started \u00b6 Pointers for AutoBot stuffs. (We should make a multi-boxing wiki sometime, we could link it here...) In addition to the documentation for the various plugins used directly by AutoBot (see links in Requirements ) The following is useful info on other plugins you can use to enhance your AutoBot experience. MQ2Clip by Vaft, Cr4zyb4rd, et al. Manages the clip plane of backgrounded sessions. Your CPU will thank you. MQ2FPS by Lax. Helps manage framerates of EQ sessions, greatly helps multi-botting... Check out the wiki MQ2Eqbc by Omnictrl Is an alternative way to communicate with your bots. Configure your EQBC.ini with the following: [Last Connect] Server=192.168.1.101 (This must be edited to match the ip and port you have the server listening to) Port=2112 [Settings] AutoConnect=1 AllowControl=1 You will also need to change the channel setting in your AutoBot.ini from \"i say\" to \"bc\" to use it for bot to bot communication. Don't forget that if you are getting identify spam that you check loot.ini and QB2Settings.ini for any i say or i msg commands. QB2Settings.ini defaults to i msg and needs to be changed if using EQBC. Recommend MQ2NetBots , MQ2NetStat , and MQ2NetHeal to go along with this. More information available on Page 59 of the original AutoBot thread. Using AutoBot.mac \u00b6 1) The main macro file, 'yyy.mac' (called 'RaidDruid.mac' in the .zip file) can be named to 'AutoBot.mac' or 'AnythingYouWant.mac'. 2) To start the macro in EverQuest with MQ2 running; type '/macro yyy.mac Note: The first time you run the macro, it will generate an ini file called RD_xxx.ini 3) Configure your RD_xxx.ini, where 'xxx' is your character name. 3a) Peruse through RDCommon.ini and add in any mobs you might want to have certains spells ignore. I tend to put Guild Lobby and PoK NPCs as immune to mez, makes life simpler when walking around and I forget to pause my bots. 4)Restart Autobot after configuring RD_xxx.ini. 5) Enjoy the show. Bot Commands \u00b6 There are a few non-alias (no / required) commands available to Autobot. These commands will cause the bots to respond to a few general status/movement commands without the obvious /alias, for easy use in a group setting. Bots will only respond to commands sent by someone in the MasterList buffqueue This command has your bot respond in your ChatChannel with the # of buffs left in his \"buff queue\". Handy for deciding whether to continue pulling/crawling after a group wipe. Keep in mind that some longer cast spells such as Night's Dark Terror for enchanters have extremely long recast times, and so can sit in the queue for a while. follow This command will have your bots /stick to you. They will sit to med if needed and within your LeashLength. They will also break off to attack if /domelee is turned on and the MA is fighting something. They will also service buff requests and do debuffing if applicable and they are not moving. mana All bots with a mana pool bigger than 0 will report their current % mana in your /chatchannel. medtime All bots with a mana pool bigger than 0 will report their currently estimated time to full mana based on their current Mana Regen divided by their mana level. move up This command tells your bots to move up to your current location. If they are set to /makecamp, they will reset their camp X and Y loc to your current position. If they are following, they will resume following once they reach your position (This is handy for positioning your bots in front of doors/bridges before moving through/across them) stop This command tells the bots to stop following wherever they happen to be standing. Slash Commands \u00b6 AutoBot.mac comes with a great set of predefined Slash Commands for easy and fast in-game configuration. Uber macro pause/unpause hotkey (bound to for me, unlike normal EQ hotkeys 1-10, it works even while casting) Add the following lines to MQ2CustomBinds .txt: name=StartPauseDB down=/docommand ${If[!${Macro.Name.Equal[RaidDruid.mac]}, /mac RaidDruid.mac, /varset RDPause ${If[${RDPause}==1,0,1]}]} up= Then in game type _/bind StartPauseDB _ to bind that to your __ key. When pressed your __ key will start AutoBot if it's not already started. If it's already running it will toggle the pause on the macro. Here's a full list, divided into sub-sections for each category of Slash Commands there are (Each toggle alias works by itself, or will take an argument of ON/OFF, TRUE/FALSE, or 1/0): Melee \u00b6 /domelee Toggles automatic engaging of the MA's target in melee.(Must have the plugin MQ2Melee configured properly) General \u00b6 /addalert ${Target.CleanName} Adds targetted NPC to the list which will be ignored in the RDCommon.ini and will perform normally when near these npc's not treating them as hostile. ${Target.CleanName} can also be replaced with the name of the mob typed out or the ini file can be manually edited. /assistdelay Sets the amount of time the bot will wait between MA assists. (Ex. /assistdelay 5s) /assistma Toggles assisting of your designated MA1, MA2, and MA3. Turning this off essentially disables Melee, Nuking, DoTing, and Debuffing /autoninja Toggles auto looting of the nearest corpse after each XP gained message. Will only loot droppable items. Must have the plugin MQ2MoveUtils for this to work. /autosit Toggles auto sitting to med. Not much to say here. /chatchannel Sets the chat channel the bot reports to, (Ex. /chatchannel \"i say\"\ufffd) /docanni Toggles auto casting of your cannibalization spell when below your MedPct and above your CanniHPs. Also works for wizard harvest, mana robe, and necromancer Lich spells. /doyaulp Toggles auto casting of your yaulp spell when below your MedPct and there are NPCs within your NPCRadius. /engagehps Sets the % of the mobs HPs you want to start melee/debuffing/dotting/nuking (Ex. /engagehps 95) /ma1 Assigns a PC as Main Assist 1. (Ex. /ma1 BoDuke) /ma2 Assigns a PC as Main Assist 2. (Ex. /ma2 LukeDuke) /ma3 Assigns a PC as Main Assist 3. (Ex. /ma3 DaisyDuke) /leashlength Sets the distance your bot will allow itself to get from his follow target before resuming follow (Ex. /leashlength 25) /listspells Returns a list of all configured Spell Sets in your ini. /loadini \"IniFileName\" Loads a pre-configured ini file. /medpct Sets the % of Mana you want to sit or summon your horse at. (Ex. /medpct 50) /npcradius Sets the Radius (in feet) around you that you want to watch NPCs using Assist healing and Assisting the MA (Ex. /npcradius 200) /npczradius Sets the Radius (in feet) above/below you that you want to watch NPCs using Assist healing and Assisting the MA (Ex. /npczradius 200) /rdpause Toggles AutoBot's active functions on and off. /relaytells Toggles automatic reporting of tells sent to the bot in your configured /chatchannel /reportevents Toggles automatic reporting of your bot's status messages such as low food/drink, stunned/unstunned, encumbered, etc. /reportmana Toggles automatic reporting of your mana status if you get below the medpct, only reports once before going above the medpct. /reportmanapct Defines the point at which you want to start reporting your mana status to your chat channel. /reporttoggles Toggles automatic reporting of your toggle status of any /commands you send your bot in the ChatChannel. /reportwow Toggles automatic reporting of Wrath of the Wild on the MA /saveini \"IniFileName\" Creates an ini file named \"IniFileName\" /sitdelay Sets the amount of time you want to wait before sitting after casting any spell that might be considered aggro. (Ex. /sitdelay 5s) /stophps Sets the % of the mob's HPs you want to stop nuking and debuffing. (Ex. /stophps 10) /usemount Toggles automatic mount summoning at your /medpct, if this is off and /autosit is on, it will sit to med instead of summoning a mount. /npcradchk Sets the Radius (in feet) around you that defines how close mobs are allow before you stop buffing to avoid aggro (Ex. /npcradchk 100) Healing \u00b6 /aeheal Toggles on AE Healing. This creates an array of every PC within PCRadius, and cycles through every one of them, checking their HPs against your defined HealPct, and casts heals if appropriate. Super handy on mobs with AE Rampage or AE Damage effects. /assistheal Toggles on Assist Healing. This creates an array of every NPC within NPCRadius, and assists them to find the target of their aggression, and heals that target if necessary. Super handy for general clearing on raids before getting to named. Also causes target to constantly ping-pong wildly all over the place trying to find a target to heal /cancelpct Set this to the percentage of HPs you want AutoBot to cancel heals at. (Ex. /cancelpct 90) /checkgroup Sets the number of seconds you'd like to wait between HP evaluations /divarbhps Sets the % HPs you want to cast Divine Arbitration at if a groupmember gets below it (Ex. /divarbhps 25) /healchannel Sets the channel your bots use to report heals when they are cast. /healfd Toggles healing of FD classes (SK, Necro, Monk) only while they are FD (Ex. /healfd ON will only heal if they are FD) /healgroup Toggles healing of your group. With this on, it will heal groupmembers that are below HealPct /healmefirst Toggles healing of yourself over any group members. If you are mid-cast to heal someone else and your HPs fall below the HealPct, you will cancel it and heal yourself first. Self preservation at its finest. /healpct Sets the % of HPs you want to heal other PCs at. (ex. /healpct 70) /healpets Toggles healing of any pets in the group if they are below the PetHealPct /healramp Toggles automatic healing of your Rampage tank anytime a RAMPAGE message is detected. /interrupt Toggles interrupting debuffs/nukes/dots to heal group members. Some people like to just let their group members die instead of ducking a nuke to heal them. This is for those people! /pcradius Sets the Radius (in feet) around you that you want to watch PC HPs using AE healing (Ex. /pcradius 200) /pczradius Sets the Radius (in feet) above and below you that you want to watch PC HPs using AE healing (Ex. /pczradius 50) /pethealpct Sets the % of HPs you will heal pets at. (Ex. /pethealpct 40) /ramptank Sets the Rampage Tank that you check whenever a RAMPAGE message is seen with /healramp on. (Ex. /ramptank UncleJesse) /reportheals Toggles automatic reporting of heals in the ChatChannel /reportinterrupts Toggles automatic reporting of interrupts to heal in the ChatChannel /reportsotw Toggles automatic reporting of Spirit of the Wood in the ChatChannel /sotw Toggle auto casting of Spirit of the Wood /sotwpct Set this to the average group HP percentage you want it to auto cast Spirit of the Wood at. (Ex. /sotwpct 75) /tankhealpct Sets the % you start Chealing. Due to some predictive logic the Cheal may start earlier. Set this to the abslute floor you want to start CH at. /usech Toggles using your Cheal spell on MA1 on or off. It will monitor the tank's HPs and if he's taking enough damage to be dead in less than 20 seconds, it will duck out of whatever RD is currently doing and start a CH. If the tank's HPs stop falling and level off above the TankHealPct, it will cancel CH and wait until the tank's HPs fall again. /usedivarb Toggles using your divine arbitration or cleric epic 1.5 (if you have it) when a group member falls below the DivArbHPs. /waittocancel Toggle. When turned on, this will wait until your heals have less than .5 seconds left before making the decison to cancel the heal. Buffing \u00b6 AutoBot queues buff requests and casts them when appropriate. It will not cast buffs unless there are no mobs within 20 feet of the bot, it's not in combat, and it's not moving. It will hold onto those buff requests until you are no longer moving, not in combat, and there are no mobs within 20 feet. If you zone, all stored buffs are flushed, and you have to beg again. By default the bot only listens for /tells and IRC chat for buffing. If you want him to listen in other channels, you need to add #chat group to listen in group, or #chat chat to listen in EQ's chat channels; to the RaidDruid.mac file under the #chat tell line right near the top of the macro. More information on the #chat function can be found in the MacroQuest manual . Aliases: /buff \"Spell Name/Alias\" [Name | Group] Use this alias to send a buff command to your bot, will also accept buff aliases. You can use this to cast items and AAs as well as spells. If you specify Group instead of a name, it will buff your whole group with that spell, if it is a single target spell. In addition, you can cast it on any spawn including NPCs, Pets, Corpses, etc. (Ex. /buff \"Steeloak Skin\"\ufffd Bob, or /buff Oak Bob if oak is an alias for steeloak skin). If the /buff command utilizes a DoBuff alias, the buff request is queued and will not be performed during combat. If the Spell/AA/item name itself is used in the /buff command it is cast immediately. (Ex. /buff \"Exodus\" would fire right away, while /buff \"Evac\" would not). **WARNING: YOUR BOTS WILL NOT WATCH THE GROUP'S HPS OR ANYTHING ELSE WHILE EXECUTING A /BUFF COMMAND, USE IT WHEN YOU KNOW YOU DON'T NEED TO BE DOING ANYTHING ELSE IMPORTANT LIKE HEALING** /dobuffs Toggles automatic casting of buff requests made via /tell /dobufftells Toggles sending automatic replies to buff requests made via /tell /refreshbuffs Toggles automatic refreshing of buffs. Only buffs that are set to refresh in the ini will be refreshed. /reportdobuffs Toggles automatic reporting of buffs in the ChatChannel /reportselfbuffs Toggles automatic reporting of self buffs in the ChatChannel /selfbuff Toggles Self Buffing. Useful if you happen to be in an environment where having all your self buffs up puts you over the limit /wow Toggles automatic casting of Wrath of the Wild on your designated MA. I figure an extra 650 damage every 4 minutes cant hurt, since its mana free and all. Debuffing \u00b6 /debuff Toggles Auto debuffing. Pretty much all there is to say about that /debuffchannel Sets the channel your bots will use to report debuffs /dot Toggle Auto DoTing of mobs /mez Toggles Auto mezzing for those places where mez==bad /reportdebuffs Toggles reporting of debuffs in the ChatChannel /reportdots Toggles automatic report of DoTs in the ChatChannel /reportmez Toggles automatic report of Mezzes in the ChatChannel /usehott Toggles using the Health of Target's Target Leadership ability to determine a mob's aggro. Nuking \u00b6 /nuke Toggles Auto Nuking the MA's target. /nukedelay Sets the delay between chain nuking. If your tank sucks, or are in a kite group raise this delay to prevent agro. /nukeset Returns the current spell set # you are nuking from. Pet \u00b6 /petbuff Toggles automatic buffing of your pet /usepet Toggles automatic summoning and sending in of pet to melee. Curing \u00b6 This portion of the macro requires the MQ2Debuffs plugin by pinkfloydx33. See the requirements . /docures Toggles auto-curing on and off. /reportcures Toggles auto-cure reporting on and off. Bard \u00b6 This portion of the macro makes use of the MQ2Twist (See MQ2Twist wiki ) and MQ2BardSwap plugins. /addcombatsong |\"\" Adds the Alias or Song Name to the combat twist if a slot is available. /addrestsong |\"\" Adds the Alias or Song Name to the rest twist if a slot is available. /autorestoff When turned on it watches with each loop to see if any npc's are within the radius defined and will switch off rest songs if any are detected /autorestradius Sets the radius at which your bard will stop twisting when NPCs are present /combatsongs on|off Enables or Disables automatically twisting the combat twist temporarily. /delcombatsong |\"\" Removes the Alias or Song Name from the combat twist present. /delrestsong |\"\" Removes the Alias or Song Name from the rest twist if present. /listsongs combat|rest|all Lists the songs set to be twisted for the given twist type. /songalias \"Song Name\" Creates an alias for the given song name (must be in quotes if it has a space). INI entries \u00b6 .ini files will be automatically created and populated with default values if they do not exist. [MeleeStuff] \u00b6 DoMelee=1 (Set by /domelee) DoRanged=1 (0=Don't use ranged attacks, 1=Use Ranged attacks) StickArgs=10 pin (Set by /stickargs) DiscTotal=1 (Set this to the total number of melee disciplines you have defined) UseDiscs=1 (0=Don't Disc, 1=Use Discs) DiscName1=Furious Discipline (Set this to the name of the Discipline you want to use) DiscType1=0 (0=Defensive, 1=Offensive) DiscEndurance1=10 (Set this to the % endurance you want to be above when triggering this disc) DiscMinHPs1=10 (Set this to the min HPs of the mob or yourself that you want to trigger this disc at.) DiscMaxHPs1=90 (Set this to the max HPs of the mob or yourself that you want to trigger this disc at.) DiscSpawnCount1=2 (Set this to the # of mobs you want to have in melee range before triggering this disc.) [Settings] \u00b6 LeashLength=25 (Set by /leashlength) NPCRadius=75 (Set by /npcradius) NPCZRadius=100 (Set by /npczradius) PCRadius=200 (Set by /pcradius) PCZRadius=100 (Set by /pczradius) AutoNinja=0 (Set by /autoninja, 0=off and 1=on) FoodSpell=Abundant Food (Set this to the name of the spell/item/alt you use to summon food) FoodGem=gem1 (Set this to gem#, item, or alt; as applicable to summon food) DrinkSpell=Abundant Drink (Set this to the name of the spell/item/alt you use to summon drink) DrinkGem=gem1 (Set this to gem#, item, or alt; as applicable to summon food) AutoSit=1 (Set by /autosit, 0=off and 1=on) SitDelay=5s (Set by /sitdelay) UseMount=1 (Set by /usemount, 0=off and 1=on) MountItem=Black Rope Bridle (This is the item you use to summon your mount) MedPct=50 (Set by /medpct) UseRods=0 (Set by /userods) RodMana=50 (Set this to the % mana you want to be below before clicking your mod rods) RodSpell=Rod of Mystical Transvergance (Set this to the spell you use to summon mod rods) RodGem=gem1 (Set this to gem you want to cast this from, or put item for items, alt for AAs) GatherPct=10 (Set this to the % mana you want to use your Gather Mana) NPCRadChk=100 (Set by /npcradchk) [GeneralStuff] \u00b6 ChatChannel=i say (Set by /chatchannel) MasterList=|AlGore|BobDole|DanQuayle| (This is the list of people you want to be able to send you commands) AssistMA=1 (Set by /assistma, 0=off and 1=on) AssistDelay=5s (Set by /assistdelay) MA1=HappyGilmore (Set by /ma1) MA2=BillyMadison (Set by /ma2) MA3=MrDeeds (Set by /ma3) EngageHPs=95 (Set by /engagehps) StopHPs=20 (Set by /stophps) ReportEvents=1 (Set by /reportevents) ReportToggles=1 (Set by /reporttoggles) RelayTells=1 (Set by /relaytells) ReportMana=1 (Set by /reportmana) ReportManaPct=50 (Set by /reportmanapct) SpellSetTotal=1 (Set this to the # of unique spell sets you have defined for nukes/debuffs) SpellSet1=SomeSpellSetName (Put the name of the Spell Set you want to memorize when you die while using this spell set here. Needs to match the name of the spell set you have saved in EQ to work properly) CanniTotal=1 (Set this to the total cannibalization/harvest AAs/items/spells you want to check and cast) DoCanni=1 (Set this to 1 if you want to use your Canni AAs/items/spells when you fall below your medpct) CanniSpell1=Harvest (Set this to the name of your canni aa/item/spell. This section also works for Lich and any other Canni type spells that have a buff icon) CanniGem1=gem6 (Set this to spell gem you want to cast your canni spell from, or put alt if an AA, or item if its an item) CanniHPs1=0 (Set this to the % HPs you want to stop using your canni AA at) DoWoW=1 (Set by /wow, 0=off and 1=on) ReportWoW=1 (Set by /reportwow) DoYaulp=1 (Set this to 1 if you want to use Yaulp when mobs are close by instead of sitting) YaulpSpell1=Yaulp VII (Set this to the name of your Yaulp spell) YaulpGem1=gem6 (Set this to spell gem you want to cast your Yaulp spell from) [HealStuff] \u00b6 ReportHeals=1 (Set by /reportheals) ReportInterrupts=1 (Set by /reportinterrupts) HealChannel=echo (Set by /healchannel) HealMeFirst=1 (Set by /healmefirst) HealFD=0 (Set by /healFD, 1 only heals FD classes while FD, 0 heals normally) GroupHealing=1 (Set by /healgroup, 0=off and 1=on) CheckGroupInterval=3 (Set by /checkgroup, and sets how often you check group HP levels for healing) AutoInterrupt=1 (Set by /interrupt, 0=off and 1=on) RampHealing=0 (Set by /healramp, 0=off and 1=on) RampTank=BigDaddy (Set by /ramptank) AEHealing=0 (Set by /aeheal, 0=off and 1=on) AssistHealing=0 (Set by /assistheal, 0=off and 1=on) HealPct=30 (Set by /healpct) CancelPct=90 (Set by /cancelpct) WaitToCancel=1 (Set by /waittocancel) FastHeal=Chlorotrope (This is your fast healing spell) FastHealGem=gem2 (This is the gem you cast your Fast Heal from if it's not memmed already) UseCH=1 (Use Chealing... or not, 1 for on, 0 for not) TankHealPct=70 (This is the % you heal MA1 at) TankHeal=Karana's Renewal (Heal spell to use on the tank... usually your Cheal) MUST be defined and a different spell than FastHeal, even if not used. TankHealGem=gem8 (Spell slot for your tank heal spell) PetHealing=1 (Set by /healpets) PetHealPct=50 (Set by /pethealpct) PetHeal=Karana's Renewal (Put the name of the spell you wish to use to heal your group's pets here) PetHealGem=gem1 (Put the gem you wish to cast your pet heal from if its not memmed) DoSotW=1 (Set by /sotw, 0=off and 1=on) ReportSotW=1 (Set by /reportsotw) SotWAA=Spirit of the Grove (This is the Actual Alt ability you have, set it to whichever one you have) SotWPct=80 (Set by /sotwpct) UseDivArb=0 (Set by /usedivarb) DivArbHPs=20 (Set by /divarbhps) UseBDA=0 (Set this to 1 if you want to cast Bestow Divine Aura on groupmembers when Divine Arbitration is not up) [CureStuff] \u00b6 CureTotal=1 (Put your total number of cure spells here) DoCures=0 (0=Don't Cure, 1=Cure) ReportCures=0 (0=Don't Report, 1=Report) CureSpell1=Resplendent Cure (Put the name of the item, alt, or spell you use to cure with here) CureGem1=alt (Put item for item, alt for AA, or the gem# you want to use to cure with here) CurseCounters1=50 (Set this to the # of curse counters you want this to react to \\(For example if the spell cures 25 curse counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\) ) DiseaseCounters1=50 (Set this to the # of Disease counters you want this to react to \\(For example if the spell cures 25 Disease counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\) ) PoisonCounters1=50 (Set this to the # of Poison counters you want this to react to \\(For example if the spell cures 25 Poison counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\) ) [SelfBuffStuff] \u00b6 SelfBuffTotal=9 (Put your total number of self buffs here) SelfBuffs=1 (Set by /selfbuff, 0=off and 1=on) ReportSelfBuffs=1 (Set by /reportselfbuffs) SelfBuffRecheck=10s (Sets how often you check to see if your self buffs are going to fade) SelfBuff1=Shrunken Goblin Skull Earring (This is the name of the item or spell you use for self buff 1) SelfBuffIcon1=Grim Aura (This is the name of self buff 1 as it shows up in your buff window) SelfBuffGem1=item (This is the gem you cast self buff 1 from, if it's an item put item, if it's an AA put alt) SelfBuffCount1=14 (Put the number of buffs you would like to stop casting this buff after, i.e if you want to leave a couple buff slots open, set your self buffs up so that the could is never equal to your max number of buff slots) [DoBuffStuff] \u00b6 DoBuffTotal=10 (Put the total number of DoBuff entries you have here) DoBuffs=1 (Set by /dobuffs, 0=off and 1=on) ReportDoBuffs=1 (Set by /reportdobuffs) DoBuffTells=0 (Set by /dobufftells) RefreshBuffs=1 (Set by /refreshbuffs) DoBuff1=Woven Grass Boots (Put the name of the item, aa, or spell you cast this buff with here) DoBuffIcon1=Spirit of Wolf (This is the name of dobuff 1 as it would show up in your buff window) DoBuffGem1=item (This is the gem you cast dobuff 1 from, if it's an item put item, if it's an AA put alt) DoBuffMana1=0 (Set this to the % mana you'd like to be above before handling this buff request) DoBuffAliases1=SoW|Spirit| (This is the string of different buff messages you want the druid bot to respond to, separated by the |. Make sure to have a | for each buff, as it needs to count them to find out how many buff request strings to check for. Also be mindful of spaces, as the buff request will not be registered without the preceding and trailing spaces defined in the alias. Ex: If the alias were set up as | Rune |. \"I could use a Rune right about now\" would trigger the request while \"Rune\" alone would not, unless the alias is actually defined with no spaces as |Rune|). DoBuffRefresh1=1 (Set this to 1 if you want to refresh this buff when it wears off) BattleBuff1=FALSE (Set this to TRUE if you would like to cast this buff with mobs nearby and/or in Combat.) BuffGem=gem3 (Set this to the spell gem you want to cast your /buff commands from) [DebuffStuff] \u00b6 DebuffTotal=3 (Put the total number of Debuff entries you have here) DoDebuffs=1 (Set by /debuff, 0=off and 1=on) DoDoTs=1 (Set by /dot, 0=off and 1=on) DoMez=1 (Set by /mez, 0=off and 1=on) DoManaTaps=1 (0=off and 1=on) ReportDebuffs=1 (Set by /reportdebuffs) ReportDoTs=1 (Set by /reportdots) ReportMez=1 (Set by /reportmez) DebuffChannel=echo (Set by /debuffchannel) UseHoTT=1 (0=off and 1=on) MaxMobs=1 (Set this to the maximum number of mobs you would like AutoBot to keep track of) AllDebuffsFirst=1 (Set this to 1 if you want to land all your debuffs on each mob before moving on to debuff the next) DebuffMAFirst=1 (Set this to 1 if you want to land all your debuffs on the MA's target before moving on to any adds) DebuffSpell1=Hand of Ro (Put the name of the item, aa, or spell you cast this debuff with here) DebuffIcon1=Hand of Ro (This is the name of debuff 1 as it would show up in your buff window) DebuffGem1=gem5 (This is the gem you cast debuff 1 from, if it's an item put item, if it's an AA put alt) DebuffMana1=1 (Set this is to the % mana you would like to stop casting this debuff at.) DebuffHPs1=1 (Set this is to the % HPs you would like to start casting this debuff at.) DebuffStopHPs1=1 (Set this is to the % HPs you would like to stop casting this debuff at.) DebuffRecast1=3 (Set by /debuffrecast) DebuffSpellSet1=1 (This is the spell set you want to cast this debuff with. 0=all spell sets, 1=spell set #1, etc.) DebuffMAOnly1=1 (Set this is to 1 if you want to land this debuff on the MA's target only, and exclude adds.) DebuffNamedOnly1=1 (Set this is to 1 if you want to land this debuff on named targets only, and not normal XP mobs.) DebuffMessage1=%Target Debuffed by %Spell (This is your custom debuff message when you successfully land a debuff. Use %Target to report the target's name, %Spell to report the spell name, and %Duration to report the duration of the spell you just landed) Or set to None for no message. SpellType1=1 (Set this is to 0 for debuffs, 1 for DoTs, 2 for Mez, and 3 for Mana Tap spells) DebuffCondition1=TRUE (Code conditions can be put here such as \"{Target.Body.Name.Equal[Undead]} or !{Target.Buff[Turgur's Swarm].ID} Default is TRUE ) [NukeStuff] \u00b6 NukeTotal=1 (Set this to the number of nukes you have defined) DoNukes=1 (Set by /nuke, 0=off and 1=on) NukeDelay=1 (Sets the delay in re-casting nukes, usefull when you have sucky tanks with low agro. Format for a 10 second delay is either 10s or 100) WhichNuke=1 (Sets which nuke to use 1=SpellSet #1, etc.) Nuke1=Solstice Strike (Set this to the name of the Nuke you want to cast) NukeGem1=gem7 (Set this to gem#, # being the gem you want to mem this nuke in) NukeSpellSet1=1 (Set this to the spell set you want to be using to cast this nuke) NukeStartHPs1=100 (Set this to the % of the mob's HPs you want to start dropping bombs on it. Some classes might want to use a smaller nuke when a mob gets under say 30% HPs, in order to prevent wasting mana) NukeStopHPs1=30 (Set this to the % HPs you want to stop nuking with this spell at) NukeMaxMana1=30 (The highest % mana you want to be when using this nuke. Most of us will want this at 100%, but some classes \\(such as wizards\\) might want to switch out to a small nuke when under 50m, and use a bigger one when over 50m.) NukeMinMana1=30 (Set this to the lowest % mana you want to be before you stop nuking. Essentially this is where most of us set our mana reserve for other duties such as healing, debuffing, etc. For wizards though, this provides the ability to stop nuking with one spell, and start nuking with another spell below this % using the same % for MaxMana) GoMNuke1=0 (Set this to 0 if you don't want to cast this Nuke when Gift of Mana is up. Set it to 1, and it will use this nuke when GoM is up. Another addition mainly for wizards, it provides them the opportunity to get a 1 mana cost monster nuke off, instead of wasting it on a crappy lure or something. If set to 1, it will stop debuffing in favor of nuking while Gift of Mana is up. If you want to get your debuffing done over all else, then leave this at 0. Your bots will still heal and mez normally if set to 1, but debuffs are ignored as long as the buff is up) DoConcussion=1 (0=Don't Concussion, 1=Do Concussion) ConcussionSpell=Concussion (Set this to the name of the Item, Alt, or Spell you use for Concussion) ConcussionGem=gem1 (Set this to Item for items, Alt for AAs, or gem# for Spells) [PetStuff] \u00b6 UsePet=1 (Set by /usepet) PetMana=10 (Set this to the % mana you'd like to be above before casting your pet.) KillFlappy1=1 (0=Keep your familiar, 1=Kill your Familiar) PetFocus=Some focus item (Set this to the item you want to equip before casting your pet) PetSpell=Nature Walkers Behest (Set this to your Pet spell) PetGem=gem4 (Set this to the gem you want to cast your pet from) PetBuffTotal=1 (Set this to the total number of pet buffs you want to cast) DoPetBuffs=1 (1=pet buffing on, 0= pet buffing off) ReportPetBuffs=1 (1=pet buffing reporting on, 0= pet buffing reporting off) PetBuffRecheck=10s (Set this to how often you'd like to re-check your pet's buffs for wearing off) PetBuff1=Pet Buff Item/Spell name PetBuffIcon1=Pet Buff Item/Spell Icon name PetBuffGem1=Pet Buff Item/Spell Gem name PetShrink=1 (1=pet shrinking on, 0=pet shrinking off) PetShrinkSpell=Tiny Companion (Set this to the Name of the spell/aa/item you use to shrink your pet) PetShrinkGem=gem4 (Set this to the gem you want to shrink your pet from) PetItemTotal=1 ( Your total number of pet item buffs. If you have 2 weapons you want to summon, you currently have to define the same weapon twice, so set this accordingly) PetItemSpell1=Blazing Stone of Demise ( The name of the spell/aa/item you want to summon with) PetItemGem1=item (gem# for spells, item for items, alt for AAs.) [HolyShit] \u00b6 TotalShit=1 (Set this to the total number of HolyShit Abilities you have defined) DoHolyShit=1 (1=On, 0=Off) HolyShit1=Oaken Guard (Name of Item/AA/Spell/disc to use) HolyShitGem1=gem9 (Put the HolyShit Gem#, alt, item, or skill) HolyShitHp1=70 (HP level you want to be below before triggering this ability) HolyShitType1=0 (0=Just cast, 1=Target yourself, 2=Target the mob hitting you, 3=Ability like \"Lay Hands\") HolyShitRUN1=0 (1=Attempt to run away from the mob towards the MA after casting this spell. 0=stand there and do nothing after casting) [Bard] \u00b6 DoBardSwap=False (Enables Bardswap plugin automatically on startup if set to True) DoBardMeleeSwap=False (Enables Bardswap to swap in melee weapons as well automatically on startup if set to True) AutoRestOff=0 (Set with /autorestoff) AutoRestRadius=125 (Set with /autorestradius) [Bard-Combat] \u00b6 SongsArray1-8=Song Name *(Set via /addcombatsong |. Removed with /delcombatsong |. Add in extra entries as you gain spell gems.)* [Bard-Rest] \u00b6 SongsArray9-18=Song Name *(Set via /addrestsong |. Removed with /delrestsong |.* [Bard-Aliases] \u00b6 aliasname=songname (Set via /songalias \"song name\"). Songalias is basically to make it easier to change your combat/rest lineup on the fly with /addrestsong alias. Troubleshooting/FAQ \u00b6 On I set my ini to service XXXX skill/spell/aa but its not working got something spelled wrong or not filled out properly. check the examples again. On Dots/Debuffs that don't work, but (possibly) used to If in a group/raid with HoTT leadership skill set UseHoTT=1 in the ini file. If HoTT is not avialable you must set UseHoTT=0. Check to see the MaxMobs=5 is appropraite to the number of NPC's around you. Monsters that are green or sitting/laying down will never be debuffed/dotted. On Buff requests not being serviced Unless you indicate that you want the buff executed in combat the bot will not service the buff if there are NPC's nearby. You can have the macro ignore certain npcs that we know for certain arnt kos by adding their names in the RDCommon.ini .Alternatly the NPC check radius is adjustable in the ini. Also make sure that the buff name is spelled correctly just how it looks in the info window. Lastly make sure that the alias's are correct. in the example ini's it looks like this \"| convicton | viction | convic |\", however if you have it set up like that, the buff requester for all intents and purposes needs to put that word in a sentence. if you have the ini looking like this \"|convicton|viction|convic|\" with no spaces in between the \" | \" then the bot will reconize and ackowlege any tell that has any of the word alias's it sees. On Bot will assist but wont engage when set to The bigest thing you do to fix that is increase the NPCRadius=120, Also, consider verifiying, and tweaking the following as well. NPCZRadius=120, AssistMA=TRUE, , DoMelee=TRUE, AssistDelay=0s, MA1=Chuck_Norris, EngageHPs=101. aso remember that other options may be fighting for servicing. looting, selfbuffing, debuffing, buffing, etc.. so if melee is priority, turn everything but assisting off. also make sure that mq2melee is set up right. type /melee to bring up its console and see whats set and whats not. same thing goes. if your not a pet class turn off all that other stuff to prevent any chance of conflicts. On Cant load selo's into the ini Selos uses a \"````````````\" located to the left of the 1 key. On incorrectly mezed Targets (also known as: Oh why does my chanter mez my MA's target?) You need to properly set the target for the BOT by the Leader AA, or /varset MATarget ${Target.ID} as explained in \"On target acquisition\" On automatically mezzing NPCs when you don't want to Set /rdpause on the BOT you want to stop auto debuffing (rdpause stops all automatic activity), type \"/rdpause on\" \\(minus quotes\\) into your command channel to stop auto-activity on multiple BOT's at once, or add the NPC you wish to not mez to the immune/ignore list in RDCommon.ini. You will need to know the spell ID for the spell you wish not to cast and this can be found by ${Spell[My Mez Spell Name Here].ID} (Use /echo in front of ${Spell[My Mez Spell Name Here].ID} if your typing it in EQ) On Target acquisition AutoBot acquires the Main Assist's (MA) target in a number of ways. 1) By setting the MA in the bot's ini file and the assist delay, the macro will attempt to acquire the target of the MA after the set time. 2) By using the Delegate Main Assist leadership AA, the bot will acquire the MA's target that way. 3) By manually setting the MA's target using /varset MATarget ${Target.ID} in whatever channel your bots listen to commands in. On non-working clickies If you have a clicky with no recast timer that isn't working. (Such as Time's Antithesis, Veil of Lost Hopes, et al...) The odds are you have an old version of MQ2. As of the 20 th of Dec Zip, these issues have been fixed. if you don't know what version of the zip you have, try simply running /echo ${FindItem[item name].Timer} and seeing what value it returns. Anything other than zero is Bad(tm) and denotes an out-of-date zip file. Update, update, update! Also your last inventory slot must NOT be a bag. Clickies usable from inventory, even if usable in other slots, will be used from base inventory slot 8. On out-of-date alias lists If you are attempting to reload your alias to your macroquest.ini. You must remove the Version=X.XX from RD_common.ini. Doing this will make the Version mismatch appear and reload all the alias's On healing not working On heals that never cancel even though target's health goes above CancelPct Tankheal must be defined as a valid spell and different than FastHeal=, even if you are not using Tankheals (UseCH setting). On Green (non-XP) corpses that are not auto looted These are not looted automatically. To trigger looting, at any time, send your bot \"You gain party experience!\" in whatever channel it is set to monitor. On late/not reliable buffs Bots will not buff in combat. Also it will not sit to memorize buffs if a NPC is within a certain range, although using a horse remedies this. On non-refreshing buffs on bots themselves Buffs from the [DoBuffStuff] or buff command are not rebuffed on the same bot that cast them, because you dont get a buff wear off message when they wear off yourself. If you want certain buffs kept up on your bot, you should use [SelfBuffStuff] section. On bots that keep targeting some npc, even though it hasn't been told it to assist and kill it Your MA could have a corpse close, and that is being assisted to get a target. Or you could be using an old version of autobot. On non-following bots Target someone and type /stick. If that doesnt work you have issues with MQ2MoveUtils . On Clerics that spam Complete Heals and interrupt them all Make sure you have UseDivArb set to 0 if you dont have that AA. // There's more to this than just the DivArb setting... but this might be one issue\\ On non-attacking pets/bots Check your MQ2Melee settings(the wiki for it is here ). You need a properly configured MQ2Melee for your pets/bots to attack and do other various melee-related tasks. On items being identified You aren't using the IRC plugin. By default /i is mapped to /identify. No slash commands work or error: \"DoCommand - Couldn't parse '/...' \" This usually happens when you update MQ2 and overwrite the macroquest.ini file. This file contains all the aliases (ie. the slash commands). To fix, delete the Version=X.XX line in RD_Common.ini, which will write all the aliases back to the macroquest.ini file when you restart Autobot. In general, you do not need to overwrite the Macroquest.ini file when updating MQ2. When your bot doesn't mem spells Your ini is set up wrong. Your XXXXGem#= entry needs to read \"gem#\", not just #. At least, 9 times out of 10 that's the problem. Check one of the sample ini files for an example. On My bots dont aquire targets when everything is set up properly Each toon needs a breastplate, it has to do with the way autobot checks deaths and runs the auto accept rez feature, it also disables assisting, for a good reason...","title":"AutoBot.mac"},{"location":"macros/gallery/autobot.mac/#autobotmac","text":"","title":"AutoBot.mac"},{"location":"macros/gallery/autobot.mac/#description","text":"AutoBot.mac by A_Druid_00 is a versatile macro for automating a lot of tasks for your character in group, raid and solo situations.","title":"Description"},{"location":"macros/gallery/autobot.mac/#requirements","text":"AutoBot.mac does not run on a default MQ2 compilation, it has a few extra dependencies. Some of the below items are plugins and need to be compiled, just like MacroQuest2. Please read the appropriate documentation for each plugin. The Include files should be added to the same directory that AutoBot will be run from. Plugins: MQ2MoveUtils by Outlander This is so the macro knows about stick, /makecamp, and /moveto. Check out the wiki . MQ2Exchange by Wassup This is so that item swapping, casting, and swapping back will work MQ2Debuffs by pinkfloydx33 This is so the macro can keep track of your debuff counters. MQ2Melee by s0rcier So as to properly configure melee/ranged combat and various options thereof, check out the wiki . Includes Files: Wait4Rez.inc Handles pre-rez situations. spell_routines.inc Handles spell casting, from gems, items and AAs. QuickBeg2.inc Handles buff begging. Ninjadvloot.inc Handles looting.","title":"Requirements"},{"location":"macros/gallery/autobot.mac/#getting-started","text":"Pointers for AutoBot stuffs. (We should make a multi-boxing wiki sometime, we could link it here...) In addition to the documentation for the various plugins used directly by AutoBot (see links in Requirements ) The following is useful info on other plugins you can use to enhance your AutoBot experience. MQ2Clip by Vaft, Cr4zyb4rd, et al. Manages the clip plane of backgrounded sessions. Your CPU will thank you. MQ2FPS by Lax. Helps manage framerates of EQ sessions, greatly helps multi-botting... Check out the wiki MQ2Eqbc by Omnictrl Is an alternative way to communicate with your bots. Configure your EQBC.ini with the following: [Last Connect] Server=192.168.1.101 (This must be edited to match the ip and port you have the server listening to) Port=2112 [Settings] AutoConnect=1 AllowControl=1 You will also need to change the channel setting in your AutoBot.ini from \"i say\" to \"bc\" to use it for bot to bot communication. Don't forget that if you are getting identify spam that you check loot.ini and QB2Settings.ini for any i say or i msg commands. QB2Settings.ini defaults to i msg and needs to be changed if using EQBC. Recommend MQ2NetBots , MQ2NetStat , and MQ2NetHeal to go along with this. More information available on Page 59 of the original AutoBot thread.","title":"Getting Started"},{"location":"macros/gallery/autobot.mac/#using-autobotmac","text":"1) The main macro file, 'yyy.mac' (called 'RaidDruid.mac' in the .zip file) can be named to 'AutoBot.mac' or 'AnythingYouWant.mac'. 2) To start the macro in EverQuest with MQ2 running; type '/macro yyy.mac Note: The first time you run the macro, it will generate an ini file called RD_xxx.ini 3) Configure your RD_xxx.ini, where 'xxx' is your character name. 3a) Peruse through RDCommon.ini and add in any mobs you might want to have certains spells ignore. I tend to put Guild Lobby and PoK NPCs as immune to mez, makes life simpler when walking around and I forget to pause my bots. 4)Restart Autobot after configuring RD_xxx.ini. 5) Enjoy the show.","title":"Using AutoBot.mac"},{"location":"macros/gallery/autobot.mac/#bot-commands","text":"There are a few non-alias (no / required) commands available to Autobot. These commands will cause the bots to respond to a few general status/movement commands without the obvious /alias, for easy use in a group setting. Bots will only respond to commands sent by someone in the MasterList buffqueue This command has your bot respond in your ChatChannel with the # of buffs left in his \"buff queue\". Handy for deciding whether to continue pulling/crawling after a group wipe. Keep in mind that some longer cast spells such as Night's Dark Terror for enchanters have extremely long recast times, and so can sit in the queue for a while. follow This command will have your bots /stick to you. They will sit to med if needed and within your LeashLength. They will also break off to attack if /domelee is turned on and the MA is fighting something. They will also service buff requests and do debuffing if applicable and they are not moving. mana All bots with a mana pool bigger than 0 will report their current % mana in your /chatchannel. medtime All bots with a mana pool bigger than 0 will report their currently estimated time to full mana based on their current Mana Regen divided by their mana level. move up This command tells your bots to move up to your current location. If they are set to /makecamp, they will reset their camp X and Y loc to your current position. If they are following, they will resume following once they reach your position (This is handy for positioning your bots in front of doors/bridges before moving through/across them) stop This command tells the bots to stop following wherever they happen to be standing.","title":"Bot Commands"},{"location":"macros/gallery/autobot.mac/#slash-commands","text":"AutoBot.mac comes with a great set of predefined Slash Commands for easy and fast in-game configuration. Uber macro pause/unpause hotkey (bound to for me, unlike normal EQ hotkeys 1-10, it works even while casting) Add the following lines to MQ2CustomBinds .txt: name=StartPauseDB down=/docommand ${If[!${Macro.Name.Equal[RaidDruid.mac]}, /mac RaidDruid.mac, /varset RDPause ${If[${RDPause}==1,0,1]}]} up= Then in game type _/bind StartPauseDB _ to bind that to your __ key. When pressed your __ key will start AutoBot if it's not already started. If it's already running it will toggle the pause on the macro. Here's a full list, divided into sub-sections for each category of Slash Commands there are (Each toggle alias works by itself, or will take an argument of ON/OFF, TRUE/FALSE, or 1/0):","title":"Slash Commands"},{"location":"macros/gallery/autobot.mac/#melee","text":"/domelee Toggles automatic engaging of the MA's target in melee.(Must have the plugin MQ2Melee configured properly)","title":"Melee"},{"location":"macros/gallery/autobot.mac/#general","text":"/addalert ${Target.CleanName} Adds targetted NPC to the list which will be ignored in the RDCommon.ini and will perform normally when near these npc's not treating them as hostile. ${Target.CleanName} can also be replaced with the name of the mob typed out or the ini file can be manually edited. /assistdelay Sets the amount of time the bot will wait between MA assists. (Ex. /assistdelay 5s) /assistma Toggles assisting of your designated MA1, MA2, and MA3. Turning this off essentially disables Melee, Nuking, DoTing, and Debuffing /autoninja Toggles auto looting of the nearest corpse after each XP gained message. Will only loot droppable items. Must have the plugin MQ2MoveUtils for this to work. /autosit Toggles auto sitting to med. Not much to say here. /chatchannel Sets the chat channel the bot reports to, (Ex. /chatchannel \"i say\"\ufffd) /docanni Toggles auto casting of your cannibalization spell when below your MedPct and above your CanniHPs. Also works for wizard harvest, mana robe, and necromancer Lich spells. /doyaulp Toggles auto casting of your yaulp spell when below your MedPct and there are NPCs within your NPCRadius. /engagehps Sets the % of the mobs HPs you want to start melee/debuffing/dotting/nuking (Ex. /engagehps 95) /ma1 Assigns a PC as Main Assist 1. (Ex. /ma1 BoDuke) /ma2 Assigns a PC as Main Assist 2. (Ex. /ma2 LukeDuke) /ma3 Assigns a PC as Main Assist 3. (Ex. /ma3 DaisyDuke) /leashlength Sets the distance your bot will allow itself to get from his follow target before resuming follow (Ex. /leashlength 25) /listspells Returns a list of all configured Spell Sets in your ini. /loadini \"IniFileName\" Loads a pre-configured ini file. /medpct Sets the % of Mana you want to sit or summon your horse at. (Ex. /medpct 50) /npcradius Sets the Radius (in feet) around you that you want to watch NPCs using Assist healing and Assisting the MA (Ex. /npcradius 200) /npczradius Sets the Radius (in feet) above/below you that you want to watch NPCs using Assist healing and Assisting the MA (Ex. /npczradius 200) /rdpause Toggles AutoBot's active functions on and off. /relaytells Toggles automatic reporting of tells sent to the bot in your configured /chatchannel /reportevents Toggles automatic reporting of your bot's status messages such as low food/drink, stunned/unstunned, encumbered, etc. /reportmana Toggles automatic reporting of your mana status if you get below the medpct, only reports once before going above the medpct. /reportmanapct Defines the point at which you want to start reporting your mana status to your chat channel. /reporttoggles Toggles automatic reporting of your toggle status of any /commands you send your bot in the ChatChannel. /reportwow Toggles automatic reporting of Wrath of the Wild on the MA /saveini \"IniFileName\" Creates an ini file named \"IniFileName\" /sitdelay Sets the amount of time you want to wait before sitting after casting any spell that might be considered aggro. (Ex. /sitdelay 5s) /stophps Sets the % of the mob's HPs you want to stop nuking and debuffing. (Ex. /stophps 10) /usemount Toggles automatic mount summoning at your /medpct, if this is off and /autosit is on, it will sit to med instead of summoning a mount. /npcradchk Sets the Radius (in feet) around you that defines how close mobs are allow before you stop buffing to avoid aggro (Ex. /npcradchk 100)","title":"General"},{"location":"macros/gallery/autobot.mac/#healing","text":"/aeheal Toggles on AE Healing. This creates an array of every PC within PCRadius, and cycles through every one of them, checking their HPs against your defined HealPct, and casts heals if appropriate. Super handy on mobs with AE Rampage or AE Damage effects. /assistheal Toggles on Assist Healing. This creates an array of every NPC within NPCRadius, and assists them to find the target of their aggression, and heals that target if necessary. Super handy for general clearing on raids before getting to named. Also causes target to constantly ping-pong wildly all over the place trying to find a target to heal /cancelpct Set this to the percentage of HPs you want AutoBot to cancel heals at. (Ex. /cancelpct 90) /checkgroup Sets the number of seconds you'd like to wait between HP evaluations /divarbhps Sets the % HPs you want to cast Divine Arbitration at if a groupmember gets below it (Ex. /divarbhps 25) /healchannel Sets the channel your bots use to report heals when they are cast. /healfd Toggles healing of FD classes (SK, Necro, Monk) only while they are FD (Ex. /healfd ON will only heal if they are FD) /healgroup Toggles healing of your group. With this on, it will heal groupmembers that are below HealPct /healmefirst Toggles healing of yourself over any group members. If you are mid-cast to heal someone else and your HPs fall below the HealPct, you will cancel it and heal yourself first. Self preservation at its finest. /healpct Sets the % of HPs you want to heal other PCs at. (ex. /healpct 70) /healpets Toggles healing of any pets in the group if they are below the PetHealPct /healramp Toggles automatic healing of your Rampage tank anytime a RAMPAGE message is detected. /interrupt Toggles interrupting debuffs/nukes/dots to heal group members. Some people like to just let their group members die instead of ducking a nuke to heal them. This is for those people! /pcradius Sets the Radius (in feet) around you that you want to watch PC HPs using AE healing (Ex. /pcradius 200) /pczradius Sets the Radius (in feet) above and below you that you want to watch PC HPs using AE healing (Ex. /pczradius 50) /pethealpct Sets the % of HPs you will heal pets at. (Ex. /pethealpct 40) /ramptank Sets the Rampage Tank that you check whenever a RAMPAGE message is seen with /healramp on. (Ex. /ramptank UncleJesse) /reportheals Toggles automatic reporting of heals in the ChatChannel /reportinterrupts Toggles automatic reporting of interrupts to heal in the ChatChannel /reportsotw Toggles automatic reporting of Spirit of the Wood in the ChatChannel /sotw Toggle auto casting of Spirit of the Wood /sotwpct Set this to the average group HP percentage you want it to auto cast Spirit of the Wood at. (Ex. /sotwpct 75) /tankhealpct Sets the % you start Chealing. Due to some predictive logic the Cheal may start earlier. Set this to the abslute floor you want to start CH at. /usech Toggles using your Cheal spell on MA1 on or off. It will monitor the tank's HPs and if he's taking enough damage to be dead in less than 20 seconds, it will duck out of whatever RD is currently doing and start a CH. If the tank's HPs stop falling and level off above the TankHealPct, it will cancel CH and wait until the tank's HPs fall again. /usedivarb Toggles using your divine arbitration or cleric epic 1.5 (if you have it) when a group member falls below the DivArbHPs. /waittocancel Toggle. When turned on, this will wait until your heals have less than .5 seconds left before making the decison to cancel the heal.","title":"Healing"},{"location":"macros/gallery/autobot.mac/#buffing","text":"AutoBot queues buff requests and casts them when appropriate. It will not cast buffs unless there are no mobs within 20 feet of the bot, it's not in combat, and it's not moving. It will hold onto those buff requests until you are no longer moving, not in combat, and there are no mobs within 20 feet. If you zone, all stored buffs are flushed, and you have to beg again. By default the bot only listens for /tells and IRC chat for buffing. If you want him to listen in other channels, you need to add #chat group to listen in group, or #chat chat to listen in EQ's chat channels; to the RaidDruid.mac file under the #chat tell line right near the top of the macro. More information on the #chat function can be found in the MacroQuest manual . Aliases: /buff \"Spell Name/Alias\" [Name | Group] Use this alias to send a buff command to your bot, will also accept buff aliases. You can use this to cast items and AAs as well as spells. If you specify Group instead of a name, it will buff your whole group with that spell, if it is a single target spell. In addition, you can cast it on any spawn including NPCs, Pets, Corpses, etc. (Ex. /buff \"Steeloak Skin\"\ufffd Bob, or /buff Oak Bob if oak is an alias for steeloak skin). If the /buff command utilizes a DoBuff alias, the buff request is queued and will not be performed during combat. If the Spell/AA/item name itself is used in the /buff command it is cast immediately. (Ex. /buff \"Exodus\" would fire right away, while /buff \"Evac\" would not). **WARNING: YOUR BOTS WILL NOT WATCH THE GROUP'S HPS OR ANYTHING ELSE WHILE EXECUTING A /BUFF COMMAND, USE IT WHEN YOU KNOW YOU DON'T NEED TO BE DOING ANYTHING ELSE IMPORTANT LIKE HEALING** /dobuffs Toggles automatic casting of buff requests made via /tell /dobufftells Toggles sending automatic replies to buff requests made via /tell /refreshbuffs Toggles automatic refreshing of buffs. Only buffs that are set to refresh in the ini will be refreshed. /reportdobuffs Toggles automatic reporting of buffs in the ChatChannel /reportselfbuffs Toggles automatic reporting of self buffs in the ChatChannel /selfbuff Toggles Self Buffing. Useful if you happen to be in an environment where having all your self buffs up puts you over the limit /wow Toggles automatic casting of Wrath of the Wild on your designated MA. I figure an extra 650 damage every 4 minutes cant hurt, since its mana free and all.","title":"Buffing"},{"location":"macros/gallery/autobot.mac/#debuffing","text":"/debuff Toggles Auto debuffing. Pretty much all there is to say about that /debuffchannel Sets the channel your bots will use to report debuffs /dot Toggle Auto DoTing of mobs /mez Toggles Auto mezzing for those places where mez==bad /reportdebuffs Toggles reporting of debuffs in the ChatChannel /reportdots Toggles automatic report of DoTs in the ChatChannel /reportmez Toggles automatic report of Mezzes in the ChatChannel /usehott Toggles using the Health of Target's Target Leadership ability to determine a mob's aggro.","title":"Debuffing"},{"location":"macros/gallery/autobot.mac/#nuking","text":"/nuke Toggles Auto Nuking the MA's target. /nukedelay Sets the delay between chain nuking. If your tank sucks, or are in a kite group raise this delay to prevent agro. /nukeset Returns the current spell set # you are nuking from.","title":"Nuking"},{"location":"macros/gallery/autobot.mac/#pet","text":"/petbuff Toggles automatic buffing of your pet /usepet Toggles automatic summoning and sending in of pet to melee.","title":"Pet"},{"location":"macros/gallery/autobot.mac/#curing","text":"This portion of the macro requires the MQ2Debuffs plugin by pinkfloydx33. See the requirements . /docures Toggles auto-curing on and off. /reportcures Toggles auto-cure reporting on and off.","title":"Curing"},{"location":"macros/gallery/autobot.mac/#bard","text":"This portion of the macro makes use of the MQ2Twist (See MQ2Twist wiki ) and MQ2BardSwap plugins. /addcombatsong |\"\" Adds the Alias or Song Name to the combat twist if a slot is available. /addrestsong |\"\" Adds the Alias or Song Name to the rest twist if a slot is available. /autorestoff When turned on it watches with each loop to see if any npc's are within the radius defined and will switch off rest songs if any are detected /autorestradius Sets the radius at which your bard will stop twisting when NPCs are present /combatsongs on|off Enables or Disables automatically twisting the combat twist temporarily. /delcombatsong |\"\" Removes the Alias or Song Name from the combat twist present. /delrestsong |\"\" Removes the Alias or Song Name from the rest twist if present. /listsongs combat|rest|all Lists the songs set to be twisted for the given twist type. /songalias \"Song Name\" Creates an alias for the given song name (must be in quotes if it has a space).","title":"Bard"},{"location":"macros/gallery/autobot.mac/#ini-entries","text":".ini files will be automatically created and populated with default values if they do not exist.","title":"INI entries"},{"location":"macros/gallery/autobot.mac/#meleestuff","text":"DoMelee=1 (Set by /domelee) DoRanged=1 (0=Don't use ranged attacks, 1=Use Ranged attacks) StickArgs=10 pin (Set by /stickargs) DiscTotal=1 (Set this to the total number of melee disciplines you have defined) UseDiscs=1 (0=Don't Disc, 1=Use Discs) DiscName1=Furious Discipline (Set this to the name of the Discipline you want to use) DiscType1=0 (0=Defensive, 1=Offensive) DiscEndurance1=10 (Set this to the % endurance you want to be above when triggering this disc) DiscMinHPs1=10 (Set this to the min HPs of the mob or yourself that you want to trigger this disc at.) DiscMaxHPs1=90 (Set this to the max HPs of the mob or yourself that you want to trigger this disc at.) DiscSpawnCount1=2 (Set this to the # of mobs you want to have in melee range before triggering this disc.)","title":"[MeleeStuff]"},{"location":"macros/gallery/autobot.mac/#settings","text":"LeashLength=25 (Set by /leashlength) NPCRadius=75 (Set by /npcradius) NPCZRadius=100 (Set by /npczradius) PCRadius=200 (Set by /pcradius) PCZRadius=100 (Set by /pczradius) AutoNinja=0 (Set by /autoninja, 0=off and 1=on) FoodSpell=Abundant Food (Set this to the name of the spell/item/alt you use to summon food) FoodGem=gem1 (Set this to gem#, item, or alt; as applicable to summon food) DrinkSpell=Abundant Drink (Set this to the name of the spell/item/alt you use to summon drink) DrinkGem=gem1 (Set this to gem#, item, or alt; as applicable to summon food) AutoSit=1 (Set by /autosit, 0=off and 1=on) SitDelay=5s (Set by /sitdelay) UseMount=1 (Set by /usemount, 0=off and 1=on) MountItem=Black Rope Bridle (This is the item you use to summon your mount) MedPct=50 (Set by /medpct) UseRods=0 (Set by /userods) RodMana=50 (Set this to the % mana you want to be below before clicking your mod rods) RodSpell=Rod of Mystical Transvergance (Set this to the spell you use to summon mod rods) RodGem=gem1 (Set this to gem you want to cast this from, or put item for items, alt for AAs) GatherPct=10 (Set this to the % mana you want to use your Gather Mana) NPCRadChk=100 (Set by /npcradchk)","title":"[Settings]"},{"location":"macros/gallery/autobot.mac/#generalstuff","text":"ChatChannel=i say (Set by /chatchannel) MasterList=|AlGore|BobDole|DanQuayle| (This is the list of people you want to be able to send you commands) AssistMA=1 (Set by /assistma, 0=off and 1=on) AssistDelay=5s (Set by /assistdelay) MA1=HappyGilmore (Set by /ma1) MA2=BillyMadison (Set by /ma2) MA3=MrDeeds (Set by /ma3) EngageHPs=95 (Set by /engagehps) StopHPs=20 (Set by /stophps) ReportEvents=1 (Set by /reportevents) ReportToggles=1 (Set by /reporttoggles) RelayTells=1 (Set by /relaytells) ReportMana=1 (Set by /reportmana) ReportManaPct=50 (Set by /reportmanapct) SpellSetTotal=1 (Set this to the # of unique spell sets you have defined for nukes/debuffs) SpellSet1=SomeSpellSetName (Put the name of the Spell Set you want to memorize when you die while using this spell set here. Needs to match the name of the spell set you have saved in EQ to work properly) CanniTotal=1 (Set this to the total cannibalization/harvest AAs/items/spells you want to check and cast) DoCanni=1 (Set this to 1 if you want to use your Canni AAs/items/spells when you fall below your medpct) CanniSpell1=Harvest (Set this to the name of your canni aa/item/spell. This section also works for Lich and any other Canni type spells that have a buff icon) CanniGem1=gem6 (Set this to spell gem you want to cast your canni spell from, or put alt if an AA, or item if its an item) CanniHPs1=0 (Set this to the % HPs you want to stop using your canni AA at) DoWoW=1 (Set by /wow, 0=off and 1=on) ReportWoW=1 (Set by /reportwow) DoYaulp=1 (Set this to 1 if you want to use Yaulp when mobs are close by instead of sitting) YaulpSpell1=Yaulp VII (Set this to the name of your Yaulp spell) YaulpGem1=gem6 (Set this to spell gem you want to cast your Yaulp spell from)","title":"[GeneralStuff]"},{"location":"macros/gallery/autobot.mac/#healstuff","text":"ReportHeals=1 (Set by /reportheals) ReportInterrupts=1 (Set by /reportinterrupts) HealChannel=echo (Set by /healchannel) HealMeFirst=1 (Set by /healmefirst) HealFD=0 (Set by /healFD, 1 only heals FD classes while FD, 0 heals normally) GroupHealing=1 (Set by /healgroup, 0=off and 1=on) CheckGroupInterval=3 (Set by /checkgroup, and sets how often you check group HP levels for healing) AutoInterrupt=1 (Set by /interrupt, 0=off and 1=on) RampHealing=0 (Set by /healramp, 0=off and 1=on) RampTank=BigDaddy (Set by /ramptank) AEHealing=0 (Set by /aeheal, 0=off and 1=on) AssistHealing=0 (Set by /assistheal, 0=off and 1=on) HealPct=30 (Set by /healpct) CancelPct=90 (Set by /cancelpct) WaitToCancel=1 (Set by /waittocancel) FastHeal=Chlorotrope (This is your fast healing spell) FastHealGem=gem2 (This is the gem you cast your Fast Heal from if it's not memmed already) UseCH=1 (Use Chealing... or not, 1 for on, 0 for not) TankHealPct=70 (This is the % you heal MA1 at) TankHeal=Karana's Renewal (Heal spell to use on the tank... usually your Cheal) MUST be defined and a different spell than FastHeal, even if not used. TankHealGem=gem8 (Spell slot for your tank heal spell) PetHealing=1 (Set by /healpets) PetHealPct=50 (Set by /pethealpct) PetHeal=Karana's Renewal (Put the name of the spell you wish to use to heal your group's pets here) PetHealGem=gem1 (Put the gem you wish to cast your pet heal from if its not memmed) DoSotW=1 (Set by /sotw, 0=off and 1=on) ReportSotW=1 (Set by /reportsotw) SotWAA=Spirit of the Grove (This is the Actual Alt ability you have, set it to whichever one you have) SotWPct=80 (Set by /sotwpct) UseDivArb=0 (Set by /usedivarb) DivArbHPs=20 (Set by /divarbhps) UseBDA=0 (Set this to 1 if you want to cast Bestow Divine Aura on groupmembers when Divine Arbitration is not up)","title":"[HealStuff]"},{"location":"macros/gallery/autobot.mac/#curestuff","text":"CureTotal=1 (Put your total number of cure spells here) DoCures=0 (0=Don't Cure, 1=Cure) ReportCures=0 (0=Don't Report, 1=Report) CureSpell1=Resplendent Cure (Put the name of the item, alt, or spell you use to cure with here) CureGem1=alt (Put item for item, alt for AA, or the gem# you want to use to cure with here) CurseCounters1=50 (Set this to the # of curse counters you want this to react to \\(For example if the spell cures 25 curse counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\) ) DiseaseCounters1=50 (Set this to the # of Disease counters you want this to react to \\(For example if the spell cures 25 Disease counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\) ) PoisonCounters1=50 (Set this to the # of Poison counters you want this to react to \\(For example if the spell cures 25 Poison counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\) )","title":"[CureStuff]"},{"location":"macros/gallery/autobot.mac/#selfbuffstuff","text":"SelfBuffTotal=9 (Put your total number of self buffs here) SelfBuffs=1 (Set by /selfbuff, 0=off and 1=on) ReportSelfBuffs=1 (Set by /reportselfbuffs) SelfBuffRecheck=10s (Sets how often you check to see if your self buffs are going to fade) SelfBuff1=Shrunken Goblin Skull Earring (This is the name of the item or spell you use for self buff 1) SelfBuffIcon1=Grim Aura (This is the name of self buff 1 as it shows up in your buff window) SelfBuffGem1=item (This is the gem you cast self buff 1 from, if it's an item put item, if it's an AA put alt) SelfBuffCount1=14 (Put the number of buffs you would like to stop casting this buff after, i.e if you want to leave a couple buff slots open, set your self buffs up so that the could is never equal to your max number of buff slots)","title":"[SelfBuffStuff]"},{"location":"macros/gallery/autobot.mac/#dobuffstuff","text":"DoBuffTotal=10 (Put the total number of DoBuff entries you have here) DoBuffs=1 (Set by /dobuffs, 0=off and 1=on) ReportDoBuffs=1 (Set by /reportdobuffs) DoBuffTells=0 (Set by /dobufftells) RefreshBuffs=1 (Set by /refreshbuffs) DoBuff1=Woven Grass Boots (Put the name of the item, aa, or spell you cast this buff with here) DoBuffIcon1=Spirit of Wolf (This is the name of dobuff 1 as it would show up in your buff window) DoBuffGem1=item (This is the gem you cast dobuff 1 from, if it's an item put item, if it's an AA put alt) DoBuffMana1=0 (Set this to the % mana you'd like to be above before handling this buff request) DoBuffAliases1=SoW|Spirit| (This is the string of different buff messages you want the druid bot to respond to, separated by the |. Make sure to have a | for each buff, as it needs to count them to find out how many buff request strings to check for. Also be mindful of spaces, as the buff request will not be registered without the preceding and trailing spaces defined in the alias. Ex: If the alias were set up as | Rune |. \"I could use a Rune right about now\" would trigger the request while \"Rune\" alone would not, unless the alias is actually defined with no spaces as |Rune|). DoBuffRefresh1=1 (Set this to 1 if you want to refresh this buff when it wears off) BattleBuff1=FALSE (Set this to TRUE if you would like to cast this buff with mobs nearby and/or in Combat.) BuffGem=gem3 (Set this to the spell gem you want to cast your /buff commands from)","title":"[DoBuffStuff]"},{"location":"macros/gallery/autobot.mac/#debuffstuff","text":"DebuffTotal=3 (Put the total number of Debuff entries you have here) DoDebuffs=1 (Set by /debuff, 0=off and 1=on) DoDoTs=1 (Set by /dot, 0=off and 1=on) DoMez=1 (Set by /mez, 0=off and 1=on) DoManaTaps=1 (0=off and 1=on) ReportDebuffs=1 (Set by /reportdebuffs) ReportDoTs=1 (Set by /reportdots) ReportMez=1 (Set by /reportmez) DebuffChannel=echo (Set by /debuffchannel) UseHoTT=1 (0=off and 1=on) MaxMobs=1 (Set this to the maximum number of mobs you would like AutoBot to keep track of) AllDebuffsFirst=1 (Set this to 1 if you want to land all your debuffs on each mob before moving on to debuff the next) DebuffMAFirst=1 (Set this to 1 if you want to land all your debuffs on the MA's target before moving on to any adds) DebuffSpell1=Hand of Ro (Put the name of the item, aa, or spell you cast this debuff with here) DebuffIcon1=Hand of Ro (This is the name of debuff 1 as it would show up in your buff window) DebuffGem1=gem5 (This is the gem you cast debuff 1 from, if it's an item put item, if it's an AA put alt) DebuffMana1=1 (Set this is to the % mana you would like to stop casting this debuff at.) DebuffHPs1=1 (Set this is to the % HPs you would like to start casting this debuff at.) DebuffStopHPs1=1 (Set this is to the % HPs you would like to stop casting this debuff at.) DebuffRecast1=3 (Set by /debuffrecast) DebuffSpellSet1=1 (This is the spell set you want to cast this debuff with. 0=all spell sets, 1=spell set #1, etc.) DebuffMAOnly1=1 (Set this is to 1 if you want to land this debuff on the MA's target only, and exclude adds.) DebuffNamedOnly1=1 (Set this is to 1 if you want to land this debuff on named targets only, and not normal XP mobs.) DebuffMessage1=%Target Debuffed by %Spell (This is your custom debuff message when you successfully land a debuff. Use %Target to report the target's name, %Spell to report the spell name, and %Duration to report the duration of the spell you just landed) Or set to None for no message. SpellType1=1 (Set this is to 0 for debuffs, 1 for DoTs, 2 for Mez, and 3 for Mana Tap spells) DebuffCondition1=TRUE (Code conditions can be put here such as \"{Target.Body.Name.Equal[Undead]} or !{Target.Buff[Turgur's Swarm].ID} Default is TRUE )","title":"[DebuffStuff]"},{"location":"macros/gallery/autobot.mac/#nukestuff","text":"NukeTotal=1 (Set this to the number of nukes you have defined) DoNukes=1 (Set by /nuke, 0=off and 1=on) NukeDelay=1 (Sets the delay in re-casting nukes, usefull when you have sucky tanks with low agro. Format for a 10 second delay is either 10s or 100) WhichNuke=1 (Sets which nuke to use 1=SpellSet #1, etc.) Nuke1=Solstice Strike (Set this to the name of the Nuke you want to cast) NukeGem1=gem7 (Set this to gem#, # being the gem you want to mem this nuke in) NukeSpellSet1=1 (Set this to the spell set you want to be using to cast this nuke) NukeStartHPs1=100 (Set this to the % of the mob's HPs you want to start dropping bombs on it. Some classes might want to use a smaller nuke when a mob gets under say 30% HPs, in order to prevent wasting mana) NukeStopHPs1=30 (Set this to the % HPs you want to stop nuking with this spell at) NukeMaxMana1=30 (The highest % mana you want to be when using this nuke. Most of us will want this at 100%, but some classes \\(such as wizards\\) might want to switch out to a small nuke when under 50m, and use a bigger one when over 50m.) NukeMinMana1=30 (Set this to the lowest % mana you want to be before you stop nuking. Essentially this is where most of us set our mana reserve for other duties such as healing, debuffing, etc. For wizards though, this provides the ability to stop nuking with one spell, and start nuking with another spell below this % using the same % for MaxMana) GoMNuke1=0 (Set this to 0 if you don't want to cast this Nuke when Gift of Mana is up. Set it to 1, and it will use this nuke when GoM is up. Another addition mainly for wizards, it provides them the opportunity to get a 1 mana cost monster nuke off, instead of wasting it on a crappy lure or something. If set to 1, it will stop debuffing in favor of nuking while Gift of Mana is up. If you want to get your debuffing done over all else, then leave this at 0. Your bots will still heal and mez normally if set to 1, but debuffs are ignored as long as the buff is up) DoConcussion=1 (0=Don't Concussion, 1=Do Concussion) ConcussionSpell=Concussion (Set this to the name of the Item, Alt, or Spell you use for Concussion) ConcussionGem=gem1 (Set this to Item for items, Alt for AAs, or gem# for Spells)","title":"[NukeStuff]"},{"location":"macros/gallery/autobot.mac/#petstuff","text":"UsePet=1 (Set by /usepet) PetMana=10 (Set this to the % mana you'd like to be above before casting your pet.) KillFlappy1=1 (0=Keep your familiar, 1=Kill your Familiar) PetFocus=Some focus item (Set this to the item you want to equip before casting your pet) PetSpell=Nature Walkers Behest (Set this to your Pet spell) PetGem=gem4 (Set this to the gem you want to cast your pet from) PetBuffTotal=1 (Set this to the total number of pet buffs you want to cast) DoPetBuffs=1 (1=pet buffing on, 0= pet buffing off) ReportPetBuffs=1 (1=pet buffing reporting on, 0= pet buffing reporting off) PetBuffRecheck=10s (Set this to how often you'd like to re-check your pet's buffs for wearing off) PetBuff1=Pet Buff Item/Spell name PetBuffIcon1=Pet Buff Item/Spell Icon name PetBuffGem1=Pet Buff Item/Spell Gem name PetShrink=1 (1=pet shrinking on, 0=pet shrinking off) PetShrinkSpell=Tiny Companion (Set this to the Name of the spell/aa/item you use to shrink your pet) PetShrinkGem=gem4 (Set this to the gem you want to shrink your pet from) PetItemTotal=1 ( Your total number of pet item buffs. If you have 2 weapons you want to summon, you currently have to define the same weapon twice, so set this accordingly) PetItemSpell1=Blazing Stone of Demise ( The name of the spell/aa/item you want to summon with) PetItemGem1=item (gem# for spells, item for items, alt for AAs.)","title":"[PetStuff]"},{"location":"macros/gallery/autobot.mac/#holyshit","text":"TotalShit=1 (Set this to the total number of HolyShit Abilities you have defined) DoHolyShit=1 (1=On, 0=Off) HolyShit1=Oaken Guard (Name of Item/AA/Spell/disc to use) HolyShitGem1=gem9 (Put the HolyShit Gem#, alt, item, or skill) HolyShitHp1=70 (HP level you want to be below before triggering this ability) HolyShitType1=0 (0=Just cast, 1=Target yourself, 2=Target the mob hitting you, 3=Ability like \"Lay Hands\") HolyShitRUN1=0 (1=Attempt to run away from the mob towards the MA after casting this spell. 0=stand there and do nothing after casting)","title":"[HolyShit]"},{"location":"macros/gallery/autobot.mac/#bard_1","text":"DoBardSwap=False (Enables Bardswap plugin automatically on startup if set to True) DoBardMeleeSwap=False (Enables Bardswap to swap in melee weapons as well automatically on startup if set to True) AutoRestOff=0 (Set with /autorestoff) AutoRestRadius=125 (Set with /autorestradius)","title":"[Bard]"},{"location":"macros/gallery/autobot.mac/#bard-combat","text":"SongsArray1-8=Song Name *(Set via /addcombatsong |. Removed with /delcombatsong |. Add in extra entries as you gain spell gems.)*","title":"[Bard-Combat]"},{"location":"macros/gallery/autobot.mac/#bard-rest","text":"SongsArray9-18=Song Name *(Set via /addrestsong |. Removed with /delrestsong |.*","title":"[Bard-Rest]"},{"location":"macros/gallery/autobot.mac/#bard-aliases","text":"aliasname=songname (Set via /songalias \"song name\"). Songalias is basically to make it easier to change your combat/rest lineup on the fly with /addrestsong alias.","title":"[Bard-Aliases]"},{"location":"macros/gallery/autobot.mac/#troubleshootingfaq","text":"On I set my ini to service XXXX skill/spell/aa but its not working got something spelled wrong or not filled out properly. check the examples again. On Dots/Debuffs that don't work, but (possibly) used to If in a group/raid with HoTT leadership skill set UseHoTT=1 in the ini file. If HoTT is not avialable you must set UseHoTT=0. Check to see the MaxMobs=5 is appropraite to the number of NPC's around you. Monsters that are green or sitting/laying down will never be debuffed/dotted. On Buff requests not being serviced Unless you indicate that you want the buff executed in combat the bot will not service the buff if there are NPC's nearby. You can have the macro ignore certain npcs that we know for certain arnt kos by adding their names in the RDCommon.ini .Alternatly the NPC check radius is adjustable in the ini. Also make sure that the buff name is spelled correctly just how it looks in the info window. Lastly make sure that the alias's are correct. in the example ini's it looks like this \"| convicton | viction | convic |\", however if you have it set up like that, the buff requester for all intents and purposes needs to put that word in a sentence. if you have the ini looking like this \"|convicton|viction|convic|\" with no spaces in between the \" | \" then the bot will reconize and ackowlege any tell that has any of the word alias's it sees. On Bot will assist but wont engage when set to The bigest thing you do to fix that is increase the NPCRadius=120, Also, consider verifiying, and tweaking the following as well. NPCZRadius=120, AssistMA=TRUE, , DoMelee=TRUE, AssistDelay=0s, MA1=Chuck_Norris, EngageHPs=101. aso remember that other options may be fighting for servicing. looting, selfbuffing, debuffing, buffing, etc.. so if melee is priority, turn everything but assisting off. also make sure that mq2melee is set up right. type /melee to bring up its console and see whats set and whats not. same thing goes. if your not a pet class turn off all that other stuff to prevent any chance of conflicts. On Cant load selo's into the ini Selos uses a \"````````````\" located to the left of the 1 key. On incorrectly mezed Targets (also known as: Oh why does my chanter mez my MA's target?) You need to properly set the target for the BOT by the Leader AA, or /varset MATarget ${Target.ID} as explained in \"On target acquisition\" On automatically mezzing NPCs when you don't want to Set /rdpause on the BOT you want to stop auto debuffing (rdpause stops all automatic activity), type \"/rdpause on\" \\(minus quotes\\) into your command channel to stop auto-activity on multiple BOT's at once, or add the NPC you wish to not mez to the immune/ignore list in RDCommon.ini. You will need to know the spell ID for the spell you wish not to cast and this can be found by ${Spell[My Mez Spell Name Here].ID} (Use /echo in front of ${Spell[My Mez Spell Name Here].ID} if your typing it in EQ) On Target acquisition AutoBot acquires the Main Assist's (MA) target in a number of ways. 1) By setting the MA in the bot's ini file and the assist delay, the macro will attempt to acquire the target of the MA after the set time. 2) By using the Delegate Main Assist leadership AA, the bot will acquire the MA's target that way. 3) By manually setting the MA's target using /varset MATarget ${Target.ID} in whatever channel your bots listen to commands in. On non-working clickies If you have a clicky with no recast timer that isn't working. (Such as Time's Antithesis, Veil of Lost Hopes, et al...) The odds are you have an old version of MQ2. As of the 20 th of Dec Zip, these issues have been fixed. if you don't know what version of the zip you have, try simply running /echo ${FindItem[item name].Timer} and seeing what value it returns. Anything other than zero is Bad(tm) and denotes an out-of-date zip file. Update, update, update! Also your last inventory slot must NOT be a bag. Clickies usable from inventory, even if usable in other slots, will be used from base inventory slot 8. On out-of-date alias lists If you are attempting to reload your alias to your macroquest.ini. You must remove the Version=X.XX from RD_common.ini. Doing this will make the Version mismatch appear and reload all the alias's On healing not working On heals that never cancel even though target's health goes above CancelPct Tankheal must be defined as a valid spell and different than FastHeal=, even if you are not using Tankheals (UseCH setting). On Green (non-XP) corpses that are not auto looted These are not looted automatically. To trigger looting, at any time, send your bot \"You gain party experience!\" in whatever channel it is set to monitor. On late/not reliable buffs Bots will not buff in combat. Also it will not sit to memorize buffs if a NPC is within a certain range, although using a horse remedies this. On non-refreshing buffs on bots themselves Buffs from the [DoBuffStuff] or buff command are not rebuffed on the same bot that cast them, because you dont get a buff wear off message when they wear off yourself. If you want certain buffs kept up on your bot, you should use [SelfBuffStuff] section. On bots that keep targeting some npc, even though it hasn't been told it to assist and kill it Your MA could have a corpse close, and that is being assisted to get a target. Or you could be using an old version of autobot. On non-following bots Target someone and type /stick. If that doesnt work you have issues with MQ2MoveUtils . On Clerics that spam Complete Heals and interrupt them all Make sure you have UseDivArb set to 0 if you dont have that AA. // There's more to this than just the DivArb setting... but this might be one issue\\ On non-attacking pets/bots Check your MQ2Melee settings(the wiki for it is here ). You need a properly configured MQ2Melee for your pets/bots to attack and do other various melee-related tasks. On items being identified You aren't using the IRC plugin. By default /i is mapped to /identify. No slash commands work or error: \"DoCommand - Couldn't parse '/...' \" This usually happens when you update MQ2 and overwrite the macroquest.ini file. This file contains all the aliases (ie. the slash commands). To fix, delete the Version=X.XX line in RD_Common.ini, which will write all the aliases back to the macroquest.ini file when you restart Autobot. In general, you do not need to overwrite the Macroquest.ini file when updating MQ2. When your bot doesn't mem spells Your ini is set up wrong. Your XXXXGem#= entry needs to read \"gem#\", not just #. At least, 9 times out of 10 that's the problem. Check one of the sample ini files for an example. On My bots dont aquire targets when everything is set up properly Each toon needs a breastplate, it has to do with the way autobot checks deaths and runs the auto accept rez feature, it also disables assisting, for a good reason...","title":"Troubleshooting/FAQ"},{"location":"macros/gallery/barter/","tags":["macro"],"text":"Barter \u00b6 #turbo Sub Main() /declare itemname string local /declare itemqty int local /declare itemprice int local /declare result int local /if (!${Window[BarterMerchantWnd].Open}) {``` :RightClickBuyer /click right target `/delay 10s ${Window[BarterMerchantWnd].Open} /if (!${Window[BarterMerchantWnd].Open}) { /echo You need to move closer to your target /delay 1s /goto :RightClickBuyer } } /delay 3s /for result 1 to 100 /if (${Bool[${Window[BarterMerchantWnd].Child[BTRMERCH_BuyLineList].List[${result},2]}]}) { /varset itemname ${Window[BarterMerchantWnd].Child[BTRMERCH_BuyLineList].List[${result},2]} /varset itemqty ${Window[BarterMerchantWnd].Child[BTRMERCH_BuyLineList].List[${result},3]} /varset itemprice ${Window[BarterMerchantWnd].Child[BTRMERCH_BuyLineList].List[${result},4]} /echo ${result} ${itemname} ${itemqty} ${itemprice} } /next result /return","title":"Barter"},{"location":"macros/gallery/barter/#barter","text":"#turbo Sub Main() /declare itemname string local /declare itemqty int local /declare itemprice int local /declare result int local /if (!${Window[BarterMerchantWnd].Open}) {``` :RightClickBuyer /click right target `/delay 10s ${Window[BarterMerchantWnd].Open} /if (!${Window[BarterMerchantWnd].Open}) { /echo You need to move closer to your target /delay 1s /goto :RightClickBuyer } } /delay 3s /for result 1 to 100 /if (${Bool[${Window[BarterMerchantWnd].Child[BTRMERCH_BuyLineList].List[${result},2]}]}) { /varset itemname ${Window[BarterMerchantWnd].Child[BTRMERCH_BuyLineList].List[${result},2]} /varset itemqty ${Window[BarterMerchantWnd].Child[BTRMERCH_BuyLineList].List[${result},3]} /varset itemprice ${Window[BarterMerchantWnd].Child[BTRMERCH_BuyLineList].List[${result},4]} /echo ${result} ${itemname} ${itemqty} ${itemprice} } /next result /return","title":"Barter"},{"location":"macros/gallery/cleric.mac-nytemyst/","tags":["macro"],"text":"Cleric.mac - nytemyst \u00b6 Forum Link \u00b6 Cleric.mac - Nytemyst Description \u00b6 This macro is mainly for high level cleric, but possible for low levels to use. It is based off of Nils's version of Afcleric which was based off of the original by fantum409 , but it's been highly highly modified. Will Heal Groups, extended targets,Pets,specific tanks, Specific PCs outside of your group. Plugins Used \u00b6 MQ2MoveUtils MQ2Debuffs Need for Curing. MQ2EQBC For BC curing and Buffing MQ2Netbots For BC curing and Buffing Required Include Files \u00b6 General.inc - All the macros made/updated by me will use this include. Contains common features all the macros use to ease in updating functions and features to all the macros instead of updating each macro separately. Spell_Routines.inc Ninjadvloot.inc If you don't want to use Ninjadvloot.inc you can comment out or delete these lines. #include ninjadvloot.inc /call SetupAdvLootVars /if (${DoLoot} && !${Me.Moving} && !${Me.Invis}) /call LootMobs AAPurchase.inc If you don't want to use AAPurchase.inc You can comment out or delete these lines. #include AAPurchase.inc /call AAInit Events.inc This is used for raiding to allow the bot to perform certain emotes. Whenever I get involved with a new raid that needs the toons to react to an emote this gets updated. If you don't care to use it you can comment or delete out this line. #include events.inc Commands \u00b6 /battlerez On/Off - Turn Battle rez on or off. /Reverse On/Off - Changes BC Buff and Curing process order. /doloot On/Off - Turns looting on or off. /hammer On/Off - Turns using the Pet hammer on or off. /nuke On/Off - Turns nuking on or off. /GroupHeal On/Off - Turns casting a group heal on or off. /Tankhot On/Off - Turns casting a HOT on the tank on or off. /UseCure On/Off - Turns Spell Curing on or off. /RC On/Off - Turns curing by RC on or off. /Raidbuff - Turns raid buffing on or off. /stopheal # - Changes the default stop heal point. /startheal # - Changes the % of when to start healing. /Xheal On/Off - Turns on or off healing Extended Targets. /Xhealknights On/Off - Turns on or off of automatically adding Knights to xtargets. /usepromise On/Off - Turns on or off using promise line on tank. /promise # - Changes the % of the minimum health the tank can be for a promise heal. /useepic On/Off - Turns using the epic on or off. /doyaulp On/Off - Turns using spell yaulp on or off.","title":"Cleric.mac - nytemyst"},{"location":"macros/gallery/cleric.mac-nytemyst/#clericmac-nytemyst","text":"","title":"Cleric.mac - nytemyst"},{"location":"macros/gallery/cleric.mac-nytemyst/#forum-link","text":"Cleric.mac - Nytemyst","title":"Forum Link"},{"location":"macros/gallery/cleric.mac-nytemyst/#description","text":"This macro is mainly for high level cleric, but possible for low levels to use. It is based off of Nils's version of Afcleric which was based off of the original by fantum409 , but it's been highly highly modified. Will Heal Groups, extended targets,Pets,specific tanks, Specific PCs outside of your group.","title":"Description"},{"location":"macros/gallery/cleric.mac-nytemyst/#plugins-used","text":"MQ2MoveUtils MQ2Debuffs Need for Curing. MQ2EQBC For BC curing and Buffing MQ2Netbots For BC curing and Buffing","title":"Plugins Used"},{"location":"macros/gallery/cleric.mac-nytemyst/#required-include-files","text":"General.inc - All the macros made/updated by me will use this include. Contains common features all the macros use to ease in updating functions and features to all the macros instead of updating each macro separately. Spell_Routines.inc Ninjadvloot.inc If you don't want to use Ninjadvloot.inc you can comment out or delete these lines. #include ninjadvloot.inc /call SetupAdvLootVars /if (${DoLoot} && !${Me.Moving} && !${Me.Invis}) /call LootMobs AAPurchase.inc If you don't want to use AAPurchase.inc You can comment out or delete these lines. #include AAPurchase.inc /call AAInit Events.inc This is used for raiding to allow the bot to perform certain emotes. Whenever I get involved with a new raid that needs the toons to react to an emote this gets updated. If you don't care to use it you can comment or delete out this line. #include events.inc","title":"Required Include Files"},{"location":"macros/gallery/cleric.mac-nytemyst/#commands","text":"/battlerez On/Off - Turn Battle rez on or off. /Reverse On/Off - Changes BC Buff and Curing process order. /doloot On/Off - Turns looting on or off. /hammer On/Off - Turns using the Pet hammer on or off. /nuke On/Off - Turns nuking on or off. /GroupHeal On/Off - Turns casting a group heal on or off. /Tankhot On/Off - Turns casting a HOT on the tank on or off. /UseCure On/Off - Turns Spell Curing on or off. /RC On/Off - Turns curing by RC on or off. /Raidbuff - Turns raid buffing on or off. /stopheal # - Changes the default stop heal point. /startheal # - Changes the % of when to start healing. /Xheal On/Off - Turns on or off healing Extended Targets. /Xhealknights On/Off - Turns on or off of automatically adding Knights to xtargets. /usepromise On/Off - Turns on or off using promise line on tank. /promise # - Changes the % of the minimum health the tank can be for a promise heal. /useepic On/Off - Turns using the epic on or off. /doyaulp On/Off - Turns using spell yaulp on or off.","title":"Commands"},{"location":"macros/gallery/clockwork-grease-maker/","tags":["macro"],"text":"Clockwork Grease Maker \u00b6 This is a macro to make jars of clockwork grease, a very tedious combine. It does not deal well with subcombine failures yet, but is otherwise completely functional. Paste this code into a file called grease.mac in your \\macros directory, usually found under your release directory unless you have changed something: |///////////////////////////////////////////////////////////////////////////// | Grease.mac by dedpoet | | Attempts to make a Jar of Clockwork Grease until out of components. | | You will need the following items in your inventory: Water Flask, Block of | Clay, Small Jar Sketch, Quality Firing Sheet, Clockwork Grease. You will | need your last inventory slot open. | | Stand between the pottery wheel and the kiln and run grease.mac. | | This macro uses the pack subs written by Override and quite a bit of his | code. Also thanks to JJ for the shoves in the right direction with the | window stuff |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ #turbo #event CombineError \"#*#There was no place to put that#*#\" #event CombineError \"#*#You cannot combine these items in this container type!#*#\" #event CombineError \"#*#did not accept these items#*#\" Sub Main | Let's make an Unfired Small Container /call OpenPacks /delay 2s :GreaseLoop /itemtarget Pottery Wheel /face item /nomodkey /click left item /delay 1s /nomodkey /notify TradeSkillWnd COMBW_ExperimentButton leftmouseup /delay 1s `/if (!${FindItem[=Water Flask].InvSlot}) /goto :Done /nomodkey /ctrl /itemnotify ${FindItem[=Water Flask].InvSlot} leftmouseup `/nomodkey /itemnotify enviro1 leftmouseup````` /if (!${FindItem[=Block of Clay].InvSlot}) /goto :Done``` /nomodkey /ctrl /itemnotify ${FindItem[=Block of Clay].InvSlot} leftmouseup /nomodkey /itemnotify enviro2 leftmouseup /if (!${FindItem[=Small Jar Sketch].InvSlot}) /goto :Done /nomodkey /ctrl /itemnotify ${FindItem[=Small Jar Sketch].InvSlot} leftmouseup /nomodkey /itemnotify enviro3 leftmouseup /combine enviro /delay 15 /doevents /call ClearCursor /delay 5 /nomodkey /keypress esc /delay 1s | Let's make it into a Small Clay Jar /itemtarget Kiln /nomodkey /click left item /delay 1s /nomodkey /notify TradeSkillWnd COMBW_ExperimentButton leftmouseup /delay 1s /if (!${FindItem[=Unfired Small Container].InvSlot}) /goto :Done /nomodkey /ctrl /itemnotify ${FindItem[=Unfired Small Container].InvSlot} leftmouseup /nomodkey /itemnotify enviro1 leftmouseup /if (!${FindItem[=Quality Firing Sheet\\].InvSlot}) /goto :Done``` /nomodkey /ctrl /itemnotify ${FindItem\\[=Quality Firing Sheet].InvSlot} leftmouseup /nomodkey /itemnotify enviro2 leftmouseup` /combine enviro /delay 15 /doevents /call ClearCursor /nomodkey /keypress esc /delay 1s | Open our new jar and put 2 greases in it `/itemnotify pack8 rightmouseup /delay 1s ``` /if (!${FindItem[=Clockwork Grease].InvSlot}) /goto :Done /nomodkey /ctrl /itemnotify ${FindItem[=Clockwork Grease].InvSlot} leftmouseup ` /nomodkey /itemnotify in pack8 1 leftmouseup /delay 5` /if (!${FindItem[=Clockwork Grease].InvSlot}) /goto :Done /nomodkey /ctrl /itemnotify ${FindItem[=Clockwork Grease].InvSlot} leftmouseup /nomodkey /itemnotify in pack8 2 leftmouseup /combine pack8``` /delay 15 /doevents `/call ClearCursor /delay 20 | We should have a grease. Let's start over. /goto :GreaseLoop | When we run out of components. :Done /echo We're out of components. Ending macro. /beep /cleanup /end /return sub ClearCursor :Loop /if (!${Cursor.ID}) /return /autoinv /delay 5 /doevents /goto :Loop /return Sub OpenPacks /declare bag int local 0 /newif (!${Window[InventoryWindow].Open}) /keypress inventory /delay 1 /for bag 1 to 8 step 1 /newif (!${Window[pack${bag}].Open}) /itemnotify pack${bag} rightmouseup /next bag /delay 1 /return Sub Event_CombineError /echo Combine error encountered. Ending macro. /beep /end /return","title":"Clockwork Grease Maker"},{"location":"macros/gallery/clockwork-grease-maker/#clockwork-grease-maker","text":"This is a macro to make jars of clockwork grease, a very tedious combine. It does not deal well with subcombine failures yet, but is otherwise completely functional. Paste this code into a file called grease.mac in your \\macros directory, usually found under your release directory unless you have changed something: |///////////////////////////////////////////////////////////////////////////// | Grease.mac by dedpoet | | Attempts to make a Jar of Clockwork Grease until out of components. | | You will need the following items in your inventory: Water Flask, Block of | Clay, Small Jar Sketch, Quality Firing Sheet, Clockwork Grease. You will | need your last inventory slot open. | | Stand between the pottery wheel and the kiln and run grease.mac. | | This macro uses the pack subs written by Override and quite a bit of his | code. Also thanks to JJ for the shoves in the right direction with the | window stuff |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ #turbo #event CombineError \"#*#There was no place to put that#*#\" #event CombineError \"#*#You cannot combine these items in this container type!#*#\" #event CombineError \"#*#did not accept these items#*#\" Sub Main | Let's make an Unfired Small Container /call OpenPacks /delay 2s :GreaseLoop /itemtarget Pottery Wheel /face item /nomodkey /click left item /delay 1s /nomodkey /notify TradeSkillWnd COMBW_ExperimentButton leftmouseup /delay 1s `/if (!${FindItem[=Water Flask].InvSlot}) /goto :Done /nomodkey /ctrl /itemnotify ${FindItem[=Water Flask].InvSlot} leftmouseup `/nomodkey /itemnotify enviro1 leftmouseup````` /if (!${FindItem[=Block of Clay].InvSlot}) /goto :Done``` /nomodkey /ctrl /itemnotify ${FindItem[=Block of Clay].InvSlot} leftmouseup /nomodkey /itemnotify enviro2 leftmouseup /if (!${FindItem[=Small Jar Sketch].InvSlot}) /goto :Done /nomodkey /ctrl /itemnotify ${FindItem[=Small Jar Sketch].InvSlot} leftmouseup /nomodkey /itemnotify enviro3 leftmouseup /combine enviro /delay 15 /doevents /call ClearCursor /delay 5 /nomodkey /keypress esc /delay 1s | Let's make it into a Small Clay Jar /itemtarget Kiln /nomodkey /click left item /delay 1s /nomodkey /notify TradeSkillWnd COMBW_ExperimentButton leftmouseup /delay 1s /if (!${FindItem[=Unfired Small Container].InvSlot}) /goto :Done /nomodkey /ctrl /itemnotify ${FindItem[=Unfired Small Container].InvSlot} leftmouseup /nomodkey /itemnotify enviro1 leftmouseup /if (!${FindItem[=Quality Firing Sheet\\].InvSlot}) /goto :Done``` /nomodkey /ctrl /itemnotify ${FindItem\\[=Quality Firing Sheet].InvSlot} leftmouseup /nomodkey /itemnotify enviro2 leftmouseup` /combine enviro /delay 15 /doevents /call ClearCursor /nomodkey /keypress esc /delay 1s | Open our new jar and put 2 greases in it `/itemnotify pack8 rightmouseup /delay 1s ``` /if (!${FindItem[=Clockwork Grease].InvSlot}) /goto :Done /nomodkey /ctrl /itemnotify ${FindItem[=Clockwork Grease].InvSlot} leftmouseup ` /nomodkey /itemnotify in pack8 1 leftmouseup /delay 5` /if (!${FindItem[=Clockwork Grease].InvSlot}) /goto :Done /nomodkey /ctrl /itemnotify ${FindItem[=Clockwork Grease].InvSlot} leftmouseup /nomodkey /itemnotify in pack8 2 leftmouseup /combine pack8``` /delay 15 /doevents `/call ClearCursor /delay 20 | We should have a grease. Let's start over. /goto :GreaseLoop | When we run out of components. :Done /echo We're out of components. Ending macro. /beep /cleanup /end /return sub ClearCursor :Loop /if (!${Cursor.ID}) /return /autoinv /delay 5 /doevents /goto :Loop /return Sub OpenPacks /declare bag int local 0 /newif (!${Window[InventoryWindow].Open}) /keypress inventory /delay 1 /for bag 1 to 8 step 1 /newif (!${Window[pack${bag}].Open}) /itemnotify pack${bag} rightmouseup /next bag /delay 1 /return Sub Event_CombineError /echo Combine error encountered. Ending macro. /beep /end /return","title":"Clockwork Grease Maker"},{"location":"macros/gallery/defense.inc/","tags":["macro"],"text":"Defense.inc \u00b6 Description \u00b6 This include is ment to help automate defensive measures for various classes. There is no INI file to go with this, this is simply my version of what each class ought to be doing as each line of defense goes down. Currently set up for use with AA, disc's, and BP clicks up to level 105. Currently set up for SK,Pal, and War. You can find the latest version posted here Requirements \u00b6 Spell_Routines.inc Usage \u00b6 Pretty much runs itself, you just need to make a call do it when you want it to engage defensive measures. Someplace in your main loop/combat loop put some sort of call, for example: /if (${Target.Named} || ${Me.XTarget}>2 || ${Me.PctHPs}<60) && ${Target.Distance}<75) /call Defense This is set up to work with RaidDruid.mac, so it utilizes a ${ChatChannel} to make announcements if \"ReportDefense\" is true/on. If Defense.inc finds no \"ReportDefense\" variable, it will make one and default it to FALSE If Defense.inc finds no \"ChatChannel\" variable, it will make one and default it to Echo","title":"Defense.inc"},{"location":"macros/gallery/defense.inc/#defenseinc","text":"","title":"Defense.inc"},{"location":"macros/gallery/defense.inc/#description","text":"This include is ment to help automate defensive measures for various classes. There is no INI file to go with this, this is simply my version of what each class ought to be doing as each line of defense goes down. Currently set up for use with AA, disc's, and BP clicks up to level 105. Currently set up for SK,Pal, and War. You can find the latest version posted here","title":"Description"},{"location":"macros/gallery/defense.inc/#requirements","text":"Spell_Routines.inc","title":"Requirements"},{"location":"macros/gallery/defense.inc/#usage","text":"Pretty much runs itself, you just need to make a call do it when you want it to engage defensive measures. Someplace in your main loop/combat loop put some sort of call, for example: /if (${Target.Named} || ${Me.XTarget}>2 || ${Me.PctHPs}<60) && ${Target.Distance}<75) /call Defense This is set up to work with RaidDruid.mac, so it utilizes a ${ChatChannel} to make announcements if \"ReportDefense\" is true/on. If Defense.inc finds no \"ReportDefense\" variable, it will make one and default it to FALSE If Defense.inc finds no \"ChatChannel\" variable, it will make one and default it to Echo","title":"Usage"},{"location":"macros/gallery/drshmbot/","tags":["macro"],"text":"DRShmbot \u00b6 dRShmbot \u00b6 Author: DeathlyRanja Alias: dR~ Date: 12/05/2006 Credit where its due: Basis of this script is Version: v0.5c by Hubba Shambot Version 1.0c by Ranma Version 2.0c by thread_001 Version 3.0+ to 3.3 by IonCache Version 3.4+ to Current, By DeathlyRanja dRShmbot is a fairly complex Shaman macro. It is not finish or in any way finalized, so many more updates will come. This macro offers: Intelligent Healing Code Spell Gem Optimization Dynamic Mana Preservation Mob Debuffing(Malo/Slow/Cripple/Root/Nuke/Dot) Self/Group Buffing(Panther/Avatar/Buffs) TSS Regen Support User Settings for almost all variables to customize Pet Routines Request Space \u00b6 This area is reserved for user requests. Feel free to hit the edit button to your right and add to this. I will add as I can. Requesting links for the below listed .inc - Could not find them with searches on MQ2 forums or wiki. To Do List \u00b6 To Do List: Fix 'Spell Worn Off' for dots,buffs,debuffs,etc. Add Command Queuing Add Flee Routine Fix Buff Stacking Issues and checks upon casting Fix Healing Interrupts -- currently removed Clean up code Add GoM GoRM events and cast preferences during those events Correct targetting issues with detrimental and beneficial spells. Add a new targetting array Add INI support Future to do List \u00b6 Specific Buffing Instructions Rework the targeting Sub Routine Add more targets to the targetting array and allow for user specified amount of targets to track How To Use \u00b6 To use this macro, you must have these files in your macros directory: DRShmbot.mac dREvents.inc dRSubs.inc To start the macro, type: /mac DRShmbot.mac __ Tank Name and Master Name are optional. They are NOT required but must be set in the INI for the bot to function correctly if not provided. The macro will create an INI file for you to customize called, dR_ToonsName.ini, in your macro directory. (Ex. dR_Bobshaman.ini) After the INI file is created, it will end the macro and you MUST edit the new INI file. Then you can restart the macro(You will not need to edit it after it has been set once unless you need to change a setting. This macro DOES NOT REQUIRE ANY PLUGIN but it will use MQ2EQBC if you want it to. However, there is no support for it on this macro at this time. Commands and Aliases \u00b6 None at this time. Dynamic Mana \u00b6 More to be posted later. Spell Gem Optimization \u00b6 Add to your macro before main loop: /declare numGem int outer /declare OWgem int outer /call GemOpt Subs for use within macro \u00b6 /call GemMem ${SpellGem} ${SpellName} ${SpellGemState} ${MOWState} ex. /call GemMem ${NukeGem} ${Nuke} ${NukeStatus} TRUE /call GemMem 4 \"Ice Spear of Solist\" TRUE FALSE /call GemMem 0 \"Complete Healing\" FALSE ${CHAlwaysOW} /call GemMem 9 \"Ancient: Hallowed Light\" ${KeepAH} ${AHOverWrite} SpellNameHere must be a string, SpellGemHere must be a integer, SpellGemState must be TRUE/FALSE FALSE means that the spell will stay until a spell is memmed over top of it within the macro by the user or manually deleted. TRUE flags the gem as switchable. Spells will be memmed to the least used switchable slot SpellGemHere when it equals 0, means that the sub will memorize into the first switchable gem it finds that is available. If no gems are available, it finds the switchable gem that has not been cast in the longest time Each timer for each switchable gem is set to a default of five minutes. Lowest timer will be overwritten, or first in list if multiple timers are at 0 * MOWState is just a TRUE/FALSE constant that tells the sub to overwrite it if no gems can be switched and you don't want to use the OWgem IF you want the timer function to work correctly, you must add this line directly after casts in your macro /if (${Macro.Return.Equal[CAST_SUCCESS]}) /call GemTimer ${Me.Gem[<${SpellThatWasCast}>]} /call GemEdit ${SpellName - OR - SpellGem} ex. /if (${SpGem[1,2]}) /call GemEdit 1 /call GemEdit \"Complete Healing\" /call GemEdit ${QuickHeal} /if (${Nuke.Equal[${SpGem[${NukeGem},1]}]}) /call GemEdit ${NukeGem} This sub is used to switch states of memorized spells or spell gems. IF the spell name isnt found, no change will occur. This state will be changed next time a gem will be memorized, therefore no need to mindlessly call GemFind dRShmbot Ini Settings \u00b6 Sample Ini [DRShmBot] UseMq2EQBC=FALSE(TRUE if you want macro to use MQ2EQ Box Chat Plugin) -- You must also have the EQBCS server running. [General] UseMount=FALSE(TRUE if you want to use a mount) MountItem=NULL(Set this to the name of the item you wish to use. Ex. MountItem=Small Black Drum) MSRL=##(Set this value to the percent of Mana that bot will sit at when not in combat, TSS regen is active and mana is below the set value) HSRL=##(Set this value to the percent of HP that bot will sit at when not in combat, TSS regen is active and HP is below the set value) UseCanniAA=TRUE(Set to False if you do not wish to use canni AA, or do not have it yet.) Verbose=FALSE(Set to TRUE if you want the bot to announce heals/debuffs/etc into group/channel.) DoLoot=FALSE(Set to TRUE if you want the bot to loot for you) AutoFollowDist=##(Set this value to distance that bot will stay within when following its AutoFollow Target) [DynMana] DynManaTimer=50(This value is the time in deciseconds between mana checks before making changes to HP Stops/Starts)Default is 50dS or 5 Seconds PercentCarry=60(This value is the percentage of carry-over from 1 Mana Tier to another. Do not alter this unless you understand what you are doing. Read Dynamic Mana section if you want to further understand this function.) DetriHPIncrease=20(Set this to the percentage that you want detrimental HP Increases to increase by. Ex. SPantherHP=70 but increases by 20% on each tier.) DetriHPDecrease=15(Same as above) BeneHPIncrease=15(etc) BeneHPDecrease=10(etc) [PrimarySpells] SwapGem=9(Set this to the gem number that you want to use for swapping spells. This may be removed in the near future with the implementation of GemOpt.inc) HP2MP=Ancestral Bargain Rk. II(Set this to the Canni spell you want to use. Quotes are not needed.) HP2MPGem=1(Set this to the spell gem you want Canni to use.) Slow=Balance of Discord(refer above) SlowGem=2(refer above) Malo=Malosinise(refer above) MaloGem=3(refer above) DoTOne=Juju(refer above) DoTOneGem=4(refer above) Nuke=Sting of the Queen(refer above) NukeGem=5(refer above) QuickHeal=Ahnkaul's Mending(refer above) QuickHealGem=6(refer above) HealOverTime=Halcyon Breeze(refer above) HoTGem=7(refer above) DoTTwo=Ahnkaul's Spear of Venom(refer above) DoTTwoGem=8(refer above) HP2MPState=FALSE(NEW VARS) -- FALSE means that the spell will not be switched out when another spell is called for memorization. TRUE means that if the another spell is called for memorization, and there isnt a free gem available, the new spell will be memmed over top of this one. SlowState=FALSE MaloState=TRUE DoTState=TRUE NukeState=TRUE QuickHealState=FALSE HoTState=FALSE DoTTwoState=TRUE SecondarySpells Pet=Kyrah's Faithful Cripple=Crippling Spasm Root=Greater Immobilize Panther=Spirit of the Leopard GroupPanther=Talisman of the Panther Rk. II Avatar=Ferine Avatar GroupAvatar=Champion Haste=Swift like the Wind GroupHaste=Talisman of Celerity Focus=Dire Focusing GroupFocus=Talisman of the Dire Charisma=Unfailing Reverance Dexterity=Mortal Deftness GroupDex=Talisman of the Raptor Strength=Preternatural Foresight GroupSTR=Talisman of Foresight Agility=Preternatural Foresight GroupAGI=Talisman of Foresight Stamina=Spirit of Fortitude GroupSTA=Talisman of Fortitude Regen=Spirit of the Stoic One GroupRegen=Talisman of the Stoic One Primal=Primal Essence PrDrResist=Protection of Wishka Rk. II ArmorClass=Ancestral Bulwark Movement=Spirit of Bih'li Levitate=Levitation Invis=Spirit Veil Shrink=Shrink GroupShrink=Tiny Terror Grow=Grow SeeInvis=Acumen Gate=Gate Food=Summon Food Drink=Summon Drink [CombatVars] AssistRange=100(Set this to the distance MA must within for bot to assist for target) StartCombatHP=98(Set this to the distance target npc must be within to start combat subs) StartDoTHP=0(Set this to the value that mob HP must be under to start function) EndDoTMP=100(Set this to the value that bot mp must be above in order to do this function) StartRootHP=0(Set this to the value that mob HP must be under to start function) EndRootMP=100(Set this to the value that bot mp must be above in order to do this function) StartNukeHP=90(Set this to the value that mob HP must be under to start function) EndNukeMP=50(Set this to the value that bot mp must be above in order to do this function) EndPantherHP=100(Set this to the value that target hp must be above in order to do this function) StartSitMP=0(Set this to the percent of MP bot must be below to sit) EndBuffMP=100(Set this to the percent of MP bot must be above to buff) StopCanniHP=3500(Set this to the amount of HP bot must be above to canni) AssistDelay=3(Set this value to the delay in deciseconds before bot will assist main assist to get a target) TimetoRecast=5s(Set this to a value in seconds that bot will continue to try to recast a spell) Healing UseQuickHeals=TRUE UseHealOverTime=TRUE UseGroupHoT=FALSE DoHealTank=TRUE DoHealGroup=TRUE DoHealPets=FALSE HealPriority=2(Healing modes -- 0 = Default, heal normally /\\/\\ 1 = Tank Priority, heal tank before all others /\\/\\ 2 = Tank and Shaman Priority, heal self and tank before all others) StartGroupHoTHP=0(Group HoT -- integer is the average hp level of the group) CasterHealHP=50(start heal on class type when hp is below value) CasterHoTHP=60 MeleeHealHP=40 MeleeHoTHP=60 TankHealHP=50 TankHoTHP=70 PetHealHP=30 PetHoTHP=50 SelfHealHP=50 SelfHoTHP=60 [Debuff] UseMalo=TRUE UseSlow=TRUE UseCripple=FALSE SlowOnlyOnce=FALSE(bot will only attempt to slow one time if TRUE) MaxSlowAttempts=3 UseRoot=FALSE UseDots=FALSE UseNukes=TRUE [Buffing] UseBuffs=FALSE UseRebuffs=TRUE UsePanther=FALSE UseGroupPanther=FALSE PantherGroup=FALSE PantherPets=FALSE UseAvatar=TRUE UseGroupAvatar=FALSE [Pet-Familiar] UsePet=TRUE BuffMyPet=FALSE BuffOtherPets=FALSE","title":"DRShmbot"},{"location":"macros/gallery/drshmbot/#drshmbot","text":"","title":"DRShmbot"},{"location":"macros/gallery/drshmbot/#drshmbot_1","text":"Author: DeathlyRanja Alias: dR~ Date: 12/05/2006 Credit where its due: Basis of this script is Version: v0.5c by Hubba Shambot Version 1.0c by Ranma Version 2.0c by thread_001 Version 3.0+ to 3.3 by IonCache Version 3.4+ to Current, By DeathlyRanja dRShmbot is a fairly complex Shaman macro. It is not finish or in any way finalized, so many more updates will come. This macro offers: Intelligent Healing Code Spell Gem Optimization Dynamic Mana Preservation Mob Debuffing(Malo/Slow/Cripple/Root/Nuke/Dot) Self/Group Buffing(Panther/Avatar/Buffs) TSS Regen Support User Settings for almost all variables to customize Pet Routines","title":"dRShmbot"},{"location":"macros/gallery/drshmbot/#request-space","text":"This area is reserved for user requests. Feel free to hit the edit button to your right and add to this. I will add as I can. Requesting links for the below listed .inc - Could not find them with searches on MQ2 forums or wiki.","title":"Request Space"},{"location":"macros/gallery/drshmbot/#to-do-list","text":"To Do List: Fix 'Spell Worn Off' for dots,buffs,debuffs,etc. Add Command Queuing Add Flee Routine Fix Buff Stacking Issues and checks upon casting Fix Healing Interrupts -- currently removed Clean up code Add GoM GoRM events and cast preferences during those events Correct targetting issues with detrimental and beneficial spells. Add a new targetting array Add INI support","title":"To Do List"},{"location":"macros/gallery/drshmbot/#future-to-do-list","text":"Specific Buffing Instructions Rework the targeting Sub Routine Add more targets to the targetting array and allow for user specified amount of targets to track","title":"Future to do List"},{"location":"macros/gallery/drshmbot/#how-to-use","text":"To use this macro, you must have these files in your macros directory: DRShmbot.mac dREvents.inc dRSubs.inc To start the macro, type: /mac DRShmbot.mac __ Tank Name and Master Name are optional. They are NOT required but must be set in the INI for the bot to function correctly if not provided. The macro will create an INI file for you to customize called, dR_ToonsName.ini, in your macro directory. (Ex. dR_Bobshaman.ini) After the INI file is created, it will end the macro and you MUST edit the new INI file. Then you can restart the macro(You will not need to edit it after it has been set once unless you need to change a setting. This macro DOES NOT REQUIRE ANY PLUGIN but it will use MQ2EQBC if you want it to. However, there is no support for it on this macro at this time.","title":"How To Use"},{"location":"macros/gallery/drshmbot/#commands-and-aliases","text":"None at this time.","title":"Commands and Aliases"},{"location":"macros/gallery/drshmbot/#dynamic-mana","text":"More to be posted later.","title":"Dynamic Mana"},{"location":"macros/gallery/drshmbot/#spell-gem-optimization","text":"Add to your macro before main loop: /declare numGem int outer /declare OWgem int outer /call GemOpt","title":"Spell Gem Optimization"},{"location":"macros/gallery/drshmbot/#subs-for-use-within-macro","text":"/call GemMem ${SpellGem} ${SpellName} ${SpellGemState} ${MOWState} ex. /call GemMem ${NukeGem} ${Nuke} ${NukeStatus} TRUE /call GemMem 4 \"Ice Spear of Solist\" TRUE FALSE /call GemMem 0 \"Complete Healing\" FALSE ${CHAlwaysOW} /call GemMem 9 \"Ancient: Hallowed Light\" ${KeepAH} ${AHOverWrite} SpellNameHere must be a string, SpellGemHere must be a integer, SpellGemState must be TRUE/FALSE FALSE means that the spell will stay until a spell is memmed over top of it within the macro by the user or manually deleted. TRUE flags the gem as switchable. Spells will be memmed to the least used switchable slot SpellGemHere when it equals 0, means that the sub will memorize into the first switchable gem it finds that is available. If no gems are available, it finds the switchable gem that has not been cast in the longest time Each timer for each switchable gem is set to a default of five minutes. Lowest timer will be overwritten, or first in list if multiple timers are at 0 * MOWState is just a TRUE/FALSE constant that tells the sub to overwrite it if no gems can be switched and you don't want to use the OWgem IF you want the timer function to work correctly, you must add this line directly after casts in your macro /if (${Macro.Return.Equal[CAST_SUCCESS]}) /call GemTimer ${Me.Gem[<${SpellThatWasCast}>]} /call GemEdit ${SpellName - OR - SpellGem} ex. /if (${SpGem[1,2]}) /call GemEdit 1 /call GemEdit \"Complete Healing\" /call GemEdit ${QuickHeal} /if (${Nuke.Equal[${SpGem[${NukeGem},1]}]}) /call GemEdit ${NukeGem} This sub is used to switch states of memorized spells or spell gems. IF the spell name isnt found, no change will occur. This state will be changed next time a gem will be memorized, therefore no need to mindlessly call GemFind","title":"Subs for use within macro"},{"location":"macros/gallery/drshmbot/#drshmbot-ini-settings","text":"Sample Ini [DRShmBot] UseMq2EQBC=FALSE(TRUE if you want macro to use MQ2EQ Box Chat Plugin) -- You must also have the EQBCS server running. [General] UseMount=FALSE(TRUE if you want to use a mount) MountItem=NULL(Set this to the name of the item you wish to use. Ex. MountItem=Small Black Drum) MSRL=##(Set this value to the percent of Mana that bot will sit at when not in combat, TSS regen is active and mana is below the set value) HSRL=##(Set this value to the percent of HP that bot will sit at when not in combat, TSS regen is active and HP is below the set value) UseCanniAA=TRUE(Set to False if you do not wish to use canni AA, or do not have it yet.) Verbose=FALSE(Set to TRUE if you want the bot to announce heals/debuffs/etc into group/channel.) DoLoot=FALSE(Set to TRUE if you want the bot to loot for you) AutoFollowDist=##(Set this value to distance that bot will stay within when following its AutoFollow Target) [DynMana] DynManaTimer=50(This value is the time in deciseconds between mana checks before making changes to HP Stops/Starts)Default is 50dS or 5 Seconds PercentCarry=60(This value is the percentage of carry-over from 1 Mana Tier to another. Do not alter this unless you understand what you are doing. Read Dynamic Mana section if you want to further understand this function.) DetriHPIncrease=20(Set this to the percentage that you want detrimental HP Increases to increase by. Ex. SPantherHP=70 but increases by 20% on each tier.) DetriHPDecrease=15(Same as above) BeneHPIncrease=15(etc) BeneHPDecrease=10(etc) [PrimarySpells] SwapGem=9(Set this to the gem number that you want to use for swapping spells. This may be removed in the near future with the implementation of GemOpt.inc) HP2MP=Ancestral Bargain Rk. II(Set this to the Canni spell you want to use. Quotes are not needed.) HP2MPGem=1(Set this to the spell gem you want Canni to use.) Slow=Balance of Discord(refer above) SlowGem=2(refer above) Malo=Malosinise(refer above) MaloGem=3(refer above) DoTOne=Juju(refer above) DoTOneGem=4(refer above) Nuke=Sting of the Queen(refer above) NukeGem=5(refer above) QuickHeal=Ahnkaul's Mending(refer above) QuickHealGem=6(refer above) HealOverTime=Halcyon Breeze(refer above) HoTGem=7(refer above) DoTTwo=Ahnkaul's Spear of Venom(refer above) DoTTwoGem=8(refer above) HP2MPState=FALSE(NEW VARS) -- FALSE means that the spell will not be switched out when another spell is called for memorization. TRUE means that if the another spell is called for memorization, and there isnt a free gem available, the new spell will be memmed over top of this one. SlowState=FALSE MaloState=TRUE DoTState=TRUE NukeState=TRUE QuickHealState=FALSE HoTState=FALSE DoTTwoState=TRUE SecondarySpells Pet=Kyrah's Faithful Cripple=Crippling Spasm Root=Greater Immobilize Panther=Spirit of the Leopard GroupPanther=Talisman of the Panther Rk. II Avatar=Ferine Avatar GroupAvatar=Champion Haste=Swift like the Wind GroupHaste=Talisman of Celerity Focus=Dire Focusing GroupFocus=Talisman of the Dire Charisma=Unfailing Reverance Dexterity=Mortal Deftness GroupDex=Talisman of the Raptor Strength=Preternatural Foresight GroupSTR=Talisman of Foresight Agility=Preternatural Foresight GroupAGI=Talisman of Foresight Stamina=Spirit of Fortitude GroupSTA=Talisman of Fortitude Regen=Spirit of the Stoic One GroupRegen=Talisman of the Stoic One Primal=Primal Essence PrDrResist=Protection of Wishka Rk. II ArmorClass=Ancestral Bulwark Movement=Spirit of Bih'li Levitate=Levitation Invis=Spirit Veil Shrink=Shrink GroupShrink=Tiny Terror Grow=Grow SeeInvis=Acumen Gate=Gate Food=Summon Food Drink=Summon Drink [CombatVars] AssistRange=100(Set this to the distance MA must within for bot to assist for target) StartCombatHP=98(Set this to the distance target npc must be within to start combat subs) StartDoTHP=0(Set this to the value that mob HP must be under to start function) EndDoTMP=100(Set this to the value that bot mp must be above in order to do this function) StartRootHP=0(Set this to the value that mob HP must be under to start function) EndRootMP=100(Set this to the value that bot mp must be above in order to do this function) StartNukeHP=90(Set this to the value that mob HP must be under to start function) EndNukeMP=50(Set this to the value that bot mp must be above in order to do this function) EndPantherHP=100(Set this to the value that target hp must be above in order to do this function) StartSitMP=0(Set this to the percent of MP bot must be below to sit) EndBuffMP=100(Set this to the percent of MP bot must be above to buff) StopCanniHP=3500(Set this to the amount of HP bot must be above to canni) AssistDelay=3(Set this value to the delay in deciseconds before bot will assist main assist to get a target) TimetoRecast=5s(Set this to a value in seconds that bot will continue to try to recast a spell) Healing UseQuickHeals=TRUE UseHealOverTime=TRUE UseGroupHoT=FALSE DoHealTank=TRUE DoHealGroup=TRUE DoHealPets=FALSE HealPriority=2(Healing modes -- 0 = Default, heal normally /\\/\\ 1 = Tank Priority, heal tank before all others /\\/\\ 2 = Tank and Shaman Priority, heal self and tank before all others) StartGroupHoTHP=0(Group HoT -- integer is the average hp level of the group) CasterHealHP=50(start heal on class type when hp is below value) CasterHoTHP=60 MeleeHealHP=40 MeleeHoTHP=60 TankHealHP=50 TankHoTHP=70 PetHealHP=30 PetHoTHP=50 SelfHealHP=50 SelfHoTHP=60 [Debuff] UseMalo=TRUE UseSlow=TRUE UseCripple=FALSE SlowOnlyOnce=FALSE(bot will only attempt to slow one time if TRUE) MaxSlowAttempts=3 UseRoot=FALSE UseDots=FALSE UseNukes=TRUE [Buffing] UseBuffs=FALSE UseRebuffs=TRUE UsePanther=FALSE UseGroupPanther=FALSE PantherGroup=FALSE PantherPets=FALSE UseAvatar=TRUE UseGroupAvatar=FALSE [Pet-Familiar] UsePet=TRUE BuffMyPet=FALSE BuffOtherPets=FALSE","title":"dRShmbot Ini Settings"},{"location":"macros/gallery/gemopt.inc/","tags":["macro"],"text":"GemOpt.inc \u00b6 Spell Gem Optimization Include \u00b6 VIP ONLY \u00b6 Welcome to the Wiki for GemOpt.inc by DeathlyRanja This wiki will cover the little knowledge needed to run a macro with this include. What does this do? \u00b6 This include file allows the macro to control the use of spell gems and how they are memorized. The include will monitor the spell gems and user setting emOpt -- This function sets up the include file and has no user interaction at all except in the beginning of the macro. This sub/function must be called before your main loop. GemMem -- Memorizes the spell, remembers spell data, recognizes how long the spell has been memorized and if it has been flagged by the user as a gem that is allowed to be switched out. GemMem may call GemDMem if there is a spell in the slot and the spell gem is switchable or the user wants to overwrite the gem that is there anyway. GemDMem -- Simple ... It dememorizes the spell in whatever slot chosen(1-9) GemEdit -- This sub routine takes the spell name or gem-number and switches it from switchable/not-switchable to not-switchable/switchable GemTimer -- A subroutine to be called after spell casts if you want the include to monitor the usage of the spell. Spells often will not be replaced by spells that aren't cast as often. GemFind -- A subroutine to scan the spell information, stored user-responses and available/used gems to find a suitable gem for memorization. Putting all these functions together, this include micromanages the use of spell gems within a routine. Instead of using something like /call cast 4 \"Shrink\" 5s, You can use this instead /if ( \\({Me.Gem[\\) ]}) /call cast \\({Me.Gem\\[\\) ]} ${ShrinkSpell} 5s. Why use this? \u00b6 As said before, this can allow you to dynamically assign spell gems to make a macro more flexible. Is it easier to code and use, probably not... for the moment. Can it be improved, YES! This isn't for the weak of heart. This include will allow you to do really awesome things without alot of effort on your part. Usage \u00b6 Add to your macro before main loop: /declare numGem int outer /declare OWgem int outer /call GemOpt Subs for use within macro \u00b6 /call GemMem ${SpellGem} ${SpellName} ${SpellGemState} ${MOWState} ex. /call GemMem ${NukeGem} ${Nuke} ${NukeStatus} TRUE /call GemMem 4 \"Ice Spear of Solist\" TRUE FALSE /call GemMem 0 \"Complete Healing\" FALSE ${CHAlwaysOW} /call GemMem 9 \"Ancient: Hallowed Light\" ${KeepAH} ${AHOverWrite} SpellNameHere must be a string, SpellGemHere must be a integer, SpellGemState must be TRUE/FALSE FALSE means that the spell will stay until a spell is memmed over top of it within the macro by the user or manually deleted. TRUE flags the gem as switchable. Spells will be memmed to the least used switchable slot SpellGemHere when it equals 0, means that the sub will memorize into the first switchable gem it finds that is available. If no gems are available, it finds the switchable gem that has not been cast in the longest time Each timer for each switchable gem is set to a default of five minutes. Lowest timer will be overwritten, or first in list if multiple timers are at 0 * MOWState is just a TRUE/FALSE constant that tells the sub to overwrite it if no gems can be switched and you don't want to use the OWgem IF you want the timer function to work correctly, you must add this line directly after casts in your macro /if (${Macro.Return.Equal[CAST_SUCCESS]}) /call GemTimer ${Me.Gem[<${SpellThatWasCast}>]} /call GemEdit ${SpellName - OR - SpellGem} ex. /if (${SpGem[1,2]}) /call GemEdit 1 /call GemEdit \"Complete Healing\" /call GemEdit ${QuickHeal} /if (${Nuke.Equal[${SpGem[${NukeGem},1]}]}) /call GemEdit ${NukeGem} This sub is used to switch states of memorized spells or spell gems. IF the spell name isnt found, no change will occur. This state will be changed next time a gem will be memorized, therefore no need to mindlessly call GemFind Code \u00b6 If you want access to the code for this include, you must donate to the dev's. They do alot and require nothing. If you can't get $10 out of your budget, you should sell your plat, your soul or wife/husband. If you get the code from someone else and your not a VIP, may your soul rot in hell while cherubs mutilate your unidentifiable corpse. If you paid, you may of course just follow this link!! Spell Gem Optimization Include Note: This currently goes to the DRShmBot Page","title":"GemOpt.inc"},{"location":"macros/gallery/gemopt.inc/#gemoptinc","text":"","title":"GemOpt.inc"},{"location":"macros/gallery/gemopt.inc/#spell-gem-optimization-include","text":"","title":"Spell Gem Optimization Include"},{"location":"macros/gallery/gemopt.inc/#vip-only","text":"Welcome to the Wiki for GemOpt.inc by DeathlyRanja This wiki will cover the little knowledge needed to run a macro with this include.","title":"VIP ONLY"},{"location":"macros/gallery/gemopt.inc/#what-does-this-do","text":"This include file allows the macro to control the use of spell gems and how they are memorized. The include will monitor the spell gems and user setting emOpt -- This function sets up the include file and has no user interaction at all except in the beginning of the macro. This sub/function must be called before your main loop. GemMem -- Memorizes the spell, remembers spell data, recognizes how long the spell has been memorized and if it has been flagged by the user as a gem that is allowed to be switched out. GemMem may call GemDMem if there is a spell in the slot and the spell gem is switchable or the user wants to overwrite the gem that is there anyway. GemDMem -- Simple ... It dememorizes the spell in whatever slot chosen(1-9) GemEdit -- This sub routine takes the spell name or gem-number and switches it from switchable/not-switchable to not-switchable/switchable GemTimer -- A subroutine to be called after spell casts if you want the include to monitor the usage of the spell. Spells often will not be replaced by spells that aren't cast as often. GemFind -- A subroutine to scan the spell information, stored user-responses and available/used gems to find a suitable gem for memorization. Putting all these functions together, this include micromanages the use of spell gems within a routine. Instead of using something like /call cast 4 \"Shrink\" 5s, You can use this instead /if ( \\({Me.Gem[\\) ]}) /call cast \\({Me.Gem\\[\\) ]} ${ShrinkSpell} 5s.","title":"What does this do?"},{"location":"macros/gallery/gemopt.inc/#why-use-this","text":"As said before, this can allow you to dynamically assign spell gems to make a macro more flexible. Is it easier to code and use, probably not... for the moment. Can it be improved, YES! This isn't for the weak of heart. This include will allow you to do really awesome things without alot of effort on your part.","title":"Why use this?"},{"location":"macros/gallery/gemopt.inc/#usage","text":"Add to your macro before main loop: /declare numGem int outer /declare OWgem int outer /call GemOpt","title":"Usage"},{"location":"macros/gallery/gemopt.inc/#subs-for-use-within-macro","text":"/call GemMem ${SpellGem} ${SpellName} ${SpellGemState} ${MOWState} ex. /call GemMem ${NukeGem} ${Nuke} ${NukeStatus} TRUE /call GemMem 4 \"Ice Spear of Solist\" TRUE FALSE /call GemMem 0 \"Complete Healing\" FALSE ${CHAlwaysOW} /call GemMem 9 \"Ancient: Hallowed Light\" ${KeepAH} ${AHOverWrite} SpellNameHere must be a string, SpellGemHere must be a integer, SpellGemState must be TRUE/FALSE FALSE means that the spell will stay until a spell is memmed over top of it within the macro by the user or manually deleted. TRUE flags the gem as switchable. Spells will be memmed to the least used switchable slot SpellGemHere when it equals 0, means that the sub will memorize into the first switchable gem it finds that is available. If no gems are available, it finds the switchable gem that has not been cast in the longest time Each timer for each switchable gem is set to a default of five minutes. Lowest timer will be overwritten, or first in list if multiple timers are at 0 * MOWState is just a TRUE/FALSE constant that tells the sub to overwrite it if no gems can be switched and you don't want to use the OWgem IF you want the timer function to work correctly, you must add this line directly after casts in your macro /if (${Macro.Return.Equal[CAST_SUCCESS]}) /call GemTimer ${Me.Gem[<${SpellThatWasCast}>]} /call GemEdit ${SpellName - OR - SpellGem} ex. /if (${SpGem[1,2]}) /call GemEdit 1 /call GemEdit \"Complete Healing\" /call GemEdit ${QuickHeal} /if (${Nuke.Equal[${SpGem[${NukeGem},1]}]}) /call GemEdit ${NukeGem} This sub is used to switch states of memorized spells or spell gems. IF the spell name isnt found, no change will occur. This state will be changed next time a gem will be memorized, therefore no need to mindlessly call GemFind","title":"Subs for use within macro"},{"location":"macros/gallery/gemopt.inc/#code","text":"If you want access to the code for this include, you must donate to the dev's. They do alot and require nothing. If you can't get $10 out of your budget, you should sell your plat, your soul or wife/husband. If you get the code from someone else and your not a VIP, may your soul rot in hell while cherubs mutilate your unidentifiable corpse. If you paid, you may of course just follow this link!! Spell Gem Optimization Include Note: This currently goes to the DRShmBot Page","title":"Code"},{"location":"macros/gallery/genbot/","tags":["macro"],"text":"GenBot \u00b6 Genbot was released by GrimJack sometime in early 2003 and eventually became one of the more popular bot macros. Genbot was originally designed as a core set of scripts to handle all of the non class specific functions needed in a bot while providing a means to easily \"plug in\" any extra code needed for a specific character. Genbot History Version 0 - 8.8 Genbot created and developed by GrimJack Version 8.8 - ? GrimJack stopped playing everquest and Lasher took over the code. Version ? - 12.34 Lord Giddeon maintained the code. Version 12.35 - 13.3 Vexix took over the code. Known Issues \u00b6 When using MQ2IRC in combination with the Genbot macro be sure to NOT use the /gb sitaftercast command. I do not know how but issuing this command with either off/on makes it so genbot chat no longer goes to the IRC window. Without this command the plugin and macro work together perfectly. ( \\(Frank25\\) )","title":"GenBot"},{"location":"macros/gallery/genbot/#genbot","text":"Genbot was released by GrimJack sometime in early 2003 and eventually became one of the more popular bot macros. Genbot was originally designed as a core set of scripts to handle all of the non class specific functions needed in a bot while providing a means to easily \"plug in\" any extra code needed for a specific character. Genbot History Version 0 - 8.8 Genbot created and developed by GrimJack Version 8.8 - ? GrimJack stopped playing everquest and Lasher took over the code. Version ? - 12.34 Lord Giddeon maintained the code. Version 12.35 - 13.3 Vexix took over the code.","title":"GenBot"},{"location":"macros/gallery/genbot/#known-issues","text":"When using MQ2IRC in combination with the Genbot macro be sure to NOT use the /gb sitaftercast command. I do not know how but issuing this command with either off/on makes it so genbot chat no longer goes to the IRC window. Without this command the plugin and macro work together perfectly. ( \\(Frank25\\) )","title":"Known Issues"},{"location":"macros/gallery/group-language-trainer/","tags":["macro"],"text":"Group Language Trainer \u00b6 This macro was originally published in the Macro Depot 3.0 Forum, and has been successfully used to max out languages. The speed at which languages are learned is dependent on either intelligence or wisdom, depending on class. The higher the stat, the quicker it goes up. A typical character will max all languages in about 3 passes. Instructions Paste this code into a file called lang.mac in your \\macros directory. In game, create a social with 5 lines of text, and place this in hotbutton 1. It doesn't matter what it says, as this macro will only end up spamming numbers anyway. While spamming, group members can either turn off group text in options, or can use /ignore [spammer] during the \"lesson\". |///////////////////////////////////////////////////////////////////////////// | Lang.mac | | /macro lang | Cycles through all your available languages | Target yourself to end | | Written by shuttle | Converted by bob_the_builder 4/22/04 | Updated by loadingpleasewait 9/11/04 | | Usage: /mac Lang | | NOTE: You must have spam text set to a social on hotbutton 1 as any other | way it does not actually speak the set languages. | |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ #event LangHelp \"Type /language help for a list\" |SetDeclares /declare LangNum outer /declare MinLangNum outer /declare MaxLangNum outer |SetVars /varset MinLangNum 2 /varset MaxLangNum 25 :MainLoop /if (${Target.ID}) /goto :end |GroupChat /notify HotButtonWnd HB_Button1 leftmouseup /delay 2s |IncreaseLanguage /lang ${LangNum} /varcalc LangNum ${LangNum}+1 /if (${LangNum}>${MaxLangNum}) /varset LangNum ${MinLangNum} /doevents /goto :MainLoop :end /endmacro Sub event_LangHelp /varset LangNum ${MinLangNum} /return","title":"Group Language Trainer"},{"location":"macros/gallery/group-language-trainer/#group-language-trainer","text":"This macro was originally published in the Macro Depot 3.0 Forum, and has been successfully used to max out languages. The speed at which languages are learned is dependent on either intelligence or wisdom, depending on class. The higher the stat, the quicker it goes up. A typical character will max all languages in about 3 passes. Instructions Paste this code into a file called lang.mac in your \\macros directory. In game, create a social with 5 lines of text, and place this in hotbutton 1. It doesn't matter what it says, as this macro will only end up spamming numbers anyway. While spamming, group members can either turn off group text in options, or can use /ignore [spammer] during the \"lesson\". |///////////////////////////////////////////////////////////////////////////// | Lang.mac | | /macro lang | Cycles through all your available languages | Target yourself to end | | Written by shuttle | Converted by bob_the_builder 4/22/04 | Updated by loadingpleasewait 9/11/04 | | Usage: /mac Lang | | NOTE: You must have spam text set to a social on hotbutton 1 as any other | way it does not actually speak the set languages. | |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ #event LangHelp \"Type /language help for a list\" |SetDeclares /declare LangNum outer /declare MinLangNum outer /declare MaxLangNum outer |SetVars /varset MinLangNum 2 /varset MaxLangNum 25 :MainLoop /if (${Target.ID}) /goto :end |GroupChat /notify HotButtonWnd HB_Button1 leftmouseup /delay 2s |IncreaseLanguage /lang ${LangNum} /varcalc LangNum ${LangNum}+1 /if (${LangNum}>${MaxLangNum}) /varset LangNum ${MinLangNum} /doevents /goto :MainLoop :end /endmacro Sub event_LangHelp /varset LangNum ${MinLangNum} /return","title":"Group Language Trainer"},{"location":"macros/gallery/guild-buff-bot/","tags":["macro"],"text":"Guild Buff Bot \u00b6 Description \u00b6 Guild Buff Bot a macro by TheDroidUrLookingFor, to help out a few friends. You can run it on a Shaman, Magician, Enchanter, Ranger, Druid, or Cleric. Features \u00b6 - Buffs level appropriate buffs when Hailed. - Setup to use languages for FV. - Echos who it is helping to EQBC for debug is on. - Mage: Summons Pet toys when it hears \"toys\" - Mage: Summons Between 1- 20 Pet toys when it hears \"toys 1-20\" - Mage: Summons Invis stone when it hears \"invis\" - Mage: Summons mod rod when it hears \"rod\" - Mage: Summons damage rod when it hears \"drod\" - Mage: Summons arrows/quiver when it hears \"arrows\" - Mage: Summons Invis stone, Lev Ring, Mod Rod, and Damage Rod when it hears \"other\" - Cleric: Will resurrect a player when it hears \"rez\" - Druid: Ports to all available druid Zephyrs. - Wizard: Ports to all available wizard Translocates. - Account balances! Charge people for your buffs and stop buffing them if they can't afford it. - Will deduct a set amount each time it buffs a pet, merc, or the initiator. - Will deduct a set amount teach time it summons on the mage. - Moved everything you need to change into the INI. Available Commands: \u00b6 All -- Hail for level appropriate buffs. Druid -- ports Wizard -- ports Mage -- toys -- toys x(1-20) -- invis -- arrows -- rod -- drod -- other Cleric -- rez Necromancer -- summon","title":"Guild Buff Bot"},{"location":"macros/gallery/guild-buff-bot/#guild-buff-bot","text":"","title":"Guild Buff Bot"},{"location":"macros/gallery/guild-buff-bot/#description","text":"Guild Buff Bot a macro by TheDroidUrLookingFor, to help out a few friends. You can run it on a Shaman, Magician, Enchanter, Ranger, Druid, or Cleric.","title":"Description"},{"location":"macros/gallery/guild-buff-bot/#features","text":"- Buffs level appropriate buffs when Hailed. - Setup to use languages for FV. - Echos who it is helping to EQBC for debug is on. - Mage: Summons Pet toys when it hears \"toys\" - Mage: Summons Between 1- 20 Pet toys when it hears \"toys 1-20\" - Mage: Summons Invis stone when it hears \"invis\" - Mage: Summons mod rod when it hears \"rod\" - Mage: Summons damage rod when it hears \"drod\" - Mage: Summons arrows/quiver when it hears \"arrows\" - Mage: Summons Invis stone, Lev Ring, Mod Rod, and Damage Rod when it hears \"other\" - Cleric: Will resurrect a player when it hears \"rez\" - Druid: Ports to all available druid Zephyrs. - Wizard: Ports to all available wizard Translocates. - Account balances! Charge people for your buffs and stop buffing them if they can't afford it. - Will deduct a set amount each time it buffs a pet, merc, or the initiator. - Will deduct a set amount teach time it summons on the mage. - Moved everything you need to change into the INI.","title":"Features"},{"location":"macros/gallery/guild-buff-bot/#available-commands","text":"All -- Hail for level appropriate buffs. Druid -- ports Wizard -- ports Mage -- toys -- toys x(1-20) -- invis -- arrows -- rod -- drod -- other Cleric -- rez Necromancer -- summon","title":"Available Commands:"},{"location":"macros/gallery/loot-any-corpse/","tags":["macro"],"text":"Loot Any Corpse \u00b6 This macro is UNTESTED, but should work fine. If it doesn't - hit edit and fix it. Converted from Wait4Rez.mac to loot.mac here---> Editing Existing Macros |** Loot.mac by TheNewGuy 20 July 2005 Make a hotkey: /mac loot.mac When something dies, push that hotkey as you are standing over the corpse. This should loot everything. This code based upon Wat4rez.mac by FaNTuM. Changed from Wait4rez.mac to loot.mac at the following URL: http://www.macroquest.org/wiki/index.php/Editing_Existing_Macros **| | -------------- | -- Main Sub -- | -------------- Sub Main /declare t int outer 0 /declare loottotal int outer /declare lootslot int outer /declare lootleft int outer 0 /if (!${Defined[Param0]}) { } else { /varset lootleft ${Param0} } /tar corpse /loot | ----------------- | -- Count items -- | ----------------- /delay 3s :LootLag /if (${loottotal}!=${Corpse.Items}) { /varset loottotal ${Corpse.Items} /delay 2s /goto :LootLag } /if (${loottotal}<=${lootleft}) { /notify LootWnd DoneButton leftmouseup /return } /varset loottotal ${Math.Calc[${Corpse.Items}-${lootleft}]} | --------------------- | -- Loot the corpse -- | --------------------- /for lootslot 1 to ${loottotal} :LootItem /itemnotify loot${lootslot} rightmouseup /delay 5 !${Corpse.Item[${lootslot}].ID} /if (!${Corpse.Item[${lootslot}].ID}) { /next lootslot } else { /goto :LootItem } | ----------------- | -- Doublecheck -- | ----------------- /if (${Math.Calc[${Corpse.Items}-${lootleft}]}>0) /goto :LootLag /notify LootWnd DoneButton leftmouseup /return","title":"Loot Any Corpse"},{"location":"macros/gallery/loot-any-corpse/#loot-any-corpse","text":"This macro is UNTESTED, but should work fine. If it doesn't - hit edit and fix it. Converted from Wait4Rez.mac to loot.mac here---> Editing Existing Macros |** Loot.mac by TheNewGuy 20 July 2005 Make a hotkey: /mac loot.mac When something dies, push that hotkey as you are standing over the corpse. This should loot everything. This code based upon Wat4rez.mac by FaNTuM. Changed from Wait4rez.mac to loot.mac at the following URL: http://www.macroquest.org/wiki/index.php/Editing_Existing_Macros **| | -------------- | -- Main Sub -- | -------------- Sub Main /declare t int outer 0 /declare loottotal int outer /declare lootslot int outer /declare lootleft int outer 0 /if (!${Defined[Param0]}) { } else { /varset lootleft ${Param0} } /tar corpse /loot | ----------------- | -- Count items -- | ----------------- /delay 3s :LootLag /if (${loottotal}!=${Corpse.Items}) { /varset loottotal ${Corpse.Items} /delay 2s /goto :LootLag } /if (${loottotal}<=${lootleft}) { /notify LootWnd DoneButton leftmouseup /return } /varset loottotal ${Math.Calc[${Corpse.Items}-${lootleft}]} | --------------------- | -- Loot the corpse -- | --------------------- /for lootslot 1 to ${loottotal} :LootItem /itemnotify loot${lootslot} rightmouseup /delay 5 !${Corpse.Item[${lootslot}].ID} /if (!${Corpse.Item[${lootslot}].ID}) { /next lootslot } else { /goto :LootItem } | ----------------- | -- Doublecheck -- | ----------------- /if (${Math.Calc[${Corpse.Items}-${lootleft}]}>0) /goto :LootLag /notify LootWnd DoneButton leftmouseup /return","title":"Loot Any Corpse"},{"location":"macros/gallery/modbot-4.0/","tags":["macro"],"text":"Modbot 4.0 \u00b6 WIKI PAGE UNDER CONSTRUCTION ModBot - A Universal Bot Macro \u00b6 Caster Melee Shrouds & MM's Mez, Charm, Heal, Melee, etc All classes supported Now supports mixed groups of MQ2 and Non-MQ2 users/players ModBot is under constant improvement effort, open to suggestions / additions / adjustments, etc ModBot_4.x Source General Note on Wiki Entries - Release ZIP packages - While the majority of entries in the Wiki apply to ModBot in general, there are always some entries that apply to changes, additional functionality, new commands, etc. Please keep this note in the back of your mind as you work with the Wiki - if you come across a command, etc. that will just not seem to work for you (and you have already thoroughly researched it, checked syntax, re-checked syntax, etc.), please take a moment to check your version of the module that it applies to - you may need to update. How To \u00b6 To use ModBot Extract and place all included files from zip (all .mac and .inc files) into your MQ2 macro directory. From inside EQ, type /macro modbot (e.g. /macro modbot OR /macro modbot raidmode). This will build, if it doesn't exist, your MB_.ini file. Optional entries will make a MB__.ini. Being shrouded on startup without using an option will use your race and class for the creation of an MB__.ini file. From inside EQ, end the macro by typing /endmac Tab out of EQ, locate your new MB_.ini file in your macro directory, and open it. You can use the editor of your choice, but Notepad will work just fine. For every component of the macro you want to use, increase the respective \"count\", if you want two heals, set AHCount=2, if you want 2 debuffs, set ADCount=2, etc. After you have set your counts, save and close the INI file. Tab back over into EQ and restart the macro (/macro modbot). This will now populate your INI file based on the count entries that you made in the previous step End the macro again by typing /endmac Open the INI file once more and \"tweak\" the newly created entries to fit your needs. When you are done, save and close the INI file. Tab back over to EQ and restart the macro. Your bot should now be just that, a BOT and will listen to your every command (assuming you are the master). For examples of complete class ModBot INI files, please go to the example INI page . Please Note!! One thing to keep in mind throughout the configuration of the ModBot INI file: keep your most critical and most used spells, activities, etc., first in their respective INI sections. You don't want your mez spell as Debuff number 20, you don't want slow as debuff 10, you don't want a CBT based buff as buff 23, and you don't want CH as heal 1 (you want your most desperate heal as heal 1), etc. Configure your heals, buffs, debuffs, etc. in a highest priority first order. Reference to Understanding the ModBot WiKi \u00b6 - Replace this with the respective descriptor Example 1 -_is luclin_bobby Example 2 -is bobby (text) - These are \"comments\" and should be removed when saving the respective file Example 1 - Send=1 (If set to 1 it will send netbots information over the network) This text: *``\\(If`````set to 1 it will send netbots information over the network)``\\*`should NOT appear in the INI file` ````` [text\\] - This is to show different options or series of options Example 1 - /bc cast[, %t, grp,, etc]`` Plugin Requirements & Examples \u00b6 I suggest you have a good understanding of how to configure each of these plugins. Any misconfiguration can have an adverse affect on the performance of ModBot Prefered versions are found within the Plugins_Other.zip file that can be found Here (Our thanks go out to the orignal makers and maintainers of these plugins) MQ2AdvPath ( Wiki page ) MQ2Cast ( Wiki Page ) MQ2eqbc ( Wiki Page ) MQ2Exchange ( Wiki Page ) MQ2Melee ( Wiki Page ) MQ2MoveUtils ( Wiki Page ) MQ2NetBots ( Wiki Page ) MQ2Twist ( Wiki Page ) and a modified version of MQ2Main\\MQ2Utilities Optional: Mq2Banolier ( Wiki Page ) If you plan to use item swapping and spell foci items, you may need to configure \"sets\" Plugin INI Examples \u00b6 Example _.INI for MQ2NetBots, MQ2Cast, MQ2Melee: [MQ2NetBots] Stat=1 Send=1 Grab=1 [MQ2Cast(SpellSet)] ModBot2=1111|1 12345|2 22342|3 43241|4 42342|5 23423|6 12532|7 22334|8 33221|9 11225|10 55443|11 22337|12 88559 [MQ2Melee] enrage=1 facing=1 infuriate=1 jugular=0 petassist=1 petengagehps=94 petrange=45 plugin=1 resume=75 stickrange=75 version=8.000 Example MQ2MoveUtils.INI for MQ2MoveUtils: [Defaults] AutoPause=on BreakOnWarp=on BreakDist=250.0 BreakOnGate=on Verbosity=1 stuckDist=0.8 turnDirection=10.0 stuckCheck=5 StuckLogic=off Example MQ2Bandolier_.ini for MQ2Bandolier: [ThisSet] 17=12345 13=23456 14=34567 ModBot HUD \u00b6 [_] Last=ModBotHUD SkipParse=7 CheckINI=100 UpdateInBackGround=on ClassHUD=on ZoneHUD=on [ModBotHUD] Target= 3,060,210,225,225,225,${If[${Target.ID},Dis:${Int[${Target.Distance}]}-Lvl:${Target.Level}-${Target.Class.ShortName}-${Target.PctHPs}%,]} Name1= 3,060,220,240,240,000,${If[${NetBots.Counts}>=1,${NetBots.Client.Arg[1]} ${NetBots[${NetBots.Client.Arg[1]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[1]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[1]}].PctAAExp}]},NA]} HP1= 3,060,230,255,100,100,HP:${If[${NetBots.Counts}>=1,${NetBots[${NetBots.Client.Arg[1]}].PctHPs},]}% Mana1= 3,105,230,100,100,255,M:${If[${NetBots.Counts}>=1,${NetBots[${NetBots.Client.Arg[1]}].PctMana},]}% End1= 3,145,230,255,234,008,E:${If[${NetBots.Counts}>=1,${NetBots[${NetBots.Client.Arg[1]}].PctEndurance},]}% Pet1= 3,185,230,255,255,255,Pet:${If[${NetBots.Counts}>=1 && ${NetBots[${NetBots.Client.Arg[1]}].PetID}>0,${NetBots[${NetBots.Client.Arg[1]}].PetHP},]}% Name2= 3,060,240,240,240,000,${If[${NetBots.Counts}>=2,${NetBots.Client.Arg[2]} ${NetBots[${NetBots.Client.Arg[2]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[2]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[2]}].PctAAExp}]},NA]} HP2= 3,060,250,255,100,100,HP:${If[${NetBots.Counts}>=2,${NetBots[${NetBots.Client.Arg[2]}].PctHPs},]}% Mana2= 3,105,250,100,100,255,M:${If[${NetBots.Counts}>=2,${NetBots[${NetBots.Client.Arg[2]}].PctMana},]}% End2= 3,145,250,255,234,008,E:${If[${NetBots.Counts}>=2,${NetBots[${NetBots.Client.Arg[2]}].PctEndurance},]}% Pet2= 3,185,250,255,255,255,Pet:${If[${NetBots.Counts}>=2 && ${NetBots[${NetBots.Client.Arg[2]}].PetID}>0,${NetBots[${NetBots.Client.Arg[2]}].PetHP},]}% Name3= 3,060,260,240,240,000,${If[${NetBots.Counts}>=3,${NetBots.Client.Arg[3]} ${NetBots[${NetBots.Client.Arg[3]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[3]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[3]}].PctAAExp}]},NA]} HP3= 3,060,270,255,100,100,HP:${If[${NetBots.Counts}>=3,${NetBots[${NetBots.Client.Arg[3]}].PctHPs},]}% Mana3= 3,105,270,100,100,255,M:${If[${NetBots.Counts}>=3,${NetBots[${NetBots.Client.Arg[3]}].PctMana},]}% End3= 3,145,270,255,234,008,E:${If[${NetBots.Counts}>=3,${NetBots[${NetBots.Client.Arg[3]}].PctEndurance},]}% Pet3= 3,185,270,255,255,255,Pet:${If[${NetBots.Counts}>=3 && ${NetBots[${NetBots.Client.Arg[3]}].PetID}>0,${NetBots[${NetBots.Client.Arg[3]}].PetHP},]}% Name4= 3,060,280,240,240,000,${If[${NetBots.Counts}>=4,${NetBots.Client.Arg[4]} ${NetBots[${NetBots.Client.Arg[4]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[4]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[4]}].PctAAExp}]},NA]} HP4= 3,060,290,255,100,100,HP:${If[${NetBots.Counts}>=4,${NetBots[${NetBots.Client.Arg[4]}].PctHPs},]}% Mana4= 3,105,290,100,100,255,M:${If[${NetBots.Counts}>=4,${NetBots[${NetBots.Client.Arg[4]}].PctMana},]}% End4= 3,145,290,255,234,008,E:${If[${NetBots.Counts}>=4,${NetBots[${NetBots.Client.Arg[4]}].PctEndurance},]}% Pet4= 3,185,290,255,255,255,Pet:${If[${NetBots.Counts}>=4 && ${NetBots[${NetBots.Client.Arg[4]}].PetID}>0,${NetBots[${NetBots.Client.Arg[4]}].PetHP},]}% Name5= 3,060,300,240,240,000,${If[${NetBots.Counts}>=5,${NetBots.Client.Arg[5]} ${NetBots[${NetBots.Client.Arg[5]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[5]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[5]}].PctAAExp}]},NA]} HP5= 3,060,310,255,100,100,HP:${If[${NetBots.Counts}>=5,${NetBots[${NetBots.Client.Arg[5]}].PctHPs},]}% Mana5= 3,105,310,100,100,255,M:${If[${NetBots.Counts}>=5,${NetBots[${NetBots.Client.Arg[5]}].PctMana},]}% End5= 3,145,310,255,234,008,E:${If[${NetBots.Counts}>=5,${NetBots[${NetBots.Client.Arg[5]}].PctEndurance},]}% Pet5= 3,185,310,255,255,255,Pet:${If[${NetBots.Counts}>=5 && ${NetBots[${NetBots.Client.Arg[5]}].PetID}>0,${NetBots[${NetBots.Client.Arg[5]}].PetHP},]}% Name6= 3,060,320,240,240,000,${If[${NetBots.Counts}>=6,${NetBots.Client.Arg[6]} ${NetBots[${NetBots.Client.Arg[6]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[6]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[6]}].PctAAExp}]},NA]} HP6= 3,060,330,255,100,100,HP:${If[${NetBots.Counts}>=6,${NetBots[${NetBots.Client.Arg[6]}].PctHPs},]}% Mana6= 3,105,330,100,100,255,M:${If[${NetBots.Counts}>=6,${NetBots[${NetBots.Client.Arg[6]}].PctMana},]}% End6= 3,145,330,255,234,008,E:${If[${NetBots.Counts}>=6,${NetBots[${NetBots.Client.Arg[6]}].PctEndurance},]}% Pet6= 3,185,330,255,255,255,Pet:${If[${NetBots.Counts}>=6 && ${NetBots[${NetBots.Client.Arg[6]}].PetID}>0,${NetBots[${NetBots.Client.Arg[6]}].PetHP},]}% ModBot Commands & Syntax \u00b6 ModBot commands are executed in a few different ways: /bc /bc /bct /bct Are probably most common but check out the EQBC Forum thread for more methods / features. You can also configure an alias so you can run modbot on the character you control and execute ModBot commands. To create the alias you must run this from the EQ prompt: /alias /mb /echo mb- Or change the LoadAlias variable in MBCommon.inc [Settings] section from 0 to 1 if you've lost the alias in your Macroquest.ini With this alias you can tell your bot locally what to do: /mb makecamp /mb buffup /mb letsroll /mb Command Reference \u00b6 Section Updated: June 7, 2009 abort (Interrupts any cast in progress, Sets - DoHeals, DoDebuffs & DoMelee FALSE and follows the sender closely, usefull when you want to RUN away) addbuff \"\\|\\\" ABSpellAlias ABTarType (Adds a new buff entry to the character's INI file.) You must restart the ModBot macro after executing the addbuff command in order to complete the adding of the buff entry. The Spellname, etc. section can be entered directly (e.g. */mb addbuff \"Bone Mask of the Ancient Iksar|item\" iksar self_) or, if adding a clicky, by holding the item on your cursor (e.g._ /mb addbuff \"${Cursor.Name}|item\" iksar self*). Please note that the quotes around the spellname|gem section are required. ABTarType will accept multiple targets if quotes are used (e.g. */mb addbuff \"Levitiation|gem1\" levi \"war mnk rog\"*). addbuff execution will add ABGem, ABSpell, ABSpellAlias and ABTarType entries to the characters INI file. The remaining buff lines (ABSpellFociX, ABDurModX, etc.) will be added once you restart the ModBot macro (the array size change (ABCount) will also not increment until after re-start). For example, using these Bonemask example command, the following entires will be added to the INI file (where \"X\" is equal to whatever the next numbered entry is in your advbuff section): ABGemX=item ABSpellX=Bone Mask of the Ancient Iksar ABSpellAliasX=iksar ABTarTypeX=self attack (Sets DoMelee TRUE and forces bot to attack the TankName's target) attack (Sets DoMelee TRUE and forces bot to attack the target) * Note: OffTank must be TRUE to use this option (I may remove this requirement though TBD) * Example 1 - /bc attack badguy * Example 2 = /bc attack badguy 100 20 buffup (This will set DoBuffs & DoEvents TRUE & DoHeals FALSE) campout (Performs a /camp desktop and ends the macro) cast <on/off> (This will disable or enable the spell associated with this alias) cast [<spawnname/id> \\<%t> ] [<spawnname/id> \\<%t> ] (infinte) If the spell is detrimental, CAST targets the requester's target. If the spell is beneficial, it targets the sender or, if grp is present, it casts buff on group members. If %t is present, it targets the requester's target. The cast command will ignore INI settings for things like minmana, maxmana, recasts, buff debuff counters, etc. This command is mainly used for manual, \"one off\" type casts. Example 1 - /bc cast buffhp grp haste bob haste jane dmgshld bob Example 2 - /bc cast dmgshld bob nuke tash Example 3 - /bc cast slow \"nasty add\" doafk [on, true, off, false, ] dobuffbot [on, true, off, false, ] (Places the bot in \"BuffBot Mode\". Currently once set to on or true, it will NOT turn off and you MUST restart the macro to \"quit\" this mode. It will cast any spell alias on the requesting target. The requester must be a \"master\". Example: /t buffhp dobuffs [on, true, off, false, ] docombines (Toggle that turns docombines on/off (default off). Docombines will check for an open tradeskill window with an enabled combine button (you have to select recipe), and will click the button. Upon a successful combine, Modbot's built in cursor handling takes over. Useful for tank to summon more arrows during fight. An associated event will fire and toggle docombines to FALSE when you run out of recipe components.) docures [on, true, off, false, ] dodebuffs [on, true, off, false, ] doevents [on, true, off, false, ] doforage [on, true, off, false, ] dofw [on, true, off, false, ] doheals [on, true, off, false, ] dolist (Used to /bc out the existing \"Do\" status) doloot [on, true, off, false, ] domelee [on, true, off, false, ] domount [on, true, off, false, ] (To cast a mount or not, used in conjunction with MountCast INI entry) dopet [on, true, off, false, ] (To cast a pet or not, used in conjunction with PetCast INI entry) dopull [on, true, off, false, ] (not fully production yet) dopull <on/off/path> (Self explanatory. See the instructions on forums.) doquest [on,true,off,false] (Default is TRUE. If set to FALSE, your looter will ignore items marked \"quest\" and still loot other items.) Can be used to add quest items to your loot.ini file. For example, while holding an item on cursor, */mb doquest 4 Hair of the Dog* will set the item you're holding to \"=Quest|4|Hair of the Dog|\" in loot.ini. Can also be used in conjunction with the QuestOnly variable (found in the setting section of the loot.ini file). If both doquest and QuestOnly are set to TRUE, your toon will only loot quest items. Also note that if QuestOnly is set to TRUE and doquest is set to FALSE, your toon will only loot cash off of mobs. Please see the modloot section found here for more information on the loot.ini file. dosit [on, true, off, false, ] dosongs [on, true, off, false, ] (used for bards only) dotells [on, true, off, false, ] (Toggles a beep when tells are recieved from non-netbots toons. Useful for tells in background sessions) **exclude ** (Adds to alert list, to save list you must use the \"save\" option, otherwise it will not be written to the INI file) The exclude list is dynamic and will only exclude mobs that are present in the zone AND that are on the list. If you want to force an exclude you must edit the INI file and place a \"#\" in front of the mobs name (e.g. ExcludeList=a dusty barrel|a dark coffin|#a bitten victim|a hollow tree|, this will always force \"a bitten victim\" to be on the exclude list) Use the following commands from a character to add mobs to the exclude list (Kroak suggested just tossing this in a two-line hotkey): /bcaa //mb exclude ${Target.CleanName} Will write the exclusion to a string that is checked through the debuff loop /bcaa //mb exclude save Will write the exclusion in the mbcommon.ini and that exclusion includes the zone id, so mobs of the same name in a different zone are NOT excluded. You shouldn't have to re-run the macro after an exclude but if you do this in the midst of comabat or something, while mobs are near, it may not \"take\" as quickly. For mob names with spaces in them, simply enter the name without any quotations. For example: ''/bcaa //mb exclude a small bat See the Include command (found below) to temporarily remove a mob from the alert list follow (Follows the sender or ) follow close (Follows the sender within 3 steps, very close) give (Calls the sub GiveCheck to hand an item to a toon or NPC.) ItemCount is optional and will default to 1. The give command can be used in conjunction with categories that have been defined in the loot.ini. For instance, if you have items marked 'SpellScroll' in your loot.ini, and the Category variable has \"SpellScroll\" included, you can issue the give command as follows: /mb give Bob SpellScroll TRUE . The result will be that all items on your toon that are marked with that category (SpellScroll) in your loot.ini will be handed to Bob.) * goto (Bot will move to the loc given) * handin (Target an NPC or PC, get one item on your cursor, and all of that item will be handed to them and trade or give button pressed.) holdup (This will set DoBuffs,DoDebuffs,DoEvents,DoMelee all to FALSE) include (Removes from alert list, this will not save to the INI file, see exclude save) letsroll (This will set DoBuffs,DoHeals,DoMelee,DoEvents,DoDebuffs TRUE) makecamp (This will Makecamp at existing location. Use /makecamp off or /mb stop to toggle makecamp functionality off) mana (Used to /bc out the existing Mana % of the bot) mbpause or mbp [on, true, off, false, ] (Used to pause or unpause the macro) mbwayplay (Used to playback previously recorded paths / waypoints, through zones, doors, chaining paths, etc.) mbwayrec (Used to record a path / waypoint.) Once started, ducking for each location will add a waypoint to the path. Sitting stops path recording and returns to modbot functions. To add doors, chains, pull locations, etc. you'll need to edit the MBWayPlay.INI file Further information about mbwayplay and mbwayrec (along with examples) can be found here in the wiki. * offtank <on/off> (Toggles offtanking for dealing with adds.) * script (This will allow you to run custom commands while the macro is running, or combine series of commands, see script examples in manual / rev notes) sell (You must be within range of a merchant in order to function, it will sell loot marked as \"=SELL\" in the loot.ini file) sell (With NPC targeted will attempt to sell all items marked \"sell\" in your lootIni file to target. Otherwise optional target name can be supplied.) setinivar (This will find and change any setting in your .ini) Note that this command will have trouble with script settings if you have more than one (it will set the first C1= or whatever that it comes to. Variables changed in the .ini are /varset with the macro running Spells, gems, etc. will not be set unless you use the array correctly for . In other words, ADGem[1] is not the same as ADGem1: Use ADGem[1] and this will set the ADGem1 .ini setting and varset the change to memory. Use ADGem1 and it will only change the .ini. This still has a problem finding variables in very long sections. If /echo \\({Ini\\[\\) , ]} is over the MAX_STRING value - (You go LD typing that if it is). - Stuff like ABGem[20] is almost never found. (Still working on that.) For example, Ligament Slice for a rogue was set up from in-game with these commands typed in to the MQ window (and the rogue was able to put it immediately to use): /mb setinivar ADCount 4 (restart macro - had 0 count before) /mb setinivar ADGem[1] alt /mb setinivar ADSpell[1] Ligament Slice /mb setinivar ADTarBegHP[1] 40 /mb setinivar ADTarCnt[1] 1 /mb setinivar ADTarType[1] 1 /mb setinivar ADAnnounce[1] /bc /mb setinivar ADSpellAlias[1] snare sing (Will sing this song and add the respective gem number to the Twist.List, it attempts to use detrimental as the qualifier to add it to combat songs, or rest songs) stop (Will stop following and/or stop in place) sung (Will remove this song from the respective Twist.List, it attempts to use detrimental as the qualifier to remove it from combat songs, or rest songs) ModBot in game usage and commands \u00b6 Example commands: /bc Bob follow me [This tells bob and only bob to follow me] /bc cast dd [this tells every bot to cast the spell alias dd] /bc shamandude cast buffsta grp buffhp focus grp buffhp %T [buffsta on the group, buffhp on the requester, focus on the group, buffhp on requesters target] /bc necroguy makecamp [this tells \"necroguy\" to makecamp] /bc campout [tells all bots to camp to desktop] /bc exclude ${Target.CleanName} [tells all bots to add your target to the exclude / ignore list, toons will not attack any spawn with that name.] /bc clericname dobuffs on [tells the cleric to set DoBuffs to true and will then begin buffing group] /bc pallyguy cast bmb %t buffhp grp [bmb on requesters target, buffhp on the group] Typical commands sequence for an EXP group: /bc letsroll /bc makecamp You then begin to pull mobs and they will react accordingly. Mobile Camp Example: /bc follow /bc buffup [once ready zone into the instance] /bc stop /bc letsroll [clear first room lets say] /bc follow [move to next room] /bc makecamp [etc, repeat] Example movement options with or without invis /bc mbp on /bc follow Make a EQBC Channel and do things like (using this technique you don't even have to be a master) /bct mycoolchannelname //mb letsroll /bct mycoolchannelname //mb campout ModBot INI Settings \u00b6 PreFace Notes \u00b6 Spell Alias's must be unique across all alias's Obsolete? 06272011 -Changed - ? \"cast\" command usage now allows for multiple aliases. If you have several spells with the same alias, using /bc castwill now cast all spells marked. Example, for shaman you can have Fo7, Talisman of Boar, Talisman of Wrulan, Talisman of Tribunal, ect.. all marked with \"fullgroup\". \"/mb cast fullgroup\" will cast each spell in the order they are found in the .ini file. `Buffing - Group buffs can now be seperated to different classes, and will allow keeping the spell on netbots members in seperate groups from the caster with the inclusion of keyword `\"raid\". Example -````` Code: ``````[AB2] ABGem=8 ABSpell=Focus of the Seventh ABSpellFoci= ABDurMod=50 ABSpellAlias=fo7|grpfocus|fullgroup ABAnnounce= ABSpellMinMana=20 ABTarCnt=2 ABTarType=war shd pal rng mnk rog brd bst ber shm dru wiz mag enc nec raid ABRecast=FALSE ABSpellIcon= ABPreCondition=TRUE Note from the above example that clr is not included in the TarType.. My clerics have the spell blocked. Attempting to cast on them will cause a chain loop of``````casting until the cleric gets self buff on that doesn't \"stack\" with focus. - so watch spell stacking and make sure to set your toons accordingly.``````````` Old format of \"self\" will also work with no change if you don't want to buff other groups with the spell. Commands - Tell commands will now check buff aliases, and don't need \"cast\" to ask for buffs.. \"/tellfullgroup\" from a non-master toon will make the shaman cast every spell with that alias on the sender of the tell. Masters still require use of \"cast\". - This does allow guildies or whoever else knows your aliases to get buffs easily. /say is not affected and is still not enabled for modbot. `` Added \"docommand\" - Master toons that aren't in netbots can now directly command toons. \"/telldocommand /sit\" will make the receiving toon sit, or execute any command after ````` the \"docommand\" keyword. - Word of caution - You can cause macro errors with this if you aren't careful. The command sent is executed directly with /docommand in the macro. A tell received of \"/telldocommand /sit\" will locally execute \"/docommand /sit\" Watch extra characters and or brackets.. - Because of the nature of this one, the commanding toon MUST be listed in MasterList.` You should be familiar or at least capable of making MQ2Bandolier sets as they are used by MQ2Cast for \"foci\" items Please treat the Buff, Debuff, Event, Heal INI sections as a first in first out (FIFO). Highest priority to lowest priority, you don't want mez or slow as AD12 but as AD1. You don't want AH1 as Complete Heal, you want AH1 to be DA/DB (those are examples, use common sense) If you want to add some visual zip to your announcements (things are easy to miss in /bc..), you can use color coding and the like in any of your Announce settings. For example, *Announce=/bc [+r+]Group Mez +x+ \\<\\<[+y+] %t [+x+]>> with +g+ %s [+x+]* will produce a line in the MQ chat window that is MUCH easier to see than the regular fonts. Rk. XX Usage - Heals, buffs, debuffs, and cures have code added to check your book and find the correct version of the spell you're using on startup of modbot. Rk. II and Rk. III are not needed, but only for these sections. If you upgrade a normal spell in these sections to Rk. II or III, restarting the macro will make the new spell work. Please note that this does not apply to discs, potionbelt, abilities, or PetCast at this time (meaning you must include the Rk. XX in the spell name for these types). Setting spell duration modifications (AHDurMod, ADDurMod, ABDurMod, AEDurMod) - Use the following formula to determine what number to set your DurMod at: \\({Spell[X\\].Duration} \\* (\\) +${Spell[X].Duration}) == timer duration. So if you want a 25% extension on the timer, set durmod to 25 to make ${Spell[X].Duration} * 1.25 = timer. Modbot shouldn't re-cast if timer is still running. References \u00b6 tnt = TankName Target grp = group Settings Section [Settings] \u00b6 DoMelee=TRUE|FALSE DoHeals=TRUE|FALSE DoBuffs=TRUE|FALSE DoDebuffs=TRUE|FALSE DoEvents=TRUE|FALSE DoCures=TRUE|FALSE DoPull=TRUE|FALSE DoPet=TRUE|FALSE Must have a buff entry for creating a pet (in the AdvBuff section - see note for ABTarType). Also see note for Cleric pets under PetCast below. * DoSit=TRUE|FALSE * DoLoot=TRUE|FALSE * DoFW=TRUE|FALSE * Should I cast spells for food and water. (see FoodSpell and DrinkSpell entries) * DoForage=TRUE|FALSE * ForageIni=name of ini file for forage * Defaults to forage.ini . Please see the Related include files page for more information on the Forage.ini file. * DoAfk=TRUE|FALSE * DoMount=TRUE|FALSE * If set to TRUE, you must complete the MountCast entry below. * MountCast=Spell/Item name/AA name|gem #,item,alt * Use MQ2Cast syntax without quotes. Examples: * MountCast=Collapsable Roboboar|item * MasterList=PC Name,PC Name * Comma delimited list of names. Can also use ${NetBots.Client} to designate that any chars using NetBots can act as master. Examples: MasterList=Bigbob,Sooper MasterList=${NetBots.Client} TankName=PC Name,PC Name Comma delimited list of names. This variable will also be set when you designate a character using either the Main Tank or Main Assist group roles. Can also use ${Group.MainTank.Name} to auto set this to whomever is set in the group main tank role. Examples: TankName=Billytank,Larrytank TankName=${Group.MainTank.Name} Radius=# Radius that I will monitor for NPCs. If you are having issues with your characters not casting buffs, etc. while not in combat, try adjusting the Radius setting down a bit to make certain that they are not pickng non-aggro mobs in the surrounding area. Example: Radius=100 ExcludeList=npcname|npcname| Pipe delimited names to exclude. Please note that you must have a Pipe \"|\" at the end. Example: ExcludeList=a hollow tree|a broken barrel| SitAggroRadiusCheck=# Radius to check for aggro to see if I can sit. Default is 75. AfkMessage=afk message Enter a custom AFK message if desired (leave blank for no AFK message). Default is \"Not now, thanks\". DeathSlot=TRUE|FALSE Will only be true if your bot needs to camp to desktop to save res timer. This way the macro will know if you died and had to camp out. * NetworkIni=Path and filename of ini file * Option for a network based INI file for scripts and path playback (mbwayplay and mbwaypnt.ini file). * File must be prefixed by \"Network-\" or \"Net-\" * Example: NetworkINI=X:\\shared\\modbot\\mb_network.ini * TraderName=toon name|bazaar trader * For use with the Campout command. Example: * /bc campout trader will log in whatever toon you have set in the TraderName variable. * Second argument ( |bazaar trader ) will log in the toon and run the bazaar macro with the trader option (or any other mac+options you want there.) * FollowDistance=# * Designates how far you will stay from followee. * Default 20. * FollowStick=MQMoveUtils Options * If using MQ2MoveUtils, enter the options that you would like to use. Default 20 hold uw. Example: * FollowStick=20 hold uw * PetAggro=TRUE|FALSE * TRUE - pet taunt on * FALSE - pet taunt off * PetAssist=[1] * Assist and pet attack or not * PetFoci=[-bandolier|petfoci] * Any spell foci you want to swap in for this spell using MQ2Cast syntax, you must have previously created the set via the MQ2Bandolier plugin /createset command. * PetShrinkSpell=pet shrink spell name|gem# * Spell to be used to shrink your pet. Leave blank if you don't want your pet shrunk. Example: * PetShrinkSpell=Tiny Companion|gem9 * GoMNuke/GoRMNuke/GoERMNuke/GoDERMNuke=[] * GoMNuke, GoRMNuke, GoERMNuke and GoDERMnuke will only appear if the toon has the AA available upon startup. These settings only require the * ALIAS * of the debuff you want to be \"cast\" on the MA's target when the event fires. No script required. * **SummonFood=spell name,item name,alt name|gem#,item,alt</span>** These entries appear when DoFW is set to TRUE. Use MQ2Cast syntax for spell entry. Example: SummonFood=Summon Food|gem12 **SummonDrink=spell name,item name,alt name|gem#,item,alt</span>** MQ2Cast syntax. Example: SummonDrink=Summon Drink|gem8 Deprecated Entries DoAura =[TRUE,FALSE] (Must have a completed AuraCast entry below) DEPRICATED!! Set up aura as a buff with 'self aura' as the ABTarType. AuraCast =[\\|\\,item,alt>] (Example: Uber Aura|gem3) - DEPRICATED! Set up aura as a buff with 'self aura' as ABTarType. Use MQ2Cast syntax without quotes. PetCast=|gem\\<#>|(for Suspended Minion II)] (PLEASE NOTE: As of 3.499 beta, PetCast is no longer needed. You can now add pet to \"AB\" section by setting ABTarTypeX=petspell (or petcast). Pets won't be cast unless DoBuffs and DoPet are true. Also shouldn't cast if in combat unless \"cbt\" is included in ABTarType. When used with modbuff, Persistent Minion is also used automatically if you have it, and no extra entry needed. Original entry: Spell to cast to create / recall pet. Example: PetCast=Animate Dead|gem8|smii (Mainly MQ2Cast syntax without quotes)) Can also use for charming: [charm \\<NPC type 0=any 1=undead,vampyre 2=animal 3=summoned 4=(specify name type)> ] Example: PetCast=charm 4 4 \"lowland basilisk,a emerald drake\" For Cleric Hammer type pets that you only want to cast / have while in combat, you MUST have DoPet set to False AND have PetCast=|\\,item,alt>) AdvMelee [Melee] \u00b6 OffTank=TRUE|FALSE False - attack the MA target only True - assist MA and then not change targets ACLeash=# The farthest the bot will move from where he is to engage a mob. However if \"TankName\" stays within 20 steps, the bot will exceed this leash. * ACAssistPct=# * Assist when target HP is this or less. Melee characters will engage at this point and caster pets will be sent in. * ACManaPct=# * Stop assisting when Mana drops below this. * Set to 0 for melee only * Set to 101 for non-melee casters * ACAnnounce=channel * Channel to announce in, or leave blank for no announce. Example: * ACAnnounce=/bc Will announce in MQ/EQBC window * ACAnnounce=/g Will announce in group chat * ACMeleeCmd=command * Use to set MQ2Melee commands. Example: * ACMeleeCmd=/melee plugin=1 * ACBefore=script * Special script code to execute before you engage. Example: * *ACBefore=/if ({ACMATarget} && {Spawn[{ACMATarget}].Type.Equal[NPC]} && {Spawn[{ACMATarget}].Distance3D}\\<={ACLeash} && {Me.CombatAbilityReady[Sneak Attack]} && {Me.Invis} && {Me.Sneaking} && {Me.PctEndurance}>40 && !{Me.Moving}) /call mbscript SneakAttack* ACBefore=/if (!{Me.Pet.ID}) /casting ''{PetCast}'' \\<-- cleric pet hammer example ACAfter=script Special script code to execute after you leave combat. Uses same script format as ACBefore. AdvHeal Section [AdvHeal] \u00b6 Please note that for FD class toons and ${Group.Puller} - If they are out of ACLeash range and not FD, they will not be healed (to prevent aggro on group), but only if healer is not in 'combat' combatstate. If not in combat they will be healed. For group heal spells, you must set the TarCnt to something greater than 1 in order for the spell to evaluate correctly (and be used as a \"group\" heal when more than one member of the group requires healing). For instance, if you have TarCnt=3, then at least 3 members of your group will need to be below the HP level that you set in the Class line. A possible issue may arise when the cleric is in a loop state where a single heal is being fired \\(AHHealMode\\) - it may take a bit for it to realize the single heal should be stopped and the group heal cast instead. Depending on how you have it configured, the use of AHHealMode can force it to not even check the your group heal spell as it's being told to only check one \\(the single heal\\) . If this is the case (and not the desired result), perhaps use the group heal as the spell to check in AHHealMode. AHCount=# Number of heals you plan to have. AHNewFormat=# Set to '1' for ModBot v4 INI format Set to '0' for ModBot v3.49 INI format AHCheckTime=# How often to check for heals in seconds. AHHealOOBC=TRUE|FALSE Do I heal characters outside of Netbots and EQBC (e.g. folks not running MQ2 or mercenaries.) AHHealOOBC Thinking of an english name for that setting, all that comes up is \"Heal Outside Of BC\". So, in other words, if the setting is FALSE, it won't heal anyone that's not on YOUR EQBC server with the netbots plugin set up correctly, even if they're in your group. That is why I recommend you connect all toons and run modbot on all of them at least once, even if you don't plan to run it as a regular thing for the other toons.. It assures the plugins are set correctly. If AHHealOOBC=TRUE, then modbot will heal group members and pets even if there's no netbots connection. Out of group healing can only be done by the macro if there's a netbots connection, or if the other toon is a master and uses the cast command via /tell. I do recommend AHHealOOBC=TRUE setting, but I still left the default FALSE so people could check their connections before setting TRUE. AHHealMode=#|#|# 0 or 1 (off or on)|Heal #|Timer This will keep the toon in the heal loop after casting to check for additional heals for the duration of . * AHInterruptLevel=# * Lowest interruptable spell. For example, AHHealSpell1 will never interrupt if this is set to 2. * AHClassPriority=class names * Set class healing priority (e.g. if you're currently healing a chanter, you won't interrupt for a monk). * Allowed entires are: enc,wiz,mag,nec,clr,dru,shm,pal,shd,war,bst,rng,ber,rog,brd,mnk (or any combination thereof) * AHAllowDismount=TRUE|FALSE * Designate whether your toon should dismount (or not) to interrupt a spell to cast a heal * TRUE - allow toon to dismount if necessary to interrupt a spell cast in order to fire off a heal. * FALSE - your toon will never dismount to interrupt a spell. * [AHx] * Where 'x' is the number of healing spell * Gem=source * Designate what the source of the spell is. * Valid entries: gem number, alt, ability, item, script, potionbelt * Note that 'potionbelt' does not require a slot number. * Examples: * Gem=3 Cast this spell from gem 3 * Gem=alt This spell is an alternative advancement ability * Spell=source name * Valid entries: spell name, item name, alternate ability name, ability name, script name * Examples: * Spell=Superior Healing This would be generally be paired with an Gem entry indicating which spell gem to cast Superior Healing from. Spell=Healing Thingy of Uberness This would be generally be paired with an Gem entry indicating that the source of this spell is an item. * SpellFoci=setname * Bandolier set name to swap in before casting this heal. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * DurMod=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * SpellMinMana=# * Minimum mana percentage to have in order to attempt this heal (e.g. 05 \\(for 5%\\) , 25 (for 25%) * SpellAlias=spell alias * Alias name for the heal. * Please note that you can NOT have spaces in your alias names. * Announce=channel * Channel to announce in, or leave blank for no announce. See Announce description in the AdvMelee section for further explanation. * TarCnt=# * Designate how many targets are required to cast this spell. * Class=class name(s) * Valid entries: pc pet group hp0 war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec mypet self (or some combination there of). Please also note the following combination restrictions: pc \\<-- will include pc's and mercs. Leave pet out to ONLY heal PC's and mercs. pet \\<-- will include pets. Leave pc option out for pet only heals. group \\<-- will exclude everyone that is not in your group hp0 \\<-- set an overall health percentage for any named classes classnames (war, shd, etc.) \\<-- used to declare which classes this heal should apply to. Can also be combined with a health persentage (e.g. bst50). mypet to be used by itself (e.g. set up a seperate heal for your pet) self \\<-- Only use self if the heal spell is SELF ONLY, or only to be cast on yourself. This setting is exclusive and other targets will not be checked for that spell. * PreCondition=TRUE|FALSE|PR * Defaults to TRUE * PR (only to be used with NetBots) If PreCondition=PR, then for that particular heal there will be a check on target (over NetBots) for any PR type spell. If target has a PR buff on, then the heal will be skipped. Please note that the PR setting does not currently account for the duration remaining of the PR buff. PreCondition=PR will check for these spell ID's: 9755 (Promised Renewal) 9756 (Promised Renewal Rk. II) 9757 (Promised Renewal Rk. III) 18270 (Promised Recuperation) 18271 (Promised Recuperation Rk. II) 18272 Promised Recuperation Rk. III) AdvDebuff Section [AdvDebuff] \u00b6 ADCount=# Number of debuffs you plan to have. ADNewFormat=x Set 'x' to 1 for ModBot v4 style Set 'x' to 0 for MobBot v3.49 style ADMobMax=# This is the array size where the valid mob ID's are stored after found. The loop to find valid mobs uses SpawnCount, then stores the mobs it \"finds\" in the array. Setting this to 20 or 30 should be way more than enough ever. It is best to keep this setting (and therefor the array) relative small for memory purposes (as well as for speed through the debuff loop). If your toons are ignoring NPCs, this number may be set too low. First thing to check!! ADCheckTime=# How often to check for debuffs in seconds. \"It's the forced delay or timer between allowing that section of the macro to execute again.. Set higher for toons you want to have more emphasis somewhere else.. Like a cleric can be 8 for debuffs and 0 for heals, but a shammy you'd want 0 for debuffs. 0 = no forced delay. Speed still varies depending on the size of the loops or how many heals, debuffs, ect are in each section.\" - toomanynames * ADAggroOnly=1|0 * 1 - only add mobs to the mob list if someone in your group or in netbots is the mob's target. Only use this option on bots that cast on targets that are NOT the main assist's target (e.g. chanter mezzing adds). Please note: ADAggroOnly is not terribly reliable at times. If you are having issues with one of your bots auto-aggroing mobs (when they are not the tank), try setting ADAggroOnly=0 and then ADTarType=1 or 11. * ADHold=0|1|1| * 1=on 0=off|Debuff spell #|Time to wait for debuff| * This is used much like the AHHealMode setting, but only for type 12 debuffs. Sets a timer to hold the toon in the debuff loop (no buffs or events) until the debuff is complete. * [ADx] * Where 'x' is the number of Debuff spell * Gem[x]=source * Designate what the source of the spell is. * Valid entries: gem number, alt, ability, item, script, potionbelt * Note that 'potionbelt' does not require a slot number. * Examples: * Gem=3 Cast this spell from gem 3 * Gem=alt This spell is an alternative advancement ability * Spell=source name * Valid entries: spell name, item name, alternate ability name, ability name, script name * Examples: * Spell=Ensnare This would be generally be paired with an Gem entry indicating which spell gem to cast Ensnare from. Spell=Bangy Thingy of Uberness This would be generally be paired with an Gem entry indicating that the source of this spell is an item. * SpellFoci=setname * Bandolier set name to swap in before casting this spell. Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * DurMod=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excess of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * SpellAlias=spell alias * Alias name for the spell. Please note that you can NOT have spaces in your alias names. * Announce=channel * Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. * SpellMinMana=# * Minimum mana percentage to have in order to attempt this spell (e.g. 05 \\(for 5%\\) , 25 \\(for 25%) * **SpellRecast=\\#** * Number of times to recast this spell for fizzles, interrupts, etc. * **SpellCastonResist=spell alias** * Should this spell be resisted, is there another alias to cast before another attempt of this spell. * Please note that if SpellCastonResist is defined, ADSpellRecast must be at least 1. * **SpellDelay=\\#** * Number of seconds to wait between casts of this spell. * **TarCnt=\\#** * Number of targets required to be present to cast this spell. If set to 0, this spell will not be auto-casted\\) * TarType=# * Designate one target type to cast this debuff on. * Valid target types: * 0 = All mobs * 1 = MA Target only * 2 = All except MA Target * 3 = Only on named mob * 10 = All mobs before next spell * 11 = MA target only before next spell * 12 = All but MA target before next spell * 13 = Only on named mob before next spell * Priority Debuffs (10, 11, 12, 13) should be placed first most (prior to non-priorities). Meaning - settings of 10, 11, 12 and 13 need to be in top spells slots (AD1, AD2, etc) * TarBegHP=# * The target must be equal or below this HP%. * TarEndHP=# * The target must be equal or above this HP% * IfSpellImmune=script name * This is meant to be a pointer to a quick, one line script that is executed when a mob is immune to the spell you have cast. If you need to do something complicated, other scripts can be called from it. 'Param1' is now passed as the immune target's ID. An example where this would be useful is for chanter mez: /bc {TankName} //multiline ; /varset ACMATarget {Param1};/target id {Param1} will make your toon target the immune mob even if he was on another mob at the time. * UseHoTT=# * This will cause the macro to /target the mob and check TargetOfTarget before casting and delay # seconds before checking again if mob is skipped. If not a raid or group member, the macro will move on and recheck that mob for that debuff after the time has expired. Note that this will default to casting the debuff anyways if HoTT isn't available. * PreCondition=one line script * Whatever statement you add to this line needs to /return TRUE. i.e. - PreCondition=/if ({This} && {That}) /return TRUE. Only a TRUE return will allow the spell to cast, so script carefully, or leave the lines default. Code: [AD1] Gem=2 Spell=Turgur's Insects SpellFoci= DurMod=0 SpellAlias=slow Announce=/bc Slowed <<[+y+] %t [+x+]>> with[+g+] %s [+x+] SpellMinMana=10 SpellRecast=2 SpellCastonResist=malos SpellDelay=0 TarCnt=1 TarType=11 TarBegHP=200 TarEndHP=15 IfSpellImmune= UseHoTT=0 PreCondition=TRUE \"Notice the TarBegHP setting. I have the same spell set with TarType=12 directly after this one to make sure he slows adds. (sometimes he pulls em too..) Everything else - mainly ACAssistPct is set to a lower value. Most around 95 or so. Buffs are a pita because if the debuff sub is called \\(it is called first\\) it won't cast the debuffs if there's any reason not to, then the macro runs through the whole buff loop before getting back to debuffs again.. Setting the TarBegHP at least over the level of all other functions at least attempts to keep the slow first. Also.. I find the macro works best if you always set your ACManaPct very low. Usually keep mine around 5 or so for every toon. I should change the default on that, but clearing targets and such is something your toon will do quite often if his mana is under that value.\" - Ptarp on the forums on Wed Mar 09, 2011 7:54 pm. (edited into Wiki by Arblis) AdvBuff Section [AdvBuff] \u00b6 If you want to cast single target buffs after group buffs, place all of your group buffs first. ABCount=# Number of buffs you plan to have. ABNewFormat=x Set 'x' to 1 for ModBot v4 style Set 'x' to 0 for MobBot v3.49 style ABMobMax=# Max number of targets to track for buffs (do not include pets) ABCheckTime=# How often to check for buffs in seconds [ABx] Where 'x' is the number of buff spell Gem=source Designate what the source of the spell is. Valid entries: gem number, alt, ability, item, script, potionbelt Note that 'potionbelt' does not require a slot number. Examples: Gem=3 Cast this spell from gem 3 Gem=alt This spell is an alternative advancement ability Spell=source name Valid entries: spell name, item name, alternate ability name, ability name, script name Examples: Spell=Minor Shielding This would be generally be paired with an Gem entry indicating which spell gem to cast Minor Shielding from. Spell=Uber Wand Thingy of Uberness This would be generally be paired with an Gem entry indicating that the source of this spell is an item. * SpellFoci=setname * Bandolier set name to swap in before casting this spell. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * DurMod=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * SpellAlias=spell alias * Enter an \"alias\" for the spell. This is often a short, easier to use name (e.g. the alias for Spirit of the Wolf might be SoW). Please note that you can NOT have spaces in your alias names. Announce=channel Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example: Announce=/bc [+r+]Buffed +x+ \\<\\< +y+ %t +x+ >> with +g+ %s [+x+] SpellMinMana=# Minimum mana percentage to have in order to attempt this spell (e.g. 05 \\(for 5%\\) , 25 (for 25%) TarCnt=# Designate how many targets are required to cast this spell. If set to 0, this spell will not be auto-casted. This is useful for spells that you want to call via alias to be cast manually. For single cast spells (e.g. Spirit of Eagle), TarCnt will most often be set to 1. For group spells (e.g. Flight of Eagles), you might set your TarCnt higher so that it only gets cast when there are more than 2 or 3 people in your group. * TarType=target type * Valid target types are as follows (please note which entries can be used with others and which are exclusive): * ShortClassName Used for class specific buffs (ie. haste on \"war\"). Valid entries are: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec. Note that any or all of these entries can be used at the same time. self Used for self only spells. grp for Group spells (e.g. TarType=self grp) pet used to cast buffs on all pets in the group. mypet used to cast on only your pet. Please note that pet and mypet are mutually exclusive. cbt for spells to be casted during combat (e.g. an entry for Yaulp would be TarType=self cbt). Please note that any NPC within radius that is not on your exclude list will cause 'cbt' buffs to fire. If you want to buff next to NPCs (and don't plan to kill them), use the exclude command. If you later decide to kill whatever mob you've excluded, use the include command to remove it from list. The macro does not check combat state of the tank for buffs. idle used with cbt for spells to be casted when in or out of combat (e.g. if you wanted to keep Yaulp on at all times (in AND out of combat), your entry would be TarType=self cbt idle). Please note that idle is only used in TarType when cbt is also used. aura used to cast an aura - must be used with self (e.g. TarType=self aura) Note that Bard auras *REQUIRE* SpellAlias to be set up to cast, and modbuff will use CastCall to actually cast the aura. * tank used to cast only on the designated group tank. Tank designation is keyed from either the TankName variable in the setting section (see above) or by setting a toon to Main Tank (Group.Maintank) using the Roles function. petspell used to set up an entry to create/cast a pet. Example: ''[AB3] Gem=7 Spell=Shambling Minion SpellFoci= DurMod=0 SpellAlias=pet Announce=/bc Cooking up a pet SpellMinMana=10 TarCnt=1 TarType= petspell Recast=FALSE SpellIcon= PreCondition=TRUE'' Default entry: *TarType=tank war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self mypet grp pet cbt idle* Please note that the default entry includes settings that do not work together. Specifically, tank , self and mypet are meant to be used by themselves. If you want to cast the same buff on yourself, your pet and the tank, create them as seperate buff entries. * Recast=TRUE|FALSE * True is only really needed for single targets that are NOT in the group and/or on NetBots. Set Recast TRUE when you want the macro to use the spell worn off messages from EQ for the macro to know who to cast the buff on. This allows you to rebuff toons that are lower level for your normal buff set, or not in EQBC and not in group. For the most part this shouldn't be needed for rebuffing if all of your toons are NetBots members. The macro actually checks the other toons in netbots and knows what their buffs are, whether the one they're trying to cast will stack, and the duration of the buff if the toon still has it on. * SpellIcon=icon name * Use when the spell icon has a different name than the actual spell (e.g. the spell Unity of Spirits has a spell icon of Transcendent Foresight . In fact, you could use any one of the four spell icons/names that Unity creates). Please note that if the name you have in SpellIcon doesn't evaluate to a spell name, the buff will be skipped. In other words, leave it blank if your spell doesn't need it. AdvEvent Section [AdvEvent] \u00b6 AECount=# Number of events you plan to have. AECheckTime=# How often to check for events in seconds AECustomX=watch text Custom emote-triggered events driven by scripts. Default is three blank entries (AECustom1=, AECustom2=, AECustom3=) Please note that an earlier version of this variable populated AECustom1, AECustom2 and AECustom3 with random numbers in the ini file. The newwer version of AECustom now adds the three AECustomX entries but sets them as blank.) Each AECustomX entry, if defined, must have a corresponding script entry. For example, by defining AECustom1=greater bloodmoon healing in the AdvEvent section, you would need a corresponding script defined that might read something like: [Script-AECustomEvent1] Commands=1 C1=/bc cast stun AEGem[x]=source Designate what the source of the spell is. Valid entries: gem number, alt, ability, item, script, potionbelt Note that 'potionbelt' does not require a slot number. Examples: AEGem1=3 Cast this spell from gem 3 AEGem1=alt This spell is an alternative advancement ability AESpell[x]=source name Valid entries: spell name, item name, alternate ability name, ability name, script name Examples: AESpell1=Minor Shielding This would be generally be paired with an ABGem1 entry indicating which spell gem to cast Minor Shielding from. AESpell1=Uber Wand Thingy of Uberness This would be generally be paired with an AEGem1 entry indicating that the source of this spell is an item. * AESpellFoci[x]=setname * Bandolier set name to swap in before casting this spell. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * AEDurMod[x]=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * AEDelay[x]=# * How many seconds do I wait between casts of this spell. * AEEventMinMana[x]=# * My mana percentage must be at least this to complete this event. * AEEventMinHP[x]=# * My HP percentage must be at least this to complete this event. * AEMinMana[x]=# * The event target's mana percentage must be above this to complete this event. * AEMaxMana[x]=# * The event target's mana percentage must be below this to complete this event. * AEMinHP[x]=# * The event target's HP percentage must be above this to complete this event. * AEMaxHP[x]=# * The event target's HP percentage must be below this to complete this event. * AETarType[x]=target type * Valid entries: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self tnt (Less is better!) * AESpellAlias[x]=event alias * Enter an \"alias\" for the event. This is often a short, easier to use name (e.g. the alias for Spirit of the Wolf might be SoW). Please note that you can NOT have spaces in your alias names. AEAnnounce[x]=channel Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example: ABAnnounce1=/bc [+r+]Buffed +x+ \\<\\< +y+ %t +x+ >> with +g+ %s [+x+] AETarCnt[x]=1|0 Settings are *only* either 1 (on) or 0 (off). Examples \u00b6 Shaman cannibalization example. In this case, settings like AEEventMinMana and AEMinMana both refer to the shaman as he is both the event triggerer as well as the target of the event: AEGem1=5 AESpell1=Cannibalize III AESpellFoci1= AEDurMod1=0 AEDelay1=0 AEEventMinMana1=0 AEEventMinHP1=30 AEMinMana1=0 AEMaxMana1=90 AEMinHP1=50 AEMaxHP1=100 AETarType1=self AESpellAlias1=canni AEAnnounce1= Necromancer mana feed example (where the necro is feeding mana to another character). In this case, AEEventMinMana refers to the necro's mana and AEMinMana refer to the mana of the target (as defined by AETarType): AEGem2=4 AESpell2=Rapacious Subvention AESpellFoci2= AEDurMod2=0 AEDelay2=0 AEEventMinMana2=50 AEEventMinHP2=50 AEMinMana2=20 AEMaxMana2=45 AEMinHP2=0 AEMaxHP2=100 AETarType2=clr enc AESpellAlias2=manafeed AEAnnounce2=/bc AdvCure Section [AdvCure] \u00b6 AQCount=# Number of cures you plan to have. AQNewFormat=x Set 'x' to 1 for ModBot v4 style Set 'x' to 0 for MobBot v3.49 style AQCheckTime=# How often to check for cures in seconds [AQx] Where 'x' is the number of cure spell Gem=source Designate what the source of the spell is. Valid entries: gem number, alt, ability, item, script, potionbelt Note that 'potionbelt' does not require a slot number. Examples: Gem=3 Cast this spell from gem 3 Gem=alt This spell is an alternative advancement ability Spell=source name Valid entries: spell name, item name, alternate ability name, ability name, script name Examples: Spell=Minor Shielding This would be generally be paired with an Gem entry indicating which spell gem to cast Minor Shielding from. Spell=Uber Wand Thingy of Uberness This would be generally be paired with an Gem entry indicating that the source of this spell is an item. * '''SpellCntr= * Currently not used for anything, so don't worry about it :) * SpellFoci=setname * Bandolier set name to swap in before casting this spell. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets (e.g. -bandolier|) * SpellCureType=cure type * Valid entries (type of cure needed): Cursed, Diseased, Poisoned, EnduDrain, LifeDrain, ManaDrain, Blinded, CastingLevel, Charmed, Feared, Healing, Mesmerized, Resistance, Rooted, Silenced, Slowed, Snared, SpellCost, SpellSlowed, SpellDamage, Trigger, All Set the cure type to the best match for the spell, but keep them in order of best cure first. The first cure in your .ini matching the cure type needed (or if you set to \"All\") will be the first attempted spell. Cures *can* always be interrupted by any heal spell, unless you're using a cure spell that's already listed in your heal section (e.g. Cleric's \"Word of XXX\" line of spells may or may not interrupt for heals depending on where they are in your heal section). Modcure.inc will cast once per loop and then return to the main loop, so setting group cures (like Radiant Cure) toward the top would be best Be specific on cure types to avoid recasting the same cure over and over if it won't cure you. SpellMinMana=# Minimum mana to have in order to attempt this cure. SpellRecast=# Number of times to recast this spell for fizzles, interrupts, etc. TarCnt=# How many targets should be present to cast this spell, if set to 0, this spell will not be auto-casted. TarType=target type Valid target types are as follows (please note which entries can be used with others and which are exclusive): ShortClassName Used for class specific buffs (ie. haste on \"war\"). Valid entries are: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec. Note that any or all of these entries can be used at the same time. self Used for self only spells. grp for Group spells (e.g. ABTarType1=self grp) pet used to cast buffs on all pets in the group. mypet used to cast on only your pet. Please note that pet and mypet are mutually exclusive. cbt for spells to be casted during combat (e.g. an entry for Yaulp would be TarType=self cbt). Please note that any NPC within radius that is not on your exclude list will cause 'cbt' buffs to fire. If you want to buff next to NPCs (and don't plan to kill them), use the exclude command. If you later decide to kill whatever mob you've excluded, use the include command to remove it from list. The macro does not check combat state of the tank for buffs. idle used with cbt for spells to be casted when in or out of combat (e.g. if you wanted to keep Yaulp on at all times (in AND out of combat), your entry would be TarType=self cbt idle). Please note that idle is only used in TarType when cbt is also used. aura used to cast an aura - must be used with self (e.g. TarType=self aura) Note that Bard auras *REQUIRE* ABSpellAlias to be set up to cast, and modbuff will use CastCall to actually cast the aura. * tank used to cast only on the designated group tank. Tank designation is keyed from either the TankName variable in the setting section (see above) or by setting a toon to Main Tank (Group.Maintank) using the Roles function. * Default entry: *TarType=tank war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self mypet grp pet cbt idle* Please note that the default entry includes settings that do not work together. Specifically, tank , self and mypet are meant to be used by themselves. If you want to cast the same buff on yourself, your pet and the tank, create them as seperate buff entries. * SpellAlias=spell alias * Enter an \"alias\" for the spell. This is often a short, easier to use name (e.g. the alias for Radiant Cure might be RC). Please note that you can NOT have spaces in your alias names. Announce=channel Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example: Announce=/bc [+r+]Cured +x+ \\<\\< +y+ %t +x+ >> with +g+ %s [+x+] [AQ2] Gem=2 Spell=Counteract Disease SpellCntr=0 SpellFoci= SpellCureType=Diseased Slowed SpellMinMana=0 SpellRecast=0 TarCnt=1 TarType=pc grp pet cbt idle SpellAlias= Announce=/bc AdvPull Section [AdvPull] \u00b6 This section is under development. APCheckTime=# Time (in seconds) to wait in between AdvPull executions. Default is 0. APRadius=# The distance around your target to check for more mobs as defined by APMobMax (basically, a check for adds). Default is 40. * APMobMax=# * The max amount of mobs (target + adds) you will allow before pulling. Default is 1. If there are less than APMobMax mobs within APRadius of your target, it will pull the mob. * APScript= Scriptname * Name of script to define how you want to tag the mob (throw stone, ranged, item clicky, spell, etc) and executes when you have a mob targeted to pull. The script name must have at least 3 characters. Default is empty. **YOU MUST CREATE A SCRIPT TO TAG THE MOB!** Modbot Scripts APPath= Pathname The name of the path to run for pulling/movement, as defined in your MBWayPnt.ini (See ModMove for more details on creating a path). The path name must be at least 3 characters. Default is empty. * APRetPath= ReturnPathname * The name of the path to use to move back to camp. The path must be defined in your MBWayPnt.ini file. The path name must be at least 3 characters. Default is empty. Mostly used for when the path back to camp is a different one than used to pull mobs (ie, you go through a one-way wall to pull or intentionally fall off a ledge and have to run the long way back). If you want to return the same way you came, you can just use WPLoop=TRUE in MBWayPnt.ini instead of having to set up a second path. * APBefore= * Command or series of commands (with multiline) to execute before the rest of AdvPull section. Must be at least 3 characters. Default is empty. * APAfter= * Command or series of commands (with multiline) to execute after AdvPull has finished. Default is empty. * APAnnounce= * A way to announce what you have pulled. Default is empty. * Note: This is not just a chat channel, but a place to put a full incoming message, ie: * APAnnounce=/gsay Incoming -[ %t ]- * APRetries=1 * Number of times to attempt to pull a mob in case it fails the first try (line of site, etc). This will strafe left and right on subsequent attempts. Default is 1. MBCommon.inc Settings \u00b6 The location and name of MBCommon.inc can now be set by changing line 38 in Modbot.mac. /declare MBCommon string outer MBCommon.ini It defaults to the ./macros folder, but the line can be changed to any path. Settings Section \u00b6 LoadAlias [1,0] This is an on / off setting to load the \"/alias /mb /echo MB-\" alias for commands. It is set to 0 after first run when alias should be loaded, but you can set to 1 to add it back to your Macroquest.ini file if it gets deleted. IniLocation Path to your MB_.ini files. Must end in / or if changed from default. LootIni [Loot.ini] This setting can be used to change the location of your Loot.ini file as well as the name. MBWayPntLocation [MBWayPnt.ini] This setting can be used to change the location of your MBWayPnt.ini file as well as the name of the file. CheckTargetDebuffs [TRUE|FALSE] This setting toggles on/off the ${Target.Buff} checking for debuffs (essentially this checks if the spell \"Stacks\" before casting.) Each debuff listed in MBCommon.ini now has an 'OverwritesID=' entry. This entry is meant for a list of debuffs that the spell doesn't 'Stack' with, but you want the debuff to overwrite. Spell Section \u00b6 Zone.ShortName - List of mobs excluded for that zone in a pipe -\"|\" delimited string. This setting is not present for any zones which you have nothing excluded. Immune lists for each spell are saved in their own section along with a MaxLevel=[100] setting. Change to the max level of the spell. As the macro finds mobs that are immune to the spell, the zone shortname is added to the entry as a variable along with the mob names in pipe delimited format. Mobs that are marked immune to debuffs can be marked in MBCommon.ini with an asterisk to allow for some names that have only some immune, and some not. For example, Dreadspire has some body types with same names where some are immune to mez, and some not (e.g. an aid to the Seneschal - some body types with that mob name are immune to befuddle, and others aren't). By adding an asterisk to the end of the name in the exclude section, the macro will repeat attempts to mez, etc. that mob type (rather than just marking them immune and not casting at all): _DreadspireImmune=|an aid to the Seneschal_|* The ADIfSpellImmune script, if defined, will only run if the mob is found to be immune after cast, but the astrik will not be replaced, and the spell will only cast once allowing the spell to still attempt on the next mob it hasn't been cast on. Overwrites= list of debuffs that the spell doesn't 'Stack' with, but you want the debuff to overwrite. This does require user intervention, and there's no way to set it auto-set them. MaxLevel= maximum level of mob that can be affected by debuff An entry in the spell section might look something like this: [Mystify] MaxLevel=83 thalassius_bImmune=|a sea mephit defender||a sea mephit evoker| OverwritesID=|14569|14570|14530| ModBot Class INI Examples \u00b6 ModBot`` ``Class`` ``INI`` ``Examples`` ``linked`` ``to`` ``another`` ``page Scripts and ModBot Variable Usage \u00b6 ModBot allows VERY customizable sripts to such an extent you can actually program your own sub-procedures within your INI file. You can harness ANY global variable within ModBot to use with the scripts. Scripts match MQ2 code to every extent, below are several examples of scripts and common variables one would use to create complex scripts Understanding scripts, syntax, example, how to \u00b6 Scripts General Info Scripts can be difficult and there are some MQ2 commands that give scripts trouble. Keep this in mind and prepare to post you script code should you have problems. No script can take more then 15 seconds to complete, however this can be modified in the code directly in the Sub MBScript or even changed in the script you create ({Timer} is the var) Scripts are executed from top to bottom and you are allowed to use a label :Top (e.g. /goto :Top), in your script. The /goto :Top option allows for complex loops to take place directly from code in the INI file If you use ANY INI generated ModBot global string variables that have spaces in your custom scripts they MUST be encapsulated by 2 apostrophies when used in the script, see PetCast example below. * Reserved Characters :*These characters can not be used in scripts ::*$ \" :*'' Two apostrophies are for passing variables with spaces in script code. Use them to replace quotes. Syntax [Script-] Commands= C1= . Cn= What does a script look like in your INI file: [Script-HelloWorld] Commands=2 C1=/echo Hello World C2=/if ({Timer}>50) /varset Timer 5s C3=/goto :Top In the example above it will echo to the MQ2ChatWindow \"Hello World\" for 5s. Notice how I do NOT use a $ to reference the \"Timer\" variable. How To use or launch a script :*/bc bob script HelloWorld :*You can set Gem=script and Spell=HelloWorld as a spell name for any of the spells you've configured in ModBot, and it will be triggered when that event, heal, etc would take place. Please see the below examples for complex script code. Common Variables (You can use ANY mq2 variable without the $, you can even CREATE new global vars and use them, all from the INI file via Scripts) {ACState} = If greater than 0, ModBot thinks you are in combat {ACMATarget} = The target of the main assist {CampStatus} = If greater than 0, means I've been given a /bc makecamp command {FollowFlag} = If greater than 0, means I should be following something {TankName} = The acting main assist {Me}, {Spawn}, etc = See MQ2 Manual Examples This example is triggered from an event OR a heal and it will remove the necro \"Lich\" spell: [AdvHeal] [AH3] Gem=Script Spell=DropLich SpellFoci= DurMod=0 SpellAlias=droplich SpellMinMana=0 Announce=/bc TarCnt=1 Class=pc hp40 nec [AdvEvent] [AE3] Gem=Script Spell=DropLich SpellFoci= DurMod=0 Delay=0 EventMinMana=100 EventMinHP=40 MinMana=20 MaxMana=100 MinHP=0 MaxHP=90 TarType=tnt SpellAlias= Announce=/bc [Script-DropLich] Commands=1 C1=/if ({Me.Buff[Lich].ID}) /notify BuffWindow Buff{Math.Calc[{Me.Buff[Lich].ID}-1].Int} leftmouseup This example is launched via the ACBefore command from the [Melee] section, I've got Sneak Attack bound to hotkey 6. What the bot will do is to trigger Sneak Attack, attempt proper position, backstab the mob, then revert to \"normal\" [Script-SneakAttack] Commands=10 C1=/if ({Melee.Enable}) /melee plugin=0 C2=/if ({Me.CombatAbilityReady[Sneak Attack]}) /keypress 6 C3=/if (!{Me.Moving} && !{Stick.MoveBehind} && {Stick.Distance}!={Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}+5]}) /stick {Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}+5]} behind id {ACMATarget} C4=/if ({Target.ID}!={ACMATarget}) /multiline ; /target id {ACMATarget};/delay 5 C5=/if ({Melee.BackAngle}>60 || {Melee.BackAngle}<-60) /goto :Top C6=/if ({Target.Distance3D}>={Spawn[{ACMATarget}].MaxRangeTo}) /stick {Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}-5]} hold behind id {ACMATarget} C7=/if ({Target.Distance3D}>={Spawn[{ACMATarget}].MaxRangeTo}-3) /goto :Top C8=/delay 5 C9=/if ({Me.AbilityReady[Backstab]}) /doability backstab C10=/melee plugin=1 This example will confirm you are hidden and sneaking when I'm at \"camp\" and not sneaking when I'm in follow mode. It will also re-engage if MQ2Melee lost \"stick\" because of too much mob movement [Script-HideSneak] Commands=4 C1=/if ({FollowFlag} && {Me.Sneaking}) /multiline ; /doability sneak;/return C2=/if (!{FollowFlag} && !{ACState} && {Select[{MakeCamp},on]} && {Me.AbilityReady[Hide]} && !{Me.Moving} && !{Melee.Combat}) /multiline ; /doability Hide;/delay 5 C3=/if (!{FollowFlag} && !{ACState} && {Select[{MakeCamp},on]} && {Me.AbilityReady[Sneak]} && !{Me.AbilityReady[Hide]} && !{Me.Moving} && !{Melee.Combat}) /multiline ; /doability Sneak;/delay 5 C4=/if ({ACState} && {ACMATarget} && {Target.ID} && {Me.AbilityReady[Backstab]}) /keypress q Example of createing a new global var and an example of using it [Script-EventsOff] Commands=2 C1=/if (!{Defined[CheckSlow]}) /declare CheckSlow int outer 1 C2=/if ({DoEvents}) /multiline ; /varset DoEvents FALSE;/varset CheckSlow 1 [Script-EventsOn] Commands=2 C1=/if (!{Defined[CheckSlow]}) /declare CheckSlow int outer 3 C1=/if (!{DoEvents}) /multiline ; /varset DoEvents TRUE;/varcalc CheckSlow {CheckSlow}+1 [Script-IsSlowed] Commands=3 C1=/if (!{Defined[CheckSlow]}) /multiline ; /varset DoEvents FALSE;/return C2=/if ({CheckSlow}<=4) /varset DoEvents FALSE C3=/if ({CheckSlow}>4) /varset DoEvents TRUE;/varset CheckSlow 1 Example of using a ModBot global string. This will create a new pet, say when your existing pet is about to die :*Please note in the INI snippets below that the INI generated global string PetCast has a space so to pass this properly in the script, you must encapsulated in quotes, script code uses apostrophies in place of quotes. [Script-NewPet] Commands=4 C1=/multiline ; /casting ''{PetCast}'' -maxtries|5;/delay 2s C2=/if ({Cast.Timing}>600) /goto :Top C3=/multiline ; /if ({Me.Pet.ID}) /pet go away;/delay 2s !{Me.Casting.ID} C4=/if (!{Me.Pet.ID}) /goto :Top Example of using PetCast for a cleric hammer, to be called from a ACBefore command [Settings] DoPet=FALSE PetCast=Unswerving hammer of awesomeness|gem1 [Melee] ACBefore=/if (!{Me.Pet.ID} && {ACMATarget} && {Spawn[{ACMATarget}].Type.Equal[NPC]} && {Spawn[{ACMATarget}].Distance3D}<={ACLeash}) /call MBScript SumHam [Script-SumHam] Commands=2 C1=/if ({Target.ID}!={ACMATarget}) /multiline ; /target id {ACMATarget};/delay 5 C2=/if (!{Me.Pet.ID}) /multiline ; /casting ''{PetCast}'' -maxtries|2;/delay 3s Example of a CH script to be run from a non cleric .ini (warrior) I figure I might as well be posting some of the script versions of other macros that I've been seeing around, but written my own thing so I could just keep modbot running. Modbot script version of CH chain that seems to work, though might have problems I haven't noticed.... I use this with a hotkey from my tank -```\"/mb script chain 50\" (yes it's in MB\\_tank.ini - NOT the cleric.ini.. ) It finds all clerics in netbots, then runs through the list telling each to cast CH after the delay you specify. This script does require the clerics to all be running modbot with an alias of CH for complete heal spell, `and connection to the same EQBCS server. `Commands=13` `C1=/multiline ; /declare clrlist string local;/declare x int local 1;/declare StopLoop bool local FALSE` `C2=/if ({Spawn[{NetBots.Client.Arg[{x}]}].Class.ShortName.Equal[clr]}) /varset clrlist {clrlist} {NetBots.Client.Arg[{x}]}` `C3=/if ({x} < {NetBots.Counts}) /multiline ; /varset a 1;/varcalc x {x}+1` `C4=/echo Clerics: {clrlist} casting {Math.Calc[{Param1}/10]}s apart` `C5=/varset x 0` `C6=/varset Timer 100` `C7=/varcalc x {x}+1` `C8=/if ((!{Spawn[{clrlist.Arg[{x}]}].ID} || {NetBots[{clrlist.Arg[{x}]}].PctMana} < 3) && {x} <= {clrlist.Count[ ]}) /varset a 5` `C9=/if ((!{Spawn[{clrlist.Arg[{x}]}].ID} || {NetBots[{clrlist.Arg[{x}]}].PctMana} < 3) && {x} > {clrlist.Count[ ]}) /varset a 4` `C10=/bc {clrlist.Arg[{x}]} cast ch` `C11=/delay {Param1}` `C12=/if ({x}>{clrlist.Count[ ]}) /varset a 4` `C13=/if (!{StopLoop}) /varset a 5` ````` Posted By Ptarp Tue Apr 12, 2011 1:01 am. Moved to Wiki by Arblis\\` ## Script Examples [```Script`` ``examples`` ``linked`` ``to`` ``another`` ``page```](https://macroquest.org/wiki/index.php/Script_Examples) * These are for ModBot v3.49 please adjust accordingly ## Related Include Files Information and Examples [```Related`` ``Include`` ``files`` ``(modloot,`` ``AAPurchase,`` ``modmove,`` ``etc.)`` ``information`` ``and`` ``INI`` ``examples`` ``linked`` ``to`` ``another`` ``page```](https://macroquest.org/wiki/index.php/Related_Include_Files) * These are from MobDot v3.49 please adjust acccordingly ## Tips, Tricks and Troubleshooting Here you will find a collection of little gems pulled from the ModBot thread. At some point, this may morph in to a handy little troubleshooting flowchart, but for now it will serve as kind of a tidbit catchall for things that would otherwise get lost in the hundreds of thread pages... Please note- when you are posting on the forum for help (after reading this wiki of course!\\) include the MQ2 version, winEQ version and the EQ install type \\(Titanium / sod / UF) `If you want to have colored messages in Announce=/bc you can try some of these:` `b = black` `g = green` `m = magenta` `o = orange` `p = purple` `r = red` `t = cyan` `u = blue` `w = white` `y = yellow` `Example:` `Announce=/bc [+t+]` `would color the text cyan` `Although covered previously on the Wiki quite a few times - If you are having trouble with mobs keeping you from doing non combat things (buff, loot etc) try using the following:` `exclude <mob name,save>` ````` \"What I do.. (while targeted on the mob you want to ignore)```On my tank I have a hotkey. I target the mob to exclude and press it.`` `First line is /bcaa //mb exclude ${Target.CleanName}` `second line - /bcaa //mb exclude save` ````` /echo ${ADMobCount} (use this after your exclude to see if the char in question has any mobs on the exclude list. Can be used with /bcaa to see all of your toons mobcounts)```If you fight near non-combatant mobs, always use the exclude command so the macro doesn't \"see\" them, and set your Radius= in your toon's .ini file to a minimum.`` `I normally keep mine at around 60 to 80 depending on what I'm doing. Remember you can \"/varset Radius 50\" or something in game with the mac running to find a happy medium.\" -Ptap Mon Sep 20, 2010 1:18 pm` `It also sounds like an exclude hotkey, and pause hotkey would be your best friends.. Here's a few of the hotkeys I use.` `_EQTitan.ini in your everquest folder.` ````` Code:```[Socials]`` `Page10Button1Name=TankName` `Page10Button1Color=0` `Page10Button1Line1=/bcaa //varset TankName ${Me.Name}` `Page10Button7Name=Masters` `Page10Button7Color=0` `Page10Button7Line1=/bcaa //varset MasterList ${NetBots.Client}` `Page10Button5Name=pause` `Page10Button5Color=0` `Page10Button5Line1=/bcaa //mb mbpause on` `Page10Button11Name=unpause` `Page10Button11Color=0` `Page10Button11Line1=/bcaa //mb mbpause off` `Page10Button6Name=follow` `Page10Button6Color=0` `Page10Button6Line1=/bca follow` `Page10Button12Name=stop` `Page10Button12Color=0` `Page10Button12Line1=/bcaa //mb stop` `Page10Button10Name=letsroll` `Page10Button10Color=0` `Page10Button10Line1=/bcaa //mb letsroll` `Page2Button1Name=corpse` `Page2Button1Color=0` `Page2Button1Line1=/corpse` `Page2Button6Name=sellitem` `Page2Button6Color=0` `Page2Button6Line1=/ini loot.ini ${Cursor.Name.Left[1]} \"${Cursor.Name}\" Sell` `Page8Button1Name=include` `Page8Button1Color=0` `Page8Button1Line1=/bcaa //mb include ${Target.CleanName}` `Page8Button1Line2=/pause 5` `Page8Button1Line3=/bcaa //mb exclude save` `Page8Button7Name=exclude` `Page8Button7Color=0` `Page8Button7Line1=/bcaa //mb exclude ${Target.CleanName}` `Page8Button7Line2=/pause 5` `Page8Button7Line3=/bcaa //mb exclude save` ````` I normally just keep my keys on page 10 and click from there, but as you can see there's include and exclude keys on pg 8 and another on pg2 I use for setting items to \"sell\" in my loot.ini file. The /bcaa stuff might not work for some depending on plugin versions, so that cn be replaced with a /bca and /mb on a second line. I find it very handy to have some keys I can press quickly, and always either pause all my toons or exclude npcs before I go into areas that I don't want something attacked. Having trouble with your background session toons not moving properly? You might try this: WinEQ=on```to the [Defaults] section of your mq2moveutils.ini. TrueHeading=off might help also in the same section, though I'm not sure if that's needed.` Do your toons wander where they are not supposed to? \u00b6 Thanks to Toomanynames for this tidbit: Those who have toon wandering issues or whatnot - when you say \"radius\", what radius do you mean, modbot, melee, makecamp? There are actually three things that work together to make certain that your bots fight and return to a certain area - MQ2MoveUtils, MQ2Melee and the MB_charname.ini file (from ModBot). /makecamp x x x This is a MQ2MoveUtils setting that needs to be properly configured. For example: /makecamp radius x leash=on (or something like that) Please see the MQ2MoveUtils (PMS version) [ http://www.macroquest.org/phpBB3/viewtopic.php?f=31&t=15909 thread ] and MQ2MoveUtils:v11 for more detailed information. * /melee x x x * This is an MQ2Melee setting. Those ranges and settings come into play and must be set accordingly to work WITH modbot Please see the MQ2Melee [ http://www.macroquest.org/phpBB3/viewtopic.php?f=50&t=17045 thread ] for more detailed information. * Modbot INI * Radius = the max the toon will \"See\" thiings * ACLeash = the max a toon will engage things If you don't properly configure MQ2MoveUtils, MQ2Melee and ModBot and confirm those settings are within or compatible with ModBot \"ranges\" then you'll have issues.","title":"Modbot 4.0"},{"location":"macros/gallery/modbot-4.0/#modbot-40","text":"WIKI PAGE UNDER CONSTRUCTION","title":"Modbot 4.0"},{"location":"macros/gallery/modbot-4.0/#modbot-a-universal-bot-macro","text":"Caster Melee Shrouds & MM's Mez, Charm, Heal, Melee, etc All classes supported Now supports mixed groups of MQ2 and Non-MQ2 users/players ModBot is under constant improvement effort, open to suggestions / additions / adjustments, etc ModBot_4.x Source General Note on Wiki Entries - Release ZIP packages - While the majority of entries in the Wiki apply to ModBot in general, there are always some entries that apply to changes, additional functionality, new commands, etc. Please keep this note in the back of your mind as you work with the Wiki - if you come across a command, etc. that will just not seem to work for you (and you have already thoroughly researched it, checked syntax, re-checked syntax, etc.), please take a moment to check your version of the module that it applies to - you may need to update.","title":"ModBot - A Universal Bot Macro"},{"location":"macros/gallery/modbot-4.0/#how-to","text":"To use ModBot Extract and place all included files from zip (all .mac and .inc files) into your MQ2 macro directory. From inside EQ, type /macro modbot (e.g. /macro modbot OR /macro modbot raidmode). This will build, if it doesn't exist, your MB_.ini file. Optional entries will make a MB__.ini. Being shrouded on startup without using an option will use your race and class for the creation of an MB__.ini file. From inside EQ, end the macro by typing /endmac Tab out of EQ, locate your new MB_.ini file in your macro directory, and open it. You can use the editor of your choice, but Notepad will work just fine. For every component of the macro you want to use, increase the respective \"count\", if you want two heals, set AHCount=2, if you want 2 debuffs, set ADCount=2, etc. After you have set your counts, save and close the INI file. Tab back over into EQ and restart the macro (/macro modbot). This will now populate your INI file based on the count entries that you made in the previous step End the macro again by typing /endmac Open the INI file once more and \"tweak\" the newly created entries to fit your needs. When you are done, save and close the INI file. Tab back over to EQ and restart the macro. Your bot should now be just that, a BOT and will listen to your every command (assuming you are the master). For examples of complete class ModBot INI files, please go to the example INI page . Please Note!! One thing to keep in mind throughout the configuration of the ModBot INI file: keep your most critical and most used spells, activities, etc., first in their respective INI sections. You don't want your mez spell as Debuff number 20, you don't want slow as debuff 10, you don't want a CBT based buff as buff 23, and you don't want CH as heal 1 (you want your most desperate heal as heal 1), etc. Configure your heals, buffs, debuffs, etc. in a highest priority first order.","title":"How To"},{"location":"macros/gallery/modbot-4.0/#reference-to-understanding-the-modbot-wiki","text":"- Replace this with the respective descriptor Example 1 -_is luclin_bobby Example 2 -is bobby (text) - These are \"comments\" and should be removed when saving the respective file Example 1 - Send=1 (If set to 1 it will send netbots information over the network) This text: *``\\(If`````set to 1 it will send netbots information over the network)``\\*`should NOT appear in the INI file` ````` [text\\] - This is to show different options or series of options Example 1 - /bc cast[, %t, grp,, etc]``","title":"Reference to Understanding the ModBot WiKi"},{"location":"macros/gallery/modbot-4.0/#plugin-requirements-examples","text":"I suggest you have a good understanding of how to configure each of these plugins. Any misconfiguration can have an adverse affect on the performance of ModBot Prefered versions are found within the Plugins_Other.zip file that can be found Here (Our thanks go out to the orignal makers and maintainers of these plugins) MQ2AdvPath ( Wiki page ) MQ2Cast ( Wiki Page ) MQ2eqbc ( Wiki Page ) MQ2Exchange ( Wiki Page ) MQ2Melee ( Wiki Page ) MQ2MoveUtils ( Wiki Page ) MQ2NetBots ( Wiki Page ) MQ2Twist ( Wiki Page ) and a modified version of MQ2Main\\MQ2Utilities Optional: Mq2Banolier ( Wiki Page ) If you plan to use item swapping and spell foci items, you may need to configure \"sets\"","title":"Plugin Requirements &amp; Examples"},{"location":"macros/gallery/modbot-4.0/#plugin-ini-examples","text":"Example _.INI for MQ2NetBots, MQ2Cast, MQ2Melee: [MQ2NetBots] Stat=1 Send=1 Grab=1 [MQ2Cast(SpellSet)] ModBot2=1111|1 12345|2 22342|3 43241|4 42342|5 23423|6 12532|7 22334|8 33221|9 11225|10 55443|11 22337|12 88559 [MQ2Melee] enrage=1 facing=1 infuriate=1 jugular=0 petassist=1 petengagehps=94 petrange=45 plugin=1 resume=75 stickrange=75 version=8.000 Example MQ2MoveUtils.INI for MQ2MoveUtils: [Defaults] AutoPause=on BreakOnWarp=on BreakDist=250.0 BreakOnGate=on Verbosity=1 stuckDist=0.8 turnDirection=10.0 stuckCheck=5 StuckLogic=off Example MQ2Bandolier_.ini for MQ2Bandolier: [ThisSet] 17=12345 13=23456 14=34567","title":"Plugin INI Examples"},{"location":"macros/gallery/modbot-4.0/#modbot-hud","text":"[_] Last=ModBotHUD SkipParse=7 CheckINI=100 UpdateInBackGround=on ClassHUD=on ZoneHUD=on [ModBotHUD] Target= 3,060,210,225,225,225,${If[${Target.ID},Dis:${Int[${Target.Distance}]}-Lvl:${Target.Level}-${Target.Class.ShortName}-${Target.PctHPs}%,]} Name1= 3,060,220,240,240,000,${If[${NetBots.Counts}>=1,${NetBots.Client.Arg[1]} ${NetBots[${NetBots.Client.Arg[1]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[1]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[1]}].PctAAExp}]},NA]} HP1= 3,060,230,255,100,100,HP:${If[${NetBots.Counts}>=1,${NetBots[${NetBots.Client.Arg[1]}].PctHPs},]}% Mana1= 3,105,230,100,100,255,M:${If[${NetBots.Counts}>=1,${NetBots[${NetBots.Client.Arg[1]}].PctMana},]}% End1= 3,145,230,255,234,008,E:${If[${NetBots.Counts}>=1,${NetBots[${NetBots.Client.Arg[1]}].PctEndurance},]}% Pet1= 3,185,230,255,255,255,Pet:${If[${NetBots.Counts}>=1 && ${NetBots[${NetBots.Client.Arg[1]}].PetID}>0,${NetBots[${NetBots.Client.Arg[1]}].PetHP},]}% Name2= 3,060,240,240,240,000,${If[${NetBots.Counts}>=2,${NetBots.Client.Arg[2]} ${NetBots[${NetBots.Client.Arg[2]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[2]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[2]}].PctAAExp}]},NA]} HP2= 3,060,250,255,100,100,HP:${If[${NetBots.Counts}>=2,${NetBots[${NetBots.Client.Arg[2]}].PctHPs},]}% Mana2= 3,105,250,100,100,255,M:${If[${NetBots.Counts}>=2,${NetBots[${NetBots.Client.Arg[2]}].PctMana},]}% End2= 3,145,250,255,234,008,E:${If[${NetBots.Counts}>=2,${NetBots[${NetBots.Client.Arg[2]}].PctEndurance},]}% Pet2= 3,185,250,255,255,255,Pet:${If[${NetBots.Counts}>=2 && ${NetBots[${NetBots.Client.Arg[2]}].PetID}>0,${NetBots[${NetBots.Client.Arg[2]}].PetHP},]}% Name3= 3,060,260,240,240,000,${If[${NetBots.Counts}>=3,${NetBots.Client.Arg[3]} ${NetBots[${NetBots.Client.Arg[3]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[3]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[3]}].PctAAExp}]},NA]} HP3= 3,060,270,255,100,100,HP:${If[${NetBots.Counts}>=3,${NetBots[${NetBots.Client.Arg[3]}].PctHPs},]}% Mana3= 3,105,270,100,100,255,M:${If[${NetBots.Counts}>=3,${NetBots[${NetBots.Client.Arg[3]}].PctMana},]}% End3= 3,145,270,255,234,008,E:${If[${NetBots.Counts}>=3,${NetBots[${NetBots.Client.Arg[3]}].PctEndurance},]}% Pet3= 3,185,270,255,255,255,Pet:${If[${NetBots.Counts}>=3 && ${NetBots[${NetBots.Client.Arg[3]}].PetID}>0,${NetBots[${NetBots.Client.Arg[3]}].PetHP},]}% Name4= 3,060,280,240,240,000,${If[${NetBots.Counts}>=4,${NetBots.Client.Arg[4]} ${NetBots[${NetBots.Client.Arg[4]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[4]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[4]}].PctAAExp}]},NA]} HP4= 3,060,290,255,100,100,HP:${If[${NetBots.Counts}>=4,${NetBots[${NetBots.Client.Arg[4]}].PctHPs},]}% Mana4= 3,105,290,100,100,255,M:${If[${NetBots.Counts}>=4,${NetBots[${NetBots.Client.Arg[4]}].PctMana},]}% End4= 3,145,290,255,234,008,E:${If[${NetBots.Counts}>=4,${NetBots[${NetBots.Client.Arg[4]}].PctEndurance},]}% Pet4= 3,185,290,255,255,255,Pet:${If[${NetBots.Counts}>=4 && ${NetBots[${NetBots.Client.Arg[4]}].PetID}>0,${NetBots[${NetBots.Client.Arg[4]}].PetHP},]}% Name5= 3,060,300,240,240,000,${If[${NetBots.Counts}>=5,${NetBots.Client.Arg[5]} ${NetBots[${NetBots.Client.Arg[5]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[5]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[5]}].PctAAExp}]},NA]} HP5= 3,060,310,255,100,100,HP:${If[${NetBots.Counts}>=5,${NetBots[${NetBots.Client.Arg[5]}].PctHPs},]}% Mana5= 3,105,310,100,100,255,M:${If[${NetBots.Counts}>=5,${NetBots[${NetBots.Client.Arg[5]}].PctMana},]}% End5= 3,145,310,255,234,008,E:${If[${NetBots.Counts}>=5,${NetBots[${NetBots.Client.Arg[5]}].PctEndurance},]}% Pet5= 3,185,310,255,255,255,Pet:${If[${NetBots.Counts}>=5 && ${NetBots[${NetBots.Client.Arg[5]}].PetID}>0,${NetBots[${NetBots.Client.Arg[5]}].PetHP},]}% Name6= 3,060,320,240,240,000,${If[${NetBots.Counts}>=6,${NetBots.Client.Arg[6]} ${NetBots[${NetBots.Client.Arg[6]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[6]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[6]}].PctAAExp}]},NA]} HP6= 3,060,330,255,100,100,HP:${If[${NetBots.Counts}>=6,${NetBots[${NetBots.Client.Arg[6]}].PctHPs},]}% Mana6= 3,105,330,100,100,255,M:${If[${NetBots.Counts}>=6,${NetBots[${NetBots.Client.Arg[6]}].PctMana},]}% End6= 3,145,330,255,234,008,E:${If[${NetBots.Counts}>=6,${NetBots[${NetBots.Client.Arg[6]}].PctEndurance},]}% Pet6= 3,185,330,255,255,255,Pet:${If[${NetBots.Counts}>=6 && ${NetBots[${NetBots.Client.Arg[6]}].PetID}>0,${NetBots[${NetBots.Client.Arg[6]}].PetHP},]}%","title":"ModBot HUD"},{"location":"macros/gallery/modbot-4.0/#modbot-commands-syntax","text":"ModBot commands are executed in a few different ways: /bc /bc /bct /bct Are probably most common but check out the EQBC Forum thread for more methods / features. You can also configure an alias so you can run modbot on the character you control and execute ModBot commands. To create the alias you must run this from the EQ prompt: /alias /mb /echo mb- Or change the LoadAlias variable in MBCommon.inc [Settings] section from 0 to 1 if you've lost the alias in your Macroquest.ini With this alias you can tell your bot locally what to do: /mb makecamp /mb buffup /mb letsroll /mb","title":"ModBot Commands &amp; Syntax"},{"location":"macros/gallery/modbot-4.0/#command-reference","text":"Section Updated: June 7, 2009 abort (Interrupts any cast in progress, Sets - DoHeals, DoDebuffs & DoMelee FALSE and follows the sender closely, usefull when you want to RUN away) addbuff \"\\|\\\" ABSpellAlias ABTarType (Adds a new buff entry to the character's INI file.) You must restart the ModBot macro after executing the addbuff command in order to complete the adding of the buff entry. The Spellname, etc. section can be entered directly (e.g. */mb addbuff \"Bone Mask of the Ancient Iksar|item\" iksar self_) or, if adding a clicky, by holding the item on your cursor (e.g._ /mb addbuff \"${Cursor.Name}|item\" iksar self*). Please note that the quotes around the spellname|gem section are required. ABTarType will accept multiple targets if quotes are used (e.g. */mb addbuff \"Levitiation|gem1\" levi \"war mnk rog\"*). addbuff execution will add ABGem, ABSpell, ABSpellAlias and ABTarType entries to the characters INI file. The remaining buff lines (ABSpellFociX, ABDurModX, etc.) will be added once you restart the ModBot macro (the array size change (ABCount) will also not increment until after re-start). For example, using these Bonemask example command, the following entires will be added to the INI file (where \"X\" is equal to whatever the next numbered entry is in your advbuff section): ABGemX=item ABSpellX=Bone Mask of the Ancient Iksar ABSpellAliasX=iksar ABTarTypeX=self attack (Sets DoMelee TRUE and forces bot to attack the TankName's target) attack (Sets DoMelee TRUE and forces bot to attack the target) * Note: OffTank must be TRUE to use this option (I may remove this requirement though TBD) * Example 1 - /bc attack badguy * Example 2 = /bc attack badguy 100 20 buffup (This will set DoBuffs & DoEvents TRUE & DoHeals FALSE) campout (Performs a /camp desktop and ends the macro) cast <on/off> (This will disable or enable the spell associated with this alias) cast [<spawnname/id> \\<%t> ] [<spawnname/id> \\<%t> ] (infinte) If the spell is detrimental, CAST targets the requester's target. If the spell is beneficial, it targets the sender or, if grp is present, it casts buff on group members. If %t is present, it targets the requester's target. The cast command will ignore INI settings for things like minmana, maxmana, recasts, buff debuff counters, etc. This command is mainly used for manual, \"one off\" type casts. Example 1 - /bc cast buffhp grp haste bob haste jane dmgshld bob Example 2 - /bc cast dmgshld bob nuke tash Example 3 - /bc cast slow \"nasty add\" doafk [on, true, off, false, ] dobuffbot [on, true, off, false, ] (Places the bot in \"BuffBot Mode\". Currently once set to on or true, it will NOT turn off and you MUST restart the macro to \"quit\" this mode. It will cast any spell alias on the requesting target. The requester must be a \"master\". Example: /t buffhp dobuffs [on, true, off, false, ] docombines (Toggle that turns docombines on/off (default off). Docombines will check for an open tradeskill window with an enabled combine button (you have to select recipe), and will click the button. Upon a successful combine, Modbot's built in cursor handling takes over. Useful for tank to summon more arrows during fight. An associated event will fire and toggle docombines to FALSE when you run out of recipe components.) docures [on, true, off, false, ] dodebuffs [on, true, off, false, ] doevents [on, true, off, false, ] doforage [on, true, off, false, ] dofw [on, true, off, false, ] doheals [on, true, off, false, ] dolist (Used to /bc out the existing \"Do\" status) doloot [on, true, off, false, ] domelee [on, true, off, false, ] domount [on, true, off, false, ] (To cast a mount or not, used in conjunction with MountCast INI entry) dopet [on, true, off, false, ] (To cast a pet or not, used in conjunction with PetCast INI entry) dopull [on, true, off, false, ] (not fully production yet) dopull <on/off/path> (Self explanatory. See the instructions on forums.) doquest [on,true,off,false] (Default is TRUE. If set to FALSE, your looter will ignore items marked \"quest\" and still loot other items.) Can be used to add quest items to your loot.ini file. For example, while holding an item on cursor, */mb doquest 4 Hair of the Dog* will set the item you're holding to \"=Quest|4|Hair of the Dog|\" in loot.ini. Can also be used in conjunction with the QuestOnly variable (found in the setting section of the loot.ini file). If both doquest and QuestOnly are set to TRUE, your toon will only loot quest items. Also note that if QuestOnly is set to TRUE and doquest is set to FALSE, your toon will only loot cash off of mobs. Please see the modloot section found here for more information on the loot.ini file. dosit [on, true, off, false, ] dosongs [on, true, off, false, ] (used for bards only) dotells [on, true, off, false, ] (Toggles a beep when tells are recieved from non-netbots toons. Useful for tells in background sessions) **exclude ** (Adds to alert list, to save list you must use the \"save\" option, otherwise it will not be written to the INI file) The exclude list is dynamic and will only exclude mobs that are present in the zone AND that are on the list. If you want to force an exclude you must edit the INI file and place a \"#\" in front of the mobs name (e.g. ExcludeList=a dusty barrel|a dark coffin|#a bitten victim|a hollow tree|, this will always force \"a bitten victim\" to be on the exclude list) Use the following commands from a character to add mobs to the exclude list (Kroak suggested just tossing this in a two-line hotkey): /bcaa //mb exclude ${Target.CleanName} Will write the exclusion to a string that is checked through the debuff loop /bcaa //mb exclude save Will write the exclusion in the mbcommon.ini and that exclusion includes the zone id, so mobs of the same name in a different zone are NOT excluded. You shouldn't have to re-run the macro after an exclude but if you do this in the midst of comabat or something, while mobs are near, it may not \"take\" as quickly. For mob names with spaces in them, simply enter the name without any quotations. For example: ''/bcaa //mb exclude a small bat See the Include command (found below) to temporarily remove a mob from the alert list follow (Follows the sender or ) follow close (Follows the sender within 3 steps, very close) give (Calls the sub GiveCheck to hand an item to a toon or NPC.) ItemCount is optional and will default to 1. The give command can be used in conjunction with categories that have been defined in the loot.ini. For instance, if you have items marked 'SpellScroll' in your loot.ini, and the Category variable has \"SpellScroll\" included, you can issue the give command as follows: /mb give Bob SpellScroll TRUE . The result will be that all items on your toon that are marked with that category (SpellScroll) in your loot.ini will be handed to Bob.) * goto (Bot will move to the loc given) * handin (Target an NPC or PC, get one item on your cursor, and all of that item will be handed to them and trade or give button pressed.) holdup (This will set DoBuffs,DoDebuffs,DoEvents,DoMelee all to FALSE) include (Removes from alert list, this will not save to the INI file, see exclude save) letsroll (This will set DoBuffs,DoHeals,DoMelee,DoEvents,DoDebuffs TRUE) makecamp (This will Makecamp at existing location. Use /makecamp off or /mb stop to toggle makecamp functionality off) mana (Used to /bc out the existing Mana % of the bot) mbpause or mbp [on, true, off, false, ] (Used to pause or unpause the macro) mbwayplay (Used to playback previously recorded paths / waypoints, through zones, doors, chaining paths, etc.) mbwayrec (Used to record a path / waypoint.) Once started, ducking for each location will add a waypoint to the path. Sitting stops path recording and returns to modbot functions. To add doors, chains, pull locations, etc. you'll need to edit the MBWayPlay.INI file Further information about mbwayplay and mbwayrec (along with examples) can be found here in the wiki. * offtank <on/off> (Toggles offtanking for dealing with adds.) * script (This will allow you to run custom commands while the macro is running, or combine series of commands, see script examples in manual / rev notes) sell (You must be within range of a merchant in order to function, it will sell loot marked as \"=SELL\" in the loot.ini file) sell (With NPC targeted will attempt to sell all items marked \"sell\" in your lootIni file to target. Otherwise optional target name can be supplied.) setinivar (This will find and change any setting in your .ini) Note that this command will have trouble with script settings if you have more than one (it will set the first C1= or whatever that it comes to. Variables changed in the .ini are /varset with the macro running Spells, gems, etc. will not be set unless you use the array correctly for . In other words, ADGem[1] is not the same as ADGem1: Use ADGem[1] and this will set the ADGem1 .ini setting and varset the change to memory. Use ADGem1 and it will only change the .ini. This still has a problem finding variables in very long sections. If /echo \\({Ini\\[\\) , ]} is over the MAX_STRING value - (You go LD typing that if it is). - Stuff like ABGem[20] is almost never found. (Still working on that.) For example, Ligament Slice for a rogue was set up from in-game with these commands typed in to the MQ window (and the rogue was able to put it immediately to use): /mb setinivar ADCount 4 (restart macro - had 0 count before) /mb setinivar ADGem[1] alt /mb setinivar ADSpell[1] Ligament Slice /mb setinivar ADTarBegHP[1] 40 /mb setinivar ADTarCnt[1] 1 /mb setinivar ADTarType[1] 1 /mb setinivar ADAnnounce[1] /bc /mb setinivar ADSpellAlias[1] snare sing (Will sing this song and add the respective gem number to the Twist.List, it attempts to use detrimental as the qualifier to add it to combat songs, or rest songs) stop (Will stop following and/or stop in place) sung (Will remove this song from the respective Twist.List, it attempts to use detrimental as the qualifier to remove it from combat songs, or rest songs)","title":"Command Reference"},{"location":"macros/gallery/modbot-4.0/#modbot-in-game-usage-and-commands","text":"Example commands: /bc Bob follow me [This tells bob and only bob to follow me] /bc cast dd [this tells every bot to cast the spell alias dd] /bc shamandude cast buffsta grp buffhp focus grp buffhp %T [buffsta on the group, buffhp on the requester, focus on the group, buffhp on requesters target] /bc necroguy makecamp [this tells \"necroguy\" to makecamp] /bc campout [tells all bots to camp to desktop] /bc exclude ${Target.CleanName} [tells all bots to add your target to the exclude / ignore list, toons will not attack any spawn with that name.] /bc clericname dobuffs on [tells the cleric to set DoBuffs to true and will then begin buffing group] /bc pallyguy cast bmb %t buffhp grp [bmb on requesters target, buffhp on the group] Typical commands sequence for an EXP group: /bc letsroll /bc makecamp You then begin to pull mobs and they will react accordingly. Mobile Camp Example: /bc follow /bc buffup [once ready zone into the instance] /bc stop /bc letsroll [clear first room lets say] /bc follow [move to next room] /bc makecamp [etc, repeat] Example movement options with or without invis /bc mbp on /bc follow Make a EQBC Channel and do things like (using this technique you don't even have to be a master) /bct mycoolchannelname //mb letsroll /bct mycoolchannelname //mb campout","title":"ModBot in game usage and commands"},{"location":"macros/gallery/modbot-4.0/#modbot-ini-settings","text":"","title":"ModBot INI Settings"},{"location":"macros/gallery/modbot-4.0/#preface-notes","text":"Spell Alias's must be unique across all alias's Obsolete? 06272011 -Changed - ? \"cast\" command usage now allows for multiple aliases. If you have several spells with the same alias, using /bc castwill now cast all spells marked. Example, for shaman you can have Fo7, Talisman of Boar, Talisman of Wrulan, Talisman of Tribunal, ect.. all marked with \"fullgroup\". \"/mb cast fullgroup\" will cast each spell in the order they are found in the .ini file. `Buffing - Group buffs can now be seperated to different classes, and will allow keeping the spell on netbots members in seperate groups from the caster with the inclusion of keyword `\"raid\". Example -````` Code: ``````[AB2] ABGem=8 ABSpell=Focus of the Seventh ABSpellFoci= ABDurMod=50 ABSpellAlias=fo7|grpfocus|fullgroup ABAnnounce= ABSpellMinMana=20 ABTarCnt=2 ABTarType=war shd pal rng mnk rog brd bst ber shm dru wiz mag enc nec raid ABRecast=FALSE ABSpellIcon= ABPreCondition=TRUE Note from the above example that clr is not included in the TarType.. My clerics have the spell blocked. Attempting to cast on them will cause a chain loop of``````casting until the cleric gets self buff on that doesn't \"stack\" with focus. - so watch spell stacking and make sure to set your toons accordingly.``````````` Old format of \"self\" will also work with no change if you don't want to buff other groups with the spell. Commands - Tell commands will now check buff aliases, and don't need \"cast\" to ask for buffs.. \"/tellfullgroup\" from a non-master toon will make the shaman cast every spell with that alias on the sender of the tell. Masters still require use of \"cast\". - This does allow guildies or whoever else knows your aliases to get buffs easily. /say is not affected and is still not enabled for modbot. `` Added \"docommand\" - Master toons that aren't in netbots can now directly command toons. \"/telldocommand /sit\" will make the receiving toon sit, or execute any command after ````` the \"docommand\" keyword. - Word of caution - You can cause macro errors with this if you aren't careful. The command sent is executed directly with /docommand in the macro. A tell received of \"/telldocommand /sit\" will locally execute \"/docommand /sit\" Watch extra characters and or brackets.. - Because of the nature of this one, the commanding toon MUST be listed in MasterList.` You should be familiar or at least capable of making MQ2Bandolier sets as they are used by MQ2Cast for \"foci\" items Please treat the Buff, Debuff, Event, Heal INI sections as a first in first out (FIFO). Highest priority to lowest priority, you don't want mez or slow as AD12 but as AD1. You don't want AH1 as Complete Heal, you want AH1 to be DA/DB (those are examples, use common sense) If you want to add some visual zip to your announcements (things are easy to miss in /bc..), you can use color coding and the like in any of your Announce settings. For example, *Announce=/bc [+r+]Group Mez +x+ \\<\\<[+y+] %t [+x+]>> with +g+ %s [+x+]* will produce a line in the MQ chat window that is MUCH easier to see than the regular fonts. Rk. XX Usage - Heals, buffs, debuffs, and cures have code added to check your book and find the correct version of the spell you're using on startup of modbot. Rk. II and Rk. III are not needed, but only for these sections. If you upgrade a normal spell in these sections to Rk. II or III, restarting the macro will make the new spell work. Please note that this does not apply to discs, potionbelt, abilities, or PetCast at this time (meaning you must include the Rk. XX in the spell name for these types). Setting spell duration modifications (AHDurMod, ADDurMod, ABDurMod, AEDurMod) - Use the following formula to determine what number to set your DurMod at: \\({Spell[X\\].Duration} \\* (\\) +${Spell[X].Duration}) == timer duration. So if you want a 25% extension on the timer, set durmod to 25 to make ${Spell[X].Duration} * 1.25 = timer. Modbot shouldn't re-cast if timer is still running.","title":"PreFace Notes"},{"location":"macros/gallery/modbot-4.0/#references","text":"tnt = TankName Target grp = group","title":"References"},{"location":"macros/gallery/modbot-4.0/#settings-section-settings","text":"DoMelee=TRUE|FALSE DoHeals=TRUE|FALSE DoBuffs=TRUE|FALSE DoDebuffs=TRUE|FALSE DoEvents=TRUE|FALSE DoCures=TRUE|FALSE DoPull=TRUE|FALSE DoPet=TRUE|FALSE Must have a buff entry for creating a pet (in the AdvBuff section - see note for ABTarType). Also see note for Cleric pets under PetCast below. * DoSit=TRUE|FALSE * DoLoot=TRUE|FALSE * DoFW=TRUE|FALSE * Should I cast spells for food and water. (see FoodSpell and DrinkSpell entries) * DoForage=TRUE|FALSE * ForageIni=name of ini file for forage * Defaults to forage.ini . Please see the Related include files page for more information on the Forage.ini file. * DoAfk=TRUE|FALSE * DoMount=TRUE|FALSE * If set to TRUE, you must complete the MountCast entry below. * MountCast=Spell/Item name/AA name|gem #,item,alt * Use MQ2Cast syntax without quotes. Examples: * MountCast=Collapsable Roboboar|item * MasterList=PC Name,PC Name * Comma delimited list of names. Can also use ${NetBots.Client} to designate that any chars using NetBots can act as master. Examples: MasterList=Bigbob,Sooper MasterList=${NetBots.Client} TankName=PC Name,PC Name Comma delimited list of names. This variable will also be set when you designate a character using either the Main Tank or Main Assist group roles. Can also use ${Group.MainTank.Name} to auto set this to whomever is set in the group main tank role. Examples: TankName=Billytank,Larrytank TankName=${Group.MainTank.Name} Radius=# Radius that I will monitor for NPCs. If you are having issues with your characters not casting buffs, etc. while not in combat, try adjusting the Radius setting down a bit to make certain that they are not pickng non-aggro mobs in the surrounding area. Example: Radius=100 ExcludeList=npcname|npcname| Pipe delimited names to exclude. Please note that you must have a Pipe \"|\" at the end. Example: ExcludeList=a hollow tree|a broken barrel| SitAggroRadiusCheck=# Radius to check for aggro to see if I can sit. Default is 75. AfkMessage=afk message Enter a custom AFK message if desired (leave blank for no AFK message). Default is \"Not now, thanks\". DeathSlot=TRUE|FALSE Will only be true if your bot needs to camp to desktop to save res timer. This way the macro will know if you died and had to camp out. * NetworkIni=Path and filename of ini file * Option for a network based INI file for scripts and path playback (mbwayplay and mbwaypnt.ini file). * File must be prefixed by \"Network-\" or \"Net-\" * Example: NetworkINI=X:\\shared\\modbot\\mb_network.ini * TraderName=toon name|bazaar trader * For use with the Campout command. Example: * /bc campout trader will log in whatever toon you have set in the TraderName variable. * Second argument ( |bazaar trader ) will log in the toon and run the bazaar macro with the trader option (or any other mac+options you want there.) * FollowDistance=# * Designates how far you will stay from followee. * Default 20. * FollowStick=MQMoveUtils Options * If using MQ2MoveUtils, enter the options that you would like to use. Default 20 hold uw. Example: * FollowStick=20 hold uw * PetAggro=TRUE|FALSE * TRUE - pet taunt on * FALSE - pet taunt off * PetAssist=[1] * Assist and pet attack or not * PetFoci=[-bandolier|petfoci] * Any spell foci you want to swap in for this spell using MQ2Cast syntax, you must have previously created the set via the MQ2Bandolier plugin /createset command. * PetShrinkSpell=pet shrink spell name|gem# * Spell to be used to shrink your pet. Leave blank if you don't want your pet shrunk. Example: * PetShrinkSpell=Tiny Companion|gem9 * GoMNuke/GoRMNuke/GoERMNuke/GoDERMNuke=[] * GoMNuke, GoRMNuke, GoERMNuke and GoDERMnuke will only appear if the toon has the AA available upon startup. These settings only require the * ALIAS * of the debuff you want to be \"cast\" on the MA's target when the event fires. No script required. * **SummonFood=spell name,item name,alt name|gem#,item,alt</span>** These entries appear when DoFW is set to TRUE. Use MQ2Cast syntax for spell entry. Example: SummonFood=Summon Food|gem12 **SummonDrink=spell name,item name,alt name|gem#,item,alt</span>** MQ2Cast syntax. Example: SummonDrink=Summon Drink|gem8 Deprecated Entries DoAura =[TRUE,FALSE] (Must have a completed AuraCast entry below) DEPRICATED!! Set up aura as a buff with 'self aura' as the ABTarType. AuraCast =[\\|\\,item,alt>] (Example: Uber Aura|gem3) - DEPRICATED! Set up aura as a buff with 'self aura' as ABTarType. Use MQ2Cast syntax without quotes. PetCast=|gem\\<#>|(for Suspended Minion II)] (PLEASE NOTE: As of 3.499 beta, PetCast is no longer needed. You can now add pet to \"AB\" section by setting ABTarTypeX=petspell (or petcast). Pets won't be cast unless DoBuffs and DoPet are true. Also shouldn't cast if in combat unless \"cbt\" is included in ABTarType. When used with modbuff, Persistent Minion is also used automatically if you have it, and no extra entry needed. Original entry: Spell to cast to create / recall pet. Example: PetCast=Animate Dead|gem8|smii (Mainly MQ2Cast syntax without quotes)) Can also use for charming: [charm \\<NPC type 0=any 1=undead,vampyre 2=animal 3=summoned 4=(specify name type)> ] Example: PetCast=charm 4 4 \"lowland basilisk,a emerald drake\" For Cleric Hammer type pets that you only want to cast / have while in combat, you MUST have DoPet set to False AND have PetCast=|\\,item,alt>)","title":"Settings Section [Settings]"},{"location":"macros/gallery/modbot-4.0/#advmelee-melee","text":"OffTank=TRUE|FALSE False - attack the MA target only True - assist MA and then not change targets ACLeash=# The farthest the bot will move from where he is to engage a mob. However if \"TankName\" stays within 20 steps, the bot will exceed this leash. * ACAssistPct=# * Assist when target HP is this or less. Melee characters will engage at this point and caster pets will be sent in. * ACManaPct=# * Stop assisting when Mana drops below this. * Set to 0 for melee only * Set to 101 for non-melee casters * ACAnnounce=channel * Channel to announce in, or leave blank for no announce. Example: * ACAnnounce=/bc Will announce in MQ/EQBC window * ACAnnounce=/g Will announce in group chat * ACMeleeCmd=command * Use to set MQ2Melee commands. Example: * ACMeleeCmd=/melee plugin=1 * ACBefore=script * Special script code to execute before you engage. Example: * *ACBefore=/if ({ACMATarget} && {Spawn[{ACMATarget}].Type.Equal[NPC]} && {Spawn[{ACMATarget}].Distance3D}\\<={ACLeash} && {Me.CombatAbilityReady[Sneak Attack]} && {Me.Invis} && {Me.Sneaking} && {Me.PctEndurance}>40 && !{Me.Moving}) /call mbscript SneakAttack* ACBefore=/if (!{Me.Pet.ID}) /casting ''{PetCast}'' \\<-- cleric pet hammer example ACAfter=script Special script code to execute after you leave combat. Uses same script format as ACBefore.","title":"AdvMelee [Melee]"},{"location":"macros/gallery/modbot-4.0/#advheal-section-advheal","text":"Please note that for FD class toons and ${Group.Puller} - If they are out of ACLeash range and not FD, they will not be healed (to prevent aggro on group), but only if healer is not in 'combat' combatstate. If not in combat they will be healed. For group heal spells, you must set the TarCnt to something greater than 1 in order for the spell to evaluate correctly (and be used as a \"group\" heal when more than one member of the group requires healing). For instance, if you have TarCnt=3, then at least 3 members of your group will need to be below the HP level that you set in the Class line. A possible issue may arise when the cleric is in a loop state where a single heal is being fired \\(AHHealMode\\) - it may take a bit for it to realize the single heal should be stopped and the group heal cast instead. Depending on how you have it configured, the use of AHHealMode can force it to not even check the your group heal spell as it's being told to only check one \\(the single heal\\) . If this is the case (and not the desired result), perhaps use the group heal as the spell to check in AHHealMode. AHCount=# Number of heals you plan to have. AHNewFormat=# Set to '1' for ModBot v4 INI format Set to '0' for ModBot v3.49 INI format AHCheckTime=# How often to check for heals in seconds. AHHealOOBC=TRUE|FALSE Do I heal characters outside of Netbots and EQBC (e.g. folks not running MQ2 or mercenaries.) AHHealOOBC Thinking of an english name for that setting, all that comes up is \"Heal Outside Of BC\". So, in other words, if the setting is FALSE, it won't heal anyone that's not on YOUR EQBC server with the netbots plugin set up correctly, even if they're in your group. That is why I recommend you connect all toons and run modbot on all of them at least once, even if you don't plan to run it as a regular thing for the other toons.. It assures the plugins are set correctly. If AHHealOOBC=TRUE, then modbot will heal group members and pets even if there's no netbots connection. Out of group healing can only be done by the macro if there's a netbots connection, or if the other toon is a master and uses the cast command via /tell. I do recommend AHHealOOBC=TRUE setting, but I still left the default FALSE so people could check their connections before setting TRUE. AHHealMode=#|#|# 0 or 1 (off or on)|Heal #|Timer This will keep the toon in the heal loop after casting to check for additional heals for the duration of . * AHInterruptLevel=# * Lowest interruptable spell. For example, AHHealSpell1 will never interrupt if this is set to 2. * AHClassPriority=class names * Set class healing priority (e.g. if you're currently healing a chanter, you won't interrupt for a monk). * Allowed entires are: enc,wiz,mag,nec,clr,dru,shm,pal,shd,war,bst,rng,ber,rog,brd,mnk (or any combination thereof) * AHAllowDismount=TRUE|FALSE * Designate whether your toon should dismount (or not) to interrupt a spell to cast a heal * TRUE - allow toon to dismount if necessary to interrupt a spell cast in order to fire off a heal. * FALSE - your toon will never dismount to interrupt a spell. * [AHx] * Where 'x' is the number of healing spell * Gem=source * Designate what the source of the spell is. * Valid entries: gem number, alt, ability, item, script, potionbelt * Note that 'potionbelt' does not require a slot number. * Examples: * Gem=3 Cast this spell from gem 3 * Gem=alt This spell is an alternative advancement ability * Spell=source name * Valid entries: spell name, item name, alternate ability name, ability name, script name * Examples: * Spell=Superior Healing This would be generally be paired with an Gem entry indicating which spell gem to cast Superior Healing from. Spell=Healing Thingy of Uberness This would be generally be paired with an Gem entry indicating that the source of this spell is an item. * SpellFoci=setname * Bandolier set name to swap in before casting this heal. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * DurMod=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * SpellMinMana=# * Minimum mana percentage to have in order to attempt this heal (e.g. 05 \\(for 5%\\) , 25 (for 25%) * SpellAlias=spell alias * Alias name for the heal. * Please note that you can NOT have spaces in your alias names. * Announce=channel * Channel to announce in, or leave blank for no announce. See Announce description in the AdvMelee section for further explanation. * TarCnt=# * Designate how many targets are required to cast this spell. * Class=class name(s) * Valid entries: pc pet group hp0 war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec mypet self (or some combination there of). Please also note the following combination restrictions: pc \\<-- will include pc's and mercs. Leave pet out to ONLY heal PC's and mercs. pet \\<-- will include pets. Leave pc option out for pet only heals. group \\<-- will exclude everyone that is not in your group hp0 \\<-- set an overall health percentage for any named classes classnames (war, shd, etc.) \\<-- used to declare which classes this heal should apply to. Can also be combined with a health persentage (e.g. bst50). mypet to be used by itself (e.g. set up a seperate heal for your pet) self \\<-- Only use self if the heal spell is SELF ONLY, or only to be cast on yourself. This setting is exclusive and other targets will not be checked for that spell. * PreCondition=TRUE|FALSE|PR * Defaults to TRUE * PR (only to be used with NetBots) If PreCondition=PR, then for that particular heal there will be a check on target (over NetBots) for any PR type spell. If target has a PR buff on, then the heal will be skipped. Please note that the PR setting does not currently account for the duration remaining of the PR buff. PreCondition=PR will check for these spell ID's: 9755 (Promised Renewal) 9756 (Promised Renewal Rk. II) 9757 (Promised Renewal Rk. III) 18270 (Promised Recuperation) 18271 (Promised Recuperation Rk. II) 18272 Promised Recuperation Rk. III)","title":"AdvHeal Section [AdvHeal]"},{"location":"macros/gallery/modbot-4.0/#advdebuff-section-advdebuff","text":"ADCount=# Number of debuffs you plan to have. ADNewFormat=x Set 'x' to 1 for ModBot v4 style Set 'x' to 0 for MobBot v3.49 style ADMobMax=# This is the array size where the valid mob ID's are stored after found. The loop to find valid mobs uses SpawnCount, then stores the mobs it \"finds\" in the array. Setting this to 20 or 30 should be way more than enough ever. It is best to keep this setting (and therefor the array) relative small for memory purposes (as well as for speed through the debuff loop). If your toons are ignoring NPCs, this number may be set too low. First thing to check!! ADCheckTime=# How often to check for debuffs in seconds. \"It's the forced delay or timer between allowing that section of the macro to execute again.. Set higher for toons you want to have more emphasis somewhere else.. Like a cleric can be 8 for debuffs and 0 for heals, but a shammy you'd want 0 for debuffs. 0 = no forced delay. Speed still varies depending on the size of the loops or how many heals, debuffs, ect are in each section.\" - toomanynames * ADAggroOnly=1|0 * 1 - only add mobs to the mob list if someone in your group or in netbots is the mob's target. Only use this option on bots that cast on targets that are NOT the main assist's target (e.g. chanter mezzing adds). Please note: ADAggroOnly is not terribly reliable at times. If you are having issues with one of your bots auto-aggroing mobs (when they are not the tank), try setting ADAggroOnly=0 and then ADTarType=1 or 11. * ADHold=0|1|1| * 1=on 0=off|Debuff spell #|Time to wait for debuff| * This is used much like the AHHealMode setting, but only for type 12 debuffs. Sets a timer to hold the toon in the debuff loop (no buffs or events) until the debuff is complete. * [ADx] * Where 'x' is the number of Debuff spell * Gem[x]=source * Designate what the source of the spell is. * Valid entries: gem number, alt, ability, item, script, potionbelt * Note that 'potionbelt' does not require a slot number. * Examples: * Gem=3 Cast this spell from gem 3 * Gem=alt This spell is an alternative advancement ability * Spell=source name * Valid entries: spell name, item name, alternate ability name, ability name, script name * Examples: * Spell=Ensnare This would be generally be paired with an Gem entry indicating which spell gem to cast Ensnare from. Spell=Bangy Thingy of Uberness This would be generally be paired with an Gem entry indicating that the source of this spell is an item. * SpellFoci=setname * Bandolier set name to swap in before casting this spell. Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * DurMod=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excess of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * SpellAlias=spell alias * Alias name for the spell. Please note that you can NOT have spaces in your alias names. * Announce=channel * Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. * SpellMinMana=# * Minimum mana percentage to have in order to attempt this spell (e.g. 05 \\(for 5%\\) , 25 \\(for 25%) * **SpellRecast=\\#** * Number of times to recast this spell for fizzles, interrupts, etc. * **SpellCastonResist=spell alias** * Should this spell be resisted, is there another alias to cast before another attempt of this spell. * Please note that if SpellCastonResist is defined, ADSpellRecast must be at least 1. * **SpellDelay=\\#** * Number of seconds to wait between casts of this spell. * **TarCnt=\\#** * Number of targets required to be present to cast this spell. If set to 0, this spell will not be auto-casted\\) * TarType=# * Designate one target type to cast this debuff on. * Valid target types: * 0 = All mobs * 1 = MA Target only * 2 = All except MA Target * 3 = Only on named mob * 10 = All mobs before next spell * 11 = MA target only before next spell * 12 = All but MA target before next spell * 13 = Only on named mob before next spell * Priority Debuffs (10, 11, 12, 13) should be placed first most (prior to non-priorities). Meaning - settings of 10, 11, 12 and 13 need to be in top spells slots (AD1, AD2, etc) * TarBegHP=# * The target must be equal or below this HP%. * TarEndHP=# * The target must be equal or above this HP% * IfSpellImmune=script name * This is meant to be a pointer to a quick, one line script that is executed when a mob is immune to the spell you have cast. If you need to do something complicated, other scripts can be called from it. 'Param1' is now passed as the immune target's ID. An example where this would be useful is for chanter mez: /bc {TankName} //multiline ; /varset ACMATarget {Param1};/target id {Param1} will make your toon target the immune mob even if he was on another mob at the time. * UseHoTT=# * This will cause the macro to /target the mob and check TargetOfTarget before casting and delay # seconds before checking again if mob is skipped. If not a raid or group member, the macro will move on and recheck that mob for that debuff after the time has expired. Note that this will default to casting the debuff anyways if HoTT isn't available. * PreCondition=one line script * Whatever statement you add to this line needs to /return TRUE. i.e. - PreCondition=/if ({This} && {That}) /return TRUE. Only a TRUE return will allow the spell to cast, so script carefully, or leave the lines default. Code: [AD1] Gem=2 Spell=Turgur's Insects SpellFoci= DurMod=0 SpellAlias=slow Announce=/bc Slowed <<[+y+] %t [+x+]>> with[+g+] %s [+x+] SpellMinMana=10 SpellRecast=2 SpellCastonResist=malos SpellDelay=0 TarCnt=1 TarType=11 TarBegHP=200 TarEndHP=15 IfSpellImmune= UseHoTT=0 PreCondition=TRUE \"Notice the TarBegHP setting. I have the same spell set with TarType=12 directly after this one to make sure he slows adds. (sometimes he pulls em too..) Everything else - mainly ACAssistPct is set to a lower value. Most around 95 or so. Buffs are a pita because if the debuff sub is called \\(it is called first\\) it won't cast the debuffs if there's any reason not to, then the macro runs through the whole buff loop before getting back to debuffs again.. Setting the TarBegHP at least over the level of all other functions at least attempts to keep the slow first. Also.. I find the macro works best if you always set your ACManaPct very low. Usually keep mine around 5 or so for every toon. I should change the default on that, but clearing targets and such is something your toon will do quite often if his mana is under that value.\" - Ptarp on the forums on Wed Mar 09, 2011 7:54 pm. (edited into Wiki by Arblis)","title":"AdvDebuff Section [AdvDebuff]"},{"location":"macros/gallery/modbot-4.0/#advbuff-section-advbuff","text":"If you want to cast single target buffs after group buffs, place all of your group buffs first. ABCount=# Number of buffs you plan to have. ABNewFormat=x Set 'x' to 1 for ModBot v4 style Set 'x' to 0 for MobBot v3.49 style ABMobMax=# Max number of targets to track for buffs (do not include pets) ABCheckTime=# How often to check for buffs in seconds [ABx] Where 'x' is the number of buff spell Gem=source Designate what the source of the spell is. Valid entries: gem number, alt, ability, item, script, potionbelt Note that 'potionbelt' does not require a slot number. Examples: Gem=3 Cast this spell from gem 3 Gem=alt This spell is an alternative advancement ability Spell=source name Valid entries: spell name, item name, alternate ability name, ability name, script name Examples: Spell=Minor Shielding This would be generally be paired with an Gem entry indicating which spell gem to cast Minor Shielding from. Spell=Uber Wand Thingy of Uberness This would be generally be paired with an Gem entry indicating that the source of this spell is an item. * SpellFoci=setname * Bandolier set name to swap in before casting this spell. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * DurMod=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * SpellAlias=spell alias * Enter an \"alias\" for the spell. This is often a short, easier to use name (e.g. the alias for Spirit of the Wolf might be SoW). Please note that you can NOT have spaces in your alias names. Announce=channel Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example: Announce=/bc [+r+]Buffed +x+ \\<\\< +y+ %t +x+ >> with +g+ %s [+x+] SpellMinMana=# Minimum mana percentage to have in order to attempt this spell (e.g. 05 \\(for 5%\\) , 25 (for 25%) TarCnt=# Designate how many targets are required to cast this spell. If set to 0, this spell will not be auto-casted. This is useful for spells that you want to call via alias to be cast manually. For single cast spells (e.g. Spirit of Eagle), TarCnt will most often be set to 1. For group spells (e.g. Flight of Eagles), you might set your TarCnt higher so that it only gets cast when there are more than 2 or 3 people in your group. * TarType=target type * Valid target types are as follows (please note which entries can be used with others and which are exclusive): * ShortClassName Used for class specific buffs (ie. haste on \"war\"). Valid entries are: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec. Note that any or all of these entries can be used at the same time. self Used for self only spells. grp for Group spells (e.g. TarType=self grp) pet used to cast buffs on all pets in the group. mypet used to cast on only your pet. Please note that pet and mypet are mutually exclusive. cbt for spells to be casted during combat (e.g. an entry for Yaulp would be TarType=self cbt). Please note that any NPC within radius that is not on your exclude list will cause 'cbt' buffs to fire. If you want to buff next to NPCs (and don't plan to kill them), use the exclude command. If you later decide to kill whatever mob you've excluded, use the include command to remove it from list. The macro does not check combat state of the tank for buffs. idle used with cbt for spells to be casted when in or out of combat (e.g. if you wanted to keep Yaulp on at all times (in AND out of combat), your entry would be TarType=self cbt idle). Please note that idle is only used in TarType when cbt is also used. aura used to cast an aura - must be used with self (e.g. TarType=self aura) Note that Bard auras *REQUIRE* SpellAlias to be set up to cast, and modbuff will use CastCall to actually cast the aura. * tank used to cast only on the designated group tank. Tank designation is keyed from either the TankName variable in the setting section (see above) or by setting a toon to Main Tank (Group.Maintank) using the Roles function. petspell used to set up an entry to create/cast a pet. Example: ''[AB3] Gem=7 Spell=Shambling Minion SpellFoci= DurMod=0 SpellAlias=pet Announce=/bc Cooking up a pet SpellMinMana=10 TarCnt=1 TarType= petspell Recast=FALSE SpellIcon= PreCondition=TRUE'' Default entry: *TarType=tank war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self mypet grp pet cbt idle* Please note that the default entry includes settings that do not work together. Specifically, tank , self and mypet are meant to be used by themselves. If you want to cast the same buff on yourself, your pet and the tank, create them as seperate buff entries. * Recast=TRUE|FALSE * True is only really needed for single targets that are NOT in the group and/or on NetBots. Set Recast TRUE when you want the macro to use the spell worn off messages from EQ for the macro to know who to cast the buff on. This allows you to rebuff toons that are lower level for your normal buff set, or not in EQBC and not in group. For the most part this shouldn't be needed for rebuffing if all of your toons are NetBots members. The macro actually checks the other toons in netbots and knows what their buffs are, whether the one they're trying to cast will stack, and the duration of the buff if the toon still has it on. * SpellIcon=icon name * Use when the spell icon has a different name than the actual spell (e.g. the spell Unity of Spirits has a spell icon of Transcendent Foresight . In fact, you could use any one of the four spell icons/names that Unity creates). Please note that if the name you have in SpellIcon doesn't evaluate to a spell name, the buff will be skipped. In other words, leave it blank if your spell doesn't need it.","title":"AdvBuff Section [AdvBuff]"},{"location":"macros/gallery/modbot-4.0/#advevent-section-advevent","text":"AECount=# Number of events you plan to have. AECheckTime=# How often to check for events in seconds AECustomX=watch text Custom emote-triggered events driven by scripts. Default is three blank entries (AECustom1=, AECustom2=, AECustom3=) Please note that an earlier version of this variable populated AECustom1, AECustom2 and AECustom3 with random numbers in the ini file. The newwer version of AECustom now adds the three AECustomX entries but sets them as blank.) Each AECustomX entry, if defined, must have a corresponding script entry. For example, by defining AECustom1=greater bloodmoon healing in the AdvEvent section, you would need a corresponding script defined that might read something like: [Script-AECustomEvent1] Commands=1 C1=/bc cast stun AEGem[x]=source Designate what the source of the spell is. Valid entries: gem number, alt, ability, item, script, potionbelt Note that 'potionbelt' does not require a slot number. Examples: AEGem1=3 Cast this spell from gem 3 AEGem1=alt This spell is an alternative advancement ability AESpell[x]=source name Valid entries: spell name, item name, alternate ability name, ability name, script name Examples: AESpell1=Minor Shielding This would be generally be paired with an ABGem1 entry indicating which spell gem to cast Minor Shielding from. AESpell1=Uber Wand Thingy of Uberness This would be generally be paired with an AEGem1 entry indicating that the source of this spell is an item. * AESpellFoci[x]=setname * Bandolier set name to swap in before casting this spell. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * AEDurMod[x]=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * AEDelay[x]=# * How many seconds do I wait between casts of this spell. * AEEventMinMana[x]=# * My mana percentage must be at least this to complete this event. * AEEventMinHP[x]=# * My HP percentage must be at least this to complete this event. * AEMinMana[x]=# * The event target's mana percentage must be above this to complete this event. * AEMaxMana[x]=# * The event target's mana percentage must be below this to complete this event. * AEMinHP[x]=# * The event target's HP percentage must be above this to complete this event. * AEMaxHP[x]=# * The event target's HP percentage must be below this to complete this event. * AETarType[x]=target type * Valid entries: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self tnt (Less is better!) * AESpellAlias[x]=event alias * Enter an \"alias\" for the event. This is often a short, easier to use name (e.g. the alias for Spirit of the Wolf might be SoW). Please note that you can NOT have spaces in your alias names. AEAnnounce[x]=channel Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example: ABAnnounce1=/bc [+r+]Buffed +x+ \\<\\< +y+ %t +x+ >> with +g+ %s [+x+] AETarCnt[x]=1|0 Settings are *only* either 1 (on) or 0 (off).","title":"AdvEvent Section [AdvEvent]"},{"location":"macros/gallery/modbot-4.0/#examples","text":"Shaman cannibalization example. In this case, settings like AEEventMinMana and AEMinMana both refer to the shaman as he is both the event triggerer as well as the target of the event: AEGem1=5 AESpell1=Cannibalize III AESpellFoci1= AEDurMod1=0 AEDelay1=0 AEEventMinMana1=0 AEEventMinHP1=30 AEMinMana1=0 AEMaxMana1=90 AEMinHP1=50 AEMaxHP1=100 AETarType1=self AESpellAlias1=canni AEAnnounce1= Necromancer mana feed example (where the necro is feeding mana to another character). In this case, AEEventMinMana refers to the necro's mana and AEMinMana refer to the mana of the target (as defined by AETarType): AEGem2=4 AESpell2=Rapacious Subvention AESpellFoci2= AEDurMod2=0 AEDelay2=0 AEEventMinMana2=50 AEEventMinHP2=50 AEMinMana2=20 AEMaxMana2=45 AEMinHP2=0 AEMaxHP2=100 AETarType2=clr enc AESpellAlias2=manafeed AEAnnounce2=/bc","title":"Examples"},{"location":"macros/gallery/modbot-4.0/#advcure-section-advcure","text":"AQCount=# Number of cures you plan to have. AQNewFormat=x Set 'x' to 1 for ModBot v4 style Set 'x' to 0 for MobBot v3.49 style AQCheckTime=# How often to check for cures in seconds [AQx] Where 'x' is the number of cure spell Gem=source Designate what the source of the spell is. Valid entries: gem number, alt, ability, item, script, potionbelt Note that 'potionbelt' does not require a slot number. Examples: Gem=3 Cast this spell from gem 3 Gem=alt This spell is an alternative advancement ability Spell=source name Valid entries: spell name, item name, alternate ability name, ability name, script name Examples: Spell=Minor Shielding This would be generally be paired with an Gem entry indicating which spell gem to cast Minor Shielding from. Spell=Uber Wand Thingy of Uberness This would be generally be paired with an Gem entry indicating that the source of this spell is an item. * '''SpellCntr= * Currently not used for anything, so don't worry about it :) * SpellFoci=setname * Bandolier set name to swap in before casting this spell. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets (e.g. -bandolier|) * SpellCureType=cure type * Valid entries (type of cure needed): Cursed, Diseased, Poisoned, EnduDrain, LifeDrain, ManaDrain, Blinded, CastingLevel, Charmed, Feared, Healing, Mesmerized, Resistance, Rooted, Silenced, Slowed, Snared, SpellCost, SpellSlowed, SpellDamage, Trigger, All Set the cure type to the best match for the spell, but keep them in order of best cure first. The first cure in your .ini matching the cure type needed (or if you set to \"All\") will be the first attempted spell. Cures *can* always be interrupted by any heal spell, unless you're using a cure spell that's already listed in your heal section (e.g. Cleric's \"Word of XXX\" line of spells may or may not interrupt for heals depending on where they are in your heal section). Modcure.inc will cast once per loop and then return to the main loop, so setting group cures (like Radiant Cure) toward the top would be best Be specific on cure types to avoid recasting the same cure over and over if it won't cure you. SpellMinMana=# Minimum mana to have in order to attempt this cure. SpellRecast=# Number of times to recast this spell for fizzles, interrupts, etc. TarCnt=# How many targets should be present to cast this spell, if set to 0, this spell will not be auto-casted. TarType=target type Valid target types are as follows (please note which entries can be used with others and which are exclusive): ShortClassName Used for class specific buffs (ie. haste on \"war\"). Valid entries are: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec. Note that any or all of these entries can be used at the same time. self Used for self only spells. grp for Group spells (e.g. ABTarType1=self grp) pet used to cast buffs on all pets in the group. mypet used to cast on only your pet. Please note that pet and mypet are mutually exclusive. cbt for spells to be casted during combat (e.g. an entry for Yaulp would be TarType=self cbt). Please note that any NPC within radius that is not on your exclude list will cause 'cbt' buffs to fire. If you want to buff next to NPCs (and don't plan to kill them), use the exclude command. If you later decide to kill whatever mob you've excluded, use the include command to remove it from list. The macro does not check combat state of the tank for buffs. idle used with cbt for spells to be casted when in or out of combat (e.g. if you wanted to keep Yaulp on at all times (in AND out of combat), your entry would be TarType=self cbt idle). Please note that idle is only used in TarType when cbt is also used. aura used to cast an aura - must be used with self (e.g. TarType=self aura) Note that Bard auras *REQUIRE* ABSpellAlias to be set up to cast, and modbuff will use CastCall to actually cast the aura. * tank used to cast only on the designated group tank. Tank designation is keyed from either the TankName variable in the setting section (see above) or by setting a toon to Main Tank (Group.Maintank) using the Roles function. * Default entry: *TarType=tank war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self mypet grp pet cbt idle* Please note that the default entry includes settings that do not work together. Specifically, tank , self and mypet are meant to be used by themselves. If you want to cast the same buff on yourself, your pet and the tank, create them as seperate buff entries. * SpellAlias=spell alias * Enter an \"alias\" for the spell. This is often a short, easier to use name (e.g. the alias for Radiant Cure might be RC). Please note that you can NOT have spaces in your alias names. Announce=channel Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example: Announce=/bc [+r+]Cured +x+ \\<\\< +y+ %t +x+ >> with +g+ %s [+x+] [AQ2] Gem=2 Spell=Counteract Disease SpellCntr=0 SpellFoci= SpellCureType=Diseased Slowed SpellMinMana=0 SpellRecast=0 TarCnt=1 TarType=pc grp pet cbt idle SpellAlias= Announce=/bc","title":"AdvCure Section [AdvCure]"},{"location":"macros/gallery/modbot-4.0/#advpull-section-advpull","text":"This section is under development. APCheckTime=# Time (in seconds) to wait in between AdvPull executions. Default is 0. APRadius=# The distance around your target to check for more mobs as defined by APMobMax (basically, a check for adds). Default is 40. * APMobMax=# * The max amount of mobs (target + adds) you will allow before pulling. Default is 1. If there are less than APMobMax mobs within APRadius of your target, it will pull the mob. * APScript= Scriptname * Name of script to define how you want to tag the mob (throw stone, ranged, item clicky, spell, etc) and executes when you have a mob targeted to pull. The script name must have at least 3 characters. Default is empty. **YOU MUST CREATE A SCRIPT TO TAG THE MOB!** Modbot Scripts APPath= Pathname The name of the path to run for pulling/movement, as defined in your MBWayPnt.ini (See ModMove for more details on creating a path). The path name must be at least 3 characters. Default is empty. * APRetPath= ReturnPathname * The name of the path to use to move back to camp. The path must be defined in your MBWayPnt.ini file. The path name must be at least 3 characters. Default is empty. Mostly used for when the path back to camp is a different one than used to pull mobs (ie, you go through a one-way wall to pull or intentionally fall off a ledge and have to run the long way back). If you want to return the same way you came, you can just use WPLoop=TRUE in MBWayPnt.ini instead of having to set up a second path. * APBefore= * Command or series of commands (with multiline) to execute before the rest of AdvPull section. Must be at least 3 characters. Default is empty. * APAfter= * Command or series of commands (with multiline) to execute after AdvPull has finished. Default is empty. * APAnnounce= * A way to announce what you have pulled. Default is empty. * Note: This is not just a chat channel, but a place to put a full incoming message, ie: * APAnnounce=/gsay Incoming -[ %t ]- * APRetries=1 * Number of times to attempt to pull a mob in case it fails the first try (line of site, etc). This will strafe left and right on subsequent attempts. Default is 1.","title":"AdvPull Section [AdvPull]"},{"location":"macros/gallery/modbot-4.0/#mbcommoninc-settings","text":"The location and name of MBCommon.inc can now be set by changing line 38 in Modbot.mac. /declare MBCommon string outer MBCommon.ini It defaults to the ./macros folder, but the line can be changed to any path.","title":"MBCommon.inc Settings"},{"location":"macros/gallery/modbot-4.0/#settings-section","text":"LoadAlias [1,0] This is an on / off setting to load the \"/alias /mb /echo MB-\" alias for commands. It is set to 0 after first run when alias should be loaded, but you can set to 1 to add it back to your Macroquest.ini file if it gets deleted. IniLocation Path to your MB_.ini files. Must end in / or if changed from default. LootIni [Loot.ini] This setting can be used to change the location of your Loot.ini file as well as the name. MBWayPntLocation [MBWayPnt.ini] This setting can be used to change the location of your MBWayPnt.ini file as well as the name of the file. CheckTargetDebuffs [TRUE|FALSE] This setting toggles on/off the ${Target.Buff} checking for debuffs (essentially this checks if the spell \"Stacks\" before casting.) Each debuff listed in MBCommon.ini now has an 'OverwritesID=' entry. This entry is meant for a list of debuffs that the spell doesn't 'Stack' with, but you want the debuff to overwrite.","title":"Settings Section"},{"location":"macros/gallery/modbot-4.0/#spell-section","text":"Zone.ShortName - List of mobs excluded for that zone in a pipe -\"|\" delimited string. This setting is not present for any zones which you have nothing excluded. Immune lists for each spell are saved in their own section along with a MaxLevel=[100] setting. Change to the max level of the spell. As the macro finds mobs that are immune to the spell, the zone shortname is added to the entry as a variable along with the mob names in pipe delimited format. Mobs that are marked immune to debuffs can be marked in MBCommon.ini with an asterisk to allow for some names that have only some immune, and some not. For example, Dreadspire has some body types with same names where some are immune to mez, and some not (e.g. an aid to the Seneschal - some body types with that mob name are immune to befuddle, and others aren't). By adding an asterisk to the end of the name in the exclude section, the macro will repeat attempts to mez, etc. that mob type (rather than just marking them immune and not casting at all): _DreadspireImmune=|an aid to the Seneschal_|* The ADIfSpellImmune script, if defined, will only run if the mob is found to be immune after cast, but the astrik will not be replaced, and the spell will only cast once allowing the spell to still attempt on the next mob it hasn't been cast on. Overwrites= list of debuffs that the spell doesn't 'Stack' with, but you want the debuff to overwrite. This does require user intervention, and there's no way to set it auto-set them. MaxLevel= maximum level of mob that can be affected by debuff An entry in the spell section might look something like this: [Mystify] MaxLevel=83 thalassius_bImmune=|a sea mephit defender||a sea mephit evoker| OverwritesID=|14569|14570|14530|","title":"Spell Section"},{"location":"macros/gallery/modbot-4.0/#modbot-class-ini-examples","text":"ModBot`` ``Class`` ``INI`` ``Examples`` ``linked`` ``to`` ``another`` ``page","title":"ModBot Class INI Examples"},{"location":"macros/gallery/modbot-4.0/#scripts-and-modbot-variable-usage","text":"ModBot allows VERY customizable sripts to such an extent you can actually program your own sub-procedures within your INI file. You can harness ANY global variable within ModBot to use with the scripts. Scripts match MQ2 code to every extent, below are several examples of scripts and common variables one would use to create complex scripts","title":"Scripts and ModBot Variable Usage"},{"location":"macros/gallery/modbot-4.0/#understanding-scripts-syntax-example-how-to","text":"Scripts General Info Scripts can be difficult and there are some MQ2 commands that give scripts trouble. Keep this in mind and prepare to post you script code should you have problems. No script can take more then 15 seconds to complete, however this can be modified in the code directly in the Sub MBScript or even changed in the script you create ({Timer} is the var) Scripts are executed from top to bottom and you are allowed to use a label :Top (e.g. /goto :Top), in your script. The /goto :Top option allows for complex loops to take place directly from code in the INI file If you use ANY INI generated ModBot global string variables that have spaces in your custom scripts they MUST be encapsulated by 2 apostrophies when used in the script, see PetCast example below. * Reserved Characters :*These characters can not be used in scripts ::*$ \" :*'' Two apostrophies are for passing variables with spaces in script code. Use them to replace quotes. Syntax [Script-] Commands= C1= . Cn= What does a script look like in your INI file: [Script-HelloWorld] Commands=2 C1=/echo Hello World C2=/if ({Timer}>50) /varset Timer 5s C3=/goto :Top In the example above it will echo to the MQ2ChatWindow \"Hello World\" for 5s. Notice how I do NOT use a $ to reference the \"Timer\" variable. How To use or launch a script :*/bc bob script HelloWorld :*You can set Gem=script and Spell=HelloWorld as a spell name for any of the spells you've configured in ModBot, and it will be triggered when that event, heal, etc would take place. Please see the below examples for complex script code. Common Variables (You can use ANY mq2 variable without the $, you can even CREATE new global vars and use them, all from the INI file via Scripts) {ACState} = If greater than 0, ModBot thinks you are in combat {ACMATarget} = The target of the main assist {CampStatus} = If greater than 0, means I've been given a /bc makecamp command {FollowFlag} = If greater than 0, means I should be following something {TankName} = The acting main assist {Me}, {Spawn}, etc = See MQ2 Manual Examples This example is triggered from an event OR a heal and it will remove the necro \"Lich\" spell: [AdvHeal] [AH3] Gem=Script Spell=DropLich SpellFoci= DurMod=0 SpellAlias=droplich SpellMinMana=0 Announce=/bc TarCnt=1 Class=pc hp40 nec [AdvEvent] [AE3] Gem=Script Spell=DropLich SpellFoci= DurMod=0 Delay=0 EventMinMana=100 EventMinHP=40 MinMana=20 MaxMana=100 MinHP=0 MaxHP=90 TarType=tnt SpellAlias= Announce=/bc [Script-DropLich] Commands=1 C1=/if ({Me.Buff[Lich].ID}) /notify BuffWindow Buff{Math.Calc[{Me.Buff[Lich].ID}-1].Int} leftmouseup This example is launched via the ACBefore command from the [Melee] section, I've got Sneak Attack bound to hotkey 6. What the bot will do is to trigger Sneak Attack, attempt proper position, backstab the mob, then revert to \"normal\" [Script-SneakAttack] Commands=10 C1=/if ({Melee.Enable}) /melee plugin=0 C2=/if ({Me.CombatAbilityReady[Sneak Attack]}) /keypress 6 C3=/if (!{Me.Moving} && !{Stick.MoveBehind} && {Stick.Distance}!={Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}+5]}) /stick {Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}+5]} behind id {ACMATarget} C4=/if ({Target.ID}!={ACMATarget}) /multiline ; /target id {ACMATarget};/delay 5 C5=/if ({Melee.BackAngle}>60 || {Melee.BackAngle}<-60) /goto :Top C6=/if ({Target.Distance3D}>={Spawn[{ACMATarget}].MaxRangeTo}) /stick {Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}-5]} hold behind id {ACMATarget} C7=/if ({Target.Distance3D}>={Spawn[{ACMATarget}].MaxRangeTo}-3) /goto :Top C8=/delay 5 C9=/if ({Me.AbilityReady[Backstab]}) /doability backstab C10=/melee plugin=1 This example will confirm you are hidden and sneaking when I'm at \"camp\" and not sneaking when I'm in follow mode. It will also re-engage if MQ2Melee lost \"stick\" because of too much mob movement [Script-HideSneak] Commands=4 C1=/if ({FollowFlag} && {Me.Sneaking}) /multiline ; /doability sneak;/return C2=/if (!{FollowFlag} && !{ACState} && {Select[{MakeCamp},on]} && {Me.AbilityReady[Hide]} && !{Me.Moving} && !{Melee.Combat}) /multiline ; /doability Hide;/delay 5 C3=/if (!{FollowFlag} && !{ACState} && {Select[{MakeCamp},on]} && {Me.AbilityReady[Sneak]} && !{Me.AbilityReady[Hide]} && !{Me.Moving} && !{Melee.Combat}) /multiline ; /doability Sneak;/delay 5 C4=/if ({ACState} && {ACMATarget} && {Target.ID} && {Me.AbilityReady[Backstab]}) /keypress q Example of createing a new global var and an example of using it [Script-EventsOff] Commands=2 C1=/if (!{Defined[CheckSlow]}) /declare CheckSlow int outer 1 C2=/if ({DoEvents}) /multiline ; /varset DoEvents FALSE;/varset CheckSlow 1 [Script-EventsOn] Commands=2 C1=/if (!{Defined[CheckSlow]}) /declare CheckSlow int outer 3 C1=/if (!{DoEvents}) /multiline ; /varset DoEvents TRUE;/varcalc CheckSlow {CheckSlow}+1 [Script-IsSlowed] Commands=3 C1=/if (!{Defined[CheckSlow]}) /multiline ; /varset DoEvents FALSE;/return C2=/if ({CheckSlow}<=4) /varset DoEvents FALSE C3=/if ({CheckSlow}>4) /varset DoEvents TRUE;/varset CheckSlow 1 Example of using a ModBot global string. This will create a new pet, say when your existing pet is about to die :*Please note in the INI snippets below that the INI generated global string PetCast has a space so to pass this properly in the script, you must encapsulated in quotes, script code uses apostrophies in place of quotes. [Script-NewPet] Commands=4 C1=/multiline ; /casting ''{PetCast}'' -maxtries|5;/delay 2s C2=/if ({Cast.Timing}>600) /goto :Top C3=/multiline ; /if ({Me.Pet.ID}) /pet go away;/delay 2s !{Me.Casting.ID} C4=/if (!{Me.Pet.ID}) /goto :Top Example of using PetCast for a cleric hammer, to be called from a ACBefore command [Settings] DoPet=FALSE PetCast=Unswerving hammer of awesomeness|gem1 [Melee] ACBefore=/if (!{Me.Pet.ID} && {ACMATarget} && {Spawn[{ACMATarget}].Type.Equal[NPC]} && {Spawn[{ACMATarget}].Distance3D}<={ACLeash}) /call MBScript SumHam [Script-SumHam] Commands=2 C1=/if ({Target.ID}!={ACMATarget}) /multiline ; /target id {ACMATarget};/delay 5 C2=/if (!{Me.Pet.ID}) /multiline ; /casting ''{PetCast}'' -maxtries|2;/delay 3s Example of a CH script to be run from a non cleric .ini (warrior) I figure I might as well be posting some of the script versions of other macros that I've been seeing around, but written my own thing so I could just keep modbot running. Modbot script version of CH chain that seems to work, though might have problems I haven't noticed.... I use this with a hotkey from my tank -```\"/mb script chain 50\" (yes it's in MB\\_tank.ini - NOT the cleric.ini.. ) It finds all clerics in netbots, then runs through the list telling each to cast CH after the delay you specify. This script does require the clerics to all be running modbot with an alias of CH for complete heal spell, `and connection to the same EQBCS server. `Commands=13` `C1=/multiline ; /declare clrlist string local;/declare x int local 1;/declare StopLoop bool local FALSE` `C2=/if ({Spawn[{NetBots.Client.Arg[{x}]}].Class.ShortName.Equal[clr]}) /varset clrlist {clrlist} {NetBots.Client.Arg[{x}]}` `C3=/if ({x} < {NetBots.Counts}) /multiline ; /varset a 1;/varcalc x {x}+1` `C4=/echo Clerics: {clrlist} casting {Math.Calc[{Param1}/10]}s apart` `C5=/varset x 0` `C6=/varset Timer 100` `C7=/varcalc x {x}+1` `C8=/if ((!{Spawn[{clrlist.Arg[{x}]}].ID} || {NetBots[{clrlist.Arg[{x}]}].PctMana} < 3) && {x} <= {clrlist.Count[ ]}) /varset a 5` `C9=/if ((!{Spawn[{clrlist.Arg[{x}]}].ID} || {NetBots[{clrlist.Arg[{x}]}].PctMana} < 3) && {x} > {clrlist.Count[ ]}) /varset a 4` `C10=/bc {clrlist.Arg[{x}]} cast ch` `C11=/delay {Param1}` `C12=/if ({x}>{clrlist.Count[ ]}) /varset a 4` `C13=/if (!{StopLoop}) /varset a 5` ````` Posted By Ptarp Tue Apr 12, 2011 1:01 am. Moved to Wiki by Arblis\\` ## Script Examples [```Script`` ``examples`` ``linked`` ``to`` ``another`` ``page```](https://macroquest.org/wiki/index.php/Script_Examples) * These are for ModBot v3.49 please adjust accordingly ## Related Include Files Information and Examples [```Related`` ``Include`` ``files`` ``(modloot,`` ``AAPurchase,`` ``modmove,`` ``etc.)`` ``information`` ``and`` ``INI`` ``examples`` ``linked`` ``to`` ``another`` ``page```](https://macroquest.org/wiki/index.php/Related_Include_Files) * These are from MobDot v3.49 please adjust acccordingly ## Tips, Tricks and Troubleshooting Here you will find a collection of little gems pulled from the ModBot thread. At some point, this may morph in to a handy little troubleshooting flowchart, but for now it will serve as kind of a tidbit catchall for things that would otherwise get lost in the hundreds of thread pages... Please note- when you are posting on the forum for help (after reading this wiki of course!\\) include the MQ2 version, winEQ version and the EQ install type \\(Titanium / sod / UF) `If you want to have colored messages in Announce=/bc you can try some of these:` `b = black` `g = green` `m = magenta` `o = orange` `p = purple` `r = red` `t = cyan` `u = blue` `w = white` `y = yellow` `Example:` `Announce=/bc [+t+]` `would color the text cyan` `Although covered previously on the Wiki quite a few times - If you are having trouble with mobs keeping you from doing non combat things (buff, loot etc) try using the following:` `exclude <mob name,save>` ````` \"What I do.. (while targeted on the mob you want to ignore)```On my tank I have a hotkey. I target the mob to exclude and press it.`` `First line is /bcaa //mb exclude ${Target.CleanName}` `second line - /bcaa //mb exclude save` ````` /echo ${ADMobCount} (use this after your exclude to see if the char in question has any mobs on the exclude list. Can be used with /bcaa to see all of your toons mobcounts)```If you fight near non-combatant mobs, always use the exclude command so the macro doesn't \"see\" them, and set your Radius= in your toon's .ini file to a minimum.`` `I normally keep mine at around 60 to 80 depending on what I'm doing. Remember you can \"/varset Radius 50\" or something in game with the mac running to find a happy medium.\" -Ptap Mon Sep 20, 2010 1:18 pm` `It also sounds like an exclude hotkey, and pause hotkey would be your best friends.. Here's a few of the hotkeys I use.` `_EQTitan.ini in your everquest folder.` ````` Code:```[Socials]`` `Page10Button1Name=TankName` `Page10Button1Color=0` `Page10Button1Line1=/bcaa //varset TankName ${Me.Name}` `Page10Button7Name=Masters` `Page10Button7Color=0` `Page10Button7Line1=/bcaa //varset MasterList ${NetBots.Client}` `Page10Button5Name=pause` `Page10Button5Color=0` `Page10Button5Line1=/bcaa //mb mbpause on` `Page10Button11Name=unpause` `Page10Button11Color=0` `Page10Button11Line1=/bcaa //mb mbpause off` `Page10Button6Name=follow` `Page10Button6Color=0` `Page10Button6Line1=/bca follow` `Page10Button12Name=stop` `Page10Button12Color=0` `Page10Button12Line1=/bcaa //mb stop` `Page10Button10Name=letsroll` `Page10Button10Color=0` `Page10Button10Line1=/bcaa //mb letsroll` `Page2Button1Name=corpse` `Page2Button1Color=0` `Page2Button1Line1=/corpse` `Page2Button6Name=sellitem` `Page2Button6Color=0` `Page2Button6Line1=/ini loot.ini ${Cursor.Name.Left[1]} \"${Cursor.Name}\" Sell` `Page8Button1Name=include` `Page8Button1Color=0` `Page8Button1Line1=/bcaa //mb include ${Target.CleanName}` `Page8Button1Line2=/pause 5` `Page8Button1Line3=/bcaa //mb exclude save` `Page8Button7Name=exclude` `Page8Button7Color=0` `Page8Button7Line1=/bcaa //mb exclude ${Target.CleanName}` `Page8Button7Line2=/pause 5` `Page8Button7Line3=/bcaa //mb exclude save` ````` I normally just keep my keys on page 10 and click from there, but as you can see there's include and exclude keys on pg 8 and another on pg2 I use for setting items to \"sell\" in my loot.ini file. The /bcaa stuff might not work for some depending on plugin versions, so that cn be replaced with a /bca and /mb on a second line. I find it very handy to have some keys I can press quickly, and always either pause all my toons or exclude npcs before I go into areas that I don't want something attacked. Having trouble with your background session toons not moving properly? You might try this: WinEQ=on```to the [Defaults] section of your mq2moveutils.ini. TrueHeading=off might help also in the same section, though I'm not sure if that's needed.`","title":"Understanding scripts, syntax, example, how to"},{"location":"macros/gallery/modbot-4.0/#do-your-toons-wander-where-they-are-not-supposed-to","text":"Thanks to Toomanynames for this tidbit: Those who have toon wandering issues or whatnot - when you say \"radius\", what radius do you mean, modbot, melee, makecamp? There are actually three things that work together to make certain that your bots fight and return to a certain area - MQ2MoveUtils, MQ2Melee and the MB_charname.ini file (from ModBot). /makecamp x x x This is a MQ2MoveUtils setting that needs to be properly configured. For example: /makecamp radius x leash=on (or something like that) Please see the MQ2MoveUtils (PMS version) [ http://www.macroquest.org/phpBB3/viewtopic.php?f=31&t=15909 thread ] and MQ2MoveUtils:v11 for more detailed information. * /melee x x x * This is an MQ2Melee setting. Those ranges and settings come into play and must be set accordingly to work WITH modbot Please see the MQ2Melee [ http://www.macroquest.org/phpBB3/viewtopic.php?f=50&t=17045 thread ] for more detailed information. * Modbot INI * Radius = the max the toon will \"See\" thiings * ACLeash = the max a toon will engage things If you don't properly configure MQ2MoveUtils, MQ2Melee and ModBot and confirm those settings are within or compatible with ModBot \"ranges\" then you'll have issues.","title":"Do your toons wander where they are not supposed to?"},{"location":"macros/gallery/modbot/","tags":["macro"],"text":"ModBot \u00b6 ModBot - A Universal Bot Macro \u00b6 Caster Melee Shrouds & MM's Mez, Charm, Heal, Melee, etc All classes supported Now supports mixed groups of MQ2 and Non-MQ2 users/players ModBot is under constant improvement effort, open to suggestions / additions / adjustments, etc ModBot_v3.x Source General Note on Wiki Entries - Release ZIP packages vs. SVN Updates - While the majority of entries in the Wiki apply to ModBot in general, there are always some entries that apply to changes, additional functionality, new commands, etc. that exist only in the \"beta\" files from the SVN repository. Please keep this note in the back of your mind as you work with the Wiki - if you come across a command, etc. that will just not seem to work for you (and you have already thoroughly researched it, checked syntax, re-checked syntax, etc.), please take a moment to check your version of the module that it applies to - you may need to update. Using the SVN Repository \u00b6 For those of you that would like to use the beta files off of the SVN repository, you have two options - use your browser to grab files or use a tool like TortoiseSVN to automate the process a bit. Using the browser is pretty self-explanatory, but TortoiseSVN requires a bit of set up. This process covers what is needed for the Windows version: Links to the browser access and to SVN can be found at the bottom of this post.. http://www.macroquest.org/phpBB3/viewtopic.php?f=49&t=15313 Download and install [ http://tortoisesvn.net/downloads.html TortoiseSVN ]. Create a folder on your system where you want to store the downloaded ModBot files. Right click on your newly created folder and select SVN Checkout (right above the TortoiseSVN entry). In the menu that comes up, input the URL of repository and then click OK. Once you've clicked OK, the folder will populate with everything on SVN. Any time you want to update the folder to newest revision, simply right click on the folder and select SVN Update from the Tortoise menu. How To \u00b6 To use ModBot Extract and place all included files from zip (all .mac and .inc files) into your MQ2 macro directory. From inside EQ, type /macro modbot (e.g. /macro modbot OR /macro modbot raidmode). This will build, if it doesn't exist, your MB_.ini file. Optional entries will make a MB__.ini. Being shrouded on startup without using an option will use your race and class for the creation of an MB__.ini file. From inside EQ, end the macro by typing /endmac Tab out of EQ, locate your new MB_.ini file in your macro directory, and open it. You can use the editor of your choice, but Notepad will work just fine. For every component of the macro you want to use, increase the respective \"count\", if you want two heals, set AHCount=2, if you want 2 debuffs, set ADCount=2, etc. After you have set your counts, save and close the INI file. Tab back over into EQ and restart the macro (/macro modbot). This will now populate your INI file based on the count entries that you made in the previous step End the macro again by typing /endmac Open the INI file once more and \"tweak\" the newly created entries to fit your needs. When you are done, save and close the INI file. Tab back over to EQ and restart the macro. Your bot should now be just that, a BOT and will listen to your every command (assuming you are the master). For examples of complete class ModBot INI files, please go to the example INI page . Please Note!! One thing to keep in mind throughout the configuration of the ModBot INI file: keep your most critical and most used spells, activities, etc., first in their respective INI sections. You don't want your mez spell as Debuff number 20, you don't want slow as debuff 10, you don't want a CBT based buff as buff 23, and you don't want CH as heal 1 (you want your most desperate heal as heal 1), etc. Configure your heals, buffs, debuffs, etc. in a highest priority first order. Reference to Understanding the ModBot WiKi \u00b6 - Replace this with the respective descriptor Example 1 -_is luclin_bobby Example 2 -is bobby (text) - These are \"comments\" and should be removed when saving the respective file Example 1 - Send=1 (If set to 1 it will send netbots information over the network) This text: *``\\(If`````set to 1 it will send netbots information over the network)``\\*`should NOT appear in the INI file` ````` [text\\] - This is to show different options or series of options Example 1 - /bc cast[, %t, grp,, etc]`` Plugin Requirements & Examples \u00b6 I suggest you have a good understanding of how to configure each of these plugins. Any misconfiguration can have an adverse affect on the performance of ModBot MQ2EQBC & EQBCS (/cheer OmniCtrl and ascii38 for this plugin) 2/15/14 - EQBCS Wiki (with current code maintained by PMS) MQ2Cast (/cheer A_Enchanter_00 for this plugin) * ModBot will create a saved spell set using MQ2cast called ModBot2 and this information is stored in the MQ2Cast.INI file * 2/15/14 - MQ2Cast 10.x (does not require MQ2BagWindows) can be found here . MQ2NetBots (/cheer S0rcier for this plugin) Please use this copy for now. http://tools.assembla.com/kroak/export/474/plugs/MQ2NetBots.cpp The latest versions posted in the MQ2Netbots thread are stripped down copies that didn't address the real reason for the plugin locking up. The settings are located in _.ini in your MQ2 directory) /netbots on grab=on send=on MQ2Melee (/cheer S0rcier for this plugin) * The settings are located in _.ini in your MQ2 directory) /melee plugin=1 MQ2Bandolier (/cheer wassup for this plugin) If you plan to use item swapping and spell foci items, you may need to configure \"sets\" 2/15/14 - MQ2Exchange 3.00 and MQ2Bandolier 3.00 (no BagWindow) from Woobs can be found here . You may still need to use MQ2BagWindow and Moveitem.h to get MQ2Melee to compile. MQ2MoveUtils (/cheer outlander for this plugin) 2/16/14 Current version maintained by PMS can be found here . MQ2Exchange (/cheer wassup for this plugin) 2/15/14 - MQ2Exchange 3.00 and MQ2Bandolier 3.00 (no BagWindow) from Woobs can be found here . You may still need to use MQ2BagWindow and Moveitem.h to get MQ2Melee to compile. MQ2Twist (For Bards. /cheer Cr4zyb4rd and others for this plugin) (May also want to look at pages later in the thread.) 2/15/14 - Current MQ2Twist Code from gse7en (use this or the one a few posts down from dewey2461) Deprecated Plugins (no longer used with ModBot) \u00b6 MQ2NetHeal (/cheer S0rcier for this plugin) (Elsewhere in the fourms it is frequently suggested to not use this plugin: /plugin mq2netheal unload then /plugin mq2netbots) The settings are located in _.ini in your MQ2 directory) /netheal on grab=on send=on /netcure on Note, the mq2netheal plugin is deprecated, and no longer needed for current release of modbot. It will, however continue to function the same with or without the plugin.. For heal related help, you must specify on the forums if you're using it. Plugin INI Examples \u00b6 Example _.INI for MQ2NetBots, MQ2NetHeal, MQ2Melee: [MQ2NetBots] Stat=1 Grab=1 Send=1 [MQ2NetHeal] Stat=1 Grab=1 Send=1 [MQ2NetCure] Watch=1 [MQ2Melee] backstab=50 disarm=1 enrage=1 evade=1 facing=1 hide=1 infuriate=1 melee=200 meleepri= meleesec= petlock=1 petmend=20 petrange=75 pickpocket=1 plugin=1 poker= resume=20 sneak=1 standup=1 stickrange=200 hideif=${If[${Select[${MakeCamp},off]} || !${Defined[CampStatus]},0,1]} sneakif=${If[${Select[${MakeCamp},off]} || !${Defined[CampStatus]},0,1]} stickcmd=hold ${If[${Target.Height}<5,10,${Math.Calc[${Target.Height}+7].Int}]} ${If[!${Me.GroupSize} || ${Melee.AggroMode},moveback,${If[${Melee.BackStabbing},behind,!front]}]} ${If[${Me.Underwater},uw,]} version=3.999 Example MQ2MoveUtils.INI for MQ2MoveUtils: [Defaults] AutoPause=on BreakOnWarp=on BreakDist=250.0 BreakOnGate=on Verbosity=1 stuckDist=0.8 turnDirection=10.0 stuckCheck=5 StuckLogic=off Example MQ2Bandolier_.ini for MQ2Bandolier: [ThisSet] 17=12345 13=23456 14=34567 Example MQ2Cast.INI for MQ2Cast: [SpellSet..] ModBot2=123|1 456|2 789|3 ModBot HUD \u00b6 [_] Last=ModBotHUD SkipParse=7 CheckINI=100 UpdateInBackGround=on ClassHUD=on ZoneHUD=on [ModBotHUD] Target= 3,060,210,225,225,225,${If[${Target.ID},Dis:${Int[${Target.Distance}]}-Lvl:${Target.Level}-${Target.Class.ShortName}-${Target.PctHPs}%,]} Name1= 3,060,220,240,240,000,${If[${NetBots.Counts}>=1,${NetBots.Client.Arg[1]} ${NetBots[${NetBots.Client.Arg[1]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[1]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[1]}].PctAAExp}]},NA]} HP1= 3,060,230,255,100,100,HP:${If[${NetBots.Counts}>=1,${NetBots[${NetBots.Client.Arg[1]}].PctHPs},]}% Mana1= 3,105,230,100,100,255,M:${If[${NetBots.Counts}>=1,${NetBots[${NetBots.Client.Arg[1]}].PctMana},]}% End1= 3,145,230,255,234,008,E:${If[${NetBots.Counts}>=1,${NetBots[${NetBots.Client.Arg[1]}].PctEndurance},]}% Pet1= 3,185,230,255,255,255,Pet:${If[${NetBots.Counts}>=1 && ${NetBots[${NetBots.Client.Arg[1]}].PetID}>0,${NetBots[${NetBots.Client.Arg[1]}].PetHP},]}% Name2= 3,060,240,240,240,000,${If[${NetBots.Counts}>=2,${NetBots.Client.Arg[2]} ${NetBots[${NetBots.Client.Arg[2]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[2]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[2]}].PctAAExp}]},NA]} HP2= 3,060,250,255,100,100,HP:${If[${NetBots.Counts}>=2,${NetBots[${NetBots.Client.Arg[2]}].PctHPs},]}% Mana2= 3,105,250,100,100,255,M:${If[${NetBots.Counts}>=2,${NetBots[${NetBots.Client.Arg[2]}].PctMana},]}% End2= 3,145,250,255,234,008,E:${If[${NetBots.Counts}>=2,${NetBots[${NetBots.Client.Arg[2]}].PctEndurance},]}% Pet2= 3,185,250,255,255,255,Pet:${If[${NetBots.Counts}>=2 && ${NetBots[${NetBots.Client.Arg[2]}].PetID}>0,${NetBots[${NetBots.Client.Arg[2]}].PetHP},]}% Name3= 3,060,260,240,240,000,${If[${NetBots.Counts}>=3,${NetBots.Client.Arg[3]} ${NetBots[${NetBots.Client.Arg[3]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[3]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[3]}].PctAAExp}]},NA]} HP3= 3,060,270,255,100,100,HP:${If[${NetBots.Counts}>=3,${NetBots[${NetBots.Client.Arg[3]}].PctHPs},]}% Mana3= 3,105,270,100,100,255,M:${If[${NetBots.Counts}>=3,${NetBots[${NetBots.Client.Arg[3]}].PctMana},]}% End3= 3,145,270,255,234,008,E:${If[${NetBots.Counts}>=3,${NetBots[${NetBots.Client.Arg[3]}].PctEndurance},]}% Pet3= 3,185,270,255,255,255,Pet:${If[${NetBots.Counts}>=3 && ${NetBots[${NetBots.Client.Arg[3]}].PetID}>0,${NetBots[${NetBots.Client.Arg[3]}].PetHP},]}% Name4= 3,060,280,240,240,000,${If[${NetBots.Counts}>=4,${NetBots.Client.Arg[4]} ${NetBots[${NetBots.Client.Arg[4]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[4]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[4]}].PctAAExp}]},NA]} HP4= 3,060,290,255,100,100,HP:${If[${NetBots.Counts}>=4,${NetBots[${NetBots.Client.Arg[4]}].PctHPs},]}% Mana4= 3,105,290,100,100,255,M:${If[${NetBots.Counts}>=4,${NetBots[${NetBots.Client.Arg[4]}].PctMana},]}% End4= 3,145,290,255,234,008,E:${If[${NetBots.Counts}>=4,${NetBots[${NetBots.Client.Arg[4]}].PctEndurance},]}% Pet4= 3,185,290,255,255,255,Pet:${If[${NetBots.Counts}>=4 && ${NetBots[${NetBots.Client.Arg[4]}].PetID}>0,${NetBots[${NetBots.Client.Arg[4]}].PetHP},]}% Name5= 3,060,300,240,240,000,${If[${NetBots.Counts}>=5,${NetBots.Client.Arg[5]} ${NetBots[${NetBots.Client.Arg[5]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[5]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[5]}].PctAAExp}]},NA]} HP5= 3,060,310,255,100,100,HP:${If[${NetBots.Counts}>=5,${NetBots[${NetBots.Client.Arg[5]}].PctHPs},]}% Mana5= 3,105,310,100,100,255,M:${If[${NetBots.Counts}>=5,${NetBots[${NetBots.Client.Arg[5]}].PctMana},]}% End5= 3,145,310,255,234,008,E:${If[${NetBots.Counts}>=5,${NetBots[${NetBots.Client.Arg[5]}].PctEndurance},]}% Pet5= 3,185,310,255,255,255,Pet:${If[${NetBots.Counts}>=5 && ${NetBots[${NetBots.Client.Arg[5]}].PetID}>0,${NetBots[${NetBots.Client.Arg[5]}].PetHP},]}% Name6= 3,060,320,240,240,000,${If[${NetBots.Counts}>=6,${NetBots.Client.Arg[6]} ${NetBots[${NetBots.Client.Arg[6]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[6]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[6]}].PctAAExp}]},NA]} HP6= 3,060,330,255,100,100,HP:${If[${NetBots.Counts}>=6,${NetBots[${NetBots.Client.Arg[6]}].PctHPs},]}% Mana6= 3,105,330,100,100,255,M:${If[${NetBots.Counts}>=6,${NetBots[${NetBots.Client.Arg[6]}].PctMana},]}% End6= 3,145,330,255,234,008,E:${If[${NetBots.Counts}>=6,${NetBots[${NetBots.Client.Arg[6]}].PctEndurance},]}% Pet6= 3,185,330,255,255,255,Pet:${If[${NetBots.Counts}>=6 && ${NetBots[${NetBots.Client.Arg[6]}].PetID}>0,${NetBots[${NetBots.Client.Arg[6]}].PetHP},]}% ModBot Commands & Syntax \u00b6 ModBot commands are executed in a few different ways: /bc /bc /bct /bct Are probably most common but check out the EQBC Forum thread for more methods / features. You can also configure an alias so you can run modbot on the character you control and execute ModBot commands. To create the alias you must run this from the EQ prompt: /alias /mb /echo mb- Or change the LoadAlias variable in MBCommon.inc [Settings] section from 0 to 1 if you've lost the alias in your Macroquest.ini With this alias you can tell your bot locally what to do: /mb makecamp /mb buffup /mb letsroll /mb Command Reference \u00b6 Section Updated: June 7, 2009 abort (Interrupts any cast in progress, Sets - DoHeals, DoDebuffs & DoMelee FALSE and follows the sender closely, usefull when you want to RUN away) addbuff \"\\|\\\" ABSpellAlias ABTarType (Adds a new buff entry to the character's INI file.) You must restart the ModBot macro after executing the addbuff command in order to complete the adding of the buff entry. The Spellname, etc. section can be entered directly (e.g. */mb addbuff \"Bone Mask of the Ancient Iksar|item\" iksar self_) or, if adding a clicky, by holding the item on your cursor (e.g._ /mb addbuff \"${Cursor.Name}|item\" iksar self*). Please note that the quotes around the spellname|gem section are required. ABTarType will accept multiple targets if quotes are used (e.g. */mb addbuff \"Levitiation|gem1\" levi \"war mnk rog\"*). addbuff execution will add ABGem, ABSpell, ABSpellAlias and ABTarType entries to the characters INI file. The remaining buff lines (ABSpellFociX, ABDurModX, etc.) will be added once you restart the ModBot macro (the array size change (ABCount) will also not increment until after re-start). For example, using these Bonemask example command, the following entires will be added to the INI file (where \"X\" is equal to whatever the next numbered entry is in your advbuff section): ABGemX=item ABSpellX=Bone Mask of the Ancient Iksar ABSpellAliasX=iksar ABTarTypeX=self attack (Sets DoMelee TRUE and forces bot to attack the TankName's target) attack (Sets DoMelee TRUE and forces bot to attack the target) * Note: OffTank must be TRUE to use this option (I may remove this requirement though TBD) * Example 1 - /bc attack badguy * Example 2 = /bc attack badguy 100 20 buffup (This will set DoBuffs & DoEvents TRUE & DoHeals FALSE) campout (Performs a /camp desktop and ends the macro) cast <on/off> (This will disable or enable the spell associated with this alias) cast [<spawnname/id> \\<%t> ] [<spawnname/id> \\<%t> ] (infinte) If the spell is detrimental, CAST targets the requester's target. If the spell is beneficial, it targets the sender or, if grp is present, it casts buff on group members. If %t is present, it targets the requester's target. The cast command will ignore INI settings for things like minmana, maxmana, recasts, buff debuff counters, etc. This command is mainly used for manual, \"one off\" type casts. Example 1 - /bc cast buffhp grp haste bob haste jane dmgshld bob Example 2 - /bc cast dmgshld bob nuke tash Example 3 - /bc cast slow \"nasty add\" doafk [on, true, off, false, ] dobuffbot [on, true, off, false, ] (Places the bot in \"BuffBot Mode\". Currently once set to on or true, it will NOT turn off and you MUST restart the macro to \"quit\" this mode. It will cast any spell alias on the requesting target. The requester must be a \"master\". Example: /t buffhp dobuffs [on, true, off, false, ] docombines (Toggle that turns docombines on/off (default off). Docombines will check for an open tradeskill window with an enabled combine button (you have to select recipe), and will click the button. Upon a successful combine, Modbot's built in cursor handling takes over. Useful for tank to summon more arrows during fight. An associated event will fire and toggle docombines to FALSE when you run out of recipe components.) docures [on, true, off, false, ] dodebuffs [on, true, off, false, ] doevents [on, true, off, false, ] doforage [on, true, off, false, ] dofw [on, true, off, false, ] doheals [on, true, off, false, ] dolist (Used to /bc out the existing \"Do\" status) doloot [on, true, off, false, ] domelee [on, true, off, false, ] domount [on, true, off, false, ] (To cast a mount or not, used in conjunction with MountCast INI entry) dopet [on, true, off, false, ] (To cast a pet or not, used in conjunction with PetCast INI entry) dopull [on, true, off, false, ] (not fully production yet) dopull <on/off/path> (Self explanatory. See the instructions on forums.) doquest [on,true,off,false] (Default is TRUE. If set to FALSE, your looter will ignore items marked \"quest\" and still loot other items.) Can be used to add quest items to your loot.ini file. For example, while holding an item on cursor, */mb doquest 4 Hair of the Dog* will set the item you're holding to \"=Quest|4|Hair of the Dog|\" in loot.ini. Can also be used in conjunction with the QuestOnly variable (found in the setting section of the loot.ini file). If both doquest and QuestOnly are set to TRUE, your toon will only loot quest items. Also note that if QuestOnly is set to TRUE and doquest is set to FALSE, your toon will only loot cash off of mobs. Please see the modloot section found here for more information on the loot.ini file. dosit [on, true, off, false, ] dosongs [on, true, off, false, ] (used for bards only) dotells [on, true, off, false, ] (Toggles a beep when tells are recieved from non-netbots toons. Useful for tells in background sessions) **exclude ** (Adds to alert list, to save list you must use the \"save\" option, otherwise it will not be written to the INI file) The exclude list is dynamic and will only exclude mobs that are present in the zone AND that are on the list. If you want to force an exclude you must edit the INI file and place a \"#\" in front of the mobs name (e.g. ExcludeList=a dusty barrel|a dark coffin|#a bitten victim|a hollow tree|, this will always force \"a bitten victim\" to be on the exclude list) Use the following commands from a character to add mobs to the exclude list (Kroak suggested just tossing this in a two-line hotkey): /bcaa //mb exclude ${Target.CleanName} Will write the exclusion to a string that is checked through the debuff loop /bcaa //mb exclude save Will write the exclusion in the mbcommon.ini and that exclusion includes the zone id, so mobs of the same name in a different zone are NOT excluded. You shouldn't have to re-run the macro after an exclude but if you do this in the midst of comabat or something, while mobs are near, it may not \"take\" as quickly. For mob names with spaces in them, simply enter the name without any quotations. For example: ''/bcaa //mb exclude a small bat See the Include command (found below) to temporarily remove a mob from the alert list follow (Follows the sender or ) follow close (Follows the sender within 3 steps, very close) give (Calls the sub GiveCheck to hand an item to a toon or NPC.) ItemCount is optional and will default to 1. The give command can be used in conjunction with categories that have been defined in the loot.ini. For instance, if you have items marked 'SpellScroll' in your loot.ini, and the Category variable has \"SpellScroll\" included, you can issue the give command as follows: /mb give Bob SpellScroll TRUE . The result will be that all items on your toon that are marked with that category (SpellScroll) in your loot.ini will be handed to Bob.) * goto (Bot will move to the loc given) * handin (Target an NPC or PC, get one item on your cursor, and all of that item will be handed to them and trade or give button pressed.) holdup (This will set DoBuffs,DoDebuffs,DoEvents,DoMelee all to FALSE) include (Removes from alert list, this will not save to the INI file, see exclude save) letsroll (This will set DoBuffs,DoHeals,DoMelee,DoEvents,DoDebuffs TRUE) makecamp (This will Makecamp at existing location. Use /makecamp off or /mb stop to toggle makecamp functionality off) mana (Used to /bc out the existing Mana % of the bot) mbpause or mbp [on, true, off, false, ] (Used to pause or unpause the macro) mbwayplay (Used to playback previously recorded paths / waypoints, through zones, doors, chaining paths, etc.) mbwayrec (Used to record a path / waypoint.) Once started, ducking for each location will add a waypoint to the path. Sitting stops path recording and returns to modbot functions. To add doors, chains, pull locations, etc. you'll need to edit the MBWayPlay.INI file Further information about mbwayplay and mbwayrec (along with examples) can be found here in the wiki. * offtank <on/off> (Toggles offtanking for dealing with adds.) * script (This will allow you to run custom commands while the macro is running, or combine series of commands, see script examples in manual / rev notes) sell (You must be within range of a merchant in order to function, it will sell loot marked as \"=SELL\" in the loot.ini file) sell (With NPC targeted will attempt to sell all items marked \"sell\" in your lootIni file to target. Otherwise optional target name can be supplied.) setinivar (This will find and change any setting in your .ini) Note that this command will have trouble with script settings if you have more than one (it will set the first C1= or whatever that it comes to. Variables changed in the .ini are /varset with the macro running Spells, gems, etc. will not be set unless you use the array correctly for . In other words, ADGem[1] is not the same as ADGem1: Use ADGem[1] and this will set the ADGem1 .ini setting and varset the change to memory. Use ADGem1 and it will only change the .ini. This still has a problem finding variables in very long sections. If /echo \\({Ini\\[\\) , ]} is over the MAX_STRING value - (You go LD typing that if it is). - Stuff like ABGem[20] is almost never found. (Still working on that.) For example, Ligament Slice for a rogue was set up from in-game with these commands typed in to the MQ window (and the rogue was able to put it immediately to use): /mb setinivar ADCount 4 (restart macro - had 0 count before) /mb setinivar ADGem[1] alt /mb setinivar ADSpell[1] Ligament Slice /mb setinivar ADTarBegHP[1] 40 /mb setinivar ADTarCnt[1] 1 /mb setinivar ADTarType[1] 1 /mb setinivar ADAnnounce[1] /bc /mb setinivar ADSpellAlias[1] snare sing (Will sing this song and add the respective gem number to the Twist.List, it attempts to use detrimental as the qualifier to add it to combat songs, or rest songs) stop (Will stop following and/or stop in place) sung (Will remove this song from the respective Twist.List, it attempts to use detrimental as the qualifier to remove it from combat songs, or rest songs) ModBot in game usage and commands \u00b6 Example commands: /bc Bob follow me [This tells bob and only bob to follow me] /bc cast dd [this tells every bot to cast the spell alias dd] /bc shamandude cast buffsta grp buffhp focus grp buffhp %T [buffsta on the group, buffhp on the requester, focus on the group, buffhp on requesters target] /bc necroguy makecamp [this tells \"necroguy\" to makecamp] /bc campout [tells all bots to camp to desktop] /bc exclude ${Target.CleanName} [tells all bots to add your target to the exclude / ignore list, toons will not attack any spawn with that name.] /bc clericname dobuffs on [tells the cleric to set DoBuffs to true and will then begin buffing group] /bc pallyguy cast bmb %t buffhp grp [bmb on requesters target, buffhp on the group] Typical commands sequence for an EXP group: /bc letsroll /bc makecamp You then begin to pull mobs and they will react accordingly. Mobile Camp Example: /bc follow /bc buffup [once ready zone into the instance] /bc stop /bc letsroll [clear first room lets say] /bc follow [move to next room] /bc makecamp [etc, repeat] Example movement options with or without invis /bc mbp on /bc follow Make a EQBC Channel and do things like (using this technique you don't even have to be a master) /bct mycoolchannelname //mb letsroll /bct mycoolchannelname //mb campout ModBot INI Settings \u00b6 PreFace Notes \u00b6 Spell Alias's must be unique across all alias's Obsolete? 06272011 -Changed - ? \"cast\" command usage now allows for multiple aliases. If you have several spells with the same alias, using /bc castwill now cast all spells marked. Example, for shaman you can have Fo7, Talisman of Boar, Talisman of Wrulan, Talisman of Tribunal, ect.. all marked with \"fullgroup\". \"/mb cast fullgroup\" will cast each spell in the order they are found in the .ini file. Buffing -```Group buffs can now be seperated to different classes, and will allow keeping the spell on netbots members in seperate groups from the caster with the inclusion of keyword \"raid\". Example -` `ABSpell2=Focus of the Seventh` `ABSpellFoci2=` `ABDurMod2=50` `ABSpellAlias2=fo7|grpfocus|fullgroup` `ABAnnounce2=` `ABSpellMinMana2=20` `ABTarCnt2=2` `ABTarType2=war shd pal rng mnk rog brd bst ber shm dru wiz mag enc nec raid` `ABRecast2=FALSE` `ABSpellIcon2=` `ABPreCondition2=TRUE` ````` Note from the above example that clr is not included in the TarType.. My clerics have the spell blocked. Attempting to cast on them will cause a chain loop of ```casting until the cleric gets self buff on that doesn't \"stack\" with focus. - so watch spell stacking and make sure to set your toons accordingly.`` ````` Old format of \"self\" will also work with no change if you don't want to buff other groups with the spell. Commands - Tell commands will now check buff aliases, and don't need \"cast\" to ask for buffs.. \"/tellfullgroup\" from a non-master toon will make the shaman cast every spell with that alias on the sender of the tell. Masters still require use of \"cast\". - This does allow guildies or whoever else knows your aliases to get buffs easily. /say is not affected and is still not enabled for modbot. Added \"docommand\" -```Master toons that aren't in netbots can now directly command toons. \"/telldocommand /sit\" will make the receiving toon sit, or execute any command after the \"docommand\" keyword. - Word of caution - You can cause macro errors with this if you aren't careful. The command sent is executed directly with /docommand in the macro. `A tell received of \"/telldocommand /sit\" will locally execute \"/docommand /sit\" Watch extra characters and or brackets.. - Because of the nature of this one, the commanding toon MUST be listed in MasterList. You should be familiar or at least capable of making MQ2Bandolier sets as they are used by MQ2Cast for \"foci\" items Please treat the Buff, Debuff, Event, Heal INI sections as a first in first out (FIFO). Highest priority to lowest priority, you don't want mez or slow as ADSpell12 but as ADSpell1. You don't want AHHeal1 as Complete Heal, you want AHHeal1 to be DA/DB (those are examples, use common sense) If you want to add some visual zip to your announcements (things are easy to miss in /bc..), you can use color coding and the like in any of your Announce settings. For example, *ADAnnounce1=/bc [+r+]Group Mez[+x+] \\<\\<[+y+] %t +x+ >> with +g+ %s [+x+]* will produce a line in the MQ chat window that is MUCH easier to see than the regular fonts. Rk. XX Usage - Heals, buffs, debuffs, and cures have code added to check your book and find the correct version of the spell you're using on startup of modbot. Rk. II and Rk. III are not needed, but only for these sections. If you upgrade a normal spell in these sections to Rk. II or III, restarting the macro will make the new spell work. Please note that this does not apply to discs, potionbelt, abilities, or PetCast at this time (meaning you must include the Rk. XX in the spell name for these types). Setting spell duration modifications (AHDurMod, ADDurMod, ABDurMod, AEDurMod) - Use the following formula to determine what number to set your DurMod at: \\({Spell[X\\].Duration} \\* (\\) +${Spell[X].Duration}) == timer duration. So if you want a 25% extension on the timer, set durmod to 25 to make ${Spell[X].Duration} * 1.25 = timer. Modbot shouldn't re-cast if timer is still running. References \u00b6 tnt = TankName Target grp = group Settings Section [Settings] \u00b6 DoMelee=TRUE|FALSE DoHeals=TRUE|FALSE DoBuffs=TRUE|FALSE DoDebuffs=TRUE|FALSE DoEvents=TRUE|FALSE DoCures=TRUE|FALSE DoPull=TRUE|FALSE DoPet=TRUE|FALSE Must have a buff entry for creating a pet (in the AdvBuff section - see note for ABTarType). Also see note for Cleric pets under PetCast below. * DoSit=TRUE|FALSE * DoLoot=TRUE|FALSE * DoFW=TRUE|FALSE * Should I cast spells for food and water. (see FoodSpell and DrinkSpell entries) * DoForage=TRUE|FALSE * ForageIni=name of ini file for forage * Defaults to forage.ini . Please see the Related include files page for more information on the Forage.ini file. * DoAfk=TRUE|FALSE * DoMount=TRUE|FALSE * If set to TRUE, you must complete the MountCast entry below. * MountCast=Spell/Item name/AA name|gem #,item,alt * Use MQ2Cast syntax without quotes. Examples: * MountCast=Collapsable Roboboar|item * MasterList=PC Name,PC Name * Comma delimited list of names. Can also use ${NetBots.Client} to designate that any chars using NetBots can act as master. Examples: MasterList=Bigbob,Sooper MasterList=${NetBots.Client} TankName=PC Name,PC Name Comma delimited list of names. This variable will also be set when you designate a character using either the Main Tank or Main Assist group roles. Can also use ${Group.MainTank.Name} to auto set this to whomever is set in the group main tank role. Examples: TankName=Billytank,Larrytank TankName=${Group.MainTank.Name} Radius=# Radius that I will monitor for NPCs. If you are having issues with your characters not casting buffs, etc. while not in combat, try adjusting the Radius setting down a bit to make certain that they are not pickng non-aggro mobs in the surrounding area. Example: Radius=100 ExcludeList=npcname|npcname| Pipe delimited names to exclude. Please note that you must have a Pipe \"|\" at the end. Example: ExcludeList=a hollow tree|a broken barrel| SitAggroRadiusCheck=# Radius to check for aggro to see if I can sit. Default is 75. AfkMessage=afk message Enter a custom AFK message if desired (leave blank for no AFK message). Default is \"Not now, thanks\". DeathSlot=TRUE|FALSE Will only be true if your bot needs to camp to desktop to save res timer. This way the macro will know if you died and had to camp out. * NetworkIni=Path and filename of ini file * Option for a network based INI file for scripts and path playback (mbwayplay and mbwaypnt.ini file). * File must be prefixed by \"Network-\" or \"Net-\" * Example: NetworkINI=X:\\shared\\modbot\\mb_network.ini * TraderName=toon name|bazaar trader * For use with the Campout command. Example: * /bc campout trader will log in whatever toon you have set in the TraderName variable. * Second argument ( |bazaar trader ) will log in the toon and run the bazaar macro with the trader option (or any other mac+options you want there.) * FollowDistance=# * Designates how far you will stay from followee. * Default 20. * FollowStick=MQMoveUtils Options * If using MQ2MoveUtils, enter the options that you would like to use. Default 20 hold uw. Example: * FollowStick=20 hold uw * PetAggro=TRUE|FALSE * TRUE - pet taunt on * FALSE - pet taunt off * PetAssist=[1] * Assist and pet attack or not * PetFoci=[-bandolier|petfoci] * Any spell foci you want to swap in for this spell using MQ2Cast syntax, you must have previously created the set via the MQ2Bandolier plugin /createset command. * PetShrinkSpell=pet shrink spell name|gem# * Spell to be used to shrink your pet. Leave blank if you don't want your pet shrunk. Example: * PetShrinkSpell=Tiny Companion|gem9 * GoMNuke/GoRMNuke/GoERMNuke/GoDERMNuke=[] * GoMNuke, GoRMNuke, GoERMNuke and GoDERMnuke will only appear if the toon has the AA available upon startup. These settings only require the * ALIAS * of the debuff you want to be \"cast\" on the MA's target when the event fires. No script required. * **SummonFood=spell name,item name,alt name|gem#,item,alt</span>** These entries appear when DoFW is set to TRUE. Use MQ2Cast syntax for spell entry. Example: SummonFood=Summon Food|gem12 **SummonDrink=spell name,item name,alt name|gem#,item,alt</span>** MQ2Cast syntax. Example: SummonDrink=Summon Drink|gem8 Deprecated Entries DoAura =[TRUE,FALSE] (Must have a completed AuraCast entry below) DEPRICATED!! Set up aura as a buff with 'self aura' as the ABTarType. AuraCast =[\\|\\,item,alt>] (Example: Uber Aura|gem3) - DEPRICATED! Set up aura as a buff with 'self aura' as ABTarType. Use MQ2Cast syntax without quotes. PetCast=|gem\\<#>|(for Suspended Minion II)] (PLEASE NOTE: As of 3.499 beta, PetCast is no longer needed. You can now add pet to \"AB\" section by setting ABTarTypeX=petspell (or petcast). Pets won't be cast unless DoBuffs and DoPet are true. Also shouldn't cast if in combat unless \"cbt\" is included in ABTarType. When used with modbuff, Persistent Minion is also used automatically if you have it, and no extra entry needed. Original entry: Spell to cast to create / recall pet. Example: PetCast=Animate Dead|gem8|smii (Mainly MQ2Cast syntax without quotes)) Can also use for charming: [charm \\<NPC type 0=any 1=undead,vampyre 2=animal 3=summoned 4=(specify name type)> ] Example: PetCast=charm 4 4 \"lowland basilisk,a emerald drake\" For Cleric Hammer type pets that you only want to cast / have while in combat, you MUST have DoPet set to False AND have PetCast=|\\,item,alt>) AdvMelee [Melee] \u00b6 OffTank=TRUE|FALSE False - attack the MA target only True - assist MA and then not change targets ACLeash=# The farthest the bot will move from where he is to engage a mob. However if \"TankName\" stays within 20 steps, the bot will exceed this leash. * ACAssistPct=# * Assist when target HP is this or less. Melee characters will engage at this point and caster pets will be sent in. * ACManaPct=# * Stop assisting when Mana drops below this. * Set to 0 for melee only * Set to 101 for non-melee casters * ACAnnounce=channel * Channel to announce in, or leave blank for no announce. Example: * ACAnnounce=/bc Will announce in MQ/EQBC window * ACAnnounce=/g Will announce in group chat * ACMeleeCmd=command * Use to set MQ2Melee commands. Example: * ACMeleeCmd=/melee plugin=1 * ACBefore=script * Special script code to execute before you engage. Example: * *ACBefore=/if ({ACMATarget} && {Spawn[{ACMATarget}].Type.Equal[NPC]} && {Spawn[{ACMATarget}].Distance3D}\\<={ACLeash} && {Me.CombatAbilityReady[Sneak Attack]} && {Me.Invis} && {Me.Sneaking} && {Me.PctEndurance}>40 && !{Me.Moving}) /call mbscript SneakAttack* ACBefore=/if (!{Me.Pet.ID}) /casting ''{PetCast}'' \\<-- cleric pet hammer example ACAfter=script Special script code to execute after you leave combat. Uses same script format as ACBefore. AdvHeal Section [AdvHeal] \u00b6 Please note that for FD class toons and ${Group.Puller} - If they are out of ACLeash range and not FD, they will not be healed (to prevent aggro on group), but only if healer is not in 'combat' combatstate. If you have the newest NetBots from SVN, another check will be done on the NetBots[].CombatState that needs healing. If not in combat they will be healed. For group heal spells, you must set the AHTarCnt to something greater than 1 in order for the spell to evaluate correctly (and be used as a \"group\" heal when more than one member of the group requires healing). For instance, if you have AHTarCnt=3, then at least 3 members of your group will need to be below the HP level that you set in the AHClass line. A possible issue may arise when the cleric is in a loop state where a single heal is being fired \\(AHHealMode\\) - it may take a bit for it to realize the single heal should be stopped and the group heal cast instead. Depending on how you have it configured, the use of AHHealMode can force it to not even check the your group heal spell as it's being told to only check one \\(the single heal\\) . If this is the case (and not the desired result), perhaps use the group heal as the spell to check in AHHealMode. AHCount=# Number of heals you plan to have. AHCheckTime=# How often to check for heals in seconds. AHHealOOBC=TRUE|FALSE Do I heal characters outside of Netbots and EQBC (e.g. folks not running MQ2 or mercenaries.) AHHealOOBC Thinking of an english name for that setting, all that comes up is \"Heal Outside Of BC\". So, in other words, if the setting is FALSE, it won't heal anyone that's not on YOUR EQBC server with the netbots plugin set up correctly, even if they're in your group. That is why I recommend you connect all toons and run modbot on all of them at least once, even if you don't plan to run it as a regular thing for the other toons.. It assures the plugins are set correctly. If AHHealOOBC=TRUE, then modbot will heal group members and pets even if there's no netbots connection. Out of group healing can only be done by the macro if there's a netbots connection, or if the other toon is a master and uses the cast command via /tell. I do recommend AHHealOOBC=TRUE setting, but I still left the default FALSE so people could check their connections before setting TRUE. AHHealMode=#|#|# 0 or 1 (off or on)|Heal #|Timer This will keep the toon in the heal loop after casting to check for additional heals for the duration of . * AHInterruptLevel=# * Lowest interruptable spell. For example, AHHealSpell1 will never interrupt if this is set to 2. * AHClassPriority=class names * Set class healing priority (e.g. if you're currently healing a chanter, you won't interrupt for a monk). * Allowed entires are: enc,wiz,mag,nec,clr,dru,shm,pal,shd,war,bst,rng,ber,rog,brd,mnk (or any combination thereof) * AHAllowDismount=TRUE|FALSE * Designate whether your toon should dismount (or not) to interrupt a spell to cast a heal * TRUE - allow toon to dismount if necessary to interrupt a spell cast in order to fire off a heal. * FALSE - your toon will never dismount to interrupt a spell. * AHGem[x]=source * Designate what the source of the spell is. * Valid entries: gem number, alt, ability, item, script, potionbelt * Note that 'potionbelt' does not require a slot number. * Examples: * AHGem1=3 Cast this spell from gem 3 * AHGem1=alt This spell is an alternative advancement ability * AHSpell[x]=source name * Valid entries: spell name, item name, alternate ability name, ability name, script name * Examples: * AHSpell1=Superior Healing This would be generally be paired with an AHGem1 entry indicating which spell gem to cast Superior Healing from. AHSpell1=Healing Thingy of Uberness This would be generally be paired with an AHGem1 entry indicating that the source of this spell is an item. * AHSpellFoci[x]=setname * Bandolier set name to swap in before casting this heal. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * AHDurMod[x]=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * AHSpellMinMana[x]=# * Minimum mana percentage to have in order to attempt this heal (e.g. 05 \\(for 5%\\) , 25 (for 25%) * AHSpellAlias[x]=spell alias * Alias name for the heal. * Please note that you can NOT have spaces in your alias names. * AHAnnounce[x]=channel * Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. * AHTarCnt[x]=# * Designate how many targets are required to cast this spell. * AHClass[x]=class name(s) * Valid entries: pc pet group hp0 war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec tnt mypet self (or some combination there of). Please see the MQ2NetHeal plugin for full options. Please also note the following combination restrictions: pc \\<-- will include pc's and mercs. Leave pet out to ONLY heal PC's and mercs. pet \\<-- will include pets. Leave pc option out for pet only heals. group \\<-- will exclude everyone that is not in your group hp0 \\<-- set an overall health percentage for any named classes classnames (war, shd, etc.) \\<-- used to declare which classes this heal should apply to. Can also be combined with a health persentage (e.g. bst50). mypet to be used by itself (e.g. set up a seperate heal for your pet) tnt \\<-- Tankname target. Use for lifetap spells ONLY. self \\<-- Only use self if the heal spell is SELF ONLY, or only to be cast on yourself. This setting is exclusive and other targets will not be checked for that spell. * AHPreCondition[x]=TRUE|FALSE|PR * Defaults to TRUE * PR (only to be used with NetBots) If AHPreCondition[x]=PR, then for that particular heal there will be a check on target (over NetBots) for any PR type spell. If target has a PR buff on, then the heal will be skipped. Please note that the PR setting does not currently account for the duration remaining of the PR buff. AHPreConditionX=PR will check for these spell ID's: 9755 (Promised Renewal) 9756 (Promised Renewal Rk. II) 9757 (Promised Renewal Rk. III) 18270 (Promised Recuperation) 18271 (Promised Recuperation Rk. II) 18272 Promised Recuperation Rk. III) AdvDebuff Section [AdvDebuff] \u00b6 ADCount=# Number of debuffs you plan to have. ADMobMax=# This is the array size where the valid mob ID's are stored after found. The loop to find valid mobs uses SpawnCount, then stores the mobs it \"finds\" in the array. Setting this to 20 or 30 should be way more than enough ever. It is best to keep this setting (and therefor the array) relative small for memory purposes (as well as for speed through the debuff loop). If your toons are ignoring NPCs, this number may be set too low. First thing to check!! ADCheckTime=# How often to check for debuffs in seconds. \"It's the forced delay or timer between allowing that section of the macro to execute again.. Set higher for toons you want to have more emphasis somewhere else.. Like a cleric can be 8 for debuffs and 0 for heals, but a shammy you'd want 0 for debuffs. 0 = no forced delay. Speed still varies depending on the size of the loops or how many heals, debuffs, ect are in each section.\" - toomanynames * ADAggroOnly=1|0 * 1 - only add mobs to the mob list if someone in your group or in netbots is the mob's target. Only use this option on bots that cast on targets that are NOT the main assist's target (e.g. chanter mezzing adds). Please note: ADAggroOnly is not terribly reliable at times. If you are having issues with one of your bots auto-aggroing mobs (when they are not the tank), try setting ADAggroOnly=0 and then ADTarType=1 or 11. * ADHold=0|1|1| * 1=on 0=off|Debuff spell #|Time to wait for debuff| * This is used much like the AHHealMode setting, but only for type 12 debuffs. Sets a timer to hold the toon in the debuff loop (no buffs or events) until the debuff is complete. * ADGem[x]=source * Designate what the source of the spell is. * Valid entries: gem number, alt, ability, item, script, potionbelt * Note that 'potionbelt' does not require a slot number. * Examples: * ADGem1=3 Cast this spell from gem 3 * ADGem1=alt This spell is an alternative advancement ability * ADSpell[x]=source name * Valid entries: spell name, item name, alternate ability name, ability name, script name * Examples: * ADSpell1=Ensnare This would be generally be paired with an ADGem1 entry indicating which spell gem to cast Ensnare from. ADSpell1=Bangy Thingy of Uberness This would be generally be paired with an ADGem1 entry indicating that the source of this spell is an item. * ADSpellFoci[x]=setname * Bandolier set name to swap in before casting this spell. Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * ADDurMod[x]=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excess of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * ADSpellAlias[x]=spell alias * Alias name for the spell. Please note that you can NOT have spaces in your alias names. * ADAnnounce[x]=channel * Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. * ADSpellMinMana[x]=# * Minimum mana percentage to have in order to attempt this spell (e.g. 05 \\(for 5%\\) , 25 \\(for 25%) * **ADSpellRecast[x]=\\#** * Number of times to recast this spell for fizzles, interrupts, etc. * **ADSpellCastonResist[x]=spell alias** * Should this spell be resisted, is there another alias to cast before another attempt of this spell. * Please note that if ADSpellCastonResist is defined, ADSpellRecast must be at least 1. * **ADSpellDelay[x]=\\#** * Number of seconds to wait between casts of this spell. * **ADTarCnt[x]=\\#** * Number of targets required to be present to cast this spell. If set to 0, this spell will not be auto-casted\\) * ADTarType[x]=# * Designate one target type to cast this debuff on. * Valid target types: * 0 = All mobs * 1 = MA Target only * 2 = All except MA Target * 10 = All mobs before next spell * 11 = MA target only before next spell * 12 = All but MA target before next spell * Priority Debuffs (10, 11, 12) should be placed first most (prior to non-priorities). Meaning - settings of 10, 11, and 12 need to be in top spells slots (ADGem1, ADGem2, etc) * ADTarBegHP[x]=# * The target must be equal or below this HP%. * ADTarEndHP[x]=# * The target must be equal or above this HP% * ADIfSpellImmune[x]=script name * This is meant to be a pointer to a quick, one line script that is executed when a mob is immune to the spell you have cast. If you need to do something complicated, other scripts can be called from it. 'Param1' is now passed as the immune target's ID. An example where this would be useful is for chanter mez: /bc {TankName} //multiline ; /varset ACMATarget {Param1};/target id {Param1} will make your toon target the immune mob even if he was on another mob at the time. * ADUseHoTT[x]=# * This will cause the macro to /target the mob and check TargetOfTarget before casting and delay # seconds before checking again if mob is skipped. If not a raid or group member, the macro will move on and recheck that mob for that debuff after the time has expired. Note that this will default to casting the debuff anyways if HoTT isn't available. * ADPreCondition[x]=one line script * Whatever statement you add to this line needs to /return TRUE. i.e. - ADPreCondition1=/if ({This} && {That}) /return TRUE. Only a TRUE return will allow the spell to cast, so script carefully, or leave the lines default. Code: ADGem1=2 ADSpell1=Turgur's Insects ADSpellFoci1= ADDurMod1=0 ADSpellAlias1=slow ADAnnounce1=/bc Slowed <<[+y+] %t [+x+]>> with[+g+] %s [+x+] ADSpellMinMana1=10 ADSpellRecast1=2 ADSpellCastonResist1=malos ADSpellDelay1=0 ADTarCnt1=1 ADTarType1=11 ADTarBegHP1=200 ADTarEndHP1=15 ADIfSpellImmune1= ADUseHoTT1=0 ADPreCondition1=TRUE \"Notice the ADTarBegHP1 setting. I have the same spell set with ADTarType2=12 directly after this one to make sure he slows adds. (sometimes he pulls em too..) Everything else - mainly ACAssistPct is set to a lower value. Most around 95 or so. Buffs are a pita because if the debuff sub is called \\(it is called first\\) it won't cast the debuffs if there's any reason not to, then the macro runs through the whole buff loop before getting back to debuffs again.. Setting the ADTarBegHP at least over the level of all other functions at least attempts to keep the slow first. Also.. I find the macro works best if you always set your ACManaPct very low. Usually keep mine around 5 or so for every toon. I should change the default on that, but clearing targets and such is something your toon will do quite often if his mana is under that value.\" - Ptarp on the forums on Wed Mar 09, 2011 7:54 pm. (edited into Wiki by Arblis) AdvBuff Section [AdvBuff] \u00b6 If you want to cast single target buffs after group buffs, place all of your group buffs first. ABCount=# Number of buffs you plan to have. ABMobMax=# Max number of targets to track for buffs (do not include pets) ABCheckTime=# How often to check for buffs in seconds ABGem[x]=source Designate what the source of the spell is. Valid entries: gem number, alt, ability, item, script, potionbelt Note that 'potionbelt' does not require a slot number. Examples: ABGem1=3 Cast this spell from gem 3 ABGem1=alt This spell is an alternative advancement ability ABSpell[x]=source name Valid entries: spell name, item name, alternate ability name, ability name, script name Examples: ABSpell1=Minor Shielding This would be generally be paired with an ABGem1 entry indicating which spell gem to cast Minor Shielding from. ABSpell1=Uber Wand Thingy of Uberness This would be generally be paired with an ABGem1 entry indicating that the source of this spell is an item. * ABSpellFoci[x]=setname * Bandolier set name to swap in before casting this spell. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * ABDurMod[x]=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * ABSpellAlias[x]=spell alias * Enter an \"alias\" for the spell. This is often a short, easier to use name (e.g. the alias for Spirit of the Wolf might be SoW). Please note that you can NOT have spaces in your alias names. ABAnnounce[x]=channel Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example: ABAnnounce1=/bc [+r+]Buffed +x+ \\<\\< +y+ %t +x+ >> with +g+ %s [+x+] ABSpellMinMana[x]=# Minimum mana percentage to have in order to attempt this spell (e.g. 05 \\(for 5%\\) , 25 (for 25%) ABTarCnt[x]=# Designate how many targets are required to cast this spell. If set to 0, this spell will not be auto-casted. This is useful for spells that you want to call via alias to be cast manually. For single cast spells (e.g. Spirit of Eagle), ABTarCnt will most often be set to 1. For group spells (e.g. Flight of Eagles), you might set your ABTarCnt higher so that it only gets cast when there are more than 2 or 3 people in your group. * ABTarType[x]=target type * Valid target types are as follows (please note which entries can be used with others and which are exclusive): * ShortClassName Used for class specific buffs (ie. haste on \"war\"). Valid entries are: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec. Note that any or all of these entries can be used at the same time. self Used for self only spells. grp for Group spells (example needed, according to author self is mutually exclusive, so self grp won't work. grp can also not be the only target, so its safer to just list classes here!) pet used to cast buffs on all pets in the group. mypet used to cast on only your pet. Please note that pet and mypet are mutually exclusive. cbt for spells to be casted during combat (e.g. an entry for Yaulp would be ABTarType1=self cbt). Please note that any NPC within radius that is not on your exclude list will cause 'cbt' buffs to fire. If you want to buff next to NPCs (and don't plan to kill them), use the exclude command. If you later decide to kill whatever mob you've excluded, use the include command to remove it from list. The macro does not check combat state of the tank for buffs. idle used with cbt for spells to be casted when in or out of combat (e.g. if you wanted to keep Yaulp on at all times (in AND out of combat), your entry would be ABTarType1=self cbt idle). Please note that idle is only used in ABTarType when cbt is also used. aura used to cast an aura - must be used with self (e.g. ABTarType1=self aura) Note that Bard auras *REQUIRE* ABSpellAlias to be set up to cast, and modbuff will use CastCall to actually cast the aura. * tank used to cast only on the designated group tank. Tank designation is keyed from either the TankName variable in the setting section (see above) or by setting a toon to Main Tank (Group.Maintank) using the Roles function. petspell used to set up an entry to create/cast a pet. Example: ''ABGem3=7 ABSpell3=Shambling Minion ABSpellFoci3= ABDurMod3=0 ABSpellAlias3=pet ABAnnounce3=/bc Cooking up a pet ABSpellMinMana3=10 ABTarCnt3=1 ABTarType3= petspell ABRecast3=FALSE ABSpellIcon3= ABPreCondition3=TRUE'' Default entry: *ABTarTypeX=tank war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self mypet grp pet cbt idle* Please note that the default entry includes settings that do not work together. Specifically, tank , self and mypet are meant to be used by themselves. If you want to cast the same buff on yourself, your pet and the tank, create them as seperate buff entries. * ABRecast[x]=TRUE|FALSE * True is only really needed for single targets that are NOT in the group and/or on NetBots. Set ABRecast TRUE when you want the macro to use the spell worn off messages from EQ for the macro to know who to cast the buff on. This allows you to rebuff toons that are lower level for your normal buff set, or not in EQBC and not in group. For the most part this shouldn't be needed for rebuffing if all of your toons are NetBots members. The macro actually checks the other toons in netbots and knows what their buffs are, whether the one they're trying to cast will stack, and the duration of the buff if the toon still has it on. * ABSpellIcon[x]=icon name * Use when the spell icon has a different name than the actual spell (e.g. the spell Unity of Spirits has a spell icon of Transcendent Foresight . In fact, you could use any one of the four spell icons/names that Unity creates). Please note that if the name you have in ABSpellIcon doesn't evaluate to a spell name, the buff will be skipped. In other words, leave it blank if your spell doesn't need it. AdvEvent Section [AdvEvent] \u00b6 AECount=# Number of events you plan to have. AECheckTime=# How often to check for events in seconds AECustomX=watch text Custom emote-triggered events driven by scripts. Default is three blank entries (AECustom1=, AECustom2=, AECustom3=) Please note that an earlier version of this variable populated AECustom1, AECustom2 and AECustom3 with random numbers in the ini file. The newwer version of AECustom now adds the three AECustomX entries but sets them as blank.) Each AECustomX entry, if defined, must have a corresponding script entry. For example, by defining AECustom1=greater bloodmoon healing in the AdvEvent section, you would need a corresponding script defined that might read something like: [Script-AECustomEvent1] Commands=1 C1=/bc cast stun AEGem[x]=source Designate what the source of the spell is. Valid entries: gem number, alt, ability, item, script, potionbelt Note that 'potionbelt' does not require a slot number. Examples: AEGem1=3 Cast this spell from gem 3 AEGem1=alt This spell is an alternative advancement ability AESpell[x]=source name Valid entries: spell name, item name, alternate ability name, ability name, script name Examples: AESpell1=Minor Shielding This would be generally be paired with an ABGem1 entry indicating which spell gem to cast Minor Shielding from. AESpell1=Uber Wand Thingy of Uberness This would be generally be paired with an AEGem1 entry indicating that the source of this spell is an item. * AESpellFoci[x]=setname * Bandolier set name to swap in before casting this spell. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * AEDurMod[x]=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * AEDelay[x]=# * How many seconds do I wait between casts of this spell. * AEEventMinMana[x]=# * My mana percentage must be at least this to complete this event. * AEEventMinHP[x]=# * My HP percentage must be at least this to complete this event. * AEMinMana[x]=# * The event target's mana percentage must be above this to complete this event. * AEMaxMana[x]=# * The event target's mana percentage must be below this to complete this event. * AEMinHP[x]=# * The event target's HP percentage must be above this to complete this event. * AEMaxHP[x]=# * The event target's HP percentage must be below this to complete this event. * AETarType[x]=target type * Valid entries: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self tnt (Less is better!) * AESpellAlias[x]=event alias * Enter an \"alias\" for the event. This is often a short, easier to use name (e.g. the alias for Spirit of the Wolf might be SoW). Please note that you can NOT have spaces in your alias names. AEAnnounce[x]=channel Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example: ABAnnounce1=/bc [+r+]Buffed +x+ \\<\\< +y+ %t +x+ >> with +g+ %s [+x+] AETarCnt[x]=1|0 Settings are *only* either 1 (on) or 0 (off). Examples \u00b6 Shaman cannibalization example. In this case, settings like AEEventMinMana and AEMinMana both refer to the shaman as he is both the event triggerer as well as the target of the event: AEGem1=5 AESpell1=Cannibalize III AESpellFoci1= AEDurMod1=0 AEDelay1=0 AEEventMinMana1=0 AEEventMinHP1=30 AEMinMana1=0 AEMaxMana1=90 AEMinHP1=50 AEMaxHP1=100 AETarType1=self AESpellAlias1=canni AEAnnounce1= Necromancer mana feed example (where the necro is feeding mana to another character). In this case, AEEventMinMana refers to the necro's mana and AEMinMana refer to the mana of the target (as defined by AETarType): AEGem2=4 AESpell2=Rapacious Subvention AESpellFoci2= AEDurMod2=0 AEDelay2=0 AEEventMinMana2=50 AEEventMinHP2=50 AEMinMana2=20 AEMaxMana2=45 AEMinHP2=0 AEMaxHP2=100 AETarType2=clr enc AESpellAlias2=manafeed AEAnnounce2=/bc AdvCure Section [AdvCure] \u00b6 AQCount=# Number of cures you plan to have. AQCheckTime=# How often to check for cures in seconds AQGem[x]=source Designate what the source of the spell is. Valid entries: gem number, alt, ability, item, script, potionbelt Note that 'potionbelt' does not require a slot number. Examples: AQGem1=3 Cast this spell from gem 3 AQGem1=alt This spell is an alternative advancement ability AQSpell[x]=source name Valid entries: spell name, item name, alternate ability name, ability name, script name Examples: AQSpell1=Minor Shielding This would be generally be paired with an ABGem1 entry indicating which spell gem to cast Minor Shielding from. AQSpell1=Uber Wand Thingy of Uberness This would be generally be paired with an AQGem1 entry indicating that the source of this spell is an item. * AQSpellFoci[x]=setname * Bandolier set name to swap in before casting this spell. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets (e.g. -bandolier|) * AQSpellCureType[x]=cure type * Valid entries (type of cure needed): Cursed, Diseased, Poisoned, EnduDrain, LifeDrain, ManaDrain, Blinded, CastingLevel, Charmed, Feared, Healing, Mesmerized, Resistance, Rooted, Silenced, Slowed, Snared, SpellCost, SpellSlowed, SpellDamage, Trigger, All Set the cure type to the best match for the spell, but keep them in order of best cure first. The first cure in your .ini matching the cure type needed (or if you set to \"All\") will be the first attempted spell. Cures *can* always be interrupted by any heal spell, unless you're using a cure spell that's already listed in your heal section (e.g. Cleric's \"Word of XXX\" line of spells may or may not interrupt for heals depending on where they are in your heal section). Modcure.inc will cast once per loop and then return to the main loop, so setting group cures (like Radiant Cure) toward the top would be best Be specific on cure types to avoid recasting the same cure over and over if it won't cure you. AQSpellMinMana[x]=# Minimum mana to have in order to attempt this cure. AQSpellRecast[x]=# Number of times to recast this spell for fizzles, interrupts, etc. AQTarCnt[x]=# How many targets should be present to cast this spell, if set to 0, this spell will not be auto-casted. AQTarType[x]=target type Valid target types are as follows (please note which entries can be used with others and which are exclusive): ShortClassName Used for class specific buffs (ie. haste on \"war\"). Valid entries are: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec. Note that any or all of these entries can be used at the same time. self Used for self only spells. grp for Group spells (e.g. ABTarType1=self grp) pet used to cast buffs on all pets in the group. mypet used to cast on only your pet. Please note that pet and mypet are mutually exclusive. cbt for spells to be casted during combat (e.g. an entry for Yaulp would be ABTarType1=self cbt). Please note that any NPC within radius that is not on your exclude list will cause 'cbt' buffs to fire. If you want to buff next to NPCs (and don't plan to kill them), use the exclude command. If you later decide to kill whatever mob you've excluded, use the include command to remove it from list. The macro does not check combat state of the tank for buffs. idle used with cbt for spells to be casted when in or out of combat (e.g. if you wanted to keep Yaulp on at all times (in AND out of combat), your entry would be ABTarType1=self cbt idle). Please note that idle is only used in ABTarType when cbt is also used. aura used to cast an aura - must be used with self (e.g. ABTarType1=self aura) Note that Bard auras *REQUIRE* ABSpellAlias to be set up to cast, and modbuff will use CastCall to actually cast the aura. * tank used to cast only on the designated group tank. Tank designation is keyed from either the TankName variable in the setting section (see above) or by setting a toon to Main Tank (Group.Maintank) using the Roles function. * Default entry: *ABTarTypeX=tank war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self mypet grp pet cbt idle* Please note that the default entry includes settings that do not work together. Specifically, tank , self and mypet are meant to be used by themselves. If you want to cast the same buff on yourself, your pet and the tank, create them as seperate buff entries. * AQSpellAlias[x]=spell alias * Enter an \"alias\" for the spell. This is often a short, easier to use name (e.g. the alias for Radiant Cure might be RC). Please note that you can NOT have spaces in your alias names. AQAnnounce[x]=channel Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example: ABAnnounce1=/bc [+r+]Cured +x+ \\<\\< +y+ %t +x+ >> with +g+ %s [+x+] '''AQSpellCntr[x]= Currently not used for anything, so don't worry about it :) AdvPull Section [AdvPull] \u00b6 This section is under development. APCheckTime=# Time (in seconds) to wait in between AdvPull executions. Default is 0. APRadius=# The distance around your target to check for more mobs as defined by APMobMax (basically, a check for adds). Default is 40. * APMobMax=# * The max amount of mobs (target + adds) you will allow before pulling. Default is 1. If there are less than APMobMax mobs within APRadius of your target, it will pull the mob. * APScript= Scriptname * Name of script to define how you want to tag the mob (throw stone, ranged, item clicky, spell, etc) and executes when you have a mob targeted to pull. The script name must have at least 3 characters. Default is empty. **YOU MUST CREATE A SCRIPT TO TAG THE MOB!** Modbot Scripts APPath= Pathname The name of the path to run for pulling/movement, as defined in your MBWayPnt.ini (See ModMove for more details on creating a path). The path name must be at least 3 characters. Default is empty. * APRetPath= ReturnPathname * The name of the path to use to move back to camp. The path must be defined in your MBWayPnt.ini file. The path name must be at least 3 characters. Default is empty. Mostly used for when the path back to camp is a different one than used to pull mobs (ie, you go through a one-way wall to pull or intentionally fall off a ledge and have to run the long way back). If you want to return the same way you came, you can just use WPLoop=TRUE in MBWayPnt.ini instead of having to set up a second path. * APBefore= * Command or series of commands (with multiline) to execute before the rest of AdvPull section. Must be at least 3 characters. Default is empty. * APAfter= * Command or series of commands (with multiline) to execute after AdvPull has finished. Default is empty. * APAnnounce= * A way to announce what you have pulled. Default is empty. * Note: This is not just a chat channel, but a place to put a full incoming message, ie: * APAnnounce=/gsay Incoming -[ %t ]- * APRetries=1 * Number of times to attempt to pull a mob in case it fails the first try (line of site, etc). This will strafe left and right on subsequent attempts. Default is 1. MBCommon.inc Settings \u00b6 The location and name of MBCommon.inc can now be set by changing line 38 in Modbot.mac. /declare MBCommon string outer MBCommon.ini It defaults to the ./macros folder, but the line can be changed to any path. Settings Section \u00b6 LoadAlias [1,0] This is an on / off setting to load the \"/alias /mb /echo MB-\" alias for commands. It is set to 0 after first run when alias should be loaded, but you can set to 1 to add it back to your Macroquest.ini file if it gets deleted. IniLocation Path to your MB_.ini files. Must end in / or if changed from default. LootIni [Loot.ini] This setting can be used to change the location of your Loot.ini file as well as the name. MBWayPntLocation [MBWayPnt.ini] This setting can be used to change the location of your MBWayPnt.ini file as well as the name of the file. CheckTargetDebuffs [TRUE|FALSE] This setting toggles on/off the ${Target.Buff} checking for debuffs (essentially this checks if the spell \"Stacks\" before casting.) Each debuff listed in MBCommon.ini now has an 'OverwritesID=' entry. This entry is meant for a list of debuffs that the spell doesn't 'Stack' with, but you want the debuff to overwrite. Spell Section \u00b6 Zone.ShortName - List of mobs excluded for that zone in a pipe -\"|\" delimited string. This setting is not present for any zones which you have nothing excluded. Immune lists for each spell are saved in their own section along with a MaxLevel=[100] setting. Change to the max level of the spell. As the macro finds mobs that are immune to the spell, the zone shortname is added to the entry as a variable along with the mob names in pipe delimited format. Mobs that are marked immune to debuffs can be marked in MBCommon.ini with an asterisk to allow for some names that have only some immune, and some not. For example, Dreadspire has some body types with same names where some are immune to mez, and some not (e.g. an aid to the Seneschal - some body types with that mob name are immune to befuddle, and others aren't). By adding an asterisk to the end of the name in the exclude section, the macro will repeat attempts to mez, etc. that mob type (rather than just marking them immune and not casting at all): _DreadspireImmune=|an aid to the Seneschal_|* The ADIfSpellImmune script, if defined, will only run if the mob is found to be immune after cast, but the astrik will not be replaced, and the spell will only cast once allowing the spell to still attempt on the next mob it hasn't been cast on. Overwrites= list of debuffs that the spell doesn't 'Stack' with, but you want the debuff to overwrite. This does require user intervention, and there's no way to set it auto-set them. MaxLevel= maximum level of mob that can be affected by debuff An entry in the spell section might look something like this: [Mystify] MaxLevel=83 thalassius_bImmune=|a sea mephit defender||a sea mephit evoker| OverwritesID=|14569|14570|14530| ModBot Class INI Examples \u00b6 ModBot`` ``Class`` ``INI`` ``Examples`` ``linked`` ``to`` ``another`` ``page ModBot`` ``v4`` ``Class`` ``INI`` ``Examples`` ``linked`` ``to`` ``another`` ``page Scripts and ModBot Variable Usage \u00b6 ModBot allows VERY customizable sripts to such an extent you can actually program your own sub-procedures within your INI file. You can harness ANY global variable within ModBot to use with the scripts. Scripts match MQ2 code to every extent, below are several examples of scripts and common variables one would use to create complex scripts Understanding scripts, syntax, example, how to \u00b6 Scripts General Info Scripts can be difficult and there are some MQ2 commands that give scripts trouble. Keep this in mind and prepare to post you script code should you have problems. No script can take more then 15 seconds to complete, however this can be modified in the code directly in the Sub MBScript or even changed in the script you create ({Timer} is the var) Scripts are executed from top to bottom and you are allowed to use a label :Top (e.g. /goto :Top), in your script. The /goto :Top option allows for complex loops to take place directly from code in the INI file If you use ANY INI generated ModBot global string variables that have spaces in your custom scripts they MUST be encapsulated by 2 apostrophies when used in the script, see PetCast example below. * Reserved Characters :*These characters can not be used in scripts ::*$ \" :*'' Two apostrophies are for passing variables with spaces in script code. Use them to replace quotes. Syntax [Script-] Commands= C1= . Cn= What does a script look like in your INI file: [Script-HelloWorld] Commands=2 C1=/echo Hello World C2=/if ({Timer}>50) /varset Timer 5s C3=/goto :Top In the example above it will echo to the MQ2ChatWindow \"Hello World\" for 5s. Notice how I do NOT use a $ to reference the \"Timer\" variable. How To use or launch a script :*/bc bob script HelloWorld :*You can set XXGem1=script and XXSpell=HelloWorld as a spell name for any of the spells you've configured in ModBot, and it will be triggered when that event, heal, etc would take place. Please see the below examples for complex script code. Common Variables (You can use ANY mq2 variable without the $, you can even CREATE new global vars and use them, all from the INI file via Scripts) {ACState} = If greater than 0, ModBot thinks you are in combat {ACMATarget} = The target of the main assist {CampStatus} = If greater than 0, means I've been given a /bc makecamp command {FollowFlag} = If greater than 0, means I should be following something {TankName} = The acting main assist {Me}, {Spawn}, etc = See MQ2 Manual Examples This example is triggered from an event OR a heal and it will remove the necro \"Lich\" spell: [AdvHeal] AHGem3=Script AHSpell3=DropLich AHSpellFoci3= AHDurMod3=0 AHSpellAlias3=droplich AHSpellMinMana3=0 AHAnnounce3=/bc AHTarCnt3=1 AHClass3=pc hp40 nec [AdvEvent] AEGem3=Script AESpell3=DropLich AESpellFoci3= AEDurMod3=0 AEDelay3=0 AEEventMinMana3=100 AEEventMinHP3=40 AEMinMana3=20 AEMaxMana3=100 AEMinHP3=0 AEMaxHP3=90 AETarType3=tnt AESpellAlias3= AEAnnounce3=/bc [Script-DropLich] Commands=1 C1=/if ({Me.Buff[Lich].ID}) /notify BuffWindow Buff{Math.Calc[{Me.Buff[Lich].ID}-1].Int} leftmouseup This example is launched via the ACBefore command from the [Melee] section, I've got Sneak Attack bound to hotkey 6. What the bot will do is to trigger Sneak Attack, attempt proper position, backstab the mob, then revert to \"normal\" [Script-SneakAttack] Commands=10 C1=/if ({Melee.Enable}) /melee plugin=0 C2=/if ({Me.CombatAbilityReady[Sneak Attack]}) /keypress 6 C3=/if (!{Me.Moving} && !{Stick.MoveBehind} && {Stick.Distance}!={Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}+5]}) /stick {Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}+5]} behind id {ACMATarget} C4=/if ({Target.ID}!={ACMATarget}) /multiline ; /target id {ACMATarget};/delay 5 C5=/if ({Melee.BackAngle}>60 || {Melee.BackAngle}<-60) /goto :Top C6=/if ({Target.Distance3D}>={Spawn[{ACMATarget}].MaxRangeTo}) /stick {Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}-5]} hold behind id {ACMATarget} C7=/if ({Target.Distance3D}>={Spawn[{ACMATarget}].MaxRangeTo}-3) /goto :Top C8=/delay 5 C9=/if ({Me.AbilityReady[Backstab]}) /doability backstab C10=/melee plugin=1 This example will confirm you are hidden and sneaking when I'm at \"camp\" and not sneaking when I'm in follow mode. It will also re-engage if MQ2Melee lost \"stick\" because of too much mob movement [Script-HideSneak] Commands=4 C1=/if ({FollowFlag} && {Me.Sneaking}) /multiline ; /doability sneak;/return C2=/if (!{FollowFlag} && !{ACState} && {Select[{MakeCamp},on]} && {Me.AbilityReady[Hide]} && !{Me.Moving} && !{Melee.Combat}) /multiline ; /doability Hide;/delay 5 C3=/if (!{FollowFlag} && !{ACState} && {Select[{MakeCamp},on]} && {Me.AbilityReady[Sneak]} && !{Me.AbilityReady[Hide]} && !{Me.Moving} && !{Melee.Combat}) /multiline ; /doability Sneak;/delay 5 C4=/if ({ACState} && {ACMATarget} && {Target.ID} && {Me.AbilityReady[Backstab]}) /keypress q Example of createing a new global var and an example of using it [Script-EventsOff] Commands=2 C1=/if (!{Defined[CheckSlow]}) /declare CheckSlow int outer 1 C2=/if ({DoEvents}) /multiline ; /varset DoEvents FALSE;/varset CheckSlow 1 [Script-EventsOn] Commands=2 C1=/if (!{Defined[CheckSlow]}) /declare CheckSlow int outer 3 C1=/if (!{DoEvents}) /multiline ; /varset DoEvents TRUE;/varcalc CheckSlow {CheckSlow}+1 [Script-IsSlowed] Commands=3 C1=/if (!{Defined[CheckSlow]}) /multiline ; /varset DoEvents FALSE;/return C2=/if ({CheckSlow}<=4) /varset DoEvents FALSE C3=/if ({CheckSlow}>4) /varset DoEvents TRUE;/varset CheckSlow 1 Example of using a ModBot global string. This will create a new pet, say when your existing pet is about to die :*Please note in the INI snippets below that the INI generated global string PetCast has a space so to pass this properly in the script, you must encapsulated in quotes, script code uses apostrophies in place of quotes. [Settings] PetCast=Invoke Death|gem1 [Script-NewPet] Commands=4 C1=/multiline ; /casting ''{PetCast}'' -maxtries|5;/delay 2s C2=/if ({Cast.Timing}>600) /goto :Top C3=/multiline ; /if ({Me.Pet.ID}) /pet go away;/delay 2s !{Me.Casting.ID} C4=/if (!{Me.Pet.ID}) /goto :Top Example of using PetCast for a cleric hammer, to be called from a ACBefore command [Settings] DoPet=FALSE PetCast=Unswerving hammer of awesomeness|gem1 [Melee] ACBefore=/if (!{Me.Pet.ID} && {ACMATarget} && {Spawn[{ACMATarget}].Type.Equal[NPC]} && {Spawn[{ACMATarget}].Distance3D}<={ACLeash}) /call MBScript SumHam [Script-SumHam] Commands=2 C1=/if ({Target.ID}!={ACMATarget}) /multiline ; /target id {ACMATarget};/delay 5 C2=/if (!{Me.Pet.ID}) /multiline ; /casting ''{PetCast}'' -maxtries|2;/delay 3s Example of a CH script to be run from a non cleric .ini (warrior) I figure I might as well be posting some of the script versions of other macros that I've been seeing around, but written my own thing so I could just keep modbot running. Modbot script version of CH chain that seems to work, though might have problems I haven't noticed.... I use this with a hotkey from my tank -```\"/mb script chain 50\" (yes it's in MB\\_tank.ini - NOT the cleric.ini.. ) It finds all clerics in netbots, then runs through the list telling each to cast CH after the delay you specify. This script does require the clerics to all be running modbot with an alias of CH for complete heal spell, `and connection to the same EQBCS server. `Commands=13` `C1=/multiline ; /declare clrlist string local;/declare x int local 1;/declare StopLoop bool local FALSE` `C2=/if ({Spawn[{NetBots.Client.Arg[{x}]}].Class.ShortName.Equal[clr]}) /varset clrlist {clrlist} {NetBots.Client.Arg[{x}]}` `C3=/if ({x} < {NetBots.Counts}) /multiline ; /varset a 1;/varcalc x {x}+1` `C4=/echo Clerics: {clrlist} casting {Math.Calc[{Param1}/10]}s apart` `C5=/varset x 0` `C6=/varset Timer 100` `C7=/varcalc x {x}+1` `C8=/if ((!{Spawn[{clrlist.Arg[{x}]}].ID} || {NetBots[{clrlist.Arg[{x}]}].PctMana} < 3) && {x} <= {clrlist.Count[ ]}) /varset a 5` `C9=/if ((!{Spawn[{clrlist.Arg[{x}]}].ID} || {NetBots[{clrlist.Arg[{x}]}].PctMana} < 3) && {x} > {clrlist.Count[ ]}) /varset a 4` `C10=/bc {clrlist.Arg[{x}]} cast ch` `C11=/delay {Param1}` `C12=/if ({x}>{clrlist.Count[ ]}) /varset a 4` `C13=/if (!{StopLoop}) /varset a 5` ````` Posted By Ptarp Tue Apr 12, 2011 1:01 am. Moved to Wiki by Arblis\\` ## Script Examples [```Script`` ``examples`` ``linked`` ``to`` ``another`` ``page```](https://macroquest.org/wiki/index.php/Script_Examples) ## Related Include Files Information and Examples [```Related`` ``Include`` ``files`` ``(modloot,`` ``AAPurchase,`` ``modmove,`` ``etc.)`` ``information`` ``and`` ``INI`` ``examples`` ``linked`` ``to`` ``another`` ``page```](https://macroquest.org/wiki/index.php/Related_Include_Files) ## Tips, Tricks and Troubleshooting Here you will find a collection of little gems pulled from the ModBot thread. At some point, this may morph in to a handy little troubleshooting flowchart, but for now it will serve as kind of a tidbit catchall for things that would otherwise get lost in the hundreds of thread pages... Please note- when you are posting on the forum for help (after reading this wiki of course!\\) include the MQ2 version, winEQ version and the EQ install type \\(Titanium / sod / UF) `Although covered previously on the Wiki quite a few times - If you are having trouble with mobs keeping you from doing non combat things (buff, loot etc) try using the following:` `exclude <mob name,save>` ````` \"What I do.. (while targeted on the mob you want to ignore)```On my tank I have a hotkey. I target the mob to exclude and press it.`` `First line is /bcaa //mb exclude ${Target.CleanName}` `second line - /bcaa //mb exclude save` ````` /echo ${ADMobCount} (use this after your exclude to see if the char in question has any mobs on the exclude list. Can be used with /bcaa to see all of your toons mobcounts)```If you fight near non-combatant mobs, always use the exclude command so the macro doesn't \"see\" them, and set your Radius= in your toon's .ini file to a minimum.`` `I normally keep mine at around 60 to 80 depending on what I'm doing. Remember you can \"/varset Radius 50\" or something in game with the mac running to find a happy medium.\" -Ptap Mon Sep 20, 2010 1:18 pm` `It also sounds like an exclude hotkey, and pause hotkey would be your best friends.. Here's a few of the hotkeys I use.` `_EQTitan.ini in your everquest folder.` ````` Code:```[Socials]`` `Page10Button1Name=TankName` `Page10Button1Color=0` `Page10Button1Line1=/bcaa //varset TankName ${Me.Name}` `Page10Button7Name=Masters` `Page10Button7Color=0` `Page10Button7Line1=/bcaa //varset MasterList ${NetBots.Client}` `Page10Button5Name=pause` `Page10Button5Color=0` `Page10Button5Line1=/bcaa //mb mbpause on` `Page10Button11Name=unpause` `Page10Button11Color=0` `Page10Button11Line1=/bcaa //mb mbpause off` `Page10Button6Name=follow` `Page10Button6Color=0` `Page10Button6Line1=/bca follow` `Page10Button12Name=stop` `Page10Button12Color=0` `Page10Button12Line1=/bcaa //mb stop` `Page10Button10Name=letsroll` `Page10Button10Color=0` `Page10Button10Line1=/bcaa //mb letsroll` `Page2Button1Name=corpse` `Page2Button1Color=0` `Page2Button1Line1=/corpse` `Page2Button6Name=sellitem` `Page2Button6Color=0` `Page2Button6Line1=/ini loot.ini ${Cursor.Name.Left[1]} \"${Cursor.Name}\" Sell` `Page8Button1Name=include` `Page8Button1Color=0` `Page8Button1Line1=/bcaa //mb include ${Target.CleanName}` `Page8Button1Line2=/pause 5` `Page8Button1Line3=/bcaa //mb exclude save` `Page8Button7Name=exclude` `Page8Button7Color=0` `Page8Button7Line1=/bcaa //mb exclude ${Target.CleanName}` `Page8Button7Line2=/pause 5` `Page8Button7Line3=/bcaa //mb exclude save` ````` I normally just keep my keys on page 10 and click from there, but as you can see there's include and exclude keys on pg 8 and another on pg2 I use for setting items to \"sell\" in my loot.ini file. The /bcaa stuff might not work for some depending on plugin versions, so that cn be replaced with a /bca and /mb on a second line. I find it very handy to have some keys I can press quickly, and always either pause all my toons or exclude npcs before I go into areas that I don't want something attacked. Having trouble with your background session toons not moving properly? You might try this: WinEQ=on```to the [Defaults] section of your mq2moveutils.ini. TrueHeading=off might help also in the same section, though I'm not sure if that's needed.` Do your toons wander where they are not supposed to? \u00b6 Thanks to Toomanynames for this tidbit: Those who have toon wandering issues or whatnot - when you say \"radius\", what radius do you mean, modbot, melee, makecamp? There are actually three things that work together to make certain that your bots fight and return to a certain area - MQ2MoveUtils, MQ2Melee and the MB_charname.ini file (from ModBot). /makecamp x x x This is a MQ2MoveUtils setting that needs to be properly configured. For example: /makecamp radius x leash=on (or something like that) Please see the MQ2MoveUtils (PMS version) [ http://www.macroquest.org/phpBB3/viewtopic.php?f=31&t=15909 thread ] and MQ2MoveUtils:v11 for more detailed information. * /melee x x x * This is an MQ2Melee setting. Those ranges and settings come into play and must be set accordingly to work WITH modbot Please see the MQ2Melee [ http://www.macroquest.org/phpBB3/viewtopic.php?f=50&t=17045 thread ] for more detailed information. * Modbot INI * Radius = the max the toon will \"See\" thiings * ACLeash = the max a toon will engage things If you don't properly configure MQ2MoveUtils, MQ2Melee and ModBot and confirm those settings are within or compatible with ModBot \"ranges\" then you'll have issues.","title":"ModBot"},{"location":"macros/gallery/modbot/#modbot","text":"","title":"ModBot"},{"location":"macros/gallery/modbot/#modbot-a-universal-bot-macro","text":"Caster Melee Shrouds & MM's Mez, Charm, Heal, Melee, etc All classes supported Now supports mixed groups of MQ2 and Non-MQ2 users/players ModBot is under constant improvement effort, open to suggestions / additions / adjustments, etc ModBot_v3.x Source General Note on Wiki Entries - Release ZIP packages vs. SVN Updates - While the majority of entries in the Wiki apply to ModBot in general, there are always some entries that apply to changes, additional functionality, new commands, etc. that exist only in the \"beta\" files from the SVN repository. Please keep this note in the back of your mind as you work with the Wiki - if you come across a command, etc. that will just not seem to work for you (and you have already thoroughly researched it, checked syntax, re-checked syntax, etc.), please take a moment to check your version of the module that it applies to - you may need to update.","title":"ModBot - A Universal Bot Macro"},{"location":"macros/gallery/modbot/#using-the-svn-repository","text":"For those of you that would like to use the beta files off of the SVN repository, you have two options - use your browser to grab files or use a tool like TortoiseSVN to automate the process a bit. Using the browser is pretty self-explanatory, but TortoiseSVN requires a bit of set up. This process covers what is needed for the Windows version: Links to the browser access and to SVN can be found at the bottom of this post.. http://www.macroquest.org/phpBB3/viewtopic.php?f=49&t=15313 Download and install [ http://tortoisesvn.net/downloads.html TortoiseSVN ]. Create a folder on your system where you want to store the downloaded ModBot files. Right click on your newly created folder and select SVN Checkout (right above the TortoiseSVN entry). In the menu that comes up, input the URL of repository and then click OK. Once you've clicked OK, the folder will populate with everything on SVN. Any time you want to update the folder to newest revision, simply right click on the folder and select SVN Update from the Tortoise menu.","title":"Using the SVN Repository"},{"location":"macros/gallery/modbot/#how-to","text":"To use ModBot Extract and place all included files from zip (all .mac and .inc files) into your MQ2 macro directory. From inside EQ, type /macro modbot (e.g. /macro modbot OR /macro modbot raidmode). This will build, if it doesn't exist, your MB_.ini file. Optional entries will make a MB__.ini. Being shrouded on startup without using an option will use your race and class for the creation of an MB__.ini file. From inside EQ, end the macro by typing /endmac Tab out of EQ, locate your new MB_.ini file in your macro directory, and open it. You can use the editor of your choice, but Notepad will work just fine. For every component of the macro you want to use, increase the respective \"count\", if you want two heals, set AHCount=2, if you want 2 debuffs, set ADCount=2, etc. After you have set your counts, save and close the INI file. Tab back over into EQ and restart the macro (/macro modbot). This will now populate your INI file based on the count entries that you made in the previous step End the macro again by typing /endmac Open the INI file once more and \"tweak\" the newly created entries to fit your needs. When you are done, save and close the INI file. Tab back over to EQ and restart the macro. Your bot should now be just that, a BOT and will listen to your every command (assuming you are the master). For examples of complete class ModBot INI files, please go to the example INI page . Please Note!! One thing to keep in mind throughout the configuration of the ModBot INI file: keep your most critical and most used spells, activities, etc., first in their respective INI sections. You don't want your mez spell as Debuff number 20, you don't want slow as debuff 10, you don't want a CBT based buff as buff 23, and you don't want CH as heal 1 (you want your most desperate heal as heal 1), etc. Configure your heals, buffs, debuffs, etc. in a highest priority first order.","title":"How To"},{"location":"macros/gallery/modbot/#reference-to-understanding-the-modbot-wiki","text":"- Replace this with the respective descriptor Example 1 -_is luclin_bobby Example 2 -is bobby (text) - These are \"comments\" and should be removed when saving the respective file Example 1 - Send=1 (If set to 1 it will send netbots information over the network) This text: *``\\(If`````set to 1 it will send netbots information over the network)``\\*`should NOT appear in the INI file` ````` [text\\] - This is to show different options or series of options Example 1 - /bc cast[, %t, grp,, etc]``","title":"Reference to Understanding the ModBot WiKi"},{"location":"macros/gallery/modbot/#plugin-requirements-examples","text":"I suggest you have a good understanding of how to configure each of these plugins. Any misconfiguration can have an adverse affect on the performance of ModBot MQ2EQBC & EQBCS (/cheer OmniCtrl and ascii38 for this plugin) 2/15/14 - EQBCS Wiki (with current code maintained by PMS) MQ2Cast (/cheer A_Enchanter_00 for this plugin) * ModBot will create a saved spell set using MQ2cast called ModBot2 and this information is stored in the MQ2Cast.INI file * 2/15/14 - MQ2Cast 10.x (does not require MQ2BagWindows) can be found here . MQ2NetBots (/cheer S0rcier for this plugin) Please use this copy for now. http://tools.assembla.com/kroak/export/474/plugs/MQ2NetBots.cpp The latest versions posted in the MQ2Netbots thread are stripped down copies that didn't address the real reason for the plugin locking up. The settings are located in _.ini in your MQ2 directory) /netbots on grab=on send=on MQ2Melee (/cheer S0rcier for this plugin) * The settings are located in _.ini in your MQ2 directory) /melee plugin=1 MQ2Bandolier (/cheer wassup for this plugin) If you plan to use item swapping and spell foci items, you may need to configure \"sets\" 2/15/14 - MQ2Exchange 3.00 and MQ2Bandolier 3.00 (no BagWindow) from Woobs can be found here . You may still need to use MQ2BagWindow and Moveitem.h to get MQ2Melee to compile. MQ2MoveUtils (/cheer outlander for this plugin) 2/16/14 Current version maintained by PMS can be found here . MQ2Exchange (/cheer wassup for this plugin) 2/15/14 - MQ2Exchange 3.00 and MQ2Bandolier 3.00 (no BagWindow) from Woobs can be found here . You may still need to use MQ2BagWindow and Moveitem.h to get MQ2Melee to compile. MQ2Twist (For Bards. /cheer Cr4zyb4rd and others for this plugin) (May also want to look at pages later in the thread.) 2/15/14 - Current MQ2Twist Code from gse7en (use this or the one a few posts down from dewey2461)","title":"Plugin Requirements &amp; Examples"},{"location":"macros/gallery/modbot/#deprecated-plugins-no-longer-used-with-modbot","text":"MQ2NetHeal (/cheer S0rcier for this plugin) (Elsewhere in the fourms it is frequently suggested to not use this plugin: /plugin mq2netheal unload then /plugin mq2netbots) The settings are located in _.ini in your MQ2 directory) /netheal on grab=on send=on /netcure on Note, the mq2netheal plugin is deprecated, and no longer needed for current release of modbot. It will, however continue to function the same with or without the plugin.. For heal related help, you must specify on the forums if you're using it.","title":"Deprecated Plugins (no longer used with ModBot)"},{"location":"macros/gallery/modbot/#plugin-ini-examples","text":"Example _.INI for MQ2NetBots, MQ2NetHeal, MQ2Melee: [MQ2NetBots] Stat=1 Grab=1 Send=1 [MQ2NetHeal] Stat=1 Grab=1 Send=1 [MQ2NetCure] Watch=1 [MQ2Melee] backstab=50 disarm=1 enrage=1 evade=1 facing=1 hide=1 infuriate=1 melee=200 meleepri= meleesec= petlock=1 petmend=20 petrange=75 pickpocket=1 plugin=1 poker= resume=20 sneak=1 standup=1 stickrange=200 hideif=${If[${Select[${MakeCamp},off]} || !${Defined[CampStatus]},0,1]} sneakif=${If[${Select[${MakeCamp},off]} || !${Defined[CampStatus]},0,1]} stickcmd=hold ${If[${Target.Height}<5,10,${Math.Calc[${Target.Height}+7].Int}]} ${If[!${Me.GroupSize} || ${Melee.AggroMode},moveback,${If[${Melee.BackStabbing},behind,!front]}]} ${If[${Me.Underwater},uw,]} version=3.999 Example MQ2MoveUtils.INI for MQ2MoveUtils: [Defaults] AutoPause=on BreakOnWarp=on BreakDist=250.0 BreakOnGate=on Verbosity=1 stuckDist=0.8 turnDirection=10.0 stuckCheck=5 StuckLogic=off Example MQ2Bandolier_.ini for MQ2Bandolier: [ThisSet] 17=12345 13=23456 14=34567 Example MQ2Cast.INI for MQ2Cast: [SpellSet..] ModBot2=123|1 456|2 789|3","title":"Plugin INI Examples"},{"location":"macros/gallery/modbot/#modbot-hud","text":"[_] Last=ModBotHUD SkipParse=7 CheckINI=100 UpdateInBackGround=on ClassHUD=on ZoneHUD=on [ModBotHUD] Target= 3,060,210,225,225,225,${If[${Target.ID},Dis:${Int[${Target.Distance}]}-Lvl:${Target.Level}-${Target.Class.ShortName}-${Target.PctHPs}%,]} Name1= 3,060,220,240,240,000,${If[${NetBots.Counts}>=1,${NetBots.Client.Arg[1]} ${NetBots[${NetBots.Client.Arg[1]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[1]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[1]}].PctAAExp}]},NA]} HP1= 3,060,230,255,100,100,HP:${If[${NetBots.Counts}>=1,${NetBots[${NetBots.Client.Arg[1]}].PctHPs},]}% Mana1= 3,105,230,100,100,255,M:${If[${NetBots.Counts}>=1,${NetBots[${NetBots.Client.Arg[1]}].PctMana},]}% End1= 3,145,230,255,234,008,E:${If[${NetBots.Counts}>=1,${NetBots[${NetBots.Client.Arg[1]}].PctEndurance},]}% Pet1= 3,185,230,255,255,255,Pet:${If[${NetBots.Counts}>=1 && ${NetBots[${NetBots.Client.Arg[1]}].PetID}>0,${NetBots[${NetBots.Client.Arg[1]}].PetHP},]}% Name2= 3,060,240,240,240,000,${If[${NetBots.Counts}>=2,${NetBots.Client.Arg[2]} ${NetBots[${NetBots.Client.Arg[2]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[2]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[2]}].PctAAExp}]},NA]} HP2= 3,060,250,255,100,100,HP:${If[${NetBots.Counts}>=2,${NetBots[${NetBots.Client.Arg[2]}].PctHPs},]}% Mana2= 3,105,250,100,100,255,M:${If[${NetBots.Counts}>=2,${NetBots[${NetBots.Client.Arg[2]}].PctMana},]}% End2= 3,145,250,255,234,008,E:${If[${NetBots.Counts}>=2,${NetBots[${NetBots.Client.Arg[2]}].PctEndurance},]}% Pet2= 3,185,250,255,255,255,Pet:${If[${NetBots.Counts}>=2 && ${NetBots[${NetBots.Client.Arg[2]}].PetID}>0,${NetBots[${NetBots.Client.Arg[2]}].PetHP},]}% Name3= 3,060,260,240,240,000,${If[${NetBots.Counts}>=3,${NetBots.Client.Arg[3]} ${NetBots[${NetBots.Client.Arg[3]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[3]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[3]}].PctAAExp}]},NA]} HP3= 3,060,270,255,100,100,HP:${If[${NetBots.Counts}>=3,${NetBots[${NetBots.Client.Arg[3]}].PctHPs},]}% Mana3= 3,105,270,100,100,255,M:${If[${NetBots.Counts}>=3,${NetBots[${NetBots.Client.Arg[3]}].PctMana},]}% End3= 3,145,270,255,234,008,E:${If[${NetBots.Counts}>=3,${NetBots[${NetBots.Client.Arg[3]}].PctEndurance},]}% Pet3= 3,185,270,255,255,255,Pet:${If[${NetBots.Counts}>=3 && ${NetBots[${NetBots.Client.Arg[3]}].PetID}>0,${NetBots[${NetBots.Client.Arg[3]}].PetHP},]}% Name4= 3,060,280,240,240,000,${If[${NetBots.Counts}>=4,${NetBots.Client.Arg[4]} ${NetBots[${NetBots.Client.Arg[4]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[4]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[4]}].PctAAExp}]},NA]} HP4= 3,060,290,255,100,100,HP:${If[${NetBots.Counts}>=4,${NetBots[${NetBots.Client.Arg[4]}].PctHPs},]}% Mana4= 3,105,290,100,100,255,M:${If[${NetBots.Counts}>=4,${NetBots[${NetBots.Client.Arg[4]}].PctMana},]}% End4= 3,145,290,255,234,008,E:${If[${NetBots.Counts}>=4,${NetBots[${NetBots.Client.Arg[4]}].PctEndurance},]}% Pet4= 3,185,290,255,255,255,Pet:${If[${NetBots.Counts}>=4 && ${NetBots[${NetBots.Client.Arg[4]}].PetID}>0,${NetBots[${NetBots.Client.Arg[4]}].PetHP},]}% Name5= 3,060,300,240,240,000,${If[${NetBots.Counts}>=5,${NetBots.Client.Arg[5]} ${NetBots[${NetBots.Client.Arg[5]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[5]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[5]}].PctAAExp}]},NA]} HP5= 3,060,310,255,100,100,HP:${If[${NetBots.Counts}>=5,${NetBots[${NetBots.Client.Arg[5]}].PctHPs},]}% Mana5= 3,105,310,100,100,255,M:${If[${NetBots.Counts}>=5,${NetBots[${NetBots.Client.Arg[5]}].PctMana},]}% End5= 3,145,310,255,234,008,E:${If[${NetBots.Counts}>=5,${NetBots[${NetBots.Client.Arg[5]}].PctEndurance},]}% Pet5= 3,185,310,255,255,255,Pet:${If[${NetBots.Counts}>=5 && ${NetBots[${NetBots.Client.Arg[5]}].PetID}>0,${NetBots[${NetBots.Client.Arg[5]}].PetHP},]}% Name6= 3,060,320,240,240,000,${If[${NetBots.Counts}>=6,${NetBots.Client.Arg[6]} ${NetBots[${NetBots.Client.Arg[6]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[6]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[6]}].PctAAExp}]},NA]} HP6= 3,060,330,255,100,100,HP:${If[${NetBots.Counts}>=6,${NetBots[${NetBots.Client.Arg[6]}].PctHPs},]}% Mana6= 3,105,330,100,100,255,M:${If[${NetBots.Counts}>=6,${NetBots[${NetBots.Client.Arg[6]}].PctMana},]}% End6= 3,145,330,255,234,008,E:${If[${NetBots.Counts}>=6,${NetBots[${NetBots.Client.Arg[6]}].PctEndurance},]}% Pet6= 3,185,330,255,255,255,Pet:${If[${NetBots.Counts}>=6 && ${NetBots[${NetBots.Client.Arg[6]}].PetID}>0,${NetBots[${NetBots.Client.Arg[6]}].PetHP},]}%","title":"ModBot HUD"},{"location":"macros/gallery/modbot/#modbot-commands-syntax","text":"ModBot commands are executed in a few different ways: /bc /bc /bct /bct Are probably most common but check out the EQBC Forum thread for more methods / features. You can also configure an alias so you can run modbot on the character you control and execute ModBot commands. To create the alias you must run this from the EQ prompt: /alias /mb /echo mb- Or change the LoadAlias variable in MBCommon.inc [Settings] section from 0 to 1 if you've lost the alias in your Macroquest.ini With this alias you can tell your bot locally what to do: /mb makecamp /mb buffup /mb letsroll /mb","title":"ModBot Commands &amp; Syntax"},{"location":"macros/gallery/modbot/#command-reference","text":"Section Updated: June 7, 2009 abort (Interrupts any cast in progress, Sets - DoHeals, DoDebuffs & DoMelee FALSE and follows the sender closely, usefull when you want to RUN away) addbuff \"\\|\\\" ABSpellAlias ABTarType (Adds a new buff entry to the character's INI file.) You must restart the ModBot macro after executing the addbuff command in order to complete the adding of the buff entry. The Spellname, etc. section can be entered directly (e.g. */mb addbuff \"Bone Mask of the Ancient Iksar|item\" iksar self_) or, if adding a clicky, by holding the item on your cursor (e.g._ /mb addbuff \"${Cursor.Name}|item\" iksar self*). Please note that the quotes around the spellname|gem section are required. ABTarType will accept multiple targets if quotes are used (e.g. */mb addbuff \"Levitiation|gem1\" levi \"war mnk rog\"*). addbuff execution will add ABGem, ABSpell, ABSpellAlias and ABTarType entries to the characters INI file. The remaining buff lines (ABSpellFociX, ABDurModX, etc.) will be added once you restart the ModBot macro (the array size change (ABCount) will also not increment until after re-start). For example, using these Bonemask example command, the following entires will be added to the INI file (where \"X\" is equal to whatever the next numbered entry is in your advbuff section): ABGemX=item ABSpellX=Bone Mask of the Ancient Iksar ABSpellAliasX=iksar ABTarTypeX=self attack (Sets DoMelee TRUE and forces bot to attack the TankName's target) attack (Sets DoMelee TRUE and forces bot to attack the target) * Note: OffTank must be TRUE to use this option (I may remove this requirement though TBD) * Example 1 - /bc attack badguy * Example 2 = /bc attack badguy 100 20 buffup (This will set DoBuffs & DoEvents TRUE & DoHeals FALSE) campout (Performs a /camp desktop and ends the macro) cast <on/off> (This will disable or enable the spell associated with this alias) cast [<spawnname/id> \\<%t> ] [<spawnname/id> \\<%t> ] (infinte) If the spell is detrimental, CAST targets the requester's target. If the spell is beneficial, it targets the sender or, if grp is present, it casts buff on group members. If %t is present, it targets the requester's target. The cast command will ignore INI settings for things like minmana, maxmana, recasts, buff debuff counters, etc. This command is mainly used for manual, \"one off\" type casts. Example 1 - /bc cast buffhp grp haste bob haste jane dmgshld bob Example 2 - /bc cast dmgshld bob nuke tash Example 3 - /bc cast slow \"nasty add\" doafk [on, true, off, false, ] dobuffbot [on, true, off, false, ] (Places the bot in \"BuffBot Mode\". Currently once set to on or true, it will NOT turn off and you MUST restart the macro to \"quit\" this mode. It will cast any spell alias on the requesting target. The requester must be a \"master\". Example: /t buffhp dobuffs [on, true, off, false, ] docombines (Toggle that turns docombines on/off (default off). Docombines will check for an open tradeskill window with an enabled combine button (you have to select recipe), and will click the button. Upon a successful combine, Modbot's built in cursor handling takes over. Useful for tank to summon more arrows during fight. An associated event will fire and toggle docombines to FALSE when you run out of recipe components.) docures [on, true, off, false, ] dodebuffs [on, true, off, false, ] doevents [on, true, off, false, ] doforage [on, true, off, false, ] dofw [on, true, off, false, ] doheals [on, true, off, false, ] dolist (Used to /bc out the existing \"Do\" status) doloot [on, true, off, false, ] domelee [on, true, off, false, ] domount [on, true, off, false, ] (To cast a mount or not, used in conjunction with MountCast INI entry) dopet [on, true, off, false, ] (To cast a pet or not, used in conjunction with PetCast INI entry) dopull [on, true, off, false, ] (not fully production yet) dopull <on/off/path> (Self explanatory. See the instructions on forums.) doquest [on,true,off,false] (Default is TRUE. If set to FALSE, your looter will ignore items marked \"quest\" and still loot other items.) Can be used to add quest items to your loot.ini file. For example, while holding an item on cursor, */mb doquest 4 Hair of the Dog* will set the item you're holding to \"=Quest|4|Hair of the Dog|\" in loot.ini. Can also be used in conjunction with the QuestOnly variable (found in the setting section of the loot.ini file). If both doquest and QuestOnly are set to TRUE, your toon will only loot quest items. Also note that if QuestOnly is set to TRUE and doquest is set to FALSE, your toon will only loot cash off of mobs. Please see the modloot section found here for more information on the loot.ini file. dosit [on, true, off, false, ] dosongs [on, true, off, false, ] (used for bards only) dotells [on, true, off, false, ] (Toggles a beep when tells are recieved from non-netbots toons. Useful for tells in background sessions) **exclude ** (Adds to alert list, to save list you must use the \"save\" option, otherwise it will not be written to the INI file) The exclude list is dynamic and will only exclude mobs that are present in the zone AND that are on the list. If you want to force an exclude you must edit the INI file and place a \"#\" in front of the mobs name (e.g. ExcludeList=a dusty barrel|a dark coffin|#a bitten victim|a hollow tree|, this will always force \"a bitten victim\" to be on the exclude list) Use the following commands from a character to add mobs to the exclude list (Kroak suggested just tossing this in a two-line hotkey): /bcaa //mb exclude ${Target.CleanName} Will write the exclusion to a string that is checked through the debuff loop /bcaa //mb exclude save Will write the exclusion in the mbcommon.ini and that exclusion includes the zone id, so mobs of the same name in a different zone are NOT excluded. You shouldn't have to re-run the macro after an exclude but if you do this in the midst of comabat or something, while mobs are near, it may not \"take\" as quickly. For mob names with spaces in them, simply enter the name without any quotations. For example: ''/bcaa //mb exclude a small bat See the Include command (found below) to temporarily remove a mob from the alert list follow (Follows the sender or ) follow close (Follows the sender within 3 steps, very close) give (Calls the sub GiveCheck to hand an item to a toon or NPC.) ItemCount is optional and will default to 1. The give command can be used in conjunction with categories that have been defined in the loot.ini. For instance, if you have items marked 'SpellScroll' in your loot.ini, and the Category variable has \"SpellScroll\" included, you can issue the give command as follows: /mb give Bob SpellScroll TRUE . The result will be that all items on your toon that are marked with that category (SpellScroll) in your loot.ini will be handed to Bob.) * goto (Bot will move to the loc given) * handin (Target an NPC or PC, get one item on your cursor, and all of that item will be handed to them and trade or give button pressed.) holdup (This will set DoBuffs,DoDebuffs,DoEvents,DoMelee all to FALSE) include (Removes from alert list, this will not save to the INI file, see exclude save) letsroll (This will set DoBuffs,DoHeals,DoMelee,DoEvents,DoDebuffs TRUE) makecamp (This will Makecamp at existing location. Use /makecamp off or /mb stop to toggle makecamp functionality off) mana (Used to /bc out the existing Mana % of the bot) mbpause or mbp [on, true, off, false, ] (Used to pause or unpause the macro) mbwayplay (Used to playback previously recorded paths / waypoints, through zones, doors, chaining paths, etc.) mbwayrec (Used to record a path / waypoint.) Once started, ducking for each location will add a waypoint to the path. Sitting stops path recording and returns to modbot functions. To add doors, chains, pull locations, etc. you'll need to edit the MBWayPlay.INI file Further information about mbwayplay and mbwayrec (along with examples) can be found here in the wiki. * offtank <on/off> (Toggles offtanking for dealing with adds.) * script (This will allow you to run custom commands while the macro is running, or combine series of commands, see script examples in manual / rev notes) sell (You must be within range of a merchant in order to function, it will sell loot marked as \"=SELL\" in the loot.ini file) sell (With NPC targeted will attempt to sell all items marked \"sell\" in your lootIni file to target. Otherwise optional target name can be supplied.) setinivar (This will find and change any setting in your .ini) Note that this command will have trouble with script settings if you have more than one (it will set the first C1= or whatever that it comes to. Variables changed in the .ini are /varset with the macro running Spells, gems, etc. will not be set unless you use the array correctly for . In other words, ADGem[1] is not the same as ADGem1: Use ADGem[1] and this will set the ADGem1 .ini setting and varset the change to memory. Use ADGem1 and it will only change the .ini. This still has a problem finding variables in very long sections. If /echo \\({Ini\\[\\) , ]} is over the MAX_STRING value - (You go LD typing that if it is). - Stuff like ABGem[20] is almost never found. (Still working on that.) For example, Ligament Slice for a rogue was set up from in-game with these commands typed in to the MQ window (and the rogue was able to put it immediately to use): /mb setinivar ADCount 4 (restart macro - had 0 count before) /mb setinivar ADGem[1] alt /mb setinivar ADSpell[1] Ligament Slice /mb setinivar ADTarBegHP[1] 40 /mb setinivar ADTarCnt[1] 1 /mb setinivar ADTarType[1] 1 /mb setinivar ADAnnounce[1] /bc /mb setinivar ADSpellAlias[1] snare sing (Will sing this song and add the respective gem number to the Twist.List, it attempts to use detrimental as the qualifier to add it to combat songs, or rest songs) stop (Will stop following and/or stop in place) sung (Will remove this song from the respective Twist.List, it attempts to use detrimental as the qualifier to remove it from combat songs, or rest songs)","title":"Command Reference"},{"location":"macros/gallery/modbot/#modbot-in-game-usage-and-commands","text":"Example commands: /bc Bob follow me [This tells bob and only bob to follow me] /bc cast dd [this tells every bot to cast the spell alias dd] /bc shamandude cast buffsta grp buffhp focus grp buffhp %T [buffsta on the group, buffhp on the requester, focus on the group, buffhp on requesters target] /bc necroguy makecamp [this tells \"necroguy\" to makecamp] /bc campout [tells all bots to camp to desktop] /bc exclude ${Target.CleanName} [tells all bots to add your target to the exclude / ignore list, toons will not attack any spawn with that name.] /bc clericname dobuffs on [tells the cleric to set DoBuffs to true and will then begin buffing group] /bc pallyguy cast bmb %t buffhp grp [bmb on requesters target, buffhp on the group] Typical commands sequence for an EXP group: /bc letsroll /bc makecamp You then begin to pull mobs and they will react accordingly. Mobile Camp Example: /bc follow /bc buffup [once ready zone into the instance] /bc stop /bc letsroll [clear first room lets say] /bc follow [move to next room] /bc makecamp [etc, repeat] Example movement options with or without invis /bc mbp on /bc follow Make a EQBC Channel and do things like (using this technique you don't even have to be a master) /bct mycoolchannelname //mb letsroll /bct mycoolchannelname //mb campout","title":"ModBot in game usage and commands"},{"location":"macros/gallery/modbot/#modbot-ini-settings","text":"","title":"ModBot INI Settings"},{"location":"macros/gallery/modbot/#preface-notes","text":"Spell Alias's must be unique across all alias's Obsolete? 06272011 -Changed - ? \"cast\" command usage now allows for multiple aliases. If you have several spells with the same alias, using /bc castwill now cast all spells marked. Example, for shaman you can have Fo7, Talisman of Boar, Talisman of Wrulan, Talisman of Tribunal, ect.. all marked with \"fullgroup\". \"/mb cast fullgroup\" will cast each spell in the order they are found in the .ini file. Buffing -```Group buffs can now be seperated to different classes, and will allow keeping the spell on netbots members in seperate groups from the caster with the inclusion of keyword \"raid\". Example -` `ABSpell2=Focus of the Seventh` `ABSpellFoci2=` `ABDurMod2=50` `ABSpellAlias2=fo7|grpfocus|fullgroup` `ABAnnounce2=` `ABSpellMinMana2=20` `ABTarCnt2=2` `ABTarType2=war shd pal rng mnk rog brd bst ber shm dru wiz mag enc nec raid` `ABRecast2=FALSE` `ABSpellIcon2=` `ABPreCondition2=TRUE` ````` Note from the above example that clr is not included in the TarType.. My clerics have the spell blocked. Attempting to cast on them will cause a chain loop of ```casting until the cleric gets self buff on that doesn't \"stack\" with focus. - so watch spell stacking and make sure to set your toons accordingly.`` ````` Old format of \"self\" will also work with no change if you don't want to buff other groups with the spell. Commands - Tell commands will now check buff aliases, and don't need \"cast\" to ask for buffs.. \"/tellfullgroup\" from a non-master toon will make the shaman cast every spell with that alias on the sender of the tell. Masters still require use of \"cast\". - This does allow guildies or whoever else knows your aliases to get buffs easily. /say is not affected and is still not enabled for modbot. Added \"docommand\" -```Master toons that aren't in netbots can now directly command toons. \"/telldocommand /sit\" will make the receiving toon sit, or execute any command after the \"docommand\" keyword. - Word of caution - You can cause macro errors with this if you aren't careful. The command sent is executed directly with /docommand in the macro. `A tell received of \"/telldocommand /sit\" will locally execute \"/docommand /sit\" Watch extra characters and or brackets.. - Because of the nature of this one, the commanding toon MUST be listed in MasterList. You should be familiar or at least capable of making MQ2Bandolier sets as they are used by MQ2Cast for \"foci\" items Please treat the Buff, Debuff, Event, Heal INI sections as a first in first out (FIFO). Highest priority to lowest priority, you don't want mez or slow as ADSpell12 but as ADSpell1. You don't want AHHeal1 as Complete Heal, you want AHHeal1 to be DA/DB (those are examples, use common sense) If you want to add some visual zip to your announcements (things are easy to miss in /bc..), you can use color coding and the like in any of your Announce settings. For example, *ADAnnounce1=/bc [+r+]Group Mez[+x+] \\<\\<[+y+] %t +x+ >> with +g+ %s [+x+]* will produce a line in the MQ chat window that is MUCH easier to see than the regular fonts. Rk. XX Usage - Heals, buffs, debuffs, and cures have code added to check your book and find the correct version of the spell you're using on startup of modbot. Rk. II and Rk. III are not needed, but only for these sections. If you upgrade a normal spell in these sections to Rk. II or III, restarting the macro will make the new spell work. Please note that this does not apply to discs, potionbelt, abilities, or PetCast at this time (meaning you must include the Rk. XX in the spell name for these types). Setting spell duration modifications (AHDurMod, ADDurMod, ABDurMod, AEDurMod) - Use the following formula to determine what number to set your DurMod at: \\({Spell[X\\].Duration} \\* (\\) +${Spell[X].Duration}) == timer duration. So if you want a 25% extension on the timer, set durmod to 25 to make ${Spell[X].Duration} * 1.25 = timer. Modbot shouldn't re-cast if timer is still running.","title":"PreFace Notes"},{"location":"macros/gallery/modbot/#references","text":"tnt = TankName Target grp = group","title":"References"},{"location":"macros/gallery/modbot/#settings-section-settings","text":"DoMelee=TRUE|FALSE DoHeals=TRUE|FALSE DoBuffs=TRUE|FALSE DoDebuffs=TRUE|FALSE DoEvents=TRUE|FALSE DoCures=TRUE|FALSE DoPull=TRUE|FALSE DoPet=TRUE|FALSE Must have a buff entry for creating a pet (in the AdvBuff section - see note for ABTarType). Also see note for Cleric pets under PetCast below. * DoSit=TRUE|FALSE * DoLoot=TRUE|FALSE * DoFW=TRUE|FALSE * Should I cast spells for food and water. (see FoodSpell and DrinkSpell entries) * DoForage=TRUE|FALSE * ForageIni=name of ini file for forage * Defaults to forage.ini . Please see the Related include files page for more information on the Forage.ini file. * DoAfk=TRUE|FALSE * DoMount=TRUE|FALSE * If set to TRUE, you must complete the MountCast entry below. * MountCast=Spell/Item name/AA name|gem #,item,alt * Use MQ2Cast syntax without quotes. Examples: * MountCast=Collapsable Roboboar|item * MasterList=PC Name,PC Name * Comma delimited list of names. Can also use ${NetBots.Client} to designate that any chars using NetBots can act as master. Examples: MasterList=Bigbob,Sooper MasterList=${NetBots.Client} TankName=PC Name,PC Name Comma delimited list of names. This variable will also be set when you designate a character using either the Main Tank or Main Assist group roles. Can also use ${Group.MainTank.Name} to auto set this to whomever is set in the group main tank role. Examples: TankName=Billytank,Larrytank TankName=${Group.MainTank.Name} Radius=# Radius that I will monitor for NPCs. If you are having issues with your characters not casting buffs, etc. while not in combat, try adjusting the Radius setting down a bit to make certain that they are not pickng non-aggro mobs in the surrounding area. Example: Radius=100 ExcludeList=npcname|npcname| Pipe delimited names to exclude. Please note that you must have a Pipe \"|\" at the end. Example: ExcludeList=a hollow tree|a broken barrel| SitAggroRadiusCheck=# Radius to check for aggro to see if I can sit. Default is 75. AfkMessage=afk message Enter a custom AFK message if desired (leave blank for no AFK message). Default is \"Not now, thanks\". DeathSlot=TRUE|FALSE Will only be true if your bot needs to camp to desktop to save res timer. This way the macro will know if you died and had to camp out. * NetworkIni=Path and filename of ini file * Option for a network based INI file for scripts and path playback (mbwayplay and mbwaypnt.ini file). * File must be prefixed by \"Network-\" or \"Net-\" * Example: NetworkINI=X:\\shared\\modbot\\mb_network.ini * TraderName=toon name|bazaar trader * For use with the Campout command. Example: * /bc campout trader will log in whatever toon you have set in the TraderName variable. * Second argument ( |bazaar trader ) will log in the toon and run the bazaar macro with the trader option (or any other mac+options you want there.) * FollowDistance=# * Designates how far you will stay from followee. * Default 20. * FollowStick=MQMoveUtils Options * If using MQ2MoveUtils, enter the options that you would like to use. Default 20 hold uw. Example: * FollowStick=20 hold uw * PetAggro=TRUE|FALSE * TRUE - pet taunt on * FALSE - pet taunt off * PetAssist=[1] * Assist and pet attack or not * PetFoci=[-bandolier|petfoci] * Any spell foci you want to swap in for this spell using MQ2Cast syntax, you must have previously created the set via the MQ2Bandolier plugin /createset command. * PetShrinkSpell=pet shrink spell name|gem# * Spell to be used to shrink your pet. Leave blank if you don't want your pet shrunk. Example: * PetShrinkSpell=Tiny Companion|gem9 * GoMNuke/GoRMNuke/GoERMNuke/GoDERMNuke=[] * GoMNuke, GoRMNuke, GoERMNuke and GoDERMnuke will only appear if the toon has the AA available upon startup. These settings only require the * ALIAS * of the debuff you want to be \"cast\" on the MA's target when the event fires. No script required. * **SummonFood=spell name,item name,alt name|gem#,item,alt</span>** These entries appear when DoFW is set to TRUE. Use MQ2Cast syntax for spell entry. Example: SummonFood=Summon Food|gem12 **SummonDrink=spell name,item name,alt name|gem#,item,alt</span>** MQ2Cast syntax. Example: SummonDrink=Summon Drink|gem8 Deprecated Entries DoAura =[TRUE,FALSE] (Must have a completed AuraCast entry below) DEPRICATED!! Set up aura as a buff with 'self aura' as the ABTarType. AuraCast =[\\|\\,item,alt>] (Example: Uber Aura|gem3) - DEPRICATED! Set up aura as a buff with 'self aura' as ABTarType. Use MQ2Cast syntax without quotes. PetCast=|gem\\<#>|(for Suspended Minion II)] (PLEASE NOTE: As of 3.499 beta, PetCast is no longer needed. You can now add pet to \"AB\" section by setting ABTarTypeX=petspell (or petcast). Pets won't be cast unless DoBuffs and DoPet are true. Also shouldn't cast if in combat unless \"cbt\" is included in ABTarType. When used with modbuff, Persistent Minion is also used automatically if you have it, and no extra entry needed. Original entry: Spell to cast to create / recall pet. Example: PetCast=Animate Dead|gem8|smii (Mainly MQ2Cast syntax without quotes)) Can also use for charming: [charm \\<NPC type 0=any 1=undead,vampyre 2=animal 3=summoned 4=(specify name type)> ] Example: PetCast=charm 4 4 \"lowland basilisk,a emerald drake\" For Cleric Hammer type pets that you only want to cast / have while in combat, you MUST have DoPet set to False AND have PetCast=|\\,item,alt>)","title":"Settings Section [Settings]"},{"location":"macros/gallery/modbot/#advmelee-melee","text":"OffTank=TRUE|FALSE False - attack the MA target only True - assist MA and then not change targets ACLeash=# The farthest the bot will move from where he is to engage a mob. However if \"TankName\" stays within 20 steps, the bot will exceed this leash. * ACAssistPct=# * Assist when target HP is this or less. Melee characters will engage at this point and caster pets will be sent in. * ACManaPct=# * Stop assisting when Mana drops below this. * Set to 0 for melee only * Set to 101 for non-melee casters * ACAnnounce=channel * Channel to announce in, or leave blank for no announce. Example: * ACAnnounce=/bc Will announce in MQ/EQBC window * ACAnnounce=/g Will announce in group chat * ACMeleeCmd=command * Use to set MQ2Melee commands. Example: * ACMeleeCmd=/melee plugin=1 * ACBefore=script * Special script code to execute before you engage. Example: * *ACBefore=/if ({ACMATarget} && {Spawn[{ACMATarget}].Type.Equal[NPC]} && {Spawn[{ACMATarget}].Distance3D}\\<={ACLeash} && {Me.CombatAbilityReady[Sneak Attack]} && {Me.Invis} && {Me.Sneaking} && {Me.PctEndurance}>40 && !{Me.Moving}) /call mbscript SneakAttack* ACBefore=/if (!{Me.Pet.ID}) /casting ''{PetCast}'' \\<-- cleric pet hammer example ACAfter=script Special script code to execute after you leave combat. Uses same script format as ACBefore.","title":"AdvMelee [Melee]"},{"location":"macros/gallery/modbot/#advheal-section-advheal","text":"Please note that for FD class toons and ${Group.Puller} - If they are out of ACLeash range and not FD, they will not be healed (to prevent aggro on group), but only if healer is not in 'combat' combatstate. If you have the newest NetBots from SVN, another check will be done on the NetBots[].CombatState that needs healing. If not in combat they will be healed. For group heal spells, you must set the AHTarCnt to something greater than 1 in order for the spell to evaluate correctly (and be used as a \"group\" heal when more than one member of the group requires healing). For instance, if you have AHTarCnt=3, then at least 3 members of your group will need to be below the HP level that you set in the AHClass line. A possible issue may arise when the cleric is in a loop state where a single heal is being fired \\(AHHealMode\\) - it may take a bit for it to realize the single heal should be stopped and the group heal cast instead. Depending on how you have it configured, the use of AHHealMode can force it to not even check the your group heal spell as it's being told to only check one \\(the single heal\\) . If this is the case (and not the desired result), perhaps use the group heal as the spell to check in AHHealMode. AHCount=# Number of heals you plan to have. AHCheckTime=# How often to check for heals in seconds. AHHealOOBC=TRUE|FALSE Do I heal characters outside of Netbots and EQBC (e.g. folks not running MQ2 or mercenaries.) AHHealOOBC Thinking of an english name for that setting, all that comes up is \"Heal Outside Of BC\". So, in other words, if the setting is FALSE, it won't heal anyone that's not on YOUR EQBC server with the netbots plugin set up correctly, even if they're in your group. That is why I recommend you connect all toons and run modbot on all of them at least once, even if you don't plan to run it as a regular thing for the other toons.. It assures the plugins are set correctly. If AHHealOOBC=TRUE, then modbot will heal group members and pets even if there's no netbots connection. Out of group healing can only be done by the macro if there's a netbots connection, or if the other toon is a master and uses the cast command via /tell. I do recommend AHHealOOBC=TRUE setting, but I still left the default FALSE so people could check their connections before setting TRUE. AHHealMode=#|#|# 0 or 1 (off or on)|Heal #|Timer This will keep the toon in the heal loop after casting to check for additional heals for the duration of . * AHInterruptLevel=# * Lowest interruptable spell. For example, AHHealSpell1 will never interrupt if this is set to 2. * AHClassPriority=class names * Set class healing priority (e.g. if you're currently healing a chanter, you won't interrupt for a monk). * Allowed entires are: enc,wiz,mag,nec,clr,dru,shm,pal,shd,war,bst,rng,ber,rog,brd,mnk (or any combination thereof) * AHAllowDismount=TRUE|FALSE * Designate whether your toon should dismount (or not) to interrupt a spell to cast a heal * TRUE - allow toon to dismount if necessary to interrupt a spell cast in order to fire off a heal. * FALSE - your toon will never dismount to interrupt a spell. * AHGem[x]=source * Designate what the source of the spell is. * Valid entries: gem number, alt, ability, item, script, potionbelt * Note that 'potionbelt' does not require a slot number. * Examples: * AHGem1=3 Cast this spell from gem 3 * AHGem1=alt This spell is an alternative advancement ability * AHSpell[x]=source name * Valid entries: spell name, item name, alternate ability name, ability name, script name * Examples: * AHSpell1=Superior Healing This would be generally be paired with an AHGem1 entry indicating which spell gem to cast Superior Healing from. AHSpell1=Healing Thingy of Uberness This would be generally be paired with an AHGem1 entry indicating that the source of this spell is an item. * AHSpellFoci[x]=setname * Bandolier set name to swap in before casting this heal. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * AHDurMod[x]=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * AHSpellMinMana[x]=# * Minimum mana percentage to have in order to attempt this heal (e.g. 05 \\(for 5%\\) , 25 (for 25%) * AHSpellAlias[x]=spell alias * Alias name for the heal. * Please note that you can NOT have spaces in your alias names. * AHAnnounce[x]=channel * Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. * AHTarCnt[x]=# * Designate how many targets are required to cast this spell. * AHClass[x]=class name(s) * Valid entries: pc pet group hp0 war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec tnt mypet self (or some combination there of). Please see the MQ2NetHeal plugin for full options. Please also note the following combination restrictions: pc \\<-- will include pc's and mercs. Leave pet out to ONLY heal PC's and mercs. pet \\<-- will include pets. Leave pc option out for pet only heals. group \\<-- will exclude everyone that is not in your group hp0 \\<-- set an overall health percentage for any named classes classnames (war, shd, etc.) \\<-- used to declare which classes this heal should apply to. Can also be combined with a health persentage (e.g. bst50). mypet to be used by itself (e.g. set up a seperate heal for your pet) tnt \\<-- Tankname target. Use for lifetap spells ONLY. self \\<-- Only use self if the heal spell is SELF ONLY, or only to be cast on yourself. This setting is exclusive and other targets will not be checked for that spell. * AHPreCondition[x]=TRUE|FALSE|PR * Defaults to TRUE * PR (only to be used with NetBots) If AHPreCondition[x]=PR, then for that particular heal there will be a check on target (over NetBots) for any PR type spell. If target has a PR buff on, then the heal will be skipped. Please note that the PR setting does not currently account for the duration remaining of the PR buff. AHPreConditionX=PR will check for these spell ID's: 9755 (Promised Renewal) 9756 (Promised Renewal Rk. II) 9757 (Promised Renewal Rk. III) 18270 (Promised Recuperation) 18271 (Promised Recuperation Rk. II) 18272 Promised Recuperation Rk. III)","title":"AdvHeal Section [AdvHeal]"},{"location":"macros/gallery/modbot/#advdebuff-section-advdebuff","text":"ADCount=# Number of debuffs you plan to have. ADMobMax=# This is the array size where the valid mob ID's are stored after found. The loop to find valid mobs uses SpawnCount, then stores the mobs it \"finds\" in the array. Setting this to 20 or 30 should be way more than enough ever. It is best to keep this setting (and therefor the array) relative small for memory purposes (as well as for speed through the debuff loop). If your toons are ignoring NPCs, this number may be set too low. First thing to check!! ADCheckTime=# How often to check for debuffs in seconds. \"It's the forced delay or timer between allowing that section of the macro to execute again.. Set higher for toons you want to have more emphasis somewhere else.. Like a cleric can be 8 for debuffs and 0 for heals, but a shammy you'd want 0 for debuffs. 0 = no forced delay. Speed still varies depending on the size of the loops or how many heals, debuffs, ect are in each section.\" - toomanynames * ADAggroOnly=1|0 * 1 - only add mobs to the mob list if someone in your group or in netbots is the mob's target. Only use this option on bots that cast on targets that are NOT the main assist's target (e.g. chanter mezzing adds). Please note: ADAggroOnly is not terribly reliable at times. If you are having issues with one of your bots auto-aggroing mobs (when they are not the tank), try setting ADAggroOnly=0 and then ADTarType=1 or 11. * ADHold=0|1|1| * 1=on 0=off|Debuff spell #|Time to wait for debuff| * This is used much like the AHHealMode setting, but only for type 12 debuffs. Sets a timer to hold the toon in the debuff loop (no buffs or events) until the debuff is complete. * ADGem[x]=source * Designate what the source of the spell is. * Valid entries: gem number, alt, ability, item, script, potionbelt * Note that 'potionbelt' does not require a slot number. * Examples: * ADGem1=3 Cast this spell from gem 3 * ADGem1=alt This spell is an alternative advancement ability * ADSpell[x]=source name * Valid entries: spell name, item name, alternate ability name, ability name, script name * Examples: * ADSpell1=Ensnare This would be generally be paired with an ADGem1 entry indicating which spell gem to cast Ensnare from. ADSpell1=Bangy Thingy of Uberness This would be generally be paired with an ADGem1 entry indicating that the source of this spell is an item. * ADSpellFoci[x]=setname * Bandolier set name to swap in before casting this spell. Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * ADDurMod[x]=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excess of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * ADSpellAlias[x]=spell alias * Alias name for the spell. Please note that you can NOT have spaces in your alias names. * ADAnnounce[x]=channel * Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. * ADSpellMinMana[x]=# * Minimum mana percentage to have in order to attempt this spell (e.g. 05 \\(for 5%\\) , 25 \\(for 25%) * **ADSpellRecast[x]=\\#** * Number of times to recast this spell for fizzles, interrupts, etc. * **ADSpellCastonResist[x]=spell alias** * Should this spell be resisted, is there another alias to cast before another attempt of this spell. * Please note that if ADSpellCastonResist is defined, ADSpellRecast must be at least 1. * **ADSpellDelay[x]=\\#** * Number of seconds to wait between casts of this spell. * **ADTarCnt[x]=\\#** * Number of targets required to be present to cast this spell. If set to 0, this spell will not be auto-casted\\) * ADTarType[x]=# * Designate one target type to cast this debuff on. * Valid target types: * 0 = All mobs * 1 = MA Target only * 2 = All except MA Target * 10 = All mobs before next spell * 11 = MA target only before next spell * 12 = All but MA target before next spell * Priority Debuffs (10, 11, 12) should be placed first most (prior to non-priorities). Meaning - settings of 10, 11, and 12 need to be in top spells slots (ADGem1, ADGem2, etc) * ADTarBegHP[x]=# * The target must be equal or below this HP%. * ADTarEndHP[x]=# * The target must be equal or above this HP% * ADIfSpellImmune[x]=script name * This is meant to be a pointer to a quick, one line script that is executed when a mob is immune to the spell you have cast. If you need to do something complicated, other scripts can be called from it. 'Param1' is now passed as the immune target's ID. An example where this would be useful is for chanter mez: /bc {TankName} //multiline ; /varset ACMATarget {Param1};/target id {Param1} will make your toon target the immune mob even if he was on another mob at the time. * ADUseHoTT[x]=# * This will cause the macro to /target the mob and check TargetOfTarget before casting and delay # seconds before checking again if mob is skipped. If not a raid or group member, the macro will move on and recheck that mob for that debuff after the time has expired. Note that this will default to casting the debuff anyways if HoTT isn't available. * ADPreCondition[x]=one line script * Whatever statement you add to this line needs to /return TRUE. i.e. - ADPreCondition1=/if ({This} && {That}) /return TRUE. Only a TRUE return will allow the spell to cast, so script carefully, or leave the lines default. Code: ADGem1=2 ADSpell1=Turgur's Insects ADSpellFoci1= ADDurMod1=0 ADSpellAlias1=slow ADAnnounce1=/bc Slowed <<[+y+] %t [+x+]>> with[+g+] %s [+x+] ADSpellMinMana1=10 ADSpellRecast1=2 ADSpellCastonResist1=malos ADSpellDelay1=0 ADTarCnt1=1 ADTarType1=11 ADTarBegHP1=200 ADTarEndHP1=15 ADIfSpellImmune1= ADUseHoTT1=0 ADPreCondition1=TRUE \"Notice the ADTarBegHP1 setting. I have the same spell set with ADTarType2=12 directly after this one to make sure he slows adds. (sometimes he pulls em too..) Everything else - mainly ACAssistPct is set to a lower value. Most around 95 or so. Buffs are a pita because if the debuff sub is called \\(it is called first\\) it won't cast the debuffs if there's any reason not to, then the macro runs through the whole buff loop before getting back to debuffs again.. Setting the ADTarBegHP at least over the level of all other functions at least attempts to keep the slow first. Also.. I find the macro works best if you always set your ACManaPct very low. Usually keep mine around 5 or so for every toon. I should change the default on that, but clearing targets and such is something your toon will do quite often if his mana is under that value.\" - Ptarp on the forums on Wed Mar 09, 2011 7:54 pm. (edited into Wiki by Arblis)","title":"AdvDebuff Section [AdvDebuff]"},{"location":"macros/gallery/modbot/#advbuff-section-advbuff","text":"If you want to cast single target buffs after group buffs, place all of your group buffs first. ABCount=# Number of buffs you plan to have. ABMobMax=# Max number of targets to track for buffs (do not include pets) ABCheckTime=# How often to check for buffs in seconds ABGem[x]=source Designate what the source of the spell is. Valid entries: gem number, alt, ability, item, script, potionbelt Note that 'potionbelt' does not require a slot number. Examples: ABGem1=3 Cast this spell from gem 3 ABGem1=alt This spell is an alternative advancement ability ABSpell[x]=source name Valid entries: spell name, item name, alternate ability name, ability name, script name Examples: ABSpell1=Minor Shielding This would be generally be paired with an ABGem1 entry indicating which spell gem to cast Minor Shielding from. ABSpell1=Uber Wand Thingy of Uberness This would be generally be paired with an ABGem1 entry indicating that the source of this spell is an item. * ABSpellFoci[x]=setname * Bandolier set name to swap in before casting this spell. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * ABDurMod[x]=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * ABSpellAlias[x]=spell alias * Enter an \"alias\" for the spell. This is often a short, easier to use name (e.g. the alias for Spirit of the Wolf might be SoW). Please note that you can NOT have spaces in your alias names. ABAnnounce[x]=channel Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example: ABAnnounce1=/bc [+r+]Buffed +x+ \\<\\< +y+ %t +x+ >> with +g+ %s [+x+] ABSpellMinMana[x]=# Minimum mana percentage to have in order to attempt this spell (e.g. 05 \\(for 5%\\) , 25 (for 25%) ABTarCnt[x]=# Designate how many targets are required to cast this spell. If set to 0, this spell will not be auto-casted. This is useful for spells that you want to call via alias to be cast manually. For single cast spells (e.g. Spirit of Eagle), ABTarCnt will most often be set to 1. For group spells (e.g. Flight of Eagles), you might set your ABTarCnt higher so that it only gets cast when there are more than 2 or 3 people in your group. * ABTarType[x]=target type * Valid target types are as follows (please note which entries can be used with others and which are exclusive): * ShortClassName Used for class specific buffs (ie. haste on \"war\"). Valid entries are: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec. Note that any or all of these entries can be used at the same time. self Used for self only spells. grp for Group spells (example needed, according to author self is mutually exclusive, so self grp won't work. grp can also not be the only target, so its safer to just list classes here!) pet used to cast buffs on all pets in the group. mypet used to cast on only your pet. Please note that pet and mypet are mutually exclusive. cbt for spells to be casted during combat (e.g. an entry for Yaulp would be ABTarType1=self cbt). Please note that any NPC within radius that is not on your exclude list will cause 'cbt' buffs to fire. If you want to buff next to NPCs (and don't plan to kill them), use the exclude command. If you later decide to kill whatever mob you've excluded, use the include command to remove it from list. The macro does not check combat state of the tank for buffs. idle used with cbt for spells to be casted when in or out of combat (e.g. if you wanted to keep Yaulp on at all times (in AND out of combat), your entry would be ABTarType1=self cbt idle). Please note that idle is only used in ABTarType when cbt is also used. aura used to cast an aura - must be used with self (e.g. ABTarType1=self aura) Note that Bard auras *REQUIRE* ABSpellAlias to be set up to cast, and modbuff will use CastCall to actually cast the aura. * tank used to cast only on the designated group tank. Tank designation is keyed from either the TankName variable in the setting section (see above) or by setting a toon to Main Tank (Group.Maintank) using the Roles function. petspell used to set up an entry to create/cast a pet. Example: ''ABGem3=7 ABSpell3=Shambling Minion ABSpellFoci3= ABDurMod3=0 ABSpellAlias3=pet ABAnnounce3=/bc Cooking up a pet ABSpellMinMana3=10 ABTarCnt3=1 ABTarType3= petspell ABRecast3=FALSE ABSpellIcon3= ABPreCondition3=TRUE'' Default entry: *ABTarTypeX=tank war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self mypet grp pet cbt idle* Please note that the default entry includes settings that do not work together. Specifically, tank , self and mypet are meant to be used by themselves. If you want to cast the same buff on yourself, your pet and the tank, create them as seperate buff entries. * ABRecast[x]=TRUE|FALSE * True is only really needed for single targets that are NOT in the group and/or on NetBots. Set ABRecast TRUE when you want the macro to use the spell worn off messages from EQ for the macro to know who to cast the buff on. This allows you to rebuff toons that are lower level for your normal buff set, or not in EQBC and not in group. For the most part this shouldn't be needed for rebuffing if all of your toons are NetBots members. The macro actually checks the other toons in netbots and knows what their buffs are, whether the one they're trying to cast will stack, and the duration of the buff if the toon still has it on. * ABSpellIcon[x]=icon name * Use when the spell icon has a different name than the actual spell (e.g. the spell Unity of Spirits has a spell icon of Transcendent Foresight . In fact, you could use any one of the four spell icons/names that Unity creates). Please note that if the name you have in ABSpellIcon doesn't evaluate to a spell name, the buff will be skipped. In other words, leave it blank if your spell doesn't need it.","title":"AdvBuff Section [AdvBuff]"},{"location":"macros/gallery/modbot/#advevent-section-advevent","text":"AECount=# Number of events you plan to have. AECheckTime=# How often to check for events in seconds AECustomX=watch text Custom emote-triggered events driven by scripts. Default is three blank entries (AECustom1=, AECustom2=, AECustom3=) Please note that an earlier version of this variable populated AECustom1, AECustom2 and AECustom3 with random numbers in the ini file. The newwer version of AECustom now adds the three AECustomX entries but sets them as blank.) Each AECustomX entry, if defined, must have a corresponding script entry. For example, by defining AECustom1=greater bloodmoon healing in the AdvEvent section, you would need a corresponding script defined that might read something like: [Script-AECustomEvent1] Commands=1 C1=/bc cast stun AEGem[x]=source Designate what the source of the spell is. Valid entries: gem number, alt, ability, item, script, potionbelt Note that 'potionbelt' does not require a slot number. Examples: AEGem1=3 Cast this spell from gem 3 AEGem1=alt This spell is an alternative advancement ability AESpell[x]=source name Valid entries: spell name, item name, alternate ability name, ability name, script name Examples: AESpell1=Minor Shielding This would be generally be paired with an ABGem1 entry indicating which spell gem to cast Minor Shielding from. AESpell1=Uber Wand Thingy of Uberness This would be generally be paired with an AEGem1 entry indicating that the source of this spell is an item. * AESpellFoci[x]=setname * Bandolier set name to swap in before casting this spell. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * AEDurMod[x]=## * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%). * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100% (e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct extension. * AEDelay[x]=# * How many seconds do I wait between casts of this spell. * AEEventMinMana[x]=# * My mana percentage must be at least this to complete this event. * AEEventMinHP[x]=# * My HP percentage must be at least this to complete this event. * AEMinMana[x]=# * The event target's mana percentage must be above this to complete this event. * AEMaxMana[x]=# * The event target's mana percentage must be below this to complete this event. * AEMinHP[x]=# * The event target's HP percentage must be above this to complete this event. * AEMaxHP[x]=# * The event target's HP percentage must be below this to complete this event. * AETarType[x]=target type * Valid entries: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self tnt (Less is better!) * AESpellAlias[x]=event alias * Enter an \"alias\" for the event. This is often a short, easier to use name (e.g. the alias for Spirit of the Wolf might be SoW). Please note that you can NOT have spaces in your alias names. AEAnnounce[x]=channel Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example: ABAnnounce1=/bc [+r+]Buffed +x+ \\<\\< +y+ %t +x+ >> with +g+ %s [+x+] AETarCnt[x]=1|0 Settings are *only* either 1 (on) or 0 (off).","title":"AdvEvent Section [AdvEvent]"},{"location":"macros/gallery/modbot/#examples","text":"Shaman cannibalization example. In this case, settings like AEEventMinMana and AEMinMana both refer to the shaman as he is both the event triggerer as well as the target of the event: AEGem1=5 AESpell1=Cannibalize III AESpellFoci1= AEDurMod1=0 AEDelay1=0 AEEventMinMana1=0 AEEventMinHP1=30 AEMinMana1=0 AEMaxMana1=90 AEMinHP1=50 AEMaxHP1=100 AETarType1=self AESpellAlias1=canni AEAnnounce1= Necromancer mana feed example (where the necro is feeding mana to another character). In this case, AEEventMinMana refers to the necro's mana and AEMinMana refer to the mana of the target (as defined by AETarType): AEGem2=4 AESpell2=Rapacious Subvention AESpellFoci2= AEDurMod2=0 AEDelay2=0 AEEventMinMana2=50 AEEventMinHP2=50 AEMinMana2=20 AEMaxMana2=45 AEMinHP2=0 AEMaxHP2=100 AETarType2=clr enc AESpellAlias2=manafeed AEAnnounce2=/bc","title":"Examples"},{"location":"macros/gallery/modbot/#advcure-section-advcure","text":"AQCount=# Number of cures you plan to have. AQCheckTime=# How often to check for cures in seconds AQGem[x]=source Designate what the source of the spell is. Valid entries: gem number, alt, ability, item, script, potionbelt Note that 'potionbelt' does not require a slot number. Examples: AQGem1=3 Cast this spell from gem 3 AQGem1=alt This spell is an alternative advancement ability AQSpell[x]=source name Valid entries: spell name, item name, alternate ability name, ability name, script name Examples: AQSpell1=Minor Shielding This would be generally be paired with an ABGem1 entry indicating which spell gem to cast Minor Shielding from. AQSpell1=Uber Wand Thingy of Uberness This would be generally be paired with an AQGem1 entry indicating that the source of this spell is an item. * AQSpellFoci[x]=setname * Bandolier set name to swap in before casting this spell. * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets (e.g. -bandolier|) * AQSpellCureType[x]=cure type * Valid entries (type of cure needed): Cursed, Diseased, Poisoned, EnduDrain, LifeDrain, ManaDrain, Blinded, CastingLevel, Charmed, Feared, Healing, Mesmerized, Resistance, Rooted, Silenced, Slowed, Snared, SpellCost, SpellSlowed, SpellDamage, Trigger, All Set the cure type to the best match for the spell, but keep them in order of best cure first. The first cure in your .ini matching the cure type needed (or if you set to \"All\") will be the first attempted spell. Cures *can* always be interrupted by any heal spell, unless you're using a cure spell that's already listed in your heal section (e.g. Cleric's \"Word of XXX\" line of spells may or may not interrupt for heals depending on where they are in your heal section). Modcure.inc will cast once per loop and then return to the main loop, so setting group cures (like Radiant Cure) toward the top would be best Be specific on cure types to avoid recasting the same cure over and over if it won't cure you. AQSpellMinMana[x]=# Minimum mana to have in order to attempt this cure. AQSpellRecast[x]=# Number of times to recast this spell for fizzles, interrupts, etc. AQTarCnt[x]=# How many targets should be present to cast this spell, if set to 0, this spell will not be auto-casted. AQTarType[x]=target type Valid target types are as follows (please note which entries can be used with others and which are exclusive): ShortClassName Used for class specific buffs (ie. haste on \"war\"). Valid entries are: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec. Note that any or all of these entries can be used at the same time. self Used for self only spells. grp for Group spells (e.g. ABTarType1=self grp) pet used to cast buffs on all pets in the group. mypet used to cast on only your pet. Please note that pet and mypet are mutually exclusive. cbt for spells to be casted during combat (e.g. an entry for Yaulp would be ABTarType1=self cbt). Please note that any NPC within radius that is not on your exclude list will cause 'cbt' buffs to fire. If you want to buff next to NPCs (and don't plan to kill them), use the exclude command. If you later decide to kill whatever mob you've excluded, use the include command to remove it from list. The macro does not check combat state of the tank for buffs. idle used with cbt for spells to be casted when in or out of combat (e.g. if you wanted to keep Yaulp on at all times (in AND out of combat), your entry would be ABTarType1=self cbt idle). Please note that idle is only used in ABTarType when cbt is also used. aura used to cast an aura - must be used with self (e.g. ABTarType1=self aura) Note that Bard auras *REQUIRE* ABSpellAlias to be set up to cast, and modbuff will use CastCall to actually cast the aura. * tank used to cast only on the designated group tank. Tank designation is keyed from either the TankName variable in the setting section (see above) or by setting a toon to Main Tank (Group.Maintank) using the Roles function. * Default entry: *ABTarTypeX=tank war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self mypet grp pet cbt idle* Please note that the default entry includes settings that do not work together. Specifically, tank , self and mypet are meant to be used by themselves. If you want to cast the same buff on yourself, your pet and the tank, create them as seperate buff entries. * AQSpellAlias[x]=spell alias * Enter an \"alias\" for the spell. This is often a short, easier to use name (e.g. the alias for Radiant Cure might be RC). Please note that you can NOT have spaces in your alias names. AQAnnounce[x]=channel Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for further explanation. Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example: ABAnnounce1=/bc [+r+]Cured +x+ \\<\\< +y+ %t +x+ >> with +g+ %s [+x+] '''AQSpellCntr[x]= Currently not used for anything, so don't worry about it :)","title":"AdvCure Section [AdvCure]"},{"location":"macros/gallery/modbot/#advpull-section-advpull","text":"This section is under development. APCheckTime=# Time (in seconds) to wait in between AdvPull executions. Default is 0. APRadius=# The distance around your target to check for more mobs as defined by APMobMax (basically, a check for adds). Default is 40. * APMobMax=# * The max amount of mobs (target + adds) you will allow before pulling. Default is 1. If there are less than APMobMax mobs within APRadius of your target, it will pull the mob. * APScript= Scriptname * Name of script to define how you want to tag the mob (throw stone, ranged, item clicky, spell, etc) and executes when you have a mob targeted to pull. The script name must have at least 3 characters. Default is empty. **YOU MUST CREATE A SCRIPT TO TAG THE MOB!** Modbot Scripts APPath= Pathname The name of the path to run for pulling/movement, as defined in your MBWayPnt.ini (See ModMove for more details on creating a path). The path name must be at least 3 characters. Default is empty. * APRetPath= ReturnPathname * The name of the path to use to move back to camp. The path must be defined in your MBWayPnt.ini file. The path name must be at least 3 characters. Default is empty. Mostly used for when the path back to camp is a different one than used to pull mobs (ie, you go through a one-way wall to pull or intentionally fall off a ledge and have to run the long way back). If you want to return the same way you came, you can just use WPLoop=TRUE in MBWayPnt.ini instead of having to set up a second path. * APBefore= * Command or series of commands (with multiline) to execute before the rest of AdvPull section. Must be at least 3 characters. Default is empty. * APAfter= * Command or series of commands (with multiline) to execute after AdvPull has finished. Default is empty. * APAnnounce= * A way to announce what you have pulled. Default is empty. * Note: This is not just a chat channel, but a place to put a full incoming message, ie: * APAnnounce=/gsay Incoming -[ %t ]- * APRetries=1 * Number of times to attempt to pull a mob in case it fails the first try (line of site, etc). This will strafe left and right on subsequent attempts. Default is 1.","title":"AdvPull Section [AdvPull]"},{"location":"macros/gallery/modbot/#mbcommoninc-settings","text":"The location and name of MBCommon.inc can now be set by changing line 38 in Modbot.mac. /declare MBCommon string outer MBCommon.ini It defaults to the ./macros folder, but the line can be changed to any path.","title":"MBCommon.inc Settings"},{"location":"macros/gallery/modbot/#settings-section","text":"LoadAlias [1,0] This is an on / off setting to load the \"/alias /mb /echo MB-\" alias for commands. It is set to 0 after first run when alias should be loaded, but you can set to 1 to add it back to your Macroquest.ini file if it gets deleted. IniLocation Path to your MB_.ini files. Must end in / or if changed from default. LootIni [Loot.ini] This setting can be used to change the location of your Loot.ini file as well as the name. MBWayPntLocation [MBWayPnt.ini] This setting can be used to change the location of your MBWayPnt.ini file as well as the name of the file. CheckTargetDebuffs [TRUE|FALSE] This setting toggles on/off the ${Target.Buff} checking for debuffs (essentially this checks if the spell \"Stacks\" before casting.) Each debuff listed in MBCommon.ini now has an 'OverwritesID=' entry. This entry is meant for a list of debuffs that the spell doesn't 'Stack' with, but you want the debuff to overwrite.","title":"Settings Section"},{"location":"macros/gallery/modbot/#spell-section","text":"Zone.ShortName - List of mobs excluded for that zone in a pipe -\"|\" delimited string. This setting is not present for any zones which you have nothing excluded. Immune lists for each spell are saved in their own section along with a MaxLevel=[100] setting. Change to the max level of the spell. As the macro finds mobs that are immune to the spell, the zone shortname is added to the entry as a variable along with the mob names in pipe delimited format. Mobs that are marked immune to debuffs can be marked in MBCommon.ini with an asterisk to allow for some names that have only some immune, and some not. For example, Dreadspire has some body types with same names where some are immune to mez, and some not (e.g. an aid to the Seneschal - some body types with that mob name are immune to befuddle, and others aren't). By adding an asterisk to the end of the name in the exclude section, the macro will repeat attempts to mez, etc. that mob type (rather than just marking them immune and not casting at all): _DreadspireImmune=|an aid to the Seneschal_|* The ADIfSpellImmune script, if defined, will only run if the mob is found to be immune after cast, but the astrik will not be replaced, and the spell will only cast once allowing the spell to still attempt on the next mob it hasn't been cast on. Overwrites= list of debuffs that the spell doesn't 'Stack' with, but you want the debuff to overwrite. This does require user intervention, and there's no way to set it auto-set them. MaxLevel= maximum level of mob that can be affected by debuff An entry in the spell section might look something like this: [Mystify] MaxLevel=83 thalassius_bImmune=|a sea mephit defender||a sea mephit evoker| OverwritesID=|14569|14570|14530|","title":"Spell Section"},{"location":"macros/gallery/modbot/#modbot-class-ini-examples","text":"ModBot`` ``Class`` ``INI`` ``Examples`` ``linked`` ``to`` ``another`` ``page ModBot`` ``v4`` ``Class`` ``INI`` ``Examples`` ``linked`` ``to`` ``another`` ``page","title":"ModBot Class INI Examples"},{"location":"macros/gallery/modbot/#scripts-and-modbot-variable-usage","text":"ModBot allows VERY customizable sripts to such an extent you can actually program your own sub-procedures within your INI file. You can harness ANY global variable within ModBot to use with the scripts. Scripts match MQ2 code to every extent, below are several examples of scripts and common variables one would use to create complex scripts","title":"Scripts and ModBot Variable Usage"},{"location":"macros/gallery/modbot/#understanding-scripts-syntax-example-how-to","text":"Scripts General Info Scripts can be difficult and there are some MQ2 commands that give scripts trouble. Keep this in mind and prepare to post you script code should you have problems. No script can take more then 15 seconds to complete, however this can be modified in the code directly in the Sub MBScript or even changed in the script you create ({Timer} is the var) Scripts are executed from top to bottom and you are allowed to use a label :Top (e.g. /goto :Top), in your script. The /goto :Top option allows for complex loops to take place directly from code in the INI file If you use ANY INI generated ModBot global string variables that have spaces in your custom scripts they MUST be encapsulated by 2 apostrophies when used in the script, see PetCast example below. * Reserved Characters :*These characters can not be used in scripts ::*$ \" :*'' Two apostrophies are for passing variables with spaces in script code. Use them to replace quotes. Syntax [Script-] Commands= C1= . Cn= What does a script look like in your INI file: [Script-HelloWorld] Commands=2 C1=/echo Hello World C2=/if ({Timer}>50) /varset Timer 5s C3=/goto :Top In the example above it will echo to the MQ2ChatWindow \"Hello World\" for 5s. Notice how I do NOT use a $ to reference the \"Timer\" variable. How To use or launch a script :*/bc bob script HelloWorld :*You can set XXGem1=script and XXSpell=HelloWorld as a spell name for any of the spells you've configured in ModBot, and it will be triggered when that event, heal, etc would take place. Please see the below examples for complex script code. Common Variables (You can use ANY mq2 variable without the $, you can even CREATE new global vars and use them, all from the INI file via Scripts) {ACState} = If greater than 0, ModBot thinks you are in combat {ACMATarget} = The target of the main assist {CampStatus} = If greater than 0, means I've been given a /bc makecamp command {FollowFlag} = If greater than 0, means I should be following something {TankName} = The acting main assist {Me}, {Spawn}, etc = See MQ2 Manual Examples This example is triggered from an event OR a heal and it will remove the necro \"Lich\" spell: [AdvHeal] AHGem3=Script AHSpell3=DropLich AHSpellFoci3= AHDurMod3=0 AHSpellAlias3=droplich AHSpellMinMana3=0 AHAnnounce3=/bc AHTarCnt3=1 AHClass3=pc hp40 nec [AdvEvent] AEGem3=Script AESpell3=DropLich AESpellFoci3= AEDurMod3=0 AEDelay3=0 AEEventMinMana3=100 AEEventMinHP3=40 AEMinMana3=20 AEMaxMana3=100 AEMinHP3=0 AEMaxHP3=90 AETarType3=tnt AESpellAlias3= AEAnnounce3=/bc [Script-DropLich] Commands=1 C1=/if ({Me.Buff[Lich].ID}) /notify BuffWindow Buff{Math.Calc[{Me.Buff[Lich].ID}-1].Int} leftmouseup This example is launched via the ACBefore command from the [Melee] section, I've got Sneak Attack bound to hotkey 6. What the bot will do is to trigger Sneak Attack, attempt proper position, backstab the mob, then revert to \"normal\" [Script-SneakAttack] Commands=10 C1=/if ({Melee.Enable}) /melee plugin=0 C2=/if ({Me.CombatAbilityReady[Sneak Attack]}) /keypress 6 C3=/if (!{Me.Moving} && !{Stick.MoveBehind} && {Stick.Distance}!={Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}+5]}) /stick {Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}+5]} behind id {ACMATarget} C4=/if ({Target.ID}!={ACMATarget}) /multiline ; /target id {ACMATarget};/delay 5 C5=/if ({Melee.BackAngle}>60 || {Melee.BackAngle}<-60) /goto :Top C6=/if ({Target.Distance3D}>={Spawn[{ACMATarget}].MaxRangeTo}) /stick {Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}-5]} hold behind id {ACMATarget} C7=/if ({Target.Distance3D}>={Spawn[{ACMATarget}].MaxRangeTo}-3) /goto :Top C8=/delay 5 C9=/if ({Me.AbilityReady[Backstab]}) /doability backstab C10=/melee plugin=1 This example will confirm you are hidden and sneaking when I'm at \"camp\" and not sneaking when I'm in follow mode. It will also re-engage if MQ2Melee lost \"stick\" because of too much mob movement [Script-HideSneak] Commands=4 C1=/if ({FollowFlag} && {Me.Sneaking}) /multiline ; /doability sneak;/return C2=/if (!{FollowFlag} && !{ACState} && {Select[{MakeCamp},on]} && {Me.AbilityReady[Hide]} && !{Me.Moving} && !{Melee.Combat}) /multiline ; /doability Hide;/delay 5 C3=/if (!{FollowFlag} && !{ACState} && {Select[{MakeCamp},on]} && {Me.AbilityReady[Sneak]} && !{Me.AbilityReady[Hide]} && !{Me.Moving} && !{Melee.Combat}) /multiline ; /doability Sneak;/delay 5 C4=/if ({ACState} && {ACMATarget} && {Target.ID} && {Me.AbilityReady[Backstab]}) /keypress q Example of createing a new global var and an example of using it [Script-EventsOff] Commands=2 C1=/if (!{Defined[CheckSlow]}) /declare CheckSlow int outer 1 C2=/if ({DoEvents}) /multiline ; /varset DoEvents FALSE;/varset CheckSlow 1 [Script-EventsOn] Commands=2 C1=/if (!{Defined[CheckSlow]}) /declare CheckSlow int outer 3 C1=/if (!{DoEvents}) /multiline ; /varset DoEvents TRUE;/varcalc CheckSlow {CheckSlow}+1 [Script-IsSlowed] Commands=3 C1=/if (!{Defined[CheckSlow]}) /multiline ; /varset DoEvents FALSE;/return C2=/if ({CheckSlow}<=4) /varset DoEvents FALSE C3=/if ({CheckSlow}>4) /varset DoEvents TRUE;/varset CheckSlow 1 Example of using a ModBot global string. This will create a new pet, say when your existing pet is about to die :*Please note in the INI snippets below that the INI generated global string PetCast has a space so to pass this properly in the script, you must encapsulated in quotes, script code uses apostrophies in place of quotes. [Settings] PetCast=Invoke Death|gem1 [Script-NewPet] Commands=4 C1=/multiline ; /casting ''{PetCast}'' -maxtries|5;/delay 2s C2=/if ({Cast.Timing}>600) /goto :Top C3=/multiline ; /if ({Me.Pet.ID}) /pet go away;/delay 2s !{Me.Casting.ID} C4=/if (!{Me.Pet.ID}) /goto :Top Example of using PetCast for a cleric hammer, to be called from a ACBefore command [Settings] DoPet=FALSE PetCast=Unswerving hammer of awesomeness|gem1 [Melee] ACBefore=/if (!{Me.Pet.ID} && {ACMATarget} && {Spawn[{ACMATarget}].Type.Equal[NPC]} && {Spawn[{ACMATarget}].Distance3D}<={ACLeash}) /call MBScript SumHam [Script-SumHam] Commands=2 C1=/if ({Target.ID}!={ACMATarget}) /multiline ; /target id {ACMATarget};/delay 5 C2=/if (!{Me.Pet.ID}) /multiline ; /casting ''{PetCast}'' -maxtries|2;/delay 3s Example of a CH script to be run from a non cleric .ini (warrior) I figure I might as well be posting some of the script versions of other macros that I've been seeing around, but written my own thing so I could just keep modbot running. Modbot script version of CH chain that seems to work, though might have problems I haven't noticed.... I use this with a hotkey from my tank -```\"/mb script chain 50\" (yes it's in MB\\_tank.ini - NOT the cleric.ini.. ) It finds all clerics in netbots, then runs through the list telling each to cast CH after the delay you specify. This script does require the clerics to all be running modbot with an alias of CH for complete heal spell, `and connection to the same EQBCS server. `Commands=13` `C1=/multiline ; /declare clrlist string local;/declare x int local 1;/declare StopLoop bool local FALSE` `C2=/if ({Spawn[{NetBots.Client.Arg[{x}]}].Class.ShortName.Equal[clr]}) /varset clrlist {clrlist} {NetBots.Client.Arg[{x}]}` `C3=/if ({x} < {NetBots.Counts}) /multiline ; /varset a 1;/varcalc x {x}+1` `C4=/echo Clerics: {clrlist} casting {Math.Calc[{Param1}/10]}s apart` `C5=/varset x 0` `C6=/varset Timer 100` `C7=/varcalc x {x}+1` `C8=/if ((!{Spawn[{clrlist.Arg[{x}]}].ID} || {NetBots[{clrlist.Arg[{x}]}].PctMana} < 3) && {x} <= {clrlist.Count[ ]}) /varset a 5` `C9=/if ((!{Spawn[{clrlist.Arg[{x}]}].ID} || {NetBots[{clrlist.Arg[{x}]}].PctMana} < 3) && {x} > {clrlist.Count[ ]}) /varset a 4` `C10=/bc {clrlist.Arg[{x}]} cast ch` `C11=/delay {Param1}` `C12=/if ({x}>{clrlist.Count[ ]}) /varset a 4` `C13=/if (!{StopLoop}) /varset a 5` ````` Posted By Ptarp Tue Apr 12, 2011 1:01 am. Moved to Wiki by Arblis\\` ## Script Examples [```Script`` ``examples`` ``linked`` ``to`` ``another`` ``page```](https://macroquest.org/wiki/index.php/Script_Examples) ## Related Include Files Information and Examples [```Related`` ``Include`` ``files`` ``(modloot,`` ``AAPurchase,`` ``modmove,`` ``etc.)`` ``information`` ``and`` ``INI`` ``examples`` ``linked`` ``to`` ``another`` ``page```](https://macroquest.org/wiki/index.php/Related_Include_Files) ## Tips, Tricks and Troubleshooting Here you will find a collection of little gems pulled from the ModBot thread. At some point, this may morph in to a handy little troubleshooting flowchart, but for now it will serve as kind of a tidbit catchall for things that would otherwise get lost in the hundreds of thread pages... Please note- when you are posting on the forum for help (after reading this wiki of course!\\) include the MQ2 version, winEQ version and the EQ install type \\(Titanium / sod / UF) `Although covered previously on the Wiki quite a few times - If you are having trouble with mobs keeping you from doing non combat things (buff, loot etc) try using the following:` `exclude <mob name,save>` ````` \"What I do.. (while targeted on the mob you want to ignore)```On my tank I have a hotkey. I target the mob to exclude and press it.`` `First line is /bcaa //mb exclude ${Target.CleanName}` `second line - /bcaa //mb exclude save` ````` /echo ${ADMobCount} (use this after your exclude to see if the char in question has any mobs on the exclude list. Can be used with /bcaa to see all of your toons mobcounts)```If you fight near non-combatant mobs, always use the exclude command so the macro doesn't \"see\" them, and set your Radius= in your toon's .ini file to a minimum.`` `I normally keep mine at around 60 to 80 depending on what I'm doing. Remember you can \"/varset Radius 50\" or something in game with the mac running to find a happy medium.\" -Ptap Mon Sep 20, 2010 1:18 pm` `It also sounds like an exclude hotkey, and pause hotkey would be your best friends.. Here's a few of the hotkeys I use.` `_EQTitan.ini in your everquest folder.` ````` Code:```[Socials]`` `Page10Button1Name=TankName` `Page10Button1Color=0` `Page10Button1Line1=/bcaa //varset TankName ${Me.Name}` `Page10Button7Name=Masters` `Page10Button7Color=0` `Page10Button7Line1=/bcaa //varset MasterList ${NetBots.Client}` `Page10Button5Name=pause` `Page10Button5Color=0` `Page10Button5Line1=/bcaa //mb mbpause on` `Page10Button11Name=unpause` `Page10Button11Color=0` `Page10Button11Line1=/bcaa //mb mbpause off` `Page10Button6Name=follow` `Page10Button6Color=0` `Page10Button6Line1=/bca follow` `Page10Button12Name=stop` `Page10Button12Color=0` `Page10Button12Line1=/bcaa //mb stop` `Page10Button10Name=letsroll` `Page10Button10Color=0` `Page10Button10Line1=/bcaa //mb letsroll` `Page2Button1Name=corpse` `Page2Button1Color=0` `Page2Button1Line1=/corpse` `Page2Button6Name=sellitem` `Page2Button6Color=0` `Page2Button6Line1=/ini loot.ini ${Cursor.Name.Left[1]} \"${Cursor.Name}\" Sell` `Page8Button1Name=include` `Page8Button1Color=0` `Page8Button1Line1=/bcaa //mb include ${Target.CleanName}` `Page8Button1Line2=/pause 5` `Page8Button1Line3=/bcaa //mb exclude save` `Page8Button7Name=exclude` `Page8Button7Color=0` `Page8Button7Line1=/bcaa //mb exclude ${Target.CleanName}` `Page8Button7Line2=/pause 5` `Page8Button7Line3=/bcaa //mb exclude save` ````` I normally just keep my keys on page 10 and click from there, but as you can see there's include and exclude keys on pg 8 and another on pg2 I use for setting items to \"sell\" in my loot.ini file. The /bcaa stuff might not work for some depending on plugin versions, so that cn be replaced with a /bca and /mb on a second line. I find it very handy to have some keys I can press quickly, and always either pause all my toons or exclude npcs before I go into areas that I don't want something attacked. Having trouble with your background session toons not moving properly? You might try this: WinEQ=on```to the [Defaults] section of your mq2moveutils.ini. TrueHeading=off might help also in the same section, though I'm not sure if that's needed.`","title":"Understanding scripts, syntax, example, how to"},{"location":"macros/gallery/modbot/#do-your-toons-wander-where-they-are-not-supposed-to","text":"Thanks to Toomanynames for this tidbit: Those who have toon wandering issues or whatnot - when you say \"radius\", what radius do you mean, modbot, melee, makecamp? There are actually three things that work together to make certain that your bots fight and return to a certain area - MQ2MoveUtils, MQ2Melee and the MB_charname.ini file (from ModBot). /makecamp x x x This is a MQ2MoveUtils setting that needs to be properly configured. For example: /makecamp radius x leash=on (or something like that) Please see the MQ2MoveUtils (PMS version) [ http://www.macroquest.org/phpBB3/viewtopic.php?f=31&t=15909 thread ] and MQ2MoveUtils:v11 for more detailed information. * /melee x x x * This is an MQ2Melee setting. Those ranges and settings come into play and must be set accordingly to work WITH modbot Please see the MQ2Melee [ http://www.macroquest.org/phpBB3/viewtopic.php?f=50&t=17045 thread ] for more detailed information. * Modbot INI * Radius = the max the toon will \"See\" thiings * ACLeash = the max a toon will engage things If you don't properly configure MQ2MoveUtils, MQ2Melee and ModBot and confirm those settings are within or compatible with ModBot \"ranges\" then you'll have issues.","title":"Do your toons wander where they are not supposed to?"},{"location":"macros/gallery/necro-helper/","tags":["macro"],"text":"Necro Helper \u00b6 This is a simple helper macro I use when playing my necro toon. It does the following: At top left of display (under the lag-o-meter) Displays your state: Sitting, standing, feign etc (I wanted this mostly because the spectre animation when lich'ed isn't visibly different for sit/stand) Displays class, level and %HP of selected mob/npc Tracks regular and AA experience Displays name of first GM found in zone Shows personal tribute status on/off Can also do a /gsay to tell your group what spells you are casting In middle of screen Watches DoT spells cast on a mob and displays time left to run Important note. You need to update the code lines: /varset SpellInfo >>> Your timer, your damage, your other text <<< </code> to your preferences e.g.: /varset SpellInfo 2 minutes, 68 dpt, 70% snare </code> The macro code (for your Release\\Macros directory): | | NecroHelper.mac by pw | | Usage: | | /macro NecroHelper | | For group use (will report your casting to group in /gsay): | | /macro NecroHelper 1 | | This macro will react to spells cast on your target. | It displays the time remaining on the spell cast, the | spell cast, and the mob cast upon. | - Tracks XP and AAXP gained. | - (Optionally) Keeps group informed of your casting. | | Currently it will display 6 DoTs at once. | It will refresh any identical buff recast on the same mob | It fills in timer slots from top to bottom as available | Displays timer list full when max timers are running | | DoT timer Code taken from HudTimer by seagreen | XP tracker Code taken from perfect XP tracker by Raebis (with tweaks from Phoenix) | #turbo 40 #event Exp \"#*#party experience!!\" #event Exp2 \"You gain experience!!\" #event Casting \"You begin casting #1#\" #event Fizzle \"#*#Your spell fizzles#*#\" #event Interrupt \"#*#Your casting has been interrupted#*#\" #event Interrupt \"#*#Your spell is interrupted.#*#\" | | TODO: Need to add the full set of Necro Damage/debuff over time spells | | Each time an event is added for a new spell, you need a Sub Event_XXXX | below. | #event EmbracingDarkness \"#*#is engulfed in an embracing darkness#*#\" #event FPOK \"#*#is enveloped in a funeral pyre#*#\" #event Splurt \"#*#begins to splurt#*#\" #event SaryrnKiss \"#*#screams in torment#*#\" #event GreaterImmobilize \"#*#adheres to the ground#*#\" #event Shackle \"#*#is hindered by a shackle of spirit#*#\" #event DarkPlague \"#*#skin is covered in black spots#*#\" #event DesecratingDarkness \"#*#is covered in bubbling black shadows#*#\" #event FoD \"#*#is pierced by a dark fang#*#\" #event PoM \"#*#body is enveloped in the pyre of Mori#*#\" #event ChaosVenom \"#*#blood burns with the venom of chaos#*#\" #event DarkNightmare \"#*#mind is consumed in dark nightmares#*#\" #event NightFire \"#*#blood boils through#*#\" #event DeathSilence \"#*#stops moaning#*#\" #event BOT \"#*#veins turn a vile shade of green#*#\" #event ChaosPlague \"#*#muscles begin to decay#*#\" #event GripOfMori \"#*#staggers under the grip of Mori#*#\" #event TormentOfShadows \"#*#is gripped by shadows of fear and terror#*#\" #event DarkHold \"#*#stops moving#*#\" #event CurseOfMortality \"#*#recognizes their fragile mortality#*#\" #event SeveransRot \"#*#muscles begin to decay#*#\" #event CoruscatingDarkness \"#*#is covered in coruscating black shadows#*#\" #event AshengatePyre \"#*#body is consumed in a pyre of Ashengate#*#\" #event VakkdrasSicklyMists \"#*#chokes on a sickly green mist#*#\" #event WiltingFoliage \"#*#wilts#*#\" #event EranonDecay \"#*#muscles begin to decay#*#\" #event AuroralDarkness \"#*#is covered in coruscating black shadows#*#\" #event VisziajPallidHaze \"#*#chokes on a sickly green mist#*#\" #event AnathemaOfLife \"#*#recognizes their fragile mortality#*#\" #event PyreOfTheLifeless \"#*#is enveloped in the pyre of the lifeless#*#\" #event SearingShadow \"#*#is crossed by a searing shadow#*#\" #event ReaversPyre \"#*#in a pyre of cinders#*#\" #event VenonVenom \"#*#veins turn a vile shade of green#*#\" Sub Main /declare Exper float outer /declare AAExp float outer /declare LDRExp float outer /varset Exper ${Me.PctExp} /varset AAExp ${Me.PctAAExp} /varset LDRExp ${Me.PctGroupLeaderExp} /declare counter int outer /declare DebuffSpell string outer /declare LastSpell string outer /declare SpellType string outer /declare SpellInfo string outer /declare HudArrayNPCName[6] string outer /declare HudArrayID[6] int outer /declare HudArraySpell[6] string outer /declare HudArrayDuration[6] string outer /declare HudArrayTime[6] float outer /declare groupmode bool outer /for counter 1 to 6 /varset HudArrayID[${counter}] -1 /varset HudArraySpell[${counter}] none /varset HudArrayDuration[${counter}] none /varset HudArrayTime[${counter}] 0 /varset HudArrayNPCName[${counter}] none /next counter ```` /echo Necro Helper now ACTIVE \\ /if (${Param0}) { /echo Group mode /varset groupmode 1 } else { /echo Not Group mode /varset groupmode 0 } :mainloop /doevents /call CheckTimer /delay 1s /goto :mainloop /return |----------------------------------------- | Here's our first sub, tracking only grouped xp.... |----------------------------------------- Sub Event_Exp /varset AAExp ${Math.Calc[${Me.PctAAExp}-${AAExp}]} /varset Exper ${Math.Calc[${Me.PctExp}-${Exper}]} /varset LDRExp ${Math.Calc[${Me.PctGroupLeaderExp}-${LDRExp}]} /echo EXP: ${Exper} (${Me.PctExp}%) - AAXP: ${AAExp} (${Me.PctAAExp}%) - LDRXP: ${LDRExp} (${Me.PctGroupLeaderExp}) /popup ${Exper} (${Me.PctExp}%) - AAXP: ${AAExp} (${Me.PctAAExp}%) - LDRXP: ${LDRExp} (${Me.PctGroupLeaderExp}) /varset Exper ${Me.PctExp} /varset AAExp ${Me.PctAAExp} /varset LDRExp ${Me.PctGroupLeaderExp} /return |----------------------------------------- | Here's our second sub, tracking solo XP. | Since you dont get LExp when solo, removed the popup/echo. |----------------------------------------- Sub Event_Exp2 /varset AAExp ${Math.Calc[${Me.PctAAExp}-${AAExp}]} /varset Exper ${Math.Calc[${Me.PctExp}-${Exper}]} /varset LDRExp ${Math.Calc[${Me.PctGroupLeaderExp}-${LDRExp}]} /echo EXP: ${Exper} (${Me.PctExp}%) - AAXP: ${AAExp} (${Me.PctAAExp}%) /popup ${Exper} (${Me.PctExp}%) - AAXP: ${AAExp} (${Me.PctAAExp}%) /varset Exper ${Me.PctExp} /varset AAExp ${Me.PctAAExp} /varset LDRExp ${Me.PctGroupLeaderExp} /return | | TODO: Need to add the full set of Necro Damage/debuff over time spells | When adding new ones, be sure to spell the spell's name correctly in | the /varset line, otherwise the timer will not be calculated correctly. | Sub Event_SaryrnKiss /varset DebuffSpell Saryrn's Kiss /varset SpellType DOT /varset SpellInfo 1 minute timer, 198 damage per tick /call SetupTimer /call ReportCast /return Sub Event_DesecratingDarkness /varset DebuffSpell Desecrating Darkness /varset SpellType SNARE /varset SpellInfo 2 minute timer, 96 damage per tick, 75% movement reduction /call SetupTimer /call ReportCast /return Sub Event_EmbracingDarkness /varset DebuffSpell Embracing Darkness /varset SpellType SNARE /varset SpellInfo 2 minute timer, 70 damage per tick, 70% movement reduction /call SetupTimer /call ReportCast /return Sub Event_FPOK /varset DebuffSpell Funeral Pyre of Kelador /varset SpellType DOT /varset SpellInfo 45 second timer, 310 damage per tick /call SetupTimer /call ReportCast /return Sub Event_BOT /varset DebuffSpell Blood of Thule /varset SpellType DOT /varset SpellInfo 45 second timer, 350 damage per tick /call SetupTimer /call ReportCast /return Sub Event_Splurt /varset DebuffSpell Splurt /varset SpellType DOT /varset SpellInfo 1.5 minute timer, 30-190 damage per tick /call SetupTimer /call ReportCast /return Sub Event_GreaterImmobilize /varset DebuffSpell Greater Immobilize /varset SpellType ROOT /varset SpellInfo 1 minute timer /call SetupTimer /call ReportCast /return Sub Event_Shackle /varset DebuffSpell Shackle of Spirit /varset SpellType SLOW /varset SpellInfo 3.5 minute timer, 70% attack speed reduction /call SetupTimer /call ReportCast /return Sub Event_DarkPlague /varset DebuffSpell Dark Plague /varset SpellType DOT /varset SpellInfo 2 minute timer, 180 damage per tick /call SetupTimer /call ReportCast /return Sub Event_FoD /varset DebuffSpell Fang of Death /varset SpellType DOT /varset SpellInfo 1 minute timer, 370 damage per tick /call SetupTimer /call ReportCast /return Sub Event_POM /varset DebuffSpell Pyre of Mori /varset SpellType DOT /varset SpellInfo 1 minute timer, 419 damage per tick /call SetupTimer /call ReportCast /return Sub Event_ChaosVenom /varset DebuffSpell Chaos Venom /varset SpellType DOT /varset SpellInfo 35 second timer, 460 damage per tick /call SetupTimer /call ReportCast /return Sub Event_DarkNightmare /varset DebuffSpell Dark Nightmare /varset SpellType DOT /varset SpellInfo 30 second timer, 591 damage per tick /call SetupTimer /call ReportCast /return Sub Event_NightFire /varset DebuffSpell Night Fire /varset SpellType DOT /varset SpellInfo 45 second timer, 335 damage per tick /call SetupTimer /call ReportCast /return Sub Event_DeathSilence /varset DebuffSpell Death's Silence /varset SpellType MEZZ /varset SpellInfo 30 second timer /call SetupTimer /call ReportCast /return Sub Event_ChaosPlague /varset DebuffSpell Chaos Plague /varset SpellType DOT /varset SpellInfo 1.5 minute timer, 249 damage per tick /call SetupTimer /call ReportCast /return Sub Event_GripOfMori /varset DebuffSpell Grip of Mori /varset SpellType DOT /varset SpellInfo 1 minute timer, 194 damage per tick /call SetupTimer /call ReportCast /return Sub Event_TormentOfShadows /varset DebuffSpell Torment of Shadows /varset SpellType SNARE /varset SpellInfo 1.5 minute timer, 75 damage per tick /call SetupTimer /call ReportCast /return Sub Event_DarkHold /varset DebuffSpell Dark Hold /varset SpellType MEZZ /varset SpellInfo Mezzed for up to 5 ticks /call SetupTimer /call ReportCast /return Sub Event_CurseOfMortality /varset DebuffSpell Curse of Mortality Rk. II /varset SpellType DOT /varset SpellInfo 30 second timer, 727 damage per tick /call SetupTimer /call ReportCast /return Sub Event_SeveransRot /varset DebuffSpell Severan's Rot Rk. II /varset SpellType DOT /varset SpellInfo 1 minute 30 second timer, 179-320 damage per tick /call SetupTimer /call ReportCast /return Sub Event_CoruscatingDarkness /varset DebuffSpell Coruscating Darkness Rk. II /varset SpellType SNARE /varset SpellInfo 2 minute timer, 118 damage per tick, 75% movement reduction /call SetupTimer /call ReportCast /return Sub Event_AshengatePyre /varset DebuffSpell Ashengate Pyre Rk. II /varset SpellType DOT /varset SpellInfo 30 second timer, 1013 damage per tick /call SetupTimer /call ReportCast /return Sub Event_VakkdrasSicklyMists /varset DebuffSpell Vakk`dra's Sickly Mists Rk. II /varset SpellType DOT /varset SpellInfo 45 second timer, 598 damage per tick /call SetupTimer /call ReportCast /return Sub Event_WiltingFoliage /varset DebuffSpell Wilting Foliage /varset SpellType DOT /varset SpellInfo 30 second timer, 698 damage per tick /call SetupTimer /call ReportCast /return Sub Event_EranonDecay /varset DebuffSpell Eranon's Decay /varset SpellType DOT /varset SpellInfo 1 minute 30 timer, 400 damage per tick /call SetupTimer /call ReportCast /return Sub Event_AuroralDarkness /varset DebuffSpell Auroral Darkness /varset SpellType DOT /varset SpellInfo 2 minutes, 137 damage per tick /call SetupTimer /call ReportCast /return Sub Event_VisziajPallidHaze /varset DebuffSpell Visziaj's Pallid Haze /varset SpellType DOT /varset SpellInfo 45 second timer, 695 damage per tick /call SetupTimer /call ReportCast /return Sub Event_AnathemaOfLife /varset DebuffSpell Anathema of Life Rk. II /varset SpellType DOT /varset SpellInfo 30 second timer, 845 damage per tick /call SetupTimer /call ReportCast /return Sub Event_PyreOfTheLifeless /varset DebuffSpell Pyre of the Lifeless /varset SpellType DOT /varset SpellInfo 54 second timer, 599 damage per tick /call SetupTimer /call ReportCast /return Sub Event_SearingShadow /varset DebuffSpell Searing Shadow /varset SpellType DOT /varset SpellInfo 90 second timer, 720 damage per tick /call SetupTimer /call ReportCast /return Sub Event_ReaversPyre /varset DebuffSpell Reaver's Pyre /varset SpellType DOT /varset SpellInfo 30 second timer, 1130 damage per tick /call SetupTimer /call ReportCast /return Sub Event_VenonVenom /varset DebuffSpell Venonscale Venom /varset SpellType DOT /varset SpellInfo 42 second timer, 800 damage per tick /call SetupTimer /call ReportCast /return Sub ReportCast /if (${LastSpell.Equal[${DebuffSpell}]}) { /echo ${DebuffSpell} /if (${groupmode}==1) { /delay 1s /gsay ${SpellType} on --> ${If[${Target.CleanName.NotEqual[\"NULL\"]},${Target.CleanName},\"Target\"]} <-- with ${DebuffSpell}. ${SpellInfo}. } } /return \\|```\\| Store the last spell name we cast in ${spellname} | `Sub Event_Casting(String line, string spellname) /varset LastSpell ${spellname} /varset LastSpell ${LastSpell.Left[-1]} /return | | Clear the last spell name on a fizzle | Sub Event_Fizzle /varset LastSpell none /return | | Clear the last spell name on an interrupt | Sub Event_Interrupt /varset LastSpell none /return | | Set up timer with ${DebuffSpell} on ${Target} | Will re-use a timer slot if same spell found on same target | Sub SetupTimer /declare duration int local | | Skip if someone else's cast | /if (!${LastSpell.Equal[${DebuffSpell}]}) /return | | IF SAME DEBUFF IS BEING RECAST ON EXISTING NPC IN TIMER ARRAY, REFRESH | /for counter 1 to 6 /if (${HudArrayID[${counter}]}==${Target.ID} && ${DebuffSpell.Equal[${HudArraySpell[${counter}]}]}) { /varset HudArrayTime[${counter}] ${Math.Calc[${Time.SecondsSinceMidnight}+(${Spell[${DebuffSpell}].Duration}*6)]} /varset HudArraySpell[${counter}] ${DebuffSpell} /varset HudArrayNPCName[${counter}] ${Target.Name} /varset HudArrayID[${counter}] ${Target.ID} /return } /next counter | | SETUP NEW DEBUFF OF NPC IN OPEN SLOT | /varset counter 1 :counterloop /if (${HudArrayID[${counter}]}==-1 && !(${Math.Calc[${HudArrayTime[${counter}]}-${Time.SecondsSinceMidnight}].Int}>0)) { /varset HudArrayTime[${counter}] ${Math.Calc[${Time.SecondsSinceMidnight}+(${Spell[${DebuffSpell}].Duration}*6)]} /varset HudArraySpell[${counter}] ${DebuffSpell} /varset HudArrayNPCName[${counter}] ${Target.Name} /varset HudArrayID[${counter}] ${Target.ID} } else { /if (${counter}>5) { /echo Debuff timer slots are full /return } /varcalc counter ${counter}+1 /goto :counterloop } /return | | Checks all timers | - clears timer slot when mob is dead or timer expired | - formats timer data to time left to run in hh:mm:ss format | Sub CheckTimer /declare duration int local /declare myhour string local /declare myminute string local /declare mysecond string local /for counter 1 to 6 /if (!${Spawn[${HudArrayID[${counter}]}].State.Equal[HOVER]} && ${Math.Calc[${HudArrayTime[${counter}]}-${Time.SecondsSinceMidnight}].Int}>0) { | | FORMAT DURATION TO 00:00:00 | /varset duration ${Math.Calc[${HudArrayTime[${counter}]}-${Time.SecondsSinceMidnight}].Int} /if (${duration}&gt;3600\\) {``` /varset myhour ${Math.Calc[${duration}/3600\\].Int} /varset duration \\({Math.Calc\\[\\(\\(\\) /3600)-${myhour})*3600]} `} else { /varset myhour } /if (${duration}>60) { /varset myminute ${Math.Calc[${duration}/60].Int} /varset duration ${Math.Calc[${Math.Calc[${Int[${duration}/60]}]} - ${Math.Calc[${myminute}]}*60]} /if (${myhour} && ${myminute}<0) /varset myminute 0${myminute} } else { /varset myminute } /if (${duration}>=0) { /varset mysecond ${Int[${duration}/6]} /if (${myminute} && ${mysecond}<0) /varset mysecond 0${mysecond} } else { /varset mysecond 0 } | | DISPLAY HH:MM:SS IF NEEDED | /if (${myhour.NotEqual[NULL]} && ${Int[${myhour}]} !=0) { /varset HudArrayDuration[${counter}] ${myhour}:${myminute}m:${mysecond}s } else /if (${myminute.NotEqual[NULL]}&& ${Int[${myminute}]} !=0) { /varset HudArrayDuration[${counter}] ${myminute}m:${mysecond}s } else /if (${mysecond.NotEqual[NULL]}) { /varset HudArrayDuration[${counter}] ${mysecond}s } } else { /varset HudArrayTime[${counter}] /varset HudArraySpell[${counter}] none /varset HudArrayNPCName[${counter}] /varset HudArrayID[${counter}] -1 /varset HudArrayDuration[${counter}] } /next counter /return </code> You will also need these elements in your MQ2HUD.ini file (located in Release directory) NOTE: this file may not be present - create a new one with your favourite text editor (or notepad). [Elements] State=3,5,25,255,255,255,${Me.State} TargetLVLClass=3,5,35,255,255,255,${If[${Target.ID},${Target.Level} ${Target.Class} ${Target.PctHPs}%,]} RegExp=3,5,45,255,255,255,XP: ${Me.PctExp}% AAExp=3,5,55,255,255,255,AA: ${Me.PctAAExp}% Tribute=3,5,65,2,255,2,${If[${Me.TributeActive},Tribute is on,]} GM=3,5,75,255,2,2,${If[${Spawn[gm].ID},GM: ${Spawn[gm].Name},]} HudTimer1=1,480,240,050,255,255,${If[${HudArraySpell\\[1\\].Equal\\[none\\]},,${HudArrayDuration\\[1\\]}\\]}``` HudSpell1=1,530,240,255,255,255,${If\\[${HudArraySpell\\[1\\].Equal\\[none\\]},,${HudArraySpell\\[1\\]}\\]} HudTarget1=1,630,240,255,255,050, \\({If\\[\\) {HudArraySpell 1 .Equal none },,${HudArrayNPCName 1 }]}` HudTimer2=3,480,250,050,255,255,${If[${HudArraySpell[2].Equal[none]},,${HudArrayDuration[2]}]} HudSpell2=3,530,250,255,255,255,${If[${HudArraySpell[2].Equal[none]},,${HudArraySpell[2]}]} HudTarget2=3,630,250,255,255,050,${If[${HudArraySpell[2].Equal[none]},,${HudArrayNPCName[2]}]} HudTimer3=3,480,260,050,255,255,${If[${HudArraySpell[3].Equal[none]},,${HudArrayDuration[3]}]} HudSpell3=3,530,260,255,255,255,${If[${HudArraySpell[3].Equal[none]},,${HudArraySpell[3]}]} HudTarget3=3,630,260,255,255,050,${If[${HudArraySpell[3].Equal[none]},,${HudArrayNPCName[3]}]} HudTimer4=3,480,270,050,255,255,${If[${HudArraySpell[4].Equal[none]},,${HudArrayDuration[4]}]} HudSpell4=3,530,270,255,255,255,${If[${HudArraySpell[4].Equal[none]},,${HudArraySpell[4]}]} HudTarget4=3,630,270,255,255,050,${If[${HudArraySpell[4].Equal[none]},,${HudArrayNPCName[4]}]} HudTimer5=3,480,280,050,255,255,${If[${HudArraySpell[5].Equal[none]},,${HudArrayDuration[5]}]} HudSpell5=3,530,280,255,255,255,${If[${HudArraySpell[5].Equal[none]},,${HudArraySpell[5]}]} HudTarget5=3,630,280,255,255,050,${If[${HudArraySpell[5].Equal[none]},,${HudArrayNPCName[5]}]} HudTimer6=3,480,290,050,255,255,${If[${HudArraySpell\\[6\\].Equal\\[none\\]},,${HudArrayDuration\\[6\\]}\\]}``` HudSpell6=3,530,290,255,255,255,${If\\[${HudArraySpell\\[6\\].Equal\\[none\\]},,${HudArraySpell\\[6\\]}\\]} HudTarget6=3,630,290,255,255,050, \\({If\\[\\) {HudArraySpell 6 .Equal none },,${HudArrayNPCName 6 }]} `[MQ2HUD] Last=Elements </code>","title":"Necro Helper"},{"location":"macros/gallery/necro-helper/#necro-helper","text":"This is a simple helper macro I use when playing my necro toon. It does the following: At top left of display (under the lag-o-meter) Displays your state: Sitting, standing, feign etc (I wanted this mostly because the spectre animation when lich'ed isn't visibly different for sit/stand) Displays class, level and %HP of selected mob/npc Tracks regular and AA experience Displays name of first GM found in zone Shows personal tribute status on/off Can also do a /gsay to tell your group what spells you are casting In middle of screen Watches DoT spells cast on a mob and displays time left to run Important note. You need to update the code lines: /varset SpellInfo >>> Your timer, your damage, your other text <<< </code> to your preferences e.g.: /varset SpellInfo 2 minutes, 68 dpt, 70% snare </code> The macro code (for your Release\\Macros directory): | | NecroHelper.mac by pw | | Usage: | | /macro NecroHelper | | For group use (will report your casting to group in /gsay): | | /macro NecroHelper 1 | | This macro will react to spells cast on your target. | It displays the time remaining on the spell cast, the | spell cast, and the mob cast upon. | - Tracks XP and AAXP gained. | - (Optionally) Keeps group informed of your casting. | | Currently it will display 6 DoTs at once. | It will refresh any identical buff recast on the same mob | It fills in timer slots from top to bottom as available | Displays timer list full when max timers are running | | DoT timer Code taken from HudTimer by seagreen | XP tracker Code taken from perfect XP tracker by Raebis (with tweaks from Phoenix) | #turbo 40 #event Exp \"#*#party experience!!\" #event Exp2 \"You gain experience!!\" #event Casting \"You begin casting #1#\" #event Fizzle \"#*#Your spell fizzles#*#\" #event Interrupt \"#*#Your casting has been interrupted#*#\" #event Interrupt \"#*#Your spell is interrupted.#*#\" | | TODO: Need to add the full set of Necro Damage/debuff over time spells | | Each time an event is added for a new spell, you need a Sub Event_XXXX | below. | #event EmbracingDarkness \"#*#is engulfed in an embracing darkness#*#\" #event FPOK \"#*#is enveloped in a funeral pyre#*#\" #event Splurt \"#*#begins to splurt#*#\" #event SaryrnKiss \"#*#screams in torment#*#\" #event GreaterImmobilize \"#*#adheres to the ground#*#\" #event Shackle \"#*#is hindered by a shackle of spirit#*#\" #event DarkPlague \"#*#skin is covered in black spots#*#\" #event DesecratingDarkness \"#*#is covered in bubbling black shadows#*#\" #event FoD \"#*#is pierced by a dark fang#*#\" #event PoM \"#*#body is enveloped in the pyre of Mori#*#\" #event ChaosVenom \"#*#blood burns with the venom of chaos#*#\" #event DarkNightmare \"#*#mind is consumed in dark nightmares#*#\" #event NightFire \"#*#blood boils through#*#\" #event DeathSilence \"#*#stops moaning#*#\" #event BOT \"#*#veins turn a vile shade of green#*#\" #event ChaosPlague \"#*#muscles begin to decay#*#\" #event GripOfMori \"#*#staggers under the grip of Mori#*#\" #event TormentOfShadows \"#*#is gripped by shadows of fear and terror#*#\" #event DarkHold \"#*#stops moving#*#\" #event CurseOfMortality \"#*#recognizes their fragile mortality#*#\" #event SeveransRot \"#*#muscles begin to decay#*#\" #event CoruscatingDarkness \"#*#is covered in coruscating black shadows#*#\" #event AshengatePyre \"#*#body is consumed in a pyre of Ashengate#*#\" #event VakkdrasSicklyMists \"#*#chokes on a sickly green mist#*#\" #event WiltingFoliage \"#*#wilts#*#\" #event EranonDecay \"#*#muscles begin to decay#*#\" #event AuroralDarkness \"#*#is covered in coruscating black shadows#*#\" #event VisziajPallidHaze \"#*#chokes on a sickly green mist#*#\" #event AnathemaOfLife \"#*#recognizes their fragile mortality#*#\" #event PyreOfTheLifeless \"#*#is enveloped in the pyre of the lifeless#*#\" #event SearingShadow \"#*#is crossed by a searing shadow#*#\" #event ReaversPyre \"#*#in a pyre of cinders#*#\" #event VenonVenom \"#*#veins turn a vile shade of green#*#\" Sub Main /declare Exper float outer /declare AAExp float outer /declare LDRExp float outer /varset Exper ${Me.PctExp} /varset AAExp ${Me.PctAAExp} /varset LDRExp ${Me.PctGroupLeaderExp} /declare counter int outer /declare DebuffSpell string outer /declare LastSpell string outer /declare SpellType string outer /declare SpellInfo string outer /declare HudArrayNPCName[6] string outer /declare HudArrayID[6] int outer /declare HudArraySpell[6] string outer /declare HudArrayDuration[6] string outer /declare HudArrayTime[6] float outer /declare groupmode bool outer /for counter 1 to 6 /varset HudArrayID[${counter}] -1 /varset HudArraySpell[${counter}] none /varset HudArrayDuration[${counter}] none /varset HudArrayTime[${counter}] 0 /varset HudArrayNPCName[${counter}] none /next counter ```` /echo Necro Helper now ACTIVE \\ /if (${Param0}) { /echo Group mode /varset groupmode 1 } else { /echo Not Group mode /varset groupmode 0 } :mainloop /doevents /call CheckTimer /delay 1s /goto :mainloop /return |----------------------------------------- | Here's our first sub, tracking only grouped xp.... |----------------------------------------- Sub Event_Exp /varset AAExp ${Math.Calc[${Me.PctAAExp}-${AAExp}]} /varset Exper ${Math.Calc[${Me.PctExp}-${Exper}]} /varset LDRExp ${Math.Calc[${Me.PctGroupLeaderExp}-${LDRExp}]} /echo EXP: ${Exper} (${Me.PctExp}%) - AAXP: ${AAExp} (${Me.PctAAExp}%) - LDRXP: ${LDRExp} (${Me.PctGroupLeaderExp}) /popup ${Exper} (${Me.PctExp}%) - AAXP: ${AAExp} (${Me.PctAAExp}%) - LDRXP: ${LDRExp} (${Me.PctGroupLeaderExp}) /varset Exper ${Me.PctExp} /varset AAExp ${Me.PctAAExp} /varset LDRExp ${Me.PctGroupLeaderExp} /return |----------------------------------------- | Here's our second sub, tracking solo XP. | Since you dont get LExp when solo, removed the popup/echo. |----------------------------------------- Sub Event_Exp2 /varset AAExp ${Math.Calc[${Me.PctAAExp}-${AAExp}]} /varset Exper ${Math.Calc[${Me.PctExp}-${Exper}]} /varset LDRExp ${Math.Calc[${Me.PctGroupLeaderExp}-${LDRExp}]} /echo EXP: ${Exper} (${Me.PctExp}%) - AAXP: ${AAExp} (${Me.PctAAExp}%) /popup ${Exper} (${Me.PctExp}%) - AAXP: ${AAExp} (${Me.PctAAExp}%) /varset Exper ${Me.PctExp} /varset AAExp ${Me.PctAAExp} /varset LDRExp ${Me.PctGroupLeaderExp} /return | | TODO: Need to add the full set of Necro Damage/debuff over time spells | When adding new ones, be sure to spell the spell's name correctly in | the /varset line, otherwise the timer will not be calculated correctly. | Sub Event_SaryrnKiss /varset DebuffSpell Saryrn's Kiss /varset SpellType DOT /varset SpellInfo 1 minute timer, 198 damage per tick /call SetupTimer /call ReportCast /return Sub Event_DesecratingDarkness /varset DebuffSpell Desecrating Darkness /varset SpellType SNARE /varset SpellInfo 2 minute timer, 96 damage per tick, 75% movement reduction /call SetupTimer /call ReportCast /return Sub Event_EmbracingDarkness /varset DebuffSpell Embracing Darkness /varset SpellType SNARE /varset SpellInfo 2 minute timer, 70 damage per tick, 70% movement reduction /call SetupTimer /call ReportCast /return Sub Event_FPOK /varset DebuffSpell Funeral Pyre of Kelador /varset SpellType DOT /varset SpellInfo 45 second timer, 310 damage per tick /call SetupTimer /call ReportCast /return Sub Event_BOT /varset DebuffSpell Blood of Thule /varset SpellType DOT /varset SpellInfo 45 second timer, 350 damage per tick /call SetupTimer /call ReportCast /return Sub Event_Splurt /varset DebuffSpell Splurt /varset SpellType DOT /varset SpellInfo 1.5 minute timer, 30-190 damage per tick /call SetupTimer /call ReportCast /return Sub Event_GreaterImmobilize /varset DebuffSpell Greater Immobilize /varset SpellType ROOT /varset SpellInfo 1 minute timer /call SetupTimer /call ReportCast /return Sub Event_Shackle /varset DebuffSpell Shackle of Spirit /varset SpellType SLOW /varset SpellInfo 3.5 minute timer, 70% attack speed reduction /call SetupTimer /call ReportCast /return Sub Event_DarkPlague /varset DebuffSpell Dark Plague /varset SpellType DOT /varset SpellInfo 2 minute timer, 180 damage per tick /call SetupTimer /call ReportCast /return Sub Event_FoD /varset DebuffSpell Fang of Death /varset SpellType DOT /varset SpellInfo 1 minute timer, 370 damage per tick /call SetupTimer /call ReportCast /return Sub Event_POM /varset DebuffSpell Pyre of Mori /varset SpellType DOT /varset SpellInfo 1 minute timer, 419 damage per tick /call SetupTimer /call ReportCast /return Sub Event_ChaosVenom /varset DebuffSpell Chaos Venom /varset SpellType DOT /varset SpellInfo 35 second timer, 460 damage per tick /call SetupTimer /call ReportCast /return Sub Event_DarkNightmare /varset DebuffSpell Dark Nightmare /varset SpellType DOT /varset SpellInfo 30 second timer, 591 damage per tick /call SetupTimer /call ReportCast /return Sub Event_NightFire /varset DebuffSpell Night Fire /varset SpellType DOT /varset SpellInfo 45 second timer, 335 damage per tick /call SetupTimer /call ReportCast /return Sub Event_DeathSilence /varset DebuffSpell Death's Silence /varset SpellType MEZZ /varset SpellInfo 30 second timer /call SetupTimer /call ReportCast /return Sub Event_ChaosPlague /varset DebuffSpell Chaos Plague /varset SpellType DOT /varset SpellInfo 1.5 minute timer, 249 damage per tick /call SetupTimer /call ReportCast /return Sub Event_GripOfMori /varset DebuffSpell Grip of Mori /varset SpellType DOT /varset SpellInfo 1 minute timer, 194 damage per tick /call SetupTimer /call ReportCast /return Sub Event_TormentOfShadows /varset DebuffSpell Torment of Shadows /varset SpellType SNARE /varset SpellInfo 1.5 minute timer, 75 damage per tick /call SetupTimer /call ReportCast /return Sub Event_DarkHold /varset DebuffSpell Dark Hold /varset SpellType MEZZ /varset SpellInfo Mezzed for up to 5 ticks /call SetupTimer /call ReportCast /return Sub Event_CurseOfMortality /varset DebuffSpell Curse of Mortality Rk. II /varset SpellType DOT /varset SpellInfo 30 second timer, 727 damage per tick /call SetupTimer /call ReportCast /return Sub Event_SeveransRot /varset DebuffSpell Severan's Rot Rk. II /varset SpellType DOT /varset SpellInfo 1 minute 30 second timer, 179-320 damage per tick /call SetupTimer /call ReportCast /return Sub Event_CoruscatingDarkness /varset DebuffSpell Coruscating Darkness Rk. II /varset SpellType SNARE /varset SpellInfo 2 minute timer, 118 damage per tick, 75% movement reduction /call SetupTimer /call ReportCast /return Sub Event_AshengatePyre /varset DebuffSpell Ashengate Pyre Rk. II /varset SpellType DOT /varset SpellInfo 30 second timer, 1013 damage per tick /call SetupTimer /call ReportCast /return Sub Event_VakkdrasSicklyMists /varset DebuffSpell Vakk`dra's Sickly Mists Rk. II /varset SpellType DOT /varset SpellInfo 45 second timer, 598 damage per tick /call SetupTimer /call ReportCast /return Sub Event_WiltingFoliage /varset DebuffSpell Wilting Foliage /varset SpellType DOT /varset SpellInfo 30 second timer, 698 damage per tick /call SetupTimer /call ReportCast /return Sub Event_EranonDecay /varset DebuffSpell Eranon's Decay /varset SpellType DOT /varset SpellInfo 1 minute 30 timer, 400 damage per tick /call SetupTimer /call ReportCast /return Sub Event_AuroralDarkness /varset DebuffSpell Auroral Darkness /varset SpellType DOT /varset SpellInfo 2 minutes, 137 damage per tick /call SetupTimer /call ReportCast /return Sub Event_VisziajPallidHaze /varset DebuffSpell Visziaj's Pallid Haze /varset SpellType DOT /varset SpellInfo 45 second timer, 695 damage per tick /call SetupTimer /call ReportCast /return Sub Event_AnathemaOfLife /varset DebuffSpell Anathema of Life Rk. II /varset SpellType DOT /varset SpellInfo 30 second timer, 845 damage per tick /call SetupTimer /call ReportCast /return Sub Event_PyreOfTheLifeless /varset DebuffSpell Pyre of the Lifeless /varset SpellType DOT /varset SpellInfo 54 second timer, 599 damage per tick /call SetupTimer /call ReportCast /return Sub Event_SearingShadow /varset DebuffSpell Searing Shadow /varset SpellType DOT /varset SpellInfo 90 second timer, 720 damage per tick /call SetupTimer /call ReportCast /return Sub Event_ReaversPyre /varset DebuffSpell Reaver's Pyre /varset SpellType DOT /varset SpellInfo 30 second timer, 1130 damage per tick /call SetupTimer /call ReportCast /return Sub Event_VenonVenom /varset DebuffSpell Venonscale Venom /varset SpellType DOT /varset SpellInfo 42 second timer, 800 damage per tick /call SetupTimer /call ReportCast /return Sub ReportCast /if (${LastSpell.Equal[${DebuffSpell}]}) { /echo ${DebuffSpell} /if (${groupmode}==1) { /delay 1s /gsay ${SpellType} on --> ${If[${Target.CleanName.NotEqual[\"NULL\"]},${Target.CleanName},\"Target\"]} <-- with ${DebuffSpell}. ${SpellInfo}. } } /return \\|```\\| Store the last spell name we cast in ${spellname} | `Sub Event_Casting(String line, string spellname) /varset LastSpell ${spellname} /varset LastSpell ${LastSpell.Left[-1]} /return | | Clear the last spell name on a fizzle | Sub Event_Fizzle /varset LastSpell none /return | | Clear the last spell name on an interrupt | Sub Event_Interrupt /varset LastSpell none /return | | Set up timer with ${DebuffSpell} on ${Target} | Will re-use a timer slot if same spell found on same target | Sub SetupTimer /declare duration int local | | Skip if someone else's cast | /if (!${LastSpell.Equal[${DebuffSpell}]}) /return | | IF SAME DEBUFF IS BEING RECAST ON EXISTING NPC IN TIMER ARRAY, REFRESH | /for counter 1 to 6 /if (${HudArrayID[${counter}]}==${Target.ID} && ${DebuffSpell.Equal[${HudArraySpell[${counter}]}]}) { /varset HudArrayTime[${counter}] ${Math.Calc[${Time.SecondsSinceMidnight}+(${Spell[${DebuffSpell}].Duration}*6)]} /varset HudArraySpell[${counter}] ${DebuffSpell} /varset HudArrayNPCName[${counter}] ${Target.Name} /varset HudArrayID[${counter}] ${Target.ID} /return } /next counter | | SETUP NEW DEBUFF OF NPC IN OPEN SLOT | /varset counter 1 :counterloop /if (${HudArrayID[${counter}]}==-1 && !(${Math.Calc[${HudArrayTime[${counter}]}-${Time.SecondsSinceMidnight}].Int}>0)) { /varset HudArrayTime[${counter}] ${Math.Calc[${Time.SecondsSinceMidnight}+(${Spell[${DebuffSpell}].Duration}*6)]} /varset HudArraySpell[${counter}] ${DebuffSpell} /varset HudArrayNPCName[${counter}] ${Target.Name} /varset HudArrayID[${counter}] ${Target.ID} } else { /if (${counter}>5) { /echo Debuff timer slots are full /return } /varcalc counter ${counter}+1 /goto :counterloop } /return | | Checks all timers | - clears timer slot when mob is dead or timer expired | - formats timer data to time left to run in hh:mm:ss format | Sub CheckTimer /declare duration int local /declare myhour string local /declare myminute string local /declare mysecond string local /for counter 1 to 6 /if (!${Spawn[${HudArrayID[${counter}]}].State.Equal[HOVER]} && ${Math.Calc[${HudArrayTime[${counter}]}-${Time.SecondsSinceMidnight}].Int}>0) { | | FORMAT DURATION TO 00:00:00 | /varset duration ${Math.Calc[${HudArrayTime[${counter}]}-${Time.SecondsSinceMidnight}].Int} /if (${duration}&gt;3600\\) {``` /varset myhour ${Math.Calc[${duration}/3600\\].Int} /varset duration \\({Math.Calc\\[\\(\\(\\) /3600)-${myhour})*3600]} `} else { /varset myhour } /if (${duration}>60) { /varset myminute ${Math.Calc[${duration}/60].Int} /varset duration ${Math.Calc[${Math.Calc[${Int[${duration}/60]}]} - ${Math.Calc[${myminute}]}*60]} /if (${myhour} && ${myminute}<0) /varset myminute 0${myminute} } else { /varset myminute } /if (${duration}>=0) { /varset mysecond ${Int[${duration}/6]} /if (${myminute} && ${mysecond}<0) /varset mysecond 0${mysecond} } else { /varset mysecond 0 } | | DISPLAY HH:MM:SS IF NEEDED | /if (${myhour.NotEqual[NULL]} && ${Int[${myhour}]} !=0) { /varset HudArrayDuration[${counter}] ${myhour}:${myminute}m:${mysecond}s } else /if (${myminute.NotEqual[NULL]}&& ${Int[${myminute}]} !=0) { /varset HudArrayDuration[${counter}] ${myminute}m:${mysecond}s } else /if (${mysecond.NotEqual[NULL]}) { /varset HudArrayDuration[${counter}] ${mysecond}s } } else { /varset HudArrayTime[${counter}] /varset HudArraySpell[${counter}] none /varset HudArrayNPCName[${counter}] /varset HudArrayID[${counter}] -1 /varset HudArrayDuration[${counter}] } /next counter /return </code> You will also need these elements in your MQ2HUD.ini file (located in Release directory) NOTE: this file may not be present - create a new one with your favourite text editor (or notepad). [Elements] State=3,5,25,255,255,255,${Me.State} TargetLVLClass=3,5,35,255,255,255,${If[${Target.ID},${Target.Level} ${Target.Class} ${Target.PctHPs}%,]} RegExp=3,5,45,255,255,255,XP: ${Me.PctExp}% AAExp=3,5,55,255,255,255,AA: ${Me.PctAAExp}% Tribute=3,5,65,2,255,2,${If[${Me.TributeActive},Tribute is on,]} GM=3,5,75,255,2,2,${If[${Spawn[gm].ID},GM: ${Spawn[gm].Name},]} HudTimer1=1,480,240,050,255,255,${If[${HudArraySpell\\[1\\].Equal\\[none\\]},,${HudArrayDuration\\[1\\]}\\]}``` HudSpell1=1,530,240,255,255,255,${If\\[${HudArraySpell\\[1\\].Equal\\[none\\]},,${HudArraySpell\\[1\\]}\\]} HudTarget1=1,630,240,255,255,050, \\({If\\[\\) {HudArraySpell 1 .Equal none },,${HudArrayNPCName 1 }]}` HudTimer2=3,480,250,050,255,255,${If[${HudArraySpell[2].Equal[none]},,${HudArrayDuration[2]}]} HudSpell2=3,530,250,255,255,255,${If[${HudArraySpell[2].Equal[none]},,${HudArraySpell[2]}]} HudTarget2=3,630,250,255,255,050,${If[${HudArraySpell[2].Equal[none]},,${HudArrayNPCName[2]}]} HudTimer3=3,480,260,050,255,255,${If[${HudArraySpell[3].Equal[none]},,${HudArrayDuration[3]}]} HudSpell3=3,530,260,255,255,255,${If[${HudArraySpell[3].Equal[none]},,${HudArraySpell[3]}]} HudTarget3=3,630,260,255,255,050,${If[${HudArraySpell[3].Equal[none]},,${HudArrayNPCName[3]}]} HudTimer4=3,480,270,050,255,255,${If[${HudArraySpell[4].Equal[none]},,${HudArrayDuration[4]}]} HudSpell4=3,530,270,255,255,255,${If[${HudArraySpell[4].Equal[none]},,${HudArraySpell[4]}]} HudTarget4=3,630,270,255,255,050,${If[${HudArraySpell[4].Equal[none]},,${HudArrayNPCName[4]}]} HudTimer5=3,480,280,050,255,255,${If[${HudArraySpell[5].Equal[none]},,${HudArrayDuration[5]}]} HudSpell5=3,530,280,255,255,255,${If[${HudArraySpell[5].Equal[none]},,${HudArraySpell[5]}]} HudTarget5=3,630,280,255,255,050,${If[${HudArraySpell[5].Equal[none]},,${HudArrayNPCName[5]}]} HudTimer6=3,480,290,050,255,255,${If[${HudArraySpell\\[6\\].Equal\\[none\\]},,${HudArrayDuration\\[6\\]}\\]}``` HudSpell6=3,530,290,255,255,255,${If\\[${HudArraySpell\\[6\\].Equal\\[none\\]},,${HudArraySpell\\[6\\]}\\]} HudTarget6=3,630,290,255,255,050, \\({If\\[\\) {HudArraySpell 6 .Equal none },,${HudArrayNPCName 6 }]} `[MQ2HUD] Last=Elements </code>","title":"Necro Helper"},{"location":"macros/gallery/ninjadvloot.inc/","tags":["macro"],"text":"Ninjadvloot.inc \u00b6 Description \u00b6 Ninjadvloot.inc is an include file writen by A_Druid_00 available here . Usage \u00b6 Ninjadvloot.inc uses an ini(Loot.ini) which it will populate with items looted by the loot section of Autobot. Below is a start of some docummentation for the various possible INI file entries. INI File Entries \u00b6 [Settings] LootMobs=TRUE Whether or not to do looting CorpseRadius=100 Radius in which to check for corpses to loot MobsTooClose=50 Radius in which to check for live NPCs so as to avoid looting while mobs are too close CorpseRotTime=440s The amount of time you want to wait before trying to loot a corpse that was previously unlootable due to the corpse timer ReportLoot=TRUE Whether or not to report items looted to $LootChannel? LootChannel=i say Channel into which to report looting issues [B] Start of section for items starting with \"b\" Blue Diamond=Keep ''Name of item and action to take. Possible actions are Keep , Ignore and Destroy . Ninjadvloot automatically adds droppable items as Keep and No Drop items as Ignore by default. It will not automatically set any items to Destroy. It reads the ini each time a loot decision is made, so you do not need to restart your macro in order to update the ini settings for any given item when you make a change. Just save the ini and the next time it encounters that item, it will use the new Keep/Ignore/Destroy setting.","title":"Ninjadvloot.inc"},{"location":"macros/gallery/ninjadvloot.inc/#ninjadvlootinc","text":"","title":"Ninjadvloot.inc"},{"location":"macros/gallery/ninjadvloot.inc/#description","text":"Ninjadvloot.inc is an include file writen by A_Druid_00 available here .","title":"Description"},{"location":"macros/gallery/ninjadvloot.inc/#usage","text":"Ninjadvloot.inc uses an ini(Loot.ini) which it will populate with items looted by the loot section of Autobot. Below is a start of some docummentation for the various possible INI file entries.","title":"Usage"},{"location":"macros/gallery/ninjadvloot.inc/#ini-file-entries","text":"[Settings] LootMobs=TRUE Whether or not to do looting CorpseRadius=100 Radius in which to check for corpses to loot MobsTooClose=50 Radius in which to check for live NPCs so as to avoid looting while mobs are too close CorpseRotTime=440s The amount of time you want to wait before trying to loot a corpse that was previously unlootable due to the corpse timer ReportLoot=TRUE Whether or not to report items looted to $LootChannel? LootChannel=i say Channel into which to report looting issues [B] Start of section for items starting with \"b\" Blue Diamond=Keep ''Name of item and action to take. Possible actions are Keep , Ignore and Destroy . Ninjadvloot automatically adds droppable items as Keep and No Drop items as Ignore by default. It will not automatically set any items to Destroy. It reads the ini each time a loot decision is made, so you do not need to restart your macro in order to update the ini settings for any given item when you make a change. Just save the ini and the next time it encounters that item, it will use the new Keep/Ignore/Destroy setting.","title":"INI File Entries"},{"location":"macros/gallery/puller.inc/","tags":["macro"],"text":"Puller.inc \u00b6 Link \u00b6 Click Here to go to the MQ2 forum thread Features \u00b6 Per toon customization logged in PULLER.INI which will be created by the include. Uses AdvPath for pre-pathed and nearest matching mob pulling. Pathed pulling you record a path to pull along then play that path back. Unpathed pulling will just target the nearest matching mob and go to it. If obsticles are hit it will use MoveStuck.inc to try and get around them. The entire time it's recording your path so when you do have a mob it will play the file back to get back to camp. Camp can be a location (where you enter the routine if not previously defined) Camp can be another Spawn (player or NPC) - Untested Camp can be changed via commands Bandoliear can be used with mele and ranged pulling Pull methods currently supported are spell (using spell_routines) Ranged Melee Pet - Untested Target aquired and tracked without targeting until the mob is tagged. If you get a target (you got hit) before you reach the perferred target you return with your add Targeting is based on alerts so new target types can be easily managed ie. /alert add 1 orc just look up /alert in TFM -Alert 2 is used to hold target's you DO NOT want to target. Let's say you want to kill any orc so /alert add 1 orc but you don't want to kill the wood elf named orcflayer so do /alert add 2 orcflayer to exclude him from potential targets REQUIRED Include's \u00b6 #include spell_routines.inc #include advpath.inc #include system_events.inc #include outlander.inc Initialization Calls \u00b6 /call InitAPFVars 1 15 20 /call SysEventInit /call PullerInit /call MoveStuckInit To Do: \u00b6 Split Routine(s) Mob Avoidance (for both pulling and returning from pull) Stubbed in and partially coded. Auto Add to oE_BadTargetList if we just can't get to a mob in X amount of time and we are within Y distance.","title":"Puller.inc"},{"location":"macros/gallery/puller.inc/#pullerinc","text":"","title":"Puller.inc"},{"location":"macros/gallery/puller.inc/#link","text":"Click Here to go to the MQ2 forum thread","title":"Link"},{"location":"macros/gallery/puller.inc/#features","text":"Per toon customization logged in PULLER.INI which will be created by the include. Uses AdvPath for pre-pathed and nearest matching mob pulling. Pathed pulling you record a path to pull along then play that path back. Unpathed pulling will just target the nearest matching mob and go to it. If obsticles are hit it will use MoveStuck.inc to try and get around them. The entire time it's recording your path so when you do have a mob it will play the file back to get back to camp. Camp can be a location (where you enter the routine if not previously defined) Camp can be another Spawn (player or NPC) - Untested Camp can be changed via commands Bandoliear can be used with mele and ranged pulling Pull methods currently supported are spell (using spell_routines) Ranged Melee Pet - Untested Target aquired and tracked without targeting until the mob is tagged. If you get a target (you got hit) before you reach the perferred target you return with your add Targeting is based on alerts so new target types can be easily managed ie. /alert add 1 orc just look up /alert in TFM -Alert 2 is used to hold target's you DO NOT want to target. Let's say you want to kill any orc so /alert add 1 orc but you don't want to kill the wood elf named orcflayer so do /alert add 2 orcflayer to exclude him from potential targets","title":"Features"},{"location":"macros/gallery/puller.inc/#required-includes","text":"#include spell_routines.inc #include advpath.inc #include system_events.inc #include outlander.inc","title":"REQUIRED Include's"},{"location":"macros/gallery/puller.inc/#initialization-calls","text":"/call InitAPFVars 1 15 20 /call SysEventInit /call PullerInit /call MoveStuckInit","title":"Initialization Calls"},{"location":"macros/gallery/puller.inc/#to-do","text":"Split Routine(s) Mob Avoidance (for both pulling and returning from pull) Stubbed in and partially coded. Auto Add to oE_BadTargetList if we just can't get to a mob in X amount of time and we are within Y distance.","title":"To Do:"},{"location":"macros/gallery/quickbeg.inc/","tags":["macro"],"text":"QuickBeg.inc \u00b6 Description \u00b6 QuickBeg.inc is an include file originally written by MacQ with subsequent additions by A_Druid_00. It manages the begging process for your buffs, cures, items and pet buffs. The macro can be configured for a many different conditions through its INI file. QuickBeg.inc can be found here . Usage \u00b6 QuickBeg.inc requires an INI (QuickBeg.ini) file and some configuration before it can be used. Refer to the Release Notes contained in the QuickBeg.inc source file for detailed instructions on how to integrate QuickBeg.inc into your macros.","title":"QuickBeg.inc"},{"location":"macros/gallery/quickbeg.inc/#quickbeginc","text":"","title":"QuickBeg.inc"},{"location":"macros/gallery/quickbeg.inc/#description","text":"QuickBeg.inc is an include file originally written by MacQ with subsequent additions by A_Druid_00. It manages the begging process for your buffs, cures, items and pet buffs. The macro can be configured for a many different conditions through its INI file. QuickBeg.inc can be found here .","title":"Description"},{"location":"macros/gallery/quickbeg.inc/#usage","text":"QuickBeg.inc requires an INI (QuickBeg.ini) file and some configuration before it can be used. Refer to the Release Notes contained in the QuickBeg.inc source file for detailed instructions on how to integrate QuickBeg.inc into your macros.","title":"Usage"},{"location":"macros/gallery/rdcommon.ini/","tags":["macro"],"text":"RDCommon.ini \u00b6 RDCommon.ini is a bot-independent .ini file for AutoBot.mac (AutoBot documentation here ). It will mostly handle itself. But it can be very useful to add your own settings here for spells not to cast ina given zone (mez in PoK or the Guild Lobby/Hall, for example). Possible settings \u00b6 [ImmuneList] This section describes immunities on a per spellID basis. 5520Immune=|Gelidran Icekeeper| 5520 is the spellID for Euphoria. the Gelidran Icekeeper is immune to it. Autobot won't ever cast Euphoria at that mob. Also useful for excluding certain spells from certain mobs. Autobot will automatically add mobs here that give an immune message to any given spell. [RestrictedList] This section describes things not to do in a given zone. GukTop=|3185|NoMount| In Upper Guk, don't cast Flight of Eagles and don't use a mount. It is possible that you CAN'T use a mount and or cast FoE in Upper Guk, this section simply says AUtoBot Won't do that. This is also updated automagically based on in-game messages. [Settings] Version=4.5 Current AutoBot version. To force a rebuild of AB Aliases, set this value to 0.","title":"RDCommon.ini"},{"location":"macros/gallery/rdcommon.ini/#rdcommonini","text":"RDCommon.ini is a bot-independent .ini file for AutoBot.mac (AutoBot documentation here ). It will mostly handle itself. But it can be very useful to add your own settings here for spells not to cast ina given zone (mez in PoK or the Guild Lobby/Hall, for example).","title":"RDCommon.ini"},{"location":"macros/gallery/rdcommon.ini/#possible-settings","text":"[ImmuneList] This section describes immunities on a per spellID basis. 5520Immune=|Gelidran Icekeeper| 5520 is the spellID for Euphoria. the Gelidran Icekeeper is immune to it. Autobot won't ever cast Euphoria at that mob. Also useful for excluding certain spells from certain mobs. Autobot will automatically add mobs here that give an immune message to any given spell. [RestrictedList] This section describes things not to do in a given zone. GukTop=|3185|NoMount| In Upper Guk, don't cast Flight of Eagles and don't use a mount. It is possible that you CAN'T use a mount and or cast FoE in Upper Guk, this section simply says AUtoBot Won't do that. This is also updated automagically based on in-game messages. [Settings] Version=4.5 Current AutoBot version. To force a rebuild of AB Aliases, set this value to 0.","title":"Possible settings"},{"location":"macros/gallery/related-include-files/","tags":["macro"],"text":"Related Include Files \u00b6 AAPurchase \u00b6 Most of this information was copied directly from the original AAPurchase thread (a big thanks to three-p-o for this handy function!) The orignial AAPurchase thread can be found Here . AAPurchase will do the following: Purchase AA's based on an array created from an ini file (this file is auto-created for you with the AAPurchase implementation in ModBot). Allow you to specify how many levels of a skill to purchase. Skip any AA that you are too low to purchase at your level. Inform you that it was not able to purchase the skill yet and tell you how much you have and how much it costs. Inform you of the skill it purchased and how much it cost. Inform you that you were not able to purchase a skill yet and what level is requires. Inform you when a skill you have defined is maxed, and will skip to the next in the list. Inform you to define new AA's you when all current defined AA's are maxed. Detect if you do not have Fast AA Purchase on and confirm you want to purchase the AA. Allow you to define your own ini section so that you can add shroud abilities to purchase without losing your characters list to purchase (more on this in a later wiki update). Warn you when you have 27+ AA's banked. Switch you to 100% level XP when ou reach 30 banked AA's How to use: An AA_CharName.ini should automatically be created for you in your \\Macros folder (using functionality created by spudman). The general layout of that file is: [AAtoBuy] AACount=[Number of AAs in the ini list] AA1=|#|M|S the name of the AA (e.g. Combat Stability) # the maximum level of this AA to purchase (do not use in combination with the 'M' parameter) M indicates that you want to purchase this AA to its maximum level possible S indicates that you want to skip purchasing this AA (if you don't hae enough AA points saved) and check the next AA Example: [AAtoBuy] AACount=4 AA1=Combat Agility|2 AA2=Combat Stability|M AA3=Fury of Magic|M|S AA4=Teleport Bind|M AA1 would be the first AA you want to train. AA2 would be the second. Add more to your hearts content. There is no max limit, but it will take longer to run, especially if you do not clean up the list removing those you have already maxed. AA1 (Combat Agility) would purchase until it reached level 2 (of 28 possible) and then skip to the next AA to purchase in the list. The 'M' parameter for AA2 would tell it to purchase Combat Stability to the max ability level. AAPurchase will continue to save AAs and purchase levels until you have maxed out what you can buy of this AA. Only then will it move on to checking AAs further down the list. The 'M|S' parameters for AA3 would tell it to purchase Fury of Magic to its max level. If you don't have enough AA points to purchase the next level of Fury of Magic, the 'S' parameter would cause it to skip to the next AA to buy (Teleport Bind) and purchase that instead (assuming you have enough AA points saved for that). Additional Info: Change this to change which channel you send your notifications to (e.g. /bc , /echo , /mqlog): #define def_channel_ /echo From fearless: If you want to know who is training what when using /mqlog use this Code: #define def_channel_ \"/mqlog $[Me.Name}\" If you want to see what your bots are up to (and you have Netbots loaded...), use the following command: /echo ${NetBots[CharName].PctAAExp} (there's also a TypeMember(PctExp); in the plugin. Depending on the Netbots version you have there's also TotalAA, UsedAA, and UnusedAA.) Return to main ModBot Wiki Forage \u00b6 Note: More information needed for this section - feel free to add!! -1 means keep all no matter how many you have. 0 is destroy. Any positive number is how many to keep. Modloot \u00b6 Modloot was originally based on Forking's Loot.inc (original thread can be found here ), but several sections have had complete rewrites and no longer even resemble the original (though they have been made to be backwards compatible for the older options). The creation of the initial Loot.ini file (found in the \\Macros folder) is triggered by setting 'DoLoot=TRUE' in your MB_CharName.ini file. The location of the Loot.ini file (as well as its name) can be changed using the 'Loot.ini=' section in MBCommon.ini. While looting is enabled (DoLoot=TRUE), your bot will automatically attempt to loot whenever there are corpses within CorpseRadius and no mobs within the MobsTooClose radius. Once activated, looting will start up with some default actions: The first time an item is found, it will be added to the Loot.ini file under it's associated alphabetical section. Depending on the item's particular flag type, it will be set to either Keep or Ignore: Nodrop items are set to Ignore (item will be left on corpse). Quest flag items are set to Ignore (item will be left on corpse). Most other items are set to Keep (item will be looted). The resulting Loot.ini file can be customized to loot and dispose of items in a more efficient manner (rather than just keeping or ignoring something). The basic format of the modloot 'Loot.ini' file is as follows: Settings Section - [Settings] \u00b6 LootMobs =[TRUE,FALSE] (set by DoLoot in MB_CharName.ini) CorpseRadius =[Radius #] (The default radius within which to search for corpses to loot. Default to 100.) MobsTooClose =[Radius #] (The default radius within which it will watch for other mobs before looting (prevents looting when there are still mobs in camp). Default to 50.) CorpseRotTime =[Corpse rot time in seconds] (The time before corpses rot. Default 440s.) ?? ReportLoot =[TRUE,FALSE] (Report \\(or not\\) looting activities to the defined LootChannel) LootChannel =[desired loot channel] (Channel on which looting actions will be announced (e.g. \"bc\") Category =[cat1,cat2,etc.] (Used to specify loot categories. Each argument added to 'Category' will add a variable to modbot. For example, 'Category=Smithing,Tailoring' would result in two new entries in the loot.ini file on the next run of modbot: Category=Smithing,Tailoring Smithing= Tailoring= If desired, the new entries can then be modified to define which toons can loot which types of items. ${NetBots.Client} will make sure all toons will loot the item if the category is only to be used with other commands. Please note that you are not required to define toon names for this (thus allowing a single looter to loot all items): Category=Smithing,Tailoring Smithing=ToonName1,ToonName2 Tailoring=ToonName1 After the Category entires have been defined, items can be marked in the Items section as belonging to a particular category: Rhenium Ore=Smithing Categories can also be used with other commands. For instance: /mb getbank Smithing TRUE \\<-- will search your bank for all items marked 'Smithing' and place them on your toon until you run out of room. The True|False option is Stacks or Singles. /mb give Smithing TRUE # \\<-- will give # of Stacks (TRUE|FALSE) of Smithing items to . KeepScript =[ScriptName] (Allows you to define a full script that can be used to add extra options or checks before looting. You can now also set item names as =Script in your loot.ini file to use this option. Please note that the script will also run for all items marked 'Sell' to allow for checking values. If your script decides to loot the item, you will need to call the appropriate sub from your script. For example (this was meant only to run for 'Sell' option, but can be expanded.): [Script-ValueCheck] Commands=1 C1=/if (!{Corpse.Item[{Param1}].Value} || {Corpse.Item[{Param1}].Value} && {Corpse.Item[{Param1}].Value}>1000) /call LootItem {Param1} Keep Right A '/call LootItem {Param1} Destroy Left' will destroy the item. Doing nothing, or exiting the script will result in item left on corpse QuestOnly =[TRUE,FALSE] (Defaults to FALSE. To be used with DoQuest so the toon will only loot quest items. If this is true and doquest is false, the bot will only loot cash off mob.) Items Section - [] \u00b6 =[|||] (Tells modloot what to do with the item.) can equal Keep, Destroy, Ignore, Quest or CategoryName. Please note that | cannot be used at the same time as ToonName and/or Category. Raw Diamond=ToonName \\<-- Only ToonName will loot Raw Diamonds (can be used in conjunction with Keep and Quantity). Raw Diamond=Keep \\<-- Keeps all Raw Diamonds Raw Diamond=Keep|10 \\<-- Keeps Raw Diamonds until you have 10 of them. After that it leaves them on the corpse. Raw Diamond=Destroy \\<-- Loots Raw Diamonds and then destroys them. Raw Diamond=Ignore \\<-- Does not loot Raw Diamonds (leaves them on the corpse). Crate of Supplies=Quest|10|Gathering from the Goblins \\<--Specifies that the looter MUST have the quest 'Gathering from the Goblins' in order to loot this item. In this case, the looter will only loot 10 'Crate of Supplies'. Note that the Quest action should be used in conjunction with the parameter (defined as 'Gathering from the Goblins' in the example). Raw Diamond=Script \\<-- Runs the script that is defined in the 'KeepScript=' varible in the Settings section. Raw Diamond=Sell \\<-- Item will be looted and, when told, will be sold to a vendor. Allows you to specify which toon you want to loot a particular item by using =. \\<# of item to loot> Used with the 'Quest' and 'Keep' actions and defines how many of the item to loot. Once you have looted this amount, you will not loot anymore of this item. It is possible to simply use '=Quest|10' without defining a quest name - this will produce an /echo about proper syntax for Quest|x| usage to include the quest name, but that is harmless, and item is still looted. Tells modloot to only loot this item if you have the quest named . A typical Loot.ini file might look like: [Settings] LootMobs=TRUE CorpseRadius=100 MobsTooClose=50 CorpseRotTime=440s ReportLoot=FALSE LootChannel=bc Category=Tradeskill,Spellscroll Tradeskill=Toon1Name,Toon2Name Spellscroll=Toon1Name,Toon2Name KeepScript= QuestOnly=FALSE [C] Curzon=Destroy Crystallized Mephit Horn=Keep Crate of Supplies=Quest|10|Gathering from the Goblins [R] Rough Efreeti Beard=Keep Russet Oxide=Keep [S] Spell: Siphon Essence Rk. II=Spellscroll Spell: Phase March Rk. II=Spellscroll Spell: Halcyon Zephyr Rk. II=Spellscroll Return to main ModBot Wiki ModMove \u00b6 Use the functions in ModMove to run a path for pulling, selling, etc. As mentioned in the main wiki, the primary command for interacting with modmove is /mbwayplay ModMove Commands \u00b6 mbwayplay (u,d,b,e) \\(t,f\\) \\(c\\) (Used to playback previously recorded paths / waypoints, through zones, doors, chaining paths, etc.) u : (up) enter at the closest \"waypoint\" and then go \"up\" it d : (down) enter at the closest \"waypoint\" and then go \"down\" it b : (begin) start at the first waypoint e : (end) start at the last waypoint t : zone (t)rue - zone at the end of the path f : zone (f)alse - do not zone at the end of the path c : look for another path to (c)hain (this is optional) mbwayrec (Used to record a path / waypoint. Once started, ducking at each location will add a waypoint to the path \\(note that you need to add at least two waypoints \\(start and finish?\\) while running the path or it will not record). Sitting stops path recording and returns to modbot functions. In order to add doors, chains, pull locations, etc. you'll need to edit the MBWayPlay.INI file) sell (sell to the vendor - please see the section on modloot to know how to automate the sell process) door (open a door) pull (perform pull actions) An option exists for a network based INI file for scripts and path playback (mbwayplay and mbwaypnt.ini file), if you use this option, your commands must be prefixed by \"Network-\" or \"Net-\". Set the location of your network INI file [Settings] section of your modbot INI: NetworkINI=X:\\shared\\modbot\\mb_network.ini This would be an example of using your network based INI file: [DoPath] WPLoop=FALSE WPCount=1 WP1=600 200 [Script-GoThere] Commands=2 C1=/call mbwayplay net-dopath u C2=/call Buy water`` ``flask 75 yenny ModMove Examples \u00b6 Example 1 \u00b6 [example1] WPCount=5 WP1=-912.25 2725.55 WP2=-818.70 2627.16 sell magus WP3=-735.19 2674.32 door WP4=-805.75 2687.67 pull WP5=-912.25 2725.55 [example2] WPCount=5 WP1=-912.25 2725.55 WP2=-818.70 2627.16 door WP3=-735.19 2674.32 WP4=-805.75 2687.67 door WP5=-912.25 2725.55 example3 b t c [example3] WPCount=5 WP1=-912.25 2725.55 example2 e WP2=-818.70 2627.16 WP3=-735.19 2674.32 door WP4=-805.75 2687.67 WP5=-912.25 2725.55 example4 e [example4] WPCount=5 WP1=-912.25 2725.55 WP2=-818.70 2627.16 door WP3=-735.19 2674.32 sell magus WP4=-805.75 2687.67 WP5=-912.25 2725.55 example3 e t c An example mbwayplay command using the above sample ini file might be as follows: /mb mbwayplay example2 b t c This command would: (b)egin running a path called \"example2\". (t)rue to zone, so it looks to zone (by the way, this is the same code that is used to zone when a bot is following a master) (c)hain paths, so at the end of the path it looks for another path (in this case path:example3). The chained path would adhere to the same parameters you supplied for the original path ( \\(b\\) egin, \\(t\\) rue to zone, and (c)hain at the end). So after the bot zones it looks for example3 and essentially runs this command: /mb mbwayplay example3 b t c Example 2 \u00b6 You can run, zone, magus, doors, etc all through the mbwaypnt.ini file, here are some path examples, chaining path points together, and zone via a magus. Here is how I chain pull paths together, in this case my APPath=Temple, this paticular one goes through a zone and depending on what my war has available for AE agro it will change is next path to templec or templeb. [Temple] WPLoop=TRUE WPCount=8 WP1=-487.57 84.80 WP2=-457 135.50 WP3=-376.89 134.42 pull WP4=-342.92 185.42 pull WP5=-416.90 134.60 pull WP6=-423 135.50 pull WP7=-457 135.50 WP8=-487.57 84.80 pull ${If[${Me.AltAbilityReady[Rampage]},TempleC,TempleB]} [TempleB] WPLoop=TRUE WPCount=16 WP1=-493.40 107.57 pull WP2=-472.93 80.30 WP3=-473.26 -8.07 WP4=-473.26 -46.44 WP5=-511.04 -40.25 WP6=-540.99 -39.14 WP7=-558.42 -56.79 WP8=-558.51 -142.49 pull WP9=-557.79 -89.31 WP10=-557.40 -57.87 WP11=-542.29 -40.36 WP12=-509.79 -40.31 WP13=-472.97 -46.15 WP14=-472.37 -7.35 WP15=-472.23 73.72 WP16=-479.21 98.21 pull [TempleC] WPLoop=TRUE WPCount=20 WP1=-493.40 107.57 pull WP2=-472.93 80.30 WP3=-473.26 -8.07 WP4=-473.26 -46.44 WP5=-511.04 -40.25 WP6=-540.99 -39.14 WP7=-597.76 -30.52 WP8=-597.92 10.08 WP9=-597.92 76.81 WP10=-597.92 116.82 WP11=-586.76 158.24 pull WP12=-597.32 111.05 WP13=-597.92 10.08 WP14=-597.76 -30.52 WP15=-540.99 -39.14 WP16=-511.04 -40.25 WP17=-473.26 -46.44 WP18=-473.26 -8.07 WP19=-472.93 80.30 WP20=-493.40 107.57 pull Example 3 \u00b6 For chaining across zones etc, this first one is one I used a lot doing LDoN's: /bct bob mbwayplay lfldongf b t c. To get him to go back you just /bct bob mbwayplay gftobb e t c [LFldonGF] WPCount=9 WP1=-399.03 3640.92 WP2=-387.84 1478.23 WP3=-591.79 1209.10 WP4=-379.89 -288.79 WP5=335.06 -1134.56 WP6=1976.01 -1141.98 WP7=2109.76 -1113.65 WP8=2156.90 -1209.03 WP9=2166.85 -1206.41 GFtoBB b t c [GFtoBB] WPCount=8 WP1=-2617.36 -1119.23 LFldonGF e WP2=-2251.29 -883.97 WP3=-2028.63 -441.74 WP4=-1747.35 1992.63 WP5=-1541.93 2516.40 WP6=-1571.55 2639.27 WP7=-1636.02 2632.32 WP8=-1637.63 2639.13 BBGFWayfarer e [BBGFWayfarer] WPCount=6 WP1=-1101.67 -2476.26 WP2=-1126.61 -2939.00 WP3=-1125.30 -3054.35 WP4=-1244.40 -3088.79 WP5=-1315.14 -3053.25 WP6=-1311.01 -3083.58 GFtoBB e t c Example 4 \u00b6 Here is an example of using a magus: /bct bob mbwayplay tonedaria b t c nedaria [ToNedaria] WPCount=3 WP1=625.62 -178.34 WP2=537.80 -99.15 WP3=604.30 7.34 nedaria b [Nedaria] WPCount=10 WP1=1142.86 1135.75 WP2=1391.06 704.39 WP3=1285.54 -266.96 WP4=1299.90 -388.21 WP5=1362.44 -465.12 WP6=1461.15 -475.80 WP7=1546.51 -496.26 WP8=1581.54 -567.51 WP9=1597.32 -628.35 WP10=1659.85 -625.32 Return to main ModBot Wiki","title":"Related Include Files"},{"location":"macros/gallery/related-include-files/#related-include-files","text":"","title":"Related Include Files"},{"location":"macros/gallery/related-include-files/#aapurchase","text":"Most of this information was copied directly from the original AAPurchase thread (a big thanks to three-p-o for this handy function!) The orignial AAPurchase thread can be found Here . AAPurchase will do the following: Purchase AA's based on an array created from an ini file (this file is auto-created for you with the AAPurchase implementation in ModBot). Allow you to specify how many levels of a skill to purchase. Skip any AA that you are too low to purchase at your level. Inform you that it was not able to purchase the skill yet and tell you how much you have and how much it costs. Inform you of the skill it purchased and how much it cost. Inform you that you were not able to purchase a skill yet and what level is requires. Inform you when a skill you have defined is maxed, and will skip to the next in the list. Inform you to define new AA's you when all current defined AA's are maxed. Detect if you do not have Fast AA Purchase on and confirm you want to purchase the AA. Allow you to define your own ini section so that you can add shroud abilities to purchase without losing your characters list to purchase (more on this in a later wiki update). Warn you when you have 27+ AA's banked. Switch you to 100% level XP when ou reach 30 banked AA's How to use: An AA_CharName.ini should automatically be created for you in your \\Macros folder (using functionality created by spudman). The general layout of that file is: [AAtoBuy] AACount=[Number of AAs in the ini list] AA1=|#|M|S the name of the AA (e.g. Combat Stability) # the maximum level of this AA to purchase (do not use in combination with the 'M' parameter) M indicates that you want to purchase this AA to its maximum level possible S indicates that you want to skip purchasing this AA (if you don't hae enough AA points saved) and check the next AA Example: [AAtoBuy] AACount=4 AA1=Combat Agility|2 AA2=Combat Stability|M AA3=Fury of Magic|M|S AA4=Teleport Bind|M AA1 would be the first AA you want to train. AA2 would be the second. Add more to your hearts content. There is no max limit, but it will take longer to run, especially if you do not clean up the list removing those you have already maxed. AA1 (Combat Agility) would purchase until it reached level 2 (of 28 possible) and then skip to the next AA to purchase in the list. The 'M' parameter for AA2 would tell it to purchase Combat Stability to the max ability level. AAPurchase will continue to save AAs and purchase levels until you have maxed out what you can buy of this AA. Only then will it move on to checking AAs further down the list. The 'M|S' parameters for AA3 would tell it to purchase Fury of Magic to its max level. If you don't have enough AA points to purchase the next level of Fury of Magic, the 'S' parameter would cause it to skip to the next AA to buy (Teleport Bind) and purchase that instead (assuming you have enough AA points saved for that). Additional Info: Change this to change which channel you send your notifications to (e.g. /bc , /echo , /mqlog): #define def_channel_ /echo From fearless: If you want to know who is training what when using /mqlog use this Code: #define def_channel_ \"/mqlog $[Me.Name}\" If you want to see what your bots are up to (and you have Netbots loaded...), use the following command: /echo ${NetBots[CharName].PctAAExp} (there's also a TypeMember(PctExp); in the plugin. Depending on the Netbots version you have there's also TotalAA, UsedAA, and UnusedAA.) Return to main ModBot Wiki","title":"AAPurchase"},{"location":"macros/gallery/related-include-files/#forage","text":"Note: More information needed for this section - feel free to add!! -1 means keep all no matter how many you have. 0 is destroy. Any positive number is how many to keep.","title":"Forage"},{"location":"macros/gallery/related-include-files/#modloot","text":"Modloot was originally based on Forking's Loot.inc (original thread can be found here ), but several sections have had complete rewrites and no longer even resemble the original (though they have been made to be backwards compatible for the older options). The creation of the initial Loot.ini file (found in the \\Macros folder) is triggered by setting 'DoLoot=TRUE' in your MB_CharName.ini file. The location of the Loot.ini file (as well as its name) can be changed using the 'Loot.ini=' section in MBCommon.ini. While looting is enabled (DoLoot=TRUE), your bot will automatically attempt to loot whenever there are corpses within CorpseRadius and no mobs within the MobsTooClose radius. Once activated, looting will start up with some default actions: The first time an item is found, it will be added to the Loot.ini file under it's associated alphabetical section. Depending on the item's particular flag type, it will be set to either Keep or Ignore: Nodrop items are set to Ignore (item will be left on corpse). Quest flag items are set to Ignore (item will be left on corpse). Most other items are set to Keep (item will be looted). The resulting Loot.ini file can be customized to loot and dispose of items in a more efficient manner (rather than just keeping or ignoring something). The basic format of the modloot 'Loot.ini' file is as follows:","title":"Modloot"},{"location":"macros/gallery/related-include-files/#settings-section-settings","text":"LootMobs =[TRUE,FALSE] (set by DoLoot in MB_CharName.ini) CorpseRadius =[Radius #] (The default radius within which to search for corpses to loot. Default to 100.) MobsTooClose =[Radius #] (The default radius within which it will watch for other mobs before looting (prevents looting when there are still mobs in camp). Default to 50.) CorpseRotTime =[Corpse rot time in seconds] (The time before corpses rot. Default 440s.) ?? ReportLoot =[TRUE,FALSE] (Report \\(or not\\) looting activities to the defined LootChannel) LootChannel =[desired loot channel] (Channel on which looting actions will be announced (e.g. \"bc\") Category =[cat1,cat2,etc.] (Used to specify loot categories. Each argument added to 'Category' will add a variable to modbot. For example, 'Category=Smithing,Tailoring' would result in two new entries in the loot.ini file on the next run of modbot: Category=Smithing,Tailoring Smithing= Tailoring= If desired, the new entries can then be modified to define which toons can loot which types of items. ${NetBots.Client} will make sure all toons will loot the item if the category is only to be used with other commands. Please note that you are not required to define toon names for this (thus allowing a single looter to loot all items): Category=Smithing,Tailoring Smithing=ToonName1,ToonName2 Tailoring=ToonName1 After the Category entires have been defined, items can be marked in the Items section as belonging to a particular category: Rhenium Ore=Smithing Categories can also be used with other commands. For instance: /mb getbank Smithing TRUE \\<-- will search your bank for all items marked 'Smithing' and place them on your toon until you run out of room. The True|False option is Stacks or Singles. /mb give Smithing TRUE # \\<-- will give # of Stacks (TRUE|FALSE) of Smithing items to . KeepScript =[ScriptName] (Allows you to define a full script that can be used to add extra options or checks before looting. You can now also set item names as =Script in your loot.ini file to use this option. Please note that the script will also run for all items marked 'Sell' to allow for checking values. If your script decides to loot the item, you will need to call the appropriate sub from your script. For example (this was meant only to run for 'Sell' option, but can be expanded.): [Script-ValueCheck] Commands=1 C1=/if (!{Corpse.Item[{Param1}].Value} || {Corpse.Item[{Param1}].Value} && {Corpse.Item[{Param1}].Value}>1000) /call LootItem {Param1} Keep Right A '/call LootItem {Param1} Destroy Left' will destroy the item. Doing nothing, or exiting the script will result in item left on corpse QuestOnly =[TRUE,FALSE] (Defaults to FALSE. To be used with DoQuest so the toon will only loot quest items. If this is true and doquest is false, the bot will only loot cash off mob.)","title":"Settings Section - [Settings]"},{"location":"macros/gallery/related-include-files/#items-section-","text":"=[|||] (Tells modloot what to do with the item.) can equal Keep, Destroy, Ignore, Quest or CategoryName. Please note that | cannot be used at the same time as ToonName and/or Category. Raw Diamond=ToonName \\<-- Only ToonName will loot Raw Diamonds (can be used in conjunction with Keep and Quantity). Raw Diamond=Keep \\<-- Keeps all Raw Diamonds Raw Diamond=Keep|10 \\<-- Keeps Raw Diamonds until you have 10 of them. After that it leaves them on the corpse. Raw Diamond=Destroy \\<-- Loots Raw Diamonds and then destroys them. Raw Diamond=Ignore \\<-- Does not loot Raw Diamonds (leaves them on the corpse). Crate of Supplies=Quest|10|Gathering from the Goblins \\<--Specifies that the looter MUST have the quest 'Gathering from the Goblins' in order to loot this item. In this case, the looter will only loot 10 'Crate of Supplies'. Note that the Quest action should be used in conjunction with the parameter (defined as 'Gathering from the Goblins' in the example). Raw Diamond=Script \\<-- Runs the script that is defined in the 'KeepScript=' varible in the Settings section. Raw Diamond=Sell \\<-- Item will be looted and, when told, will be sold to a vendor. Allows you to specify which toon you want to loot a particular item by using =. \\<# of item to loot> Used with the 'Quest' and 'Keep' actions and defines how many of the item to loot. Once you have looted this amount, you will not loot anymore of this item. It is possible to simply use '=Quest|10' without defining a quest name - this will produce an /echo about proper syntax for Quest|x| usage to include the quest name, but that is harmless, and item is still looted. Tells modloot to only loot this item if you have the quest named . A typical Loot.ini file might look like: [Settings] LootMobs=TRUE CorpseRadius=100 MobsTooClose=50 CorpseRotTime=440s ReportLoot=FALSE LootChannel=bc Category=Tradeskill,Spellscroll Tradeskill=Toon1Name,Toon2Name Spellscroll=Toon1Name,Toon2Name KeepScript= QuestOnly=FALSE [C] Curzon=Destroy Crystallized Mephit Horn=Keep Crate of Supplies=Quest|10|Gathering from the Goblins [R] Rough Efreeti Beard=Keep Russet Oxide=Keep [S] Spell: Siphon Essence Rk. II=Spellscroll Spell: Phase March Rk. II=Spellscroll Spell: Halcyon Zephyr Rk. II=Spellscroll Return to main ModBot Wiki","title":"Items Section - []"},{"location":"macros/gallery/related-include-files/#modmove","text":"Use the functions in ModMove to run a path for pulling, selling, etc. As mentioned in the main wiki, the primary command for interacting with modmove is /mbwayplay","title":"ModMove"},{"location":"macros/gallery/related-include-files/#modmove-commands","text":"mbwayplay (u,d,b,e) \\(t,f\\) \\(c\\) (Used to playback previously recorded paths / waypoints, through zones, doors, chaining paths, etc.) u : (up) enter at the closest \"waypoint\" and then go \"up\" it d : (down) enter at the closest \"waypoint\" and then go \"down\" it b : (begin) start at the first waypoint e : (end) start at the last waypoint t : zone (t)rue - zone at the end of the path f : zone (f)alse - do not zone at the end of the path c : look for another path to (c)hain (this is optional) mbwayrec (Used to record a path / waypoint. Once started, ducking at each location will add a waypoint to the path \\(note that you need to add at least two waypoints \\(start and finish?\\) while running the path or it will not record). Sitting stops path recording and returns to modbot functions. In order to add doors, chains, pull locations, etc. you'll need to edit the MBWayPlay.INI file) sell (sell to the vendor - please see the section on modloot to know how to automate the sell process) door (open a door) pull (perform pull actions) An option exists for a network based INI file for scripts and path playback (mbwayplay and mbwaypnt.ini file), if you use this option, your commands must be prefixed by \"Network-\" or \"Net-\". Set the location of your network INI file [Settings] section of your modbot INI: NetworkINI=X:\\shared\\modbot\\mb_network.ini This would be an example of using your network based INI file: [DoPath] WPLoop=FALSE WPCount=1 WP1=600 200 [Script-GoThere] Commands=2 C1=/call mbwayplay net-dopath u C2=/call Buy water`` ``flask 75 yenny","title":"ModMove Commands"},{"location":"macros/gallery/related-include-files/#modmove-examples","text":"","title":"ModMove Examples"},{"location":"macros/gallery/related-include-files/#example-1","text":"[example1] WPCount=5 WP1=-912.25 2725.55 WP2=-818.70 2627.16 sell magus WP3=-735.19 2674.32 door WP4=-805.75 2687.67 pull WP5=-912.25 2725.55 [example2] WPCount=5 WP1=-912.25 2725.55 WP2=-818.70 2627.16 door WP3=-735.19 2674.32 WP4=-805.75 2687.67 door WP5=-912.25 2725.55 example3 b t c [example3] WPCount=5 WP1=-912.25 2725.55 example2 e WP2=-818.70 2627.16 WP3=-735.19 2674.32 door WP4=-805.75 2687.67 WP5=-912.25 2725.55 example4 e [example4] WPCount=5 WP1=-912.25 2725.55 WP2=-818.70 2627.16 door WP3=-735.19 2674.32 sell magus WP4=-805.75 2687.67 WP5=-912.25 2725.55 example3 e t c An example mbwayplay command using the above sample ini file might be as follows: /mb mbwayplay example2 b t c This command would: (b)egin running a path called \"example2\". (t)rue to zone, so it looks to zone (by the way, this is the same code that is used to zone when a bot is following a master) (c)hain paths, so at the end of the path it looks for another path (in this case path:example3). The chained path would adhere to the same parameters you supplied for the original path ( \\(b\\) egin, \\(t\\) rue to zone, and (c)hain at the end). So after the bot zones it looks for example3 and essentially runs this command: /mb mbwayplay example3 b t c","title":"Example 1"},{"location":"macros/gallery/related-include-files/#example-2","text":"You can run, zone, magus, doors, etc all through the mbwaypnt.ini file, here are some path examples, chaining path points together, and zone via a magus. Here is how I chain pull paths together, in this case my APPath=Temple, this paticular one goes through a zone and depending on what my war has available for AE agro it will change is next path to templec or templeb. [Temple] WPLoop=TRUE WPCount=8 WP1=-487.57 84.80 WP2=-457 135.50 WP3=-376.89 134.42 pull WP4=-342.92 185.42 pull WP5=-416.90 134.60 pull WP6=-423 135.50 pull WP7=-457 135.50 WP8=-487.57 84.80 pull ${If[${Me.AltAbilityReady[Rampage]},TempleC,TempleB]} [TempleB] WPLoop=TRUE WPCount=16 WP1=-493.40 107.57 pull WP2=-472.93 80.30 WP3=-473.26 -8.07 WP4=-473.26 -46.44 WP5=-511.04 -40.25 WP6=-540.99 -39.14 WP7=-558.42 -56.79 WP8=-558.51 -142.49 pull WP9=-557.79 -89.31 WP10=-557.40 -57.87 WP11=-542.29 -40.36 WP12=-509.79 -40.31 WP13=-472.97 -46.15 WP14=-472.37 -7.35 WP15=-472.23 73.72 WP16=-479.21 98.21 pull [TempleC] WPLoop=TRUE WPCount=20 WP1=-493.40 107.57 pull WP2=-472.93 80.30 WP3=-473.26 -8.07 WP4=-473.26 -46.44 WP5=-511.04 -40.25 WP6=-540.99 -39.14 WP7=-597.76 -30.52 WP8=-597.92 10.08 WP9=-597.92 76.81 WP10=-597.92 116.82 WP11=-586.76 158.24 pull WP12=-597.32 111.05 WP13=-597.92 10.08 WP14=-597.76 -30.52 WP15=-540.99 -39.14 WP16=-511.04 -40.25 WP17=-473.26 -46.44 WP18=-473.26 -8.07 WP19=-472.93 80.30 WP20=-493.40 107.57 pull","title":"Example 2"},{"location":"macros/gallery/related-include-files/#example-3","text":"For chaining across zones etc, this first one is one I used a lot doing LDoN's: /bct bob mbwayplay lfldongf b t c. To get him to go back you just /bct bob mbwayplay gftobb e t c [LFldonGF] WPCount=9 WP1=-399.03 3640.92 WP2=-387.84 1478.23 WP3=-591.79 1209.10 WP4=-379.89 -288.79 WP5=335.06 -1134.56 WP6=1976.01 -1141.98 WP7=2109.76 -1113.65 WP8=2156.90 -1209.03 WP9=2166.85 -1206.41 GFtoBB b t c [GFtoBB] WPCount=8 WP1=-2617.36 -1119.23 LFldonGF e WP2=-2251.29 -883.97 WP3=-2028.63 -441.74 WP4=-1747.35 1992.63 WP5=-1541.93 2516.40 WP6=-1571.55 2639.27 WP7=-1636.02 2632.32 WP8=-1637.63 2639.13 BBGFWayfarer e [BBGFWayfarer] WPCount=6 WP1=-1101.67 -2476.26 WP2=-1126.61 -2939.00 WP3=-1125.30 -3054.35 WP4=-1244.40 -3088.79 WP5=-1315.14 -3053.25 WP6=-1311.01 -3083.58 GFtoBB e t c","title":"Example 3"},{"location":"macros/gallery/related-include-files/#example-4","text":"Here is an example of using a magus: /bct bob mbwayplay tonedaria b t c nedaria [ToNedaria] WPCount=3 WP1=625.62 -178.34 WP2=537.80 -99.15 WP3=604.30 7.34 nedaria b [Nedaria] WPCount=10 WP1=1142.86 1135.75 WP2=1391.06 704.39 WP3=1285.54 -266.96 WP4=1299.90 -388.21 WP5=1362.44 -465.12 WP6=1461.15 -475.80 WP7=1546.51 -496.26 WP8=1581.54 -567.51 WP9=1597.32 -628.35 WP10=1659.85 -625.32 Return to main ModBot Wiki","title":"Example 4"},{"location":"macros/gallery/rogue-helper-command-list/","tags":["macro"],"text":"Rogue Helper Command List \u00b6 Command List Overview: \u00b6 Presentation format for RH commands can be found in the section labeled \"Command List.\" Command names and parameters are capitalized for emphasis, but it should be noted that they are not case-sensitive. The format for each command is shown below: COMMAND Syntax: /COMMAND <parameters>|<or other parameters> [<optional parameter>] LITERAL Description: Command description... Examples: Example usages... Within the syntax descriptions, a vertical line (or pipe) -- \"|\" indicates an either/or choice. Any parameters enclosed within \\< > symbols indicates a user-supplied value. Any parameters enclosed in [ ] symbols is optional. Any parameter information not enclosed within \\< > should be considered a literal expression (that is you enter THAT text, commonly this is the word \"ON\" or \"OFF\" in conjunction with various commands). Command List: \u00b6 The following is a list of RH commands: ADDMASTER Syntax: /addmaster <name> Description: This command adds a \"master\" (an authorized remote controller) given the supplied name to the master control list stored within the RHSettings.INI file. Whenever a \"master\" sends a tell to the rogue running RH, and the tell starts with a \"/\" character, RH will execute the entire line of the tell. A maximum of 20 masters can be stored; after the 20 th master is stored, you'll be forced to delete one before you can add another. Examples: Add a master named Hootey: /addmaster Hootey Send a tell (as the master) to the rogue named Pokey, having the rogue target Mary and hug her and kiss her: /tell pokey /multiline ; /target Mary ; /hug ; /kiss Send a tell (as the master) to the rogue named Dokey, having the rogue camp: /tell dokey /camp AUTOASSIST Syntax: /autoassist ON|OFF|<main assist> [<%health>] Description: Allows you to activate or deactivate automatically assisting a PC or NPC, as well as setting the name of the PC or NPC you wish to assist. The \"% health\" parameter is a value from 1 to 99 designating the percentage health that your target must reach before you engage. The percentage health is an optional parameter that defaults to 98% Examples: Assist someone named \"Mywarriorfriend\" when his (and your) target has 97% health or less: /autoassist Mywarriorfriend 97 Turn autoassisting on and off respectively: /autoassist on /autoassist off AUTOCHICKEN Syntax: /autochicken ON|OFF|<nimble%> [ESCAPE] Description: Provides you with automatic self-preservation. When activated, RH will execute the nimble discipline (if you have it) whenever your health percentage reaches the \"nimble%\" parameter. If the word \"Escape\" is optionally supplied, if nimble is unavailable (due to being blown or not purchased), this feature will cease combat and use your escape AA skill. Examples: Activate autochicken and try to use nimble if your health is at 20% or lower and escape if nimble used/blown: /autochicken 20 escape Turn autochicken on with default (previous) values or turn it off, respectively: /autochicken on /autochicken off AUTODISC1 Syntax: /autodisc1 ON|OFF|<\"discipline name\"> <end%> <reuse> Description: Establish an optional discipline to employ while fighting. The specified discipline (enclosed within \" \" if it's more than one word!) will be executed any time you have at least \"end%\" amount of endurance. You must also specify the reuse time of the discipline (minutes) as this information is currently unknown to MQ2 for the original combat disciplines. Examples: Turn discipline #1 on, set it to employ the duelist discipline if it's ready and you have at least 40 endurance (and specify that the re-use time on duelist is 30 minutes): /autodisc1 Duelist 40 30 Turn discipline #1 on, set it to employ the deadly precision discipline if it's ready and you have at least 60 endurance (and specify that the re-use time on deadly precision is 5 minutes): /autodisc1 \"Deadly Precision\" 60 5 Turn off the disc1, but retain settings: /autodisc1 off Reactivate disc1 using existing settings: /autodisc1 on AUTODISC2 Syntax: /autodisc2 ON|OFF|<\"discipline name\"> <end%> <reuse> Description: Establish an optional discipline to employ while fighting. The specified discipline (enclosed within \" \" if it's more than one word!) will be executed any time you have at least \"end%\" amount of endurance. You must also specify the reuse time of the discipline (minutes) as this information is currently unknown to MQ2 for the original combat disciplines. Examples: Turn discipline #2 on, set it to employ the duelist discipline if it's ready and you have at least 40 endurance (and specify that the re-use time on duelist is 30 minutes): /autodisc2 Duelist 40 30 Turn discipline #2 on, set it to employ the deadly precision discipline if it's ready and you have at least 60 endurance (and specify that the re-use time on deadly precision is 5 minutes): /autodisc2 \"Deadly Precision\" 60 5 Turn off the disc, but retain settings: /autodisc2 off Reactivate disc using existing settings: /autodisc2 on AUTOEVADE Syntax: /autoevade Description: Toggles automatic evade abilities while fighting on or off. If on, they'll be turned off (and vice versa). Examples: N/A AUTOFOLLOW Syntax: /autofollow [<name>] [<distance>] Description: This command will activate autofollowing, which will stay active until your target changes (to nothing, yourself, or anything else). If an RH event is detected \\(such as a situation where autoassist is warranted, or looting, for example\\) autofollow will be deactivated automatically and the interrupting activity will take place. You need not specify range or target (it will use the current target if one isn't specified). Examples: Activate autofollow on Chichihooah and stay within 20 feet of her: /autofollow chichihooah 20 AUTOHS Syntax: /autohs Description: Toggles automatic hide and sneak abilities while not fighting on or off. If on, they'll be turned off (and vice versa). Examples: N/A AUTONINJA Syntax: /autoninja OFF|DROP|DROPABLE|ALL [<range>] Description: This command will activate automatic NPC corpse looting whenever you are awarded experience. The first parameter can be set to ALL (which will loot everything on a corpse), DROP or DROPABLE \\(which will only loot non-NODROP flagged items\\) , or OFF \\(which disables corpse looting\\) . The optional range parameter determines how far away RH will \"look\" for a corpse from your position at time of experience award (default is 50 feet). Examples: Turn on ninjalooting and get everything that drops (use default range): /autoninja all Turn on ninjalooting and get only tradable items; only seek corpses no farther than 20 feet away: /autoninja drop 20 Turn off ninjalooting: /autoninja off AUTOPICK Syntax: /autopick Description: Toggles automatic pickpocketing abilities while fighting on or off. If on, they'll be turned off (and vice versa). Examples: N/A AUTOSTICK Syntax: /autostick Description: Toggles automatic sticking to targets while fighting them. Autosticking implies staying behind the target as well, unless obstructed by an object preventing you from getting behind it or while tanking. Do not confuse /autoassist and /autostick--these are mutually exclusive features that may be used independently of each other. Examples: N/A AUTOTRAPS Syntax: /autotraps Description: Toggles automatic trap negotiation while not in combat. This feature will look for both box and floor traps, and disarm them when it finds one. If the feature is on, it will be turned off (and vice versa). Examples: N/A CHANNEL Syntax: /channel <channel> Description: With this command, you can control where RH directs it's output. Status information and general RH operations text will go to whatever channel you set. In essence, whatever text you supply here is suffixed after a \"/\" and then output strings are appended afterwards. \"Echo\" is the default channel. Creative users can use the IRC plugin and set the channel to \"I\" to send RH output to an existing IRC channel. Examples: Redirect RH output to chat channel 1: /channel 1 Redirect RH output to an irc channel (assuming you've loaded the MQ2IRC plugin and already joined a channel): /channel i Restore RH output to the MQ2 window (echo channel): /channel echo CLOSENESS Syntax: /closeness <%hitrange> Description: With this command you can set the percentage of the maximum range used in order to reach your target while autosticking. For some zones (Kael for example) the reported range is incorrect and too large--for such zones, set the closeness range to a smaller value such as 20 or 30. For most zones, 70% is adequate. Examples: Set the closeness value to 30%: /closeness 30 DRAG Syntax: /drag <body1> <body2> ... <bodyN> Description: Drag corpses. You must supply one or more player names as parameters (unlimited). In order to stop dragging bodies, target yourself (F1). Examples: Drag your friends Booger and Chooger: /drag booger chooger DYNAGGRO Syntax: /dynaggro Description: Toggles whether or not RH should be responsible for the your rogue's aggression level (only meaningful if you're using /autoassist). This feature will LOWER the percentage at which autoassist will fire by 1% if you were attacked during any given fight. If you were not attacked on the most recent fight, it will RAISE the percentage at which autoassist will fire by 1%. The assist percentage never stabilizes--it will always either go up or down after every fight. When using this command, if the feature is on, it will be turned off (and vice versa). Examples: N/A DYNCLOSE Syntax: /dynclose Description: Toggles whether or not RH should be responsible for the temporary automatic adjustment of the closeness to target (requires /autostick to be on). This feature will move you 20% closer to the target every two seconds, until you're in swinging range. Original closeness value is restored when the current target is killed. When using this command, if the feature is on, it will be turned off (and vice versa). Examples: N/A ENDFLOOR Syntax: /endfloor <%endurance> Description: With this command you can set the percentage of your endurance that is required in order for you to continue to initiate a fight with the strike discipline. When your endurance drops below this percentage value, you'll only autoattack when starting a fight. Examples: Set the strike endurance floor to 75%: /endfloor 75 IBOUNCE Syntax: /ibounce <itemalias> <\"Spell Name\"&#62; Description: This command is part of a set of three commands used to manage clickable items and their effects. This particular command allows you to set and store which spell effects do not stack with the spell effect created by a given clickable item. You may store an unlimited number of spell effects that \"bounce off\" of a given clickable item's effect. When RH maintains your clickable buffs, it will consult your existing buffs looking for these bounce spells prior to trying to re-click the conflicting item. Enclose spell names in double quotes (\" \")! The item in question must be aliased with the /iset command prior to using this command. Examples: Set two bounce effects for an item aliased as simply \"ring\" (perhaps a Coldain's Hero Ring), particularly Shield of Spikes and Shield of Thorns: /ibounce ring \"Shield of Spikes\" /ibounce ring \"Shield of Thorns\" ICLICK Syntax: /iclick <itemalias> Description: This command is part of a set of three commands used to manage clickable items and their effects. This particular command allows you to request RH to invoke the clickable effect for a given item. If you're not wearing the item, RH will fetch it, click it, put it back in it's original container (in it's original spot) and close the container. The item in question must be aliased with the /iset command prior to using this command. Examples: Have RH fetch the item aliased as \"ring\" (perhaps a Coldain's Hero Ring), and click it to invoke it's effect: /iclick ring ISET Syntax: /iset <itemalias> KEEPUP|NOKEEPUP <\"Item Name\"> Description: This command is part of a set of three commands used to manage clickable items and their effects. This particular command allows you to set and store an item alias for a given clickable item. You also can specify whether or not you want RH to automatically try to maintain the spell effect of this item. If a superior spell effect doesn't stack with the item's effect, you should use the /ibounce command to specify said spells. Examples: Have RH alias \"ring\" for your Coldain's Hero Ring, and also indicate you wish RH to maintain the Shield of the Eighth, if possible: /iset ring keepup \"Coldain Hero's Insignia Ring\" LEASH Syntax: /leash OFF|<distance> <master> Description: With the leash command, you can dynamically create one of two types of leashes and tether yourself to it: a stake-bound leash or a master-bound leash. If you specify just a distance and no master, /leash will drive a \"stake\" in the ground at your current position, and return to this point after you finish a combat. If you specify both distance and a master, after combats you'll return to the \"master's\" side, regardless of where the master is located. If you indicate OFF as a parameter instead of a distance, leashing will be turned off. Examples: Create a 200 foot leash that is attached to a virtual stake: /leash 200 Create a 250 foot leash that is attached to your warrior buddy named Booger: /leash 250 booger Turn all leashing off: /leash off LEASHFLEX Syntax: /leashflex <%length> Description: With this command you can set the threshold of when RH considers you to be \"close enough\" to the stake or master to stop moving toward it. If you set the leash flexibility very low (1), you'll return to the leash and nearly be on top of the stake or master. If you set the leash flexibility very high (100), you'll never return to the stake or master, but you won't go beyond your leash length when autosticking either. Examples: Set the leash flexibility to 50% of the leash's length: /leashflex 50 LOOTMYCORPSE Syntax: /lootmycorpse Description: With this command, you request RH to loot your entire corpse. Be warned that it's not aware of whether or not you've received a resurrection yet or not! If you're body is too far away or lag is too intense, it will abort with an appropriate failure message. Examples: N/A MAINASSIST Syntax: /mainassist <player> Description: This command is part of a set of three commands used to designate who you should autoassist, assuming you've activated the autoassist feature. This particular command sets the main assist (the main assist is also settable via /autoassist; however using autoassist both sets the main assist AND turns autoassist on--this command will only set the main assist). Examples: Make your buddy warrior \"Booger\" your main assist (but don't turn on autoassist): /mainassist booger PAUSE Syntax: /pause Description: The pause command suspends all of RH's operations. Use this if you want to temporarily disable RH without unloading it. Examples: N/A REMMASTER Syntax: /addmaster <name> Description: This command removes a \"master\" (an authorized remote controller) given the supplied name from the master control list stored within the RHSettings.INI file. It is a complimentary function to the ADDMASTER command. Examples: Remove the master named Hootey: /remmaster Hootey RHHELP Syntax: /rhhelp Description: This command will give you a very terse list of all of RH's commands and their abbreviated syntax. It is NO substitute for this manual! Examples: N/A SECONDASSIST Syntax: /secondassist <player> Description: This command is part of a set of three commands used to designate who you should autoassist, assuming you've activated the autoassist feature. This particular command sets the secondary assist. If the main assist dies, zones, or linkdies, RH will cascade to the secondary assist as a backup and will reinstate the main assist whenever they're alive or reconnect again. Examples: Make the dastardly shadowknight \"Drevil\" your secondary assist: /secondassist drevil STATUS Syntax: /status Description: The status command will show you the current state of all of RH's relevant functions (ON or OFF as TRUE or FALSE) as well as any user-defined values for those thresholds (endurance floors, stick distances, etc.) Examples: N/A STICKDIST Syntax: /stickdist <range_to_target> <range_to_tank> Description: With this command, you can regulate how close you must be to both your current target or the main assist in order to continue (or begin) autosticking to a given target. If you find yourself farther than the specified range to target or you've wandered farther than the specified range to your tank/mainassist, you will stop sticking to the target. This command is mostly useful to prevent you from chasing down runners when the main assist does not (or should not) as well as not running after mobs that recently gated far, far away. Examples: Set the maximum distance you'll pursue a mob at to 50 feet and the maximum \"wander\" distance from the tank to 100 feet: /stickdist 50 100 STOPFIGHT Syntax: /stopfight <%health> Description: With this command, you can control when RH turns off autoattack. Whenever your health reaches the specified percentage health parameter, RH will stop fighting. Examples: Cease combat when your health reaches 20% of it's maximum: /stopfight 20 STRIKEDISC Syntax: /strikedisc <strikeskill> Description: This command allows you to set your best available strike skill. The default skill is Assassin's Strike, but should you be lower level or been lucky enough to obtain later strike discipline books, this is the command you use to set the appropriate strike skill name. The name of the skill only has to be unique enough to differentiate it from other strike skills (i.e. ancient, kyv, or assassin are all fine). Examples: Set the strike skill to be used to \"Kyv's Strike\": /strikedisc kyv TARGETSWITCH Syntax: /targetswitch Description: Toggles whether or not RH should automatically choose a new target if the main assist does, or if it should \"finish off\" the current target. If your main assist is also the puller, you may want target switching OFF, as it will be expected that you finish off the last one before the next one is arrives. When using this command, if the feature is on, it will be turned off (and vice versa). Examples: N/A THIRDASSIST Syntax: /thirdassist <player> Description: This command is part of a set of three commands used to designate who you should autoassist, assuming you've activated the autoassist feature. This particular command sets the tertiary assist. If the main assist and secondary assist die, zone, or linkdie, RH will cascade to the tertiary assist as a backup's backup and will reinstate the main assist whenever they're alive or reconnect again. Examples: Make your friendly paladin \"Goodytwoshoes\" your tertiary assist: /thirdassist goodytwoshoes VERBOSITY Syntax: /verbosity 0|1|2 Description: With this command, you determine the level of text output that RH generates. A verbosity level of '0' will only output command switching information, but RH operational output will be almost completely silent. Verbosity level 1 shows all major RH activity. Verbosity level 2 shows everything, including ancillary RH background operations. The default is 2. Examples: Make RH almost completely mute: /verbosity 0 Have RH output all information possible: /verbosity 2 WEAPONSWITCH Syntax: /weaponswitch OFF|<weapon1> <\"switch text\"> <weapon2> Description: With this command, you can have RH automatically choose between two different weapons, depending on a settable situation. At the end of a combat, RH will restore weapon1 to your grasp. Whenever the supplied \"switch text\" is encountered (usually this the proc message, be it personal buff or target debuff) the weapon will be swapped out for weapon2 . WEAPONSWITCH is also smart enough to determine if the weapon procs a buff (in which case you'd probably like it to only switch back to weapon1 when the proc'ed buff wears off rather than after you finish off the mob. It handles this automatically. Make sure you do not typo the name of the weapons, or the switch text; also, the switch text does not need to be complete, but should be as complete as possible to not accidentally swap weapons around if someone speaks the trigger text. Weapons will be retrieved and deposited in any containers they come from (or on your character). Alternately, you can specify OFF as the first parameter to stop weaponswitching. Examples: Use Locustlure as your default weapon, but switch to the Horn of Hsagra if Locustlure procs: /weaponswitch Locustlure \"yawns.\" \"The Horn of Hsagra\" Use the Dart of Immobility as your default weapon, but switch to Ifir if your Dart procs: /weaponswitch \"Dart of Immobility\" \"screams as poison\" \"Ifir, Dagger of Fire\" Use a Primal Spear as your default weapon until you receive avatar, but switch to Ifir if your primal proc'ed and you still have avatar: /weaponswitch \"Primal Velium Spear\" \"Your body screams\" \"Ifir, Dagger of Fire\" Turn off weaponswitching: /weaponswitch OFF","title":"Rogue Helper Command List"},{"location":"macros/gallery/rogue-helper-command-list/#rogue-helper-command-list","text":"","title":"Rogue Helper Command List"},{"location":"macros/gallery/rogue-helper-command-list/#command-list-overview","text":"Presentation format for RH commands can be found in the section labeled \"Command List.\" Command names and parameters are capitalized for emphasis, but it should be noted that they are not case-sensitive. The format for each command is shown below: COMMAND Syntax: /COMMAND <parameters>|<or other parameters> [<optional parameter>] LITERAL Description: Command description... Examples: Example usages... Within the syntax descriptions, a vertical line (or pipe) -- \"|\" indicates an either/or choice. Any parameters enclosed within \\< > symbols indicates a user-supplied value. Any parameters enclosed in [ ] symbols is optional. Any parameter information not enclosed within \\< > should be considered a literal expression (that is you enter THAT text, commonly this is the word \"ON\" or \"OFF\" in conjunction with various commands).","title":"Command List Overview:"},{"location":"macros/gallery/rogue-helper-command-list/#command-list","text":"The following is a list of RH commands: ADDMASTER Syntax: /addmaster <name> Description: This command adds a \"master\" (an authorized remote controller) given the supplied name to the master control list stored within the RHSettings.INI file. Whenever a \"master\" sends a tell to the rogue running RH, and the tell starts with a \"/\" character, RH will execute the entire line of the tell. A maximum of 20 masters can be stored; after the 20 th master is stored, you'll be forced to delete one before you can add another. Examples: Add a master named Hootey: /addmaster Hootey Send a tell (as the master) to the rogue named Pokey, having the rogue target Mary and hug her and kiss her: /tell pokey /multiline ; /target Mary ; /hug ; /kiss Send a tell (as the master) to the rogue named Dokey, having the rogue camp: /tell dokey /camp AUTOASSIST Syntax: /autoassist ON|OFF|<main assist> [<%health>] Description: Allows you to activate or deactivate automatically assisting a PC or NPC, as well as setting the name of the PC or NPC you wish to assist. The \"% health\" parameter is a value from 1 to 99 designating the percentage health that your target must reach before you engage. The percentage health is an optional parameter that defaults to 98% Examples: Assist someone named \"Mywarriorfriend\" when his (and your) target has 97% health or less: /autoassist Mywarriorfriend 97 Turn autoassisting on and off respectively: /autoassist on /autoassist off AUTOCHICKEN Syntax: /autochicken ON|OFF|<nimble%> [ESCAPE] Description: Provides you with automatic self-preservation. When activated, RH will execute the nimble discipline (if you have it) whenever your health percentage reaches the \"nimble%\" parameter. If the word \"Escape\" is optionally supplied, if nimble is unavailable (due to being blown or not purchased), this feature will cease combat and use your escape AA skill. Examples: Activate autochicken and try to use nimble if your health is at 20% or lower and escape if nimble used/blown: /autochicken 20 escape Turn autochicken on with default (previous) values or turn it off, respectively: /autochicken on /autochicken off AUTODISC1 Syntax: /autodisc1 ON|OFF|<\"discipline name\"> <end%> <reuse> Description: Establish an optional discipline to employ while fighting. The specified discipline (enclosed within \" \" if it's more than one word!) will be executed any time you have at least \"end%\" amount of endurance. You must also specify the reuse time of the discipline (minutes) as this information is currently unknown to MQ2 for the original combat disciplines. Examples: Turn discipline #1 on, set it to employ the duelist discipline if it's ready and you have at least 40 endurance (and specify that the re-use time on duelist is 30 minutes): /autodisc1 Duelist 40 30 Turn discipline #1 on, set it to employ the deadly precision discipline if it's ready and you have at least 60 endurance (and specify that the re-use time on deadly precision is 5 minutes): /autodisc1 \"Deadly Precision\" 60 5 Turn off the disc1, but retain settings: /autodisc1 off Reactivate disc1 using existing settings: /autodisc1 on AUTODISC2 Syntax: /autodisc2 ON|OFF|<\"discipline name\"> <end%> <reuse> Description: Establish an optional discipline to employ while fighting. The specified discipline (enclosed within \" \" if it's more than one word!) will be executed any time you have at least \"end%\" amount of endurance. You must also specify the reuse time of the discipline (minutes) as this information is currently unknown to MQ2 for the original combat disciplines. Examples: Turn discipline #2 on, set it to employ the duelist discipline if it's ready and you have at least 40 endurance (and specify that the re-use time on duelist is 30 minutes): /autodisc2 Duelist 40 30 Turn discipline #2 on, set it to employ the deadly precision discipline if it's ready and you have at least 60 endurance (and specify that the re-use time on deadly precision is 5 minutes): /autodisc2 \"Deadly Precision\" 60 5 Turn off the disc, but retain settings: /autodisc2 off Reactivate disc using existing settings: /autodisc2 on AUTOEVADE Syntax: /autoevade Description: Toggles automatic evade abilities while fighting on or off. If on, they'll be turned off (and vice versa). Examples: N/A AUTOFOLLOW Syntax: /autofollow [<name>] [<distance>] Description: This command will activate autofollowing, which will stay active until your target changes (to nothing, yourself, or anything else). If an RH event is detected \\(such as a situation where autoassist is warranted, or looting, for example\\) autofollow will be deactivated automatically and the interrupting activity will take place. You need not specify range or target (it will use the current target if one isn't specified). Examples: Activate autofollow on Chichihooah and stay within 20 feet of her: /autofollow chichihooah 20 AUTOHS Syntax: /autohs Description: Toggles automatic hide and sneak abilities while not fighting on or off. If on, they'll be turned off (and vice versa). Examples: N/A AUTONINJA Syntax: /autoninja OFF|DROP|DROPABLE|ALL [<range>] Description: This command will activate automatic NPC corpse looting whenever you are awarded experience. The first parameter can be set to ALL (which will loot everything on a corpse), DROP or DROPABLE \\(which will only loot non-NODROP flagged items\\) , or OFF \\(which disables corpse looting\\) . The optional range parameter determines how far away RH will \"look\" for a corpse from your position at time of experience award (default is 50 feet). Examples: Turn on ninjalooting and get everything that drops (use default range): /autoninja all Turn on ninjalooting and get only tradable items; only seek corpses no farther than 20 feet away: /autoninja drop 20 Turn off ninjalooting: /autoninja off AUTOPICK Syntax: /autopick Description: Toggles automatic pickpocketing abilities while fighting on or off. If on, they'll be turned off (and vice versa). Examples: N/A AUTOSTICK Syntax: /autostick Description: Toggles automatic sticking to targets while fighting them. Autosticking implies staying behind the target as well, unless obstructed by an object preventing you from getting behind it or while tanking. Do not confuse /autoassist and /autostick--these are mutually exclusive features that may be used independently of each other. Examples: N/A AUTOTRAPS Syntax: /autotraps Description: Toggles automatic trap negotiation while not in combat. This feature will look for both box and floor traps, and disarm them when it finds one. If the feature is on, it will be turned off (and vice versa). Examples: N/A CHANNEL Syntax: /channel <channel> Description: With this command, you can control where RH directs it's output. Status information and general RH operations text will go to whatever channel you set. In essence, whatever text you supply here is suffixed after a \"/\" and then output strings are appended afterwards. \"Echo\" is the default channel. Creative users can use the IRC plugin and set the channel to \"I\" to send RH output to an existing IRC channel. Examples: Redirect RH output to chat channel 1: /channel 1 Redirect RH output to an irc channel (assuming you've loaded the MQ2IRC plugin and already joined a channel): /channel i Restore RH output to the MQ2 window (echo channel): /channel echo CLOSENESS Syntax: /closeness <%hitrange> Description: With this command you can set the percentage of the maximum range used in order to reach your target while autosticking. For some zones (Kael for example) the reported range is incorrect and too large--for such zones, set the closeness range to a smaller value such as 20 or 30. For most zones, 70% is adequate. Examples: Set the closeness value to 30%: /closeness 30 DRAG Syntax: /drag <body1> <body2> ... <bodyN> Description: Drag corpses. You must supply one or more player names as parameters (unlimited). In order to stop dragging bodies, target yourself (F1). Examples: Drag your friends Booger and Chooger: /drag booger chooger DYNAGGRO Syntax: /dynaggro Description: Toggles whether or not RH should be responsible for the your rogue's aggression level (only meaningful if you're using /autoassist). This feature will LOWER the percentage at which autoassist will fire by 1% if you were attacked during any given fight. If you were not attacked on the most recent fight, it will RAISE the percentage at which autoassist will fire by 1%. The assist percentage never stabilizes--it will always either go up or down after every fight. When using this command, if the feature is on, it will be turned off (and vice versa). Examples: N/A DYNCLOSE Syntax: /dynclose Description: Toggles whether or not RH should be responsible for the temporary automatic adjustment of the closeness to target (requires /autostick to be on). This feature will move you 20% closer to the target every two seconds, until you're in swinging range. Original closeness value is restored when the current target is killed. When using this command, if the feature is on, it will be turned off (and vice versa). Examples: N/A ENDFLOOR Syntax: /endfloor <%endurance> Description: With this command you can set the percentage of your endurance that is required in order for you to continue to initiate a fight with the strike discipline. When your endurance drops below this percentage value, you'll only autoattack when starting a fight. Examples: Set the strike endurance floor to 75%: /endfloor 75 IBOUNCE Syntax: /ibounce <itemalias> <\"Spell Name\"&#62; Description: This command is part of a set of three commands used to manage clickable items and their effects. This particular command allows you to set and store which spell effects do not stack with the spell effect created by a given clickable item. You may store an unlimited number of spell effects that \"bounce off\" of a given clickable item's effect. When RH maintains your clickable buffs, it will consult your existing buffs looking for these bounce spells prior to trying to re-click the conflicting item. Enclose spell names in double quotes (\" \")! The item in question must be aliased with the /iset command prior to using this command. Examples: Set two bounce effects for an item aliased as simply \"ring\" (perhaps a Coldain's Hero Ring), particularly Shield of Spikes and Shield of Thorns: /ibounce ring \"Shield of Spikes\" /ibounce ring \"Shield of Thorns\" ICLICK Syntax: /iclick <itemalias> Description: This command is part of a set of three commands used to manage clickable items and their effects. This particular command allows you to request RH to invoke the clickable effect for a given item. If you're not wearing the item, RH will fetch it, click it, put it back in it's original container (in it's original spot) and close the container. The item in question must be aliased with the /iset command prior to using this command. Examples: Have RH fetch the item aliased as \"ring\" (perhaps a Coldain's Hero Ring), and click it to invoke it's effect: /iclick ring ISET Syntax: /iset <itemalias> KEEPUP|NOKEEPUP <\"Item Name\"> Description: This command is part of a set of three commands used to manage clickable items and their effects. This particular command allows you to set and store an item alias for a given clickable item. You also can specify whether or not you want RH to automatically try to maintain the spell effect of this item. If a superior spell effect doesn't stack with the item's effect, you should use the /ibounce command to specify said spells. Examples: Have RH alias \"ring\" for your Coldain's Hero Ring, and also indicate you wish RH to maintain the Shield of the Eighth, if possible: /iset ring keepup \"Coldain Hero's Insignia Ring\" LEASH Syntax: /leash OFF|<distance> <master> Description: With the leash command, you can dynamically create one of two types of leashes and tether yourself to it: a stake-bound leash or a master-bound leash. If you specify just a distance and no master, /leash will drive a \"stake\" in the ground at your current position, and return to this point after you finish a combat. If you specify both distance and a master, after combats you'll return to the \"master's\" side, regardless of where the master is located. If you indicate OFF as a parameter instead of a distance, leashing will be turned off. Examples: Create a 200 foot leash that is attached to a virtual stake: /leash 200 Create a 250 foot leash that is attached to your warrior buddy named Booger: /leash 250 booger Turn all leashing off: /leash off LEASHFLEX Syntax: /leashflex <%length> Description: With this command you can set the threshold of when RH considers you to be \"close enough\" to the stake or master to stop moving toward it. If you set the leash flexibility very low (1), you'll return to the leash and nearly be on top of the stake or master. If you set the leash flexibility very high (100), you'll never return to the stake or master, but you won't go beyond your leash length when autosticking either. Examples: Set the leash flexibility to 50% of the leash's length: /leashflex 50 LOOTMYCORPSE Syntax: /lootmycorpse Description: With this command, you request RH to loot your entire corpse. Be warned that it's not aware of whether or not you've received a resurrection yet or not! If you're body is too far away or lag is too intense, it will abort with an appropriate failure message. Examples: N/A MAINASSIST Syntax: /mainassist <player> Description: This command is part of a set of three commands used to designate who you should autoassist, assuming you've activated the autoassist feature. This particular command sets the main assist (the main assist is also settable via /autoassist; however using autoassist both sets the main assist AND turns autoassist on--this command will only set the main assist). Examples: Make your buddy warrior \"Booger\" your main assist (but don't turn on autoassist): /mainassist booger PAUSE Syntax: /pause Description: The pause command suspends all of RH's operations. Use this if you want to temporarily disable RH without unloading it. Examples: N/A REMMASTER Syntax: /addmaster <name> Description: This command removes a \"master\" (an authorized remote controller) given the supplied name from the master control list stored within the RHSettings.INI file. It is a complimentary function to the ADDMASTER command. Examples: Remove the master named Hootey: /remmaster Hootey RHHELP Syntax: /rhhelp Description: This command will give you a very terse list of all of RH's commands and their abbreviated syntax. It is NO substitute for this manual! Examples: N/A SECONDASSIST Syntax: /secondassist <player> Description: This command is part of a set of three commands used to designate who you should autoassist, assuming you've activated the autoassist feature. This particular command sets the secondary assist. If the main assist dies, zones, or linkdies, RH will cascade to the secondary assist as a backup and will reinstate the main assist whenever they're alive or reconnect again. Examples: Make the dastardly shadowknight \"Drevil\" your secondary assist: /secondassist drevil STATUS Syntax: /status Description: The status command will show you the current state of all of RH's relevant functions (ON or OFF as TRUE or FALSE) as well as any user-defined values for those thresholds (endurance floors, stick distances, etc.) Examples: N/A STICKDIST Syntax: /stickdist <range_to_target> <range_to_tank> Description: With this command, you can regulate how close you must be to both your current target or the main assist in order to continue (or begin) autosticking to a given target. If you find yourself farther than the specified range to target or you've wandered farther than the specified range to your tank/mainassist, you will stop sticking to the target. This command is mostly useful to prevent you from chasing down runners when the main assist does not (or should not) as well as not running after mobs that recently gated far, far away. Examples: Set the maximum distance you'll pursue a mob at to 50 feet and the maximum \"wander\" distance from the tank to 100 feet: /stickdist 50 100 STOPFIGHT Syntax: /stopfight <%health> Description: With this command, you can control when RH turns off autoattack. Whenever your health reaches the specified percentage health parameter, RH will stop fighting. Examples: Cease combat when your health reaches 20% of it's maximum: /stopfight 20 STRIKEDISC Syntax: /strikedisc <strikeskill> Description: This command allows you to set your best available strike skill. The default skill is Assassin's Strike, but should you be lower level or been lucky enough to obtain later strike discipline books, this is the command you use to set the appropriate strike skill name. The name of the skill only has to be unique enough to differentiate it from other strike skills (i.e. ancient, kyv, or assassin are all fine). Examples: Set the strike skill to be used to \"Kyv's Strike\": /strikedisc kyv TARGETSWITCH Syntax: /targetswitch Description: Toggles whether or not RH should automatically choose a new target if the main assist does, or if it should \"finish off\" the current target. If your main assist is also the puller, you may want target switching OFF, as it will be expected that you finish off the last one before the next one is arrives. When using this command, if the feature is on, it will be turned off (and vice versa). Examples: N/A THIRDASSIST Syntax: /thirdassist <player> Description: This command is part of a set of three commands used to designate who you should autoassist, assuming you've activated the autoassist feature. This particular command sets the tertiary assist. If the main assist and secondary assist die, zone, or linkdie, RH will cascade to the tertiary assist as a backup's backup and will reinstate the main assist whenever they're alive or reconnect again. Examples: Make your friendly paladin \"Goodytwoshoes\" your tertiary assist: /thirdassist goodytwoshoes VERBOSITY Syntax: /verbosity 0|1|2 Description: With this command, you determine the level of text output that RH generates. A verbosity level of '0' will only output command switching information, but RH operational output will be almost completely silent. Verbosity level 1 shows all major RH activity. Verbosity level 2 shows everything, including ancillary RH background operations. The default is 2. Examples: Make RH almost completely mute: /verbosity 0 Have RH output all information possible: /verbosity 2 WEAPONSWITCH Syntax: /weaponswitch OFF|<weapon1> <\"switch text\"> <weapon2> Description: With this command, you can have RH automatically choose between two different weapons, depending on a settable situation. At the end of a combat, RH will restore weapon1 to your grasp. Whenever the supplied \"switch text\" is encountered (usually this the proc message, be it personal buff or target debuff) the weapon will be swapped out for weapon2 . WEAPONSWITCH is also smart enough to determine if the weapon procs a buff (in which case you'd probably like it to only switch back to weapon1 when the proc'ed buff wears off rather than after you finish off the mob. It handles this automatically. Make sure you do not typo the name of the weapons, or the switch text; also, the switch text does not need to be complete, but should be as complete as possible to not accidentally swap weapons around if someone speaks the trigger text. Weapons will be retrieved and deposited in any containers they come from (or on your character). Alternately, you can specify OFF as the first parameter to stop weaponswitching. Examples: Use Locustlure as your default weapon, but switch to the Horn of Hsagra if Locustlure procs: /weaponswitch Locustlure \"yawns.\" \"The Horn of Hsagra\" Use the Dart of Immobility as your default weapon, but switch to Ifir if your Dart procs: /weaponswitch \"Dart of Immobility\" \"screams as poison\" \"Ifir, Dagger of Fire\" Use a Primal Spear as your default weapon until you receive avatar, but switch to Ifir if your primal proc'ed and you still have avatar: /weaponswitch \"Primal Velium Spear\" \"Your body screams\" \"Ifir, Dagger of Fire\" Turn off weaponswitching: /weaponswitch OFF","title":"Command List:"},{"location":"macros/gallery/rogue-helper/","tags":["macro"],"text":"Rogue Helper \u00b6 RH.mac was originally designed to take some button mashing out of playing a rogue while raiding. This macro will execute \"smart\" backstabbing, constant evading (optionally), auto hiding and sneaking while not fighting, automatically avoid enrage riposte damage, stop fighting if you get below a certain health percentage, employ your chosen Strike discipline before wading into combat, and was later expanded to include a vast amount of other features. The latest versions of RH will also automatically assist specified tanks in a cascading fashion, automatically stick to a target (via internal code or using the MoveUtils plugin, smartly), will strafe in the most logical direction, display experience totals after combat, and optionally return after combat to a specified stake (or anchor) point. In addition to various combat abilities (along with their tunable parameters), RH also provides some rogue tools: multiple body dragging, self corpse looting, as well as a fully customizable item clicker (with the capability to automatically refresh self-clicked buffs), and automatic looting. A full list of features, their command syntax, and examples of how to use those commands is provided alphabetically below. Important Notice: \u00b6 RH will not function correctly , particularly in combat and more specifically with strike execution, unless you do the following things before using the macro: Make sure you have autoattack on assist OFF (/assist off) Modify your HOTKEY assist button to be ONLY an assist command and the following line: /echo Seeking a Victim... In other words, make a hotkey with the following two lines: /assist main /echo Seeking a Victim... If you fail to do these things, RH will function poorly! If your rogue still fails to assist your tank, try /Stick Off Features: \u00b6 RH provides you, the rogue, with an enormous amount of power. RH can do just about anything a rogue would need to do and can do almost all of it automatically. The following section briefly lists the features and capabilities that RH provides. Backstab while autoattack is on. Evade (optional) whenever hide is available during combat. Hide and sneak (optional) while not fighting. Pick the pockets of your enemies while fighting. Avoid riposte damage by disabling autoattack whenever enrage is detected and you're facing the target (if autoassist is on, autoattack is turned back on after the enrage wears off). Cease fighting when the rogue's health drops below a certain point. Open combats with a strike discipline (if hiding and sneaking and sufficient endurance is available). Automatically stick (maneuver behind) engaged targets in a VERY human-like way. You can specify how near you stick to the mob as a percentage of the maximum range to hit the target. You will \"circle strafe\" around targets in the smallest arc to find the target's rear. RH will try to back up and randomly move around obstacles if it gets stuck. If you suddenly find yourself tanking, sticking will be disabled to prevent you from dancing around the target indefinitely. Sticking will automatically take advantage of the MQ2MoveUtils plugin if it's loaded. Experience changes in regular, AA, and Group Leadership are reported as a percentage delta (change) after every experience gain. Create a virtual leash for your rogue and attach it to an NPC or player or to a virtual stake in the ground. You can customize the length of the leash. If your (or RH) tries to move you beyond the leash length, you will be yanked back to the maximum length. When not fighting, you'll return to the stake or the leash holder. Automatically assist another player and make ready to strike or auto attack when the target reaches a certain health percentage. Up to three (3) assists can be specified.. RH will cycle through all three assists, trying to assist each and stop when it finds that one of them is targeting an NPC. You can specify \"main\" as the first or main assist, and RH will follow raid-set main assists instead. Aggression level can optionally be controlled by RH (how soon to assist). RH can stay on an existing target until it's dead, or optionally engage a new target if the main assist chooses one. Drag an unlimited number of corpses (command line driven). Completely loot your own corpse. Automatically click items. You can define clickable items and use a command to have RH \"fetch\" them, use them, and put them back. Specified clickable effects can be designated as persistent (KEEPUP), and RH will automatically find the item and activate it's effect when the previously employed effect wears off. You can define which spells don't stack with your clickable items to prevent persistent effects from bouncing off of superior spells. * Ninjaloot any NPC corpses that are around you (after something dies). * Automatically scan and disarm traps. * Improved autofollow (far better than EQ's) which actually allows you to follow players in dungeons or follow NPCs, all at a specified range. Conditionally swap weapons after a specified proc-effect occurs in combat, be it a player buff or a detrimental target debuff. Fight in 3D-mode while swimming (target acquisition while underwater is inhumanly perfect). Determine when to take evasive action, including nimble discipline and potentially escape. Automatically employ two configurable disciplines of your choice (duelist, deadly precision, kinesthetics, etc.) Completely control macro output, both where it's displayed and the volume of text generated. [Rogue Helper Command List]( https://macroquest.org/wiki/index.php/Rogue_Helper_Command_List \u00b6","title":"Rogue Helper"},{"location":"macros/gallery/rogue-helper/#rogue-helper","text":"RH.mac was originally designed to take some button mashing out of playing a rogue while raiding. This macro will execute \"smart\" backstabbing, constant evading (optionally), auto hiding and sneaking while not fighting, automatically avoid enrage riposte damage, stop fighting if you get below a certain health percentage, employ your chosen Strike discipline before wading into combat, and was later expanded to include a vast amount of other features. The latest versions of RH will also automatically assist specified tanks in a cascading fashion, automatically stick to a target (via internal code or using the MoveUtils plugin, smartly), will strafe in the most logical direction, display experience totals after combat, and optionally return after combat to a specified stake (or anchor) point. In addition to various combat abilities (along with their tunable parameters), RH also provides some rogue tools: multiple body dragging, self corpse looting, as well as a fully customizable item clicker (with the capability to automatically refresh self-clicked buffs), and automatic looting. A full list of features, their command syntax, and examples of how to use those commands is provided alphabetically below.","title":"Rogue Helper"},{"location":"macros/gallery/rogue-helper/#important-notice","text":"RH will not function correctly , particularly in combat and more specifically with strike execution, unless you do the following things before using the macro: Make sure you have autoattack on assist OFF (/assist off) Modify your HOTKEY assist button to be ONLY an assist command and the following line: /echo Seeking a Victim... In other words, make a hotkey with the following two lines: /assist main /echo Seeking a Victim... If you fail to do these things, RH will function poorly! If your rogue still fails to assist your tank, try /Stick Off","title":"Important Notice:"},{"location":"macros/gallery/rogue-helper/#features","text":"RH provides you, the rogue, with an enormous amount of power. RH can do just about anything a rogue would need to do and can do almost all of it automatically. The following section briefly lists the features and capabilities that RH provides. Backstab while autoattack is on. Evade (optional) whenever hide is available during combat. Hide and sneak (optional) while not fighting. Pick the pockets of your enemies while fighting. Avoid riposte damage by disabling autoattack whenever enrage is detected and you're facing the target (if autoassist is on, autoattack is turned back on after the enrage wears off). Cease fighting when the rogue's health drops below a certain point. Open combats with a strike discipline (if hiding and sneaking and sufficient endurance is available). Automatically stick (maneuver behind) engaged targets in a VERY human-like way. You can specify how near you stick to the mob as a percentage of the maximum range to hit the target. You will \"circle strafe\" around targets in the smallest arc to find the target's rear. RH will try to back up and randomly move around obstacles if it gets stuck. If you suddenly find yourself tanking, sticking will be disabled to prevent you from dancing around the target indefinitely. Sticking will automatically take advantage of the MQ2MoveUtils plugin if it's loaded. Experience changes in regular, AA, and Group Leadership are reported as a percentage delta (change) after every experience gain. Create a virtual leash for your rogue and attach it to an NPC or player or to a virtual stake in the ground. You can customize the length of the leash. If your (or RH) tries to move you beyond the leash length, you will be yanked back to the maximum length. When not fighting, you'll return to the stake or the leash holder. Automatically assist another player and make ready to strike or auto attack when the target reaches a certain health percentage. Up to three (3) assists can be specified.. RH will cycle through all three assists, trying to assist each and stop when it finds that one of them is targeting an NPC. You can specify \"main\" as the first or main assist, and RH will follow raid-set main assists instead. Aggression level can optionally be controlled by RH (how soon to assist). RH can stay on an existing target until it's dead, or optionally engage a new target if the main assist chooses one. Drag an unlimited number of corpses (command line driven). Completely loot your own corpse. Automatically click items. You can define clickable items and use a command to have RH \"fetch\" them, use them, and put them back. Specified clickable effects can be designated as persistent (KEEPUP), and RH will automatically find the item and activate it's effect when the previously employed effect wears off. You can define which spells don't stack with your clickable items to prevent persistent effects from bouncing off of superior spells. * Ninjaloot any NPC corpses that are around you (after something dies). * Automatically scan and disarm traps. * Improved autofollow (far better than EQ's) which actually allows you to follow players in dungeons or follow NPCs, all at a specified range. Conditionally swap weapons after a specified proc-effect occurs in combat, be it a player buff or a detrimental target debuff. Fight in 3D-mode while swimming (target acquisition while underwater is inhumanly perfect). Determine when to take evasive action, including nimble discipline and potentially escape. Automatically employ two configurable disciplines of your choice (duelist, deadly precision, kinesthetics, etc.) Completely control macro output, both where it's displayed and the volume of text generated.","title":"Features:"},{"location":"macros/gallery/rogue-helper/#rogue-helper-command-listhttpsmacroquestorgwikiindexphprogue_helper_command_list","text":"","title":"[Rogue Helper Command List](https://macroquest.org/wiki/index.php/Rogue_Helper_Command_List"},{"location":"macros/gallery/script-examples/","tags":["macro"],"text":"Script Examples \u00b6 Following are examples of scripts that have been created by ModBot users over the years. Some work great, while others work pretty well, but they all at the very least will give you some solid examples from which you can start to create your own fantactis scripts (which you will, of course, post here as an example :) Heal Script Examples \u00b6 Intelligent use of Promised Renewal \u00b6 Please note : \"PR\" has been added as a precondition for heals, so this script is no longer needed (although it is being left here as a good example). Please see the AdvHeal section of the ModBot wiki for information on using PR with AHPreCondition. Unlike most other heal spells, Promised Renewal lands as a buff on the target that heals after it fades (~18 seconds). The challenge in the current incarnation of ModHeal is that Modheal calculates the mob's dps and along with your target's time to live \\(ttl\\) without taking into account the PR buff - the end result is that it will often cast a big (and mana expensive) fast heal on your target five seconds before the PR buff fades. This script, created by Kroak, works to use PR correctly. [Script-CHCheck] Commands=9 C1=/declare vName string local {Spawn[{Param1}].Name} C2=/if ({NetBots[{vName}].ID} && !{NetBots[{vName}].Buff.Find[9755]} || !{Me.LAInspectBuffs} && !{NetBots[{vName}].ID} || {NetBots[{Spawn[{Param1}].Name}].Buff.Find[9755]} && {NetBots[{vName}].Duration[{NetBots[{vName}].Buff.Left[{NetBots[{vName}].Buff.Find[9755]}].Count[ ]}]}>2 && {Spawn[{Param1}].PctHPs}<55) /return TRUE C3=/if ({NetBots[{Spawn[{Param1}].Name}].Buff.Find[9755]} && ({NetBots[{vName}].Duration[{NetBots[{vName}].Buff.Left[{NetBots[{vName}].Buff.Find[9755]}].Count[ ]}]}<3 && {Param2}==13 || {NetBots[{vName}].Duration[{NetBots[{vName}].Buff.Left[{NetBots[{vName}].Buff.Find[9755]}].Count[ ]}]}<2 && {Param2}!=13)) /return FALSE C4=/if ({NetBots[{vName}].ID}) /return FALSE C5=/if ({Target.ID}!={Param1}) /target id {Param1} C6=/delay 2s {Target.ID}=={Param1} && {Target.Buff[1].ID} || {Me.TargetOfTarget.ID} C7=/if ({Target.BuffDuration[Promised Renewal]}<3) /return FALSE C8=/return TRUE Kroak notes the following about this script: Parts of this I did in an attempt to be sure non-netbots toons are checked also, but Netbots toons are checked first, and the rest is untested, and I think turned off by line 4. There's a couple of reasons this isn't the perfect solution - Rk. II versions of the spell will require a change in the ID checked. I don't have Rk. II, so this just checks for buff id 9755. Also, the PctHps\\<55 is a very important check. For harder fights you might want that a bit higher. The second line checks if you're attempting to cast CH and checks the duration of the buff against cast time of your heal. If you notice how long some of the lines are, you might guess why I'd like Netbots[X].Duration[Y] to take a spell name or ID instead of only listing by buff number. Anyways, my goal was to set this in my NetworkINI file, then AHPreCondition8=net-CHCheck on any toon that heals. It semi-works. Return to main ModBot Wiki Disc and Item Examples \u00b6 Procure Sap Rogue Disc \u00b6 Rogues get a disc Procure Sap that summons a potion called Mugger's Sap - this item goes in your potion belt, and once right-clicked on a humanoid, can pickpocket an item on a separate loot table. Recast on potion belt item is approximately 20 minutes. ABGem3=script ABSpell3=summugger ABSpellFoci3= ABDurMod3=0 ABSpellAlias3= ABAnnounce3= ABSpellMinMana3=20 ABTarCnt3=4 ABTarType3=self cbt idle ABRecast3=FALSE ABSpellIcon3= [Script-summugger] Commands=3 C1=/if (!{FindItemCount[Mugger's Sap]}) /disc Procure Sap Rk. II C2=/if (!{FindItemCount[Mugger's Sap]}==0) /delay 1s {Me.Casting.ID} C3=/if (!{FindItemCount[Mugger's Sap]}==0) /delay 7s !{Me.Casting.ID} Return to main ModBot Wiki Nuking and Attack Examples \u00b6 Wizard Script for Setting Nuke Order \u00b6 Thanks to Bartab for this one. Bartab explains how this script works as follows: Basically my wizard has 5 nukes, I want him to cast it in the following order : 1 3 1 3 2 ----> 1 3 1 3 2 ----> ..... *knowing that when I cast 1 or 3 I can have a song in my song window, in that case I want to cast 4. I also want to cast 5 if I get a GoM. And if I cast 4 or 5 I always want to cast 2 just after. [Script-setNormalOrder] Commands=13 C1=/if (!{Defined[nextCast]}) /declare nextCast int outer 0; C2=/if (!{Defined[CastOne]}) /declare CastOne int outer 0; C3=/if (!{Defined[CastTwo]}) /declare CastTwo int outer 0; C4=/if (!{Defined[CastThree]}) /declare CastThree int outer 0; C5=/if (!{Defined[CastFour]}) /declare CastFour int outer 0; C6=/multiline ; /varset ADTarCnt[1] 0 ; /varset ADTarCnt[2] 0 ; /varset ADTarCnt[3] 0 ; /varset ADTarCnt[4] 0 ; /varset ADTarCnt[5] 0 C7=/if ({nextCast}==0) /multiline ; /varset nextCast 1 ; /varcalc CastOne {CastOne}+1 ; /varset ADTarCnt[1] 1 ; /echo 1 ; /return C8=/if ({nextCast}==1) /multiline ; /varset nextCast 3 ; /varcalc CastThree {CastThree}+1 ; /varset ADTarCnt[3] 1 ; /echo 3 ; /return C9=/if ({nextCast}==3 && {CastOne}<=1) /multiline ; /varset nextCast 1 ; /varcalc CastOne {CastOne}+1 ; /varset ADTarCnt[1] 1 ; /echo 1 ; /return C10=/if ({nextCast}==3 && {CastOne}>1) /multiline ; /varset nextCast 2 ; /varcalc CastTwo {CastTwo}+1 ; /varset ADTarCnt[2] 1 ; /echo 2 ; /return C11=/if ({nextCast}==2 && {Me.Song[Flashblaze Singe].ID}) /multiline ; /varset nextCast 4 ; /varcalc CastFour {CastFour}+1 ; /varset ADTarCnt[4] 1 ; /echo 4 ; /return C12=/if ({nextCast}==2) /multiline ; /varset nextCast 3 ; /varset CastOne 0 ; /varset CastTwo 0 ; /varset CastThree 0 ; /varset ADTarCnt[3] 1 ; /echo 3 ; /return C13=/if ({nextCast}==4) /multiline ; /varset nextCast 2 ; /varset CastOne 0 ; /varset CastTwo 0 ; /varset CastThree 0 ; /varset CastFour 0 ; /varset ADTarCnt[2] 1 ; /echo 2 ; /return An important addition to this script is to reset all of the variables after a mob dies (otherwise the ordering will get screwed up). This is best accomplished using the ACAfter setting in the INI: ACAfter=/multiline ; /varset nextCast 0;/varset CastOne 0;/varset CastTwo 0;/varset CastThree 0;/varset CastFour 0 Note: Please see the Level 85 Wizard INI example found here to see the nukes that Bartab is referring to (this will provide a bit of context for his desired casting order). Enchanter Script for Using Mana Reiterate \u00b6 Thanks to Kzboray for posting his working script (with some help from Kroak :). Kzboray says that this script can also be used for any other Enchanter damage buff!: ADGem4=script ADSpell4=ddbuff ADSpellFoci4= ADDurMod4=0 ADSpellAlias4=manar ADAnnounce4=/bc ADSpellMinMana4=20 ADSpellRecast4=0 ADSpellCastonResist4= ADSpellDelay4=0 ADTarCnt4=1 ADTarType4=1 ADTarBegHP4=100 ADTarEndHP4=20 ADIfSpellImmune4= ADUseHoTT4=0 ADPreCondition4=TRUE [Script-ddbuff] Commands=5 C1=/if ({Me.Buff[Mana Reiterate Rk. II].ID} || {Me.PctMana}<30) /return C2=/if (!{Me.Gem[Mana Reiterate Rk. II]}) /memorize Mana`` ``Reiterate`` ``Rk.`` ``II|gem7 C3=/if ({Me.Casting.ID}) /delay {Math.Calc[({Cast.Timing}/100)+1]}s {Cast.Ready} C4=/if ({Cast.Ready} && !{Cast.Ready[Mana Reiterate Rk. II]} || {NetBots[WizName].Buff.Find[{Spell[Mana Reiterate Rk. II].ID}]}) /return C5=/call Mq2Cast Mana`` ``Reiterate`` ``Rk.`` ``II gem7 30s CastCheck -targetid|{Group.Member[{Group.Member[WizName]}].ID} Simply change WizName (2 places in the C4 and C5 lines) to the name of the toon you want to be buffed and your done. Hope this helps someone else. Return to main ModBot Wiki Utility Scripts \u00b6 Creating Campfires and Getting to Them \u00b6 Thanks to Toomanynames for this gem :). The first script will set up the campsite fire for you and the second script will get you to the campsite (note that there are some class specific items in the second script \\(bard\\) ). [Script-MakeSite] Commands=15 C1=/varset Timer 120s C2=/windowstate FellowshipWnd open C3=/nomodkey /notify FellowshipWnd FP_Subwindows tabselect 2 C4=/delay 1s C5=/nomodkey /notify FellowshipWnd FP_RefreshList leftmouseup C6=/delay 2s C7=/nomodkey /notify FellowshipWnd FP_CampsiteKitList listselect 1 C8=/delay 1s C9=/nomodkey /notify FellowshipWnd FP_CampsiteKitList leftmouse 1 C10=/delay 1s C11=/nomodkey /notify FellowshipWnd FP_CreateCampsite leftmouseup C12=/delay 2s C13=/windowstate FellowshipWnd close C14=/if ({NearestSpawn[any radius 30 zradius 30 fsp].ID}) /multiline ; /bc Campsite looks good;/return C15=/bc Not sure about the Campsite [Script-ToSite] Commands=7 C1=/if ({NearestSpawn[any radius 30 zradius 30 fsp].ID}) /multiline ; /bc Looks like I'm at the campsite;/return C2=/if ({Select[{Me.Class},bard]}) /twist off C3=/if ({Me.Sneaking} || {Me.Invis}) /attack C4=/delay 10s !{Me.Casting.ID} C5=/casting ''Fellowship Registration Insignia|item'' C6=/delay 5s {Me.Casting.ID} C7=/delay 10s !{Me.Casting.ID} Magician Pet Kits \u00b6 Example 1 from Banderas \u00b6 Before using this, you need to make room so make sure you have only 7 bags and one slot free. Make certain that you have the PetKit script entry before all other pet toy \"buffs\" in the AdvBuff section so that the bag goes to the free slot (then you can have frigid paradox stuff and others below the petkit entry). ABGem10=script ABSpell10=PetKit ABSpellFoci10= ABDurMod10=0 ABSpellAlias10=petkit ABAnnounce10= ABSpellMinMana10=0 ABTarCnt10=1 ABTarType10=self ABRecast10=FALSE [Script-PetKit] Commands=9 C1=/if (!{Defined[PKPetName]}) /declare PKPetName string outer C2=/if ({Target.ID}!={Me.Pet.ID} && {Spawn[{Target.ID}].Type.Equal[pet]}) /varset PKPetName {Target.CleanName} C3=/if ({PKPetName.Length}<4 && {Me.Pet.ID}) /varset PKPetName {Me.Pet.CleanName} C4=/if ({PKPetName.Length}<4) /return C5=/varset Timer 10m C6=/multiline ; /autoinventory;/call CastCall {Me.CleanName} cast`` ``petwep C7=/multiline ; /delay 5s;/autoinventory ```C8=/call GiveCheck {PKPetName}``_```Summoned:`` ``Tonfa`` ``of`` ``the`` ``North`` ``Wind|Summoned:`` ``Blazing`` ``Brand```_ C9=/varset ABTarCnt[10] 0 ` Modify C8 to chose the wep you like for pet. C9 will make the script stop redoing it again and again, so if your pet dies, simply re-start the macro or make a hotkey to do only petkit ones as /varset ABTarCnt[10] 1 Example 2 from Lunason \u00b6 Just for fun I did up a level 85 mage pet kit script. Works pretty well. I borrowed a lot of it and assembled it to my own liking. Only uses 1 inventory slot to do all of it's work and cleans up after itself. Theoretically it should give a pet kit to any pet it has targeted. That's untested. [Script-PetKit] Commands=51 ;need to check for empty inventory slot ;/if (!${InvSlot[22 - 29].Item.ID}) ;this requires 4 events to be setup ;event names ; pet ; petweap ; petarmor ; petfocus C1=/if (!{Defined[PKPetName]}) /declare PKPetName string outer C2=/varset PKPetName null ;if we have a pet targeted we'll equip it C3=/if ({Spawn[{Target.ID}].Type.Equal[pet]}) /varset PKPetName {Target.CleanName} ;if no pet targeted and we have a pet we'll equip it C4=/if ({Me.Pet.ID} && {PKPetName.Equal[null]}) /varset PKPetName {Me.Pet.CleanName} ;if no pet targeted and no pet of our own make one C5=/if (!{Me.Pet.ID}) /call CastCall {Me.CleanName} cast`` ``pet C6=/if (!{Me.Pet.ID}) /delay 3s ;if no pet defined yet set the var to the new pet C7=/if ({PKPetName.Equal[null]} && {Me.Pet.ID}) /varset PKPetName {Me.Pet.CleanName} ;if still no pet let them know and exit C8=/if ({PKPetName.Equal[null]}) /bc Unable to find a pet to equip C9=/if ({PKPetName.Equal[null]}) /return ;check for an empty inventory slot C10=/bc equipping {PKPetName} C11=/if (!{Defined[EmptySlot]}) /declare EmptySlot string outer false C12=/if (!${InvSlot[22].Item.ID}) /varset EmptySlot true C13=/if (!${InvSlot[23].Item.ID}) /varset EmptySlot true C14=/if (!${InvSlot[24].Item.ID}) /varset EmptySlot true C15=/if (!${InvSlot[25].Item.ID}) /varset EmptySlot true C16=/if (!${InvSlot[26].Item.ID}) /varset EmptySlot true C17=/if (!${InvSlot[27].Item.ID}) /varset EmptySlot true C18=/if (!${InvSlot[28].Item.ID}) /varset EmptySlot true C19=/if (!${InvSlot[29].Item.ID}) /varset EmptySlot true C20=/if (${EmptySlot.Equal[false]}) /echo no empty slots, sorry no pet kit right now. C21=/if (${EmptySlot.Equal[false]}) /return 0 ;Allow for more than 30 seconds by setting the timer to 10minutes C22=/varset Timer 10m ;cast the pet armor C23=/bc giving pet armor C24=/call CastCall {Me.CleanName} cast`` ``petarmor C25=/multiline ; /delay 1s;/autoinventory C26=/call GiveCheck {PKPetName} Prime`` ``Plate`` ``Helm|Prime`` ``Plate`` ``Breastplate|Prime`` ``Plate`` ``Bracers|Summoned:`` ``Prime`` ``Belt C27=/call GiveCheck {PKPetName} Prime`` ``Plate`` ``Vambraces|Prime`` ``Plate`` ``Gauntlets|Prime`` ``Plate`` ``Greaves|Prime`` ``Plate`` ``Boots ;delete the phanton sachel C28=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup C29=/delay 5 C30=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy ;cast the pet weapons C31=/echo giving pet weapons C32=/multiline ; /autoinventory;/call CastCall {Me.CleanName} cast`` ``petwep C33=/multiline ; /delay 1s;/autoinventory C34=/call GiveCheck {PKPetName} Summoned:`` ``Winterbane|Summoned:`` ``Winterbane ;delete the phanton sachel C35=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup C36=/delay 5 C37=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy C38=/echo destroyed phanton satchel C39=/delay 1s ;cast pet focus items C40=/bc giving pet focus items C41=/call CastCall {Me.CleanName} cast`` ``petfocus C42=/multiline ; /delay 1s;/autoinventory C43=/call GiveCheck {PKPetName} Zabella's`` ``Linked`` ``bracelet|Zabella's`` ``Jade`` ``Bracelet|Zabella's`` ``Ridged`` ``Earhoop|Zabella's`` ``Gold`` ``Ring ;delete the phanton sachel C44=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup C45=/delay 5 C46=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy ;cast the muzzle C47=/echo giving pet muzzle C48=/call CastCall {Me.CleanName} cast`` ``muzzle C49=/delay 1s C50=/call GiveCheck {PKPetName} Summoned:`` ``Muzzle`` ``of`` ``Mowcha C51=/bc pet {PKPetname} ready for battle! Example 3 from three-p-o \u00b6 Update of Lunason's script to work with 10 inventory slots and level 86+ spells. This will summon the folded packs and unfold them for you prior to giving out the items. Also, I can confirm that the theoretical part about it giving the petkit to any targeted pet does work. [Script-PetKit] Commands=64 ; this requires 8 events to be setup with AETarType=self cbt idle ; event names - description ; pet ; petweap - this summons the folded pack - example spell Grant Frightforged Armaments ; weapbag - this unfolds the pack - example item Folded Pack of Frightforged Plate ; petarmor - this summons the folded pack - example spell Grant Frightforged Plate ; armorbag - this unfolds the pack - example item Folded Pack of Frightforged Armaments ; petfocus - this summons the folded pack - example spell Grant Nint's Heirlooms ; focusbag - this unfolds the pack - example item Folded Pack of Nint's Heirlooms ; visor C1=/if (!{Defined[PKPetName]}) /declare PKPetName string outer C2=/varset PKPetName null ; if we have a pet targeted we'll equip it C3=/if ({Spawn[{Target.ID}].Type.Equal[pet]}) /varset PKPetName {Target.CleanName} ; if no pet targeted and we have a pet we'll equip it C4=/if ({PKPetName.Equal[null]} && {Me.Pet.ID}) /varset PKPetName {Me.Pet.CleanName} ; if no pet targeted and no pet of our own make one C5=/if (!{Me.Pet.ID}) /call CastCall {Me.CleanName} cast`` ``pet C6=/if (!{Me.Pet.ID}) /delay 3s ; if no pet defined yet set the var to the new pet C7=/if ({PKPetName.Equal[null]} && {Me.Pet.ID}) /varset PKPetName {Me.Pet.CleanName} ; if still no pet let them know and exit C8=/if ({PKPetName.Equal[null]}) /bc Unable to find a pet to equip C9=/if ({PKPetName.Equal[null]}) /return ; check for an empty inventory slot C10=/bc equipping {PKPetName} ; need to check for empty inventory slot ; /if (!${InvSlot[23 - 32].Item.ID}) - updated to check 10 slots C11=/if (!{Defined[EmptySlot]}) /declare EmptySlot string outer false C12=/if (!{InvSlot[23].Item.ID}) /varset EmptySlot true C13=/if (!{InvSlot[24].Item.ID}) /varset EmptySlot true C14=/if (!{InvSlot[25].Item.ID}) /varset EmptySlot true C15=/if (!{InvSlot[26].Item.ID}) /varset EmptySlot true C16=/if (!{InvSlot[27].Item.ID}) /varset EmptySlot true C17=/if (!{InvSlot[28].Item.ID}) /varset EmptySlot true C18=/if (!{InvSlot[29].Item.ID}) /varset EmptySlot true C19=/if (!{InvSlot[30].Item.ID}) /varset EmptySlot true C20=/if (!{InvSlot[31].Item.ID}) /varset EmptySlot true C21=/if (!{InvSlot[32].Item.ID}) /varset EmptySlot true C22=/if (${EmptySlot.Equal[false]}) /bc no empty slots, sorry no pet kit right now. C23=/if (${EmptySlot.Equal[false]}) /return 0 ; Allow for more than 30 seconds by setting the timer to 10 minutes C24=/varset Timer 10m ; summon the pet armor C25=/bc giving pet armor C26=/call CastCall {Me.CleanName} cast`` ``petarmor C27=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; unfold the armorbag C28=/call CastCall {Me.CleanName} cast`` ``armorbag C29=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; hand armor to pet ; adjust the armor below to match those summoned in the bag C30=/call GiveCheck {PKPetName} Frightforged`` ``Plate`` ``Helm|Frightforged`` ``Plate`` ``Breastplate|Frightforged`` ``Plate`` ``Bracers|Summoned:`` ``Frightforged`` ``Belt C31=/call GiveCheck {PKPetName} Frightforged`` ``Plate`` ``Vambraces|Frightforged`` ``Plate`` ``Gauntlets|Frightforged`` ``Plate`` ``Greaves|Frightforged`` ``Plate`` ``Boots ; delete the Phantom Satchel ; **DANGER** if you are using any Phantom Satchels to store items this could be disastrous C32=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup C33=/delay 5 C34=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy C35=/echo destroyed Phantom Satchel C36=/delay 1s ;summon the pet weapons C37=/echo giving pet weapons C38=/call CastCall {Me.CleanName} cast`` ``petweap C39=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; unfold the weapbag C40=/call CastCall {Me.CleanName} cast`` ``weapbag C41=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; hand weapon to pet ; adjust the weapons below to match those summoned in the bag C42=/call GiveCheck {PKPetName} Summoned:`` ``Frightforged`` ``Iceblade|Summoned:`` ``Frightforged`` ``Iceblade ; delete the Pouch of Quellious ; **DANGER** if you are using any Pouch of Quellious' to store items this could be disastrous C43=/nomodkey /itemnotify {FindItem[Pouch of Quellious].InvSlot} leftmouseup C44=/delay 5 C45=/if ({Cursor.Name.Equal[Pouch of Quellious]}) /destroy C46=/echo destroyed Pouch of Quellious C47=/delay 1s ; summon pet focus items C48=/bc giving pet focus items C49=/call CastCall {Me.CleanName} cast`` ``petfocus C50=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; unfold the focusbag C51=/call CastCall {Me.CleanName} cast`` ``focusbag C52=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; hand focus items to pet ; adjust the focus items below to match those summoned in the bag C53=/call GiveCheck {PKPetName} Nint's`` ``Linked`` ``Bracelet|Nint's`` ``Jade`` ``Bracelet|Nint's`` ``Ridged`` ``Earhoop|Nint's`` ``Gold`` ``Ring C54=/call GiveCheck {PKPetName} Nint's`` ``Woven`` ``Shawl|Nint's`` ``Satin`` ``Choker ; delete the Phantom Satchel ; **DANGER** if you are using any Phantom Satchels to store items this could be disastrous C55=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup C56=/delay 5 C57=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy C58=/echo destroyed Phantom Satchel C59=/delay 1s ; summon the visor C60=/echo giving pet visor C61=/call CastCall {Me.CleanName} cast`` ``visor C62=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; hand the visor to pet ; adjust the below to match summoned visor C63=/call GiveCheck {PKPetName} Summoned:`` ``Visor`` ``of`` ``Gobeker C64=/bc pet {PKPetName} ready for battle! Buying Items \u00b6 A \"buy\" procedure was recently added to Modbot.inc. The syntax is: Buy [Script-BuyStuff] Commands=1 C1=/call Buy ''water flask'' 75 yenny Dropping group out of task \u00b6 [Script-droptask] Commands=6 C1=/if (!{Defined[k]}) /declare k int local 1 C2=/if (!{Group.Member[{k}].CleanName.Equal[{Me.CleanName}]}) /multiline ; /taskremove {Group.Member[{k}]};/delay 1s C3=/varset k {Math.Calc[{k}+1]} C4=/if ({k}<={Group.Members}) /varset a 1 C5=/delay 6 C6=/taskquit Clearing your Bot's Target \u00b6 Sometimes your bots remain fixated on a target (e.g. after you switch targets, kill a mob and decide to mez/blur the rest \\(think Old Man McKenzie instances\\) ). Here is a line that you can toss on a hot key that will clear the target from all of your ModBot bots: /bcaa //multiline ; /varset ACMATarget 0;/target clear","title":"Script Examples"},{"location":"macros/gallery/script-examples/#script-examples","text":"Following are examples of scripts that have been created by ModBot users over the years. Some work great, while others work pretty well, but they all at the very least will give you some solid examples from which you can start to create your own fantactis scripts (which you will, of course, post here as an example :)","title":"Script Examples"},{"location":"macros/gallery/script-examples/#heal-script-examples","text":"","title":"Heal Script Examples"},{"location":"macros/gallery/script-examples/#intelligent-use-of-promised-renewal","text":"Please note : \"PR\" has been added as a precondition for heals, so this script is no longer needed (although it is being left here as a good example). Please see the AdvHeal section of the ModBot wiki for information on using PR with AHPreCondition. Unlike most other heal spells, Promised Renewal lands as a buff on the target that heals after it fades (~18 seconds). The challenge in the current incarnation of ModHeal is that Modheal calculates the mob's dps and along with your target's time to live \\(ttl\\) without taking into account the PR buff - the end result is that it will often cast a big (and mana expensive) fast heal on your target five seconds before the PR buff fades. This script, created by Kroak, works to use PR correctly. [Script-CHCheck] Commands=9 C1=/declare vName string local {Spawn[{Param1}].Name} C2=/if ({NetBots[{vName}].ID} && !{NetBots[{vName}].Buff.Find[9755]} || !{Me.LAInspectBuffs} && !{NetBots[{vName}].ID} || {NetBots[{Spawn[{Param1}].Name}].Buff.Find[9755]} && {NetBots[{vName}].Duration[{NetBots[{vName}].Buff.Left[{NetBots[{vName}].Buff.Find[9755]}].Count[ ]}]}>2 && {Spawn[{Param1}].PctHPs}<55) /return TRUE C3=/if ({NetBots[{Spawn[{Param1}].Name}].Buff.Find[9755]} && ({NetBots[{vName}].Duration[{NetBots[{vName}].Buff.Left[{NetBots[{vName}].Buff.Find[9755]}].Count[ ]}]}<3 && {Param2}==13 || {NetBots[{vName}].Duration[{NetBots[{vName}].Buff.Left[{NetBots[{vName}].Buff.Find[9755]}].Count[ ]}]}<2 && {Param2}!=13)) /return FALSE C4=/if ({NetBots[{vName}].ID}) /return FALSE C5=/if ({Target.ID}!={Param1}) /target id {Param1} C6=/delay 2s {Target.ID}=={Param1} && {Target.Buff[1].ID} || {Me.TargetOfTarget.ID} C7=/if ({Target.BuffDuration[Promised Renewal]}<3) /return FALSE C8=/return TRUE Kroak notes the following about this script: Parts of this I did in an attempt to be sure non-netbots toons are checked also, but Netbots toons are checked first, and the rest is untested, and I think turned off by line 4. There's a couple of reasons this isn't the perfect solution - Rk. II versions of the spell will require a change in the ID checked. I don't have Rk. II, so this just checks for buff id 9755. Also, the PctHps\\<55 is a very important check. For harder fights you might want that a bit higher. The second line checks if you're attempting to cast CH and checks the duration of the buff against cast time of your heal. If you notice how long some of the lines are, you might guess why I'd like Netbots[X].Duration[Y] to take a spell name or ID instead of only listing by buff number. Anyways, my goal was to set this in my NetworkINI file, then AHPreCondition8=net-CHCheck on any toon that heals. It semi-works. Return to main ModBot Wiki","title":"Intelligent use of Promised Renewal"},{"location":"macros/gallery/script-examples/#disc-and-item-examples","text":"","title":"Disc and Item Examples"},{"location":"macros/gallery/script-examples/#procure-sap-rogue-disc","text":"Rogues get a disc Procure Sap that summons a potion called Mugger's Sap - this item goes in your potion belt, and once right-clicked on a humanoid, can pickpocket an item on a separate loot table. Recast on potion belt item is approximately 20 minutes. ABGem3=script ABSpell3=summugger ABSpellFoci3= ABDurMod3=0 ABSpellAlias3= ABAnnounce3= ABSpellMinMana3=20 ABTarCnt3=4 ABTarType3=self cbt idle ABRecast3=FALSE ABSpellIcon3= [Script-summugger] Commands=3 C1=/if (!{FindItemCount[Mugger's Sap]}) /disc Procure Sap Rk. II C2=/if (!{FindItemCount[Mugger's Sap]}==0) /delay 1s {Me.Casting.ID} C3=/if (!{FindItemCount[Mugger's Sap]}==0) /delay 7s !{Me.Casting.ID} Return to main ModBot Wiki","title":"Procure Sap Rogue Disc"},{"location":"macros/gallery/script-examples/#nuking-and-attack-examples","text":"","title":"Nuking and Attack Examples"},{"location":"macros/gallery/script-examples/#wizard-script-for-setting-nuke-order","text":"Thanks to Bartab for this one. Bartab explains how this script works as follows: Basically my wizard has 5 nukes, I want him to cast it in the following order : 1 3 1 3 2 ----> 1 3 1 3 2 ----> ..... *knowing that when I cast 1 or 3 I can have a song in my song window, in that case I want to cast 4. I also want to cast 5 if I get a GoM. And if I cast 4 or 5 I always want to cast 2 just after. [Script-setNormalOrder] Commands=13 C1=/if (!{Defined[nextCast]}) /declare nextCast int outer 0; C2=/if (!{Defined[CastOne]}) /declare CastOne int outer 0; C3=/if (!{Defined[CastTwo]}) /declare CastTwo int outer 0; C4=/if (!{Defined[CastThree]}) /declare CastThree int outer 0; C5=/if (!{Defined[CastFour]}) /declare CastFour int outer 0; C6=/multiline ; /varset ADTarCnt[1] 0 ; /varset ADTarCnt[2] 0 ; /varset ADTarCnt[3] 0 ; /varset ADTarCnt[4] 0 ; /varset ADTarCnt[5] 0 C7=/if ({nextCast}==0) /multiline ; /varset nextCast 1 ; /varcalc CastOne {CastOne}+1 ; /varset ADTarCnt[1] 1 ; /echo 1 ; /return C8=/if ({nextCast}==1) /multiline ; /varset nextCast 3 ; /varcalc CastThree {CastThree}+1 ; /varset ADTarCnt[3] 1 ; /echo 3 ; /return C9=/if ({nextCast}==3 && {CastOne}<=1) /multiline ; /varset nextCast 1 ; /varcalc CastOne {CastOne}+1 ; /varset ADTarCnt[1] 1 ; /echo 1 ; /return C10=/if ({nextCast}==3 && {CastOne}>1) /multiline ; /varset nextCast 2 ; /varcalc CastTwo {CastTwo}+1 ; /varset ADTarCnt[2] 1 ; /echo 2 ; /return C11=/if ({nextCast}==2 && {Me.Song[Flashblaze Singe].ID}) /multiline ; /varset nextCast 4 ; /varcalc CastFour {CastFour}+1 ; /varset ADTarCnt[4] 1 ; /echo 4 ; /return C12=/if ({nextCast}==2) /multiline ; /varset nextCast 3 ; /varset CastOne 0 ; /varset CastTwo 0 ; /varset CastThree 0 ; /varset ADTarCnt[3] 1 ; /echo 3 ; /return C13=/if ({nextCast}==4) /multiline ; /varset nextCast 2 ; /varset CastOne 0 ; /varset CastTwo 0 ; /varset CastThree 0 ; /varset CastFour 0 ; /varset ADTarCnt[2] 1 ; /echo 2 ; /return An important addition to this script is to reset all of the variables after a mob dies (otherwise the ordering will get screwed up). This is best accomplished using the ACAfter setting in the INI: ACAfter=/multiline ; /varset nextCast 0;/varset CastOne 0;/varset CastTwo 0;/varset CastThree 0;/varset CastFour 0 Note: Please see the Level 85 Wizard INI example found here to see the nukes that Bartab is referring to (this will provide a bit of context for his desired casting order).","title":"Wizard Script for Setting Nuke Order"},{"location":"macros/gallery/script-examples/#enchanter-script-for-using-mana-reiterate","text":"Thanks to Kzboray for posting his working script (with some help from Kroak :). Kzboray says that this script can also be used for any other Enchanter damage buff!: ADGem4=script ADSpell4=ddbuff ADSpellFoci4= ADDurMod4=0 ADSpellAlias4=manar ADAnnounce4=/bc ADSpellMinMana4=20 ADSpellRecast4=0 ADSpellCastonResist4= ADSpellDelay4=0 ADTarCnt4=1 ADTarType4=1 ADTarBegHP4=100 ADTarEndHP4=20 ADIfSpellImmune4= ADUseHoTT4=0 ADPreCondition4=TRUE [Script-ddbuff] Commands=5 C1=/if ({Me.Buff[Mana Reiterate Rk. II].ID} || {Me.PctMana}<30) /return C2=/if (!{Me.Gem[Mana Reiterate Rk. II]}) /memorize Mana`` ``Reiterate`` ``Rk.`` ``II|gem7 C3=/if ({Me.Casting.ID}) /delay {Math.Calc[({Cast.Timing}/100)+1]}s {Cast.Ready} C4=/if ({Cast.Ready} && !{Cast.Ready[Mana Reiterate Rk. II]} || {NetBots[WizName].Buff.Find[{Spell[Mana Reiterate Rk. II].ID}]}) /return C5=/call Mq2Cast Mana`` ``Reiterate`` ``Rk.`` ``II gem7 30s CastCheck -targetid|{Group.Member[{Group.Member[WizName]}].ID} Simply change WizName (2 places in the C4 and C5 lines) to the name of the toon you want to be buffed and your done. Hope this helps someone else. Return to main ModBot Wiki","title":"Enchanter Script for Using Mana Reiterate"},{"location":"macros/gallery/script-examples/#utility-scripts","text":"","title":"Utility Scripts"},{"location":"macros/gallery/script-examples/#creating-campfires-and-getting-to-them","text":"Thanks to Toomanynames for this gem :). The first script will set up the campsite fire for you and the second script will get you to the campsite (note that there are some class specific items in the second script \\(bard\\) ). [Script-MakeSite] Commands=15 C1=/varset Timer 120s C2=/windowstate FellowshipWnd open C3=/nomodkey /notify FellowshipWnd FP_Subwindows tabselect 2 C4=/delay 1s C5=/nomodkey /notify FellowshipWnd FP_RefreshList leftmouseup C6=/delay 2s C7=/nomodkey /notify FellowshipWnd FP_CampsiteKitList listselect 1 C8=/delay 1s C9=/nomodkey /notify FellowshipWnd FP_CampsiteKitList leftmouse 1 C10=/delay 1s C11=/nomodkey /notify FellowshipWnd FP_CreateCampsite leftmouseup C12=/delay 2s C13=/windowstate FellowshipWnd close C14=/if ({NearestSpawn[any radius 30 zradius 30 fsp].ID}) /multiline ; /bc Campsite looks good;/return C15=/bc Not sure about the Campsite [Script-ToSite] Commands=7 C1=/if ({NearestSpawn[any radius 30 zradius 30 fsp].ID}) /multiline ; /bc Looks like I'm at the campsite;/return C2=/if ({Select[{Me.Class},bard]}) /twist off C3=/if ({Me.Sneaking} || {Me.Invis}) /attack C4=/delay 10s !{Me.Casting.ID} C5=/casting ''Fellowship Registration Insignia|item'' C6=/delay 5s {Me.Casting.ID} C7=/delay 10s !{Me.Casting.ID}","title":"Creating Campfires and Getting to Them"},{"location":"macros/gallery/script-examples/#magician-pet-kits","text":"","title":"Magician Pet Kits"},{"location":"macros/gallery/script-examples/#example-1-from-banderas","text":"Before using this, you need to make room so make sure you have only 7 bags and one slot free. Make certain that you have the PetKit script entry before all other pet toy \"buffs\" in the AdvBuff section so that the bag goes to the free slot (then you can have frigid paradox stuff and others below the petkit entry). ABGem10=script ABSpell10=PetKit ABSpellFoci10= ABDurMod10=0 ABSpellAlias10=petkit ABAnnounce10= ABSpellMinMana10=0 ABTarCnt10=1 ABTarType10=self ABRecast10=FALSE [Script-PetKit] Commands=9 C1=/if (!{Defined[PKPetName]}) /declare PKPetName string outer C2=/if ({Target.ID}!={Me.Pet.ID} && {Spawn[{Target.ID}].Type.Equal[pet]}) /varset PKPetName {Target.CleanName} C3=/if ({PKPetName.Length}<4 && {Me.Pet.ID}) /varset PKPetName {Me.Pet.CleanName} C4=/if ({PKPetName.Length}<4) /return C5=/varset Timer 10m C6=/multiline ; /autoinventory;/call CastCall {Me.CleanName} cast`` ``petwep C7=/multiline ; /delay 5s;/autoinventory ```C8=/call GiveCheck {PKPetName}``_```Summoned:`` ``Tonfa`` ``of`` ``the`` ``North`` ``Wind|Summoned:`` ``Blazing`` ``Brand```_ C9=/varset ABTarCnt[10] 0 ` Modify C8 to chose the wep you like for pet. C9 will make the script stop redoing it again and again, so if your pet dies, simply re-start the macro or make a hotkey to do only petkit ones as /varset ABTarCnt[10] 1","title":"Example 1 from Banderas"},{"location":"macros/gallery/script-examples/#example-2-from-lunason","text":"Just for fun I did up a level 85 mage pet kit script. Works pretty well. I borrowed a lot of it and assembled it to my own liking. Only uses 1 inventory slot to do all of it's work and cleans up after itself. Theoretically it should give a pet kit to any pet it has targeted. That's untested. [Script-PetKit] Commands=51 ;need to check for empty inventory slot ;/if (!${InvSlot[22 - 29].Item.ID}) ;this requires 4 events to be setup ;event names ; pet ; petweap ; petarmor ; petfocus C1=/if (!{Defined[PKPetName]}) /declare PKPetName string outer C2=/varset PKPetName null ;if we have a pet targeted we'll equip it C3=/if ({Spawn[{Target.ID}].Type.Equal[pet]}) /varset PKPetName {Target.CleanName} ;if no pet targeted and we have a pet we'll equip it C4=/if ({Me.Pet.ID} && {PKPetName.Equal[null]}) /varset PKPetName {Me.Pet.CleanName} ;if no pet targeted and no pet of our own make one C5=/if (!{Me.Pet.ID}) /call CastCall {Me.CleanName} cast`` ``pet C6=/if (!{Me.Pet.ID}) /delay 3s ;if no pet defined yet set the var to the new pet C7=/if ({PKPetName.Equal[null]} && {Me.Pet.ID}) /varset PKPetName {Me.Pet.CleanName} ;if still no pet let them know and exit C8=/if ({PKPetName.Equal[null]}) /bc Unable to find a pet to equip C9=/if ({PKPetName.Equal[null]}) /return ;check for an empty inventory slot C10=/bc equipping {PKPetName} C11=/if (!{Defined[EmptySlot]}) /declare EmptySlot string outer false C12=/if (!${InvSlot[22].Item.ID}) /varset EmptySlot true C13=/if (!${InvSlot[23].Item.ID}) /varset EmptySlot true C14=/if (!${InvSlot[24].Item.ID}) /varset EmptySlot true C15=/if (!${InvSlot[25].Item.ID}) /varset EmptySlot true C16=/if (!${InvSlot[26].Item.ID}) /varset EmptySlot true C17=/if (!${InvSlot[27].Item.ID}) /varset EmptySlot true C18=/if (!${InvSlot[28].Item.ID}) /varset EmptySlot true C19=/if (!${InvSlot[29].Item.ID}) /varset EmptySlot true C20=/if (${EmptySlot.Equal[false]}) /echo no empty slots, sorry no pet kit right now. C21=/if (${EmptySlot.Equal[false]}) /return 0 ;Allow for more than 30 seconds by setting the timer to 10minutes C22=/varset Timer 10m ;cast the pet armor C23=/bc giving pet armor C24=/call CastCall {Me.CleanName} cast`` ``petarmor C25=/multiline ; /delay 1s;/autoinventory C26=/call GiveCheck {PKPetName} Prime`` ``Plate`` ``Helm|Prime`` ``Plate`` ``Breastplate|Prime`` ``Plate`` ``Bracers|Summoned:`` ``Prime`` ``Belt C27=/call GiveCheck {PKPetName} Prime`` ``Plate`` ``Vambraces|Prime`` ``Plate`` ``Gauntlets|Prime`` ``Plate`` ``Greaves|Prime`` ``Plate`` ``Boots ;delete the phanton sachel C28=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup C29=/delay 5 C30=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy ;cast the pet weapons C31=/echo giving pet weapons C32=/multiline ; /autoinventory;/call CastCall {Me.CleanName} cast`` ``petwep C33=/multiline ; /delay 1s;/autoinventory C34=/call GiveCheck {PKPetName} Summoned:`` ``Winterbane|Summoned:`` ``Winterbane ;delete the phanton sachel C35=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup C36=/delay 5 C37=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy C38=/echo destroyed phanton satchel C39=/delay 1s ;cast pet focus items C40=/bc giving pet focus items C41=/call CastCall {Me.CleanName} cast`` ``petfocus C42=/multiline ; /delay 1s;/autoinventory C43=/call GiveCheck {PKPetName} Zabella's`` ``Linked`` ``bracelet|Zabella's`` ``Jade`` ``Bracelet|Zabella's`` ``Ridged`` ``Earhoop|Zabella's`` ``Gold`` ``Ring ;delete the phanton sachel C44=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup C45=/delay 5 C46=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy ;cast the muzzle C47=/echo giving pet muzzle C48=/call CastCall {Me.CleanName} cast`` ``muzzle C49=/delay 1s C50=/call GiveCheck {PKPetName} Summoned:`` ``Muzzle`` ``of`` ``Mowcha C51=/bc pet {PKPetname} ready for battle!","title":"Example 2 from Lunason"},{"location":"macros/gallery/script-examples/#example-3-from-three-p-o","text":"Update of Lunason's script to work with 10 inventory slots and level 86+ spells. This will summon the folded packs and unfold them for you prior to giving out the items. Also, I can confirm that the theoretical part about it giving the petkit to any targeted pet does work. [Script-PetKit] Commands=64 ; this requires 8 events to be setup with AETarType=self cbt idle ; event names - description ; pet ; petweap - this summons the folded pack - example spell Grant Frightforged Armaments ; weapbag - this unfolds the pack - example item Folded Pack of Frightforged Plate ; petarmor - this summons the folded pack - example spell Grant Frightforged Plate ; armorbag - this unfolds the pack - example item Folded Pack of Frightforged Armaments ; petfocus - this summons the folded pack - example spell Grant Nint's Heirlooms ; focusbag - this unfolds the pack - example item Folded Pack of Nint's Heirlooms ; visor C1=/if (!{Defined[PKPetName]}) /declare PKPetName string outer C2=/varset PKPetName null ; if we have a pet targeted we'll equip it C3=/if ({Spawn[{Target.ID}].Type.Equal[pet]}) /varset PKPetName {Target.CleanName} ; if no pet targeted and we have a pet we'll equip it C4=/if ({PKPetName.Equal[null]} && {Me.Pet.ID}) /varset PKPetName {Me.Pet.CleanName} ; if no pet targeted and no pet of our own make one C5=/if (!{Me.Pet.ID}) /call CastCall {Me.CleanName} cast`` ``pet C6=/if (!{Me.Pet.ID}) /delay 3s ; if no pet defined yet set the var to the new pet C7=/if ({PKPetName.Equal[null]} && {Me.Pet.ID}) /varset PKPetName {Me.Pet.CleanName} ; if still no pet let them know and exit C8=/if ({PKPetName.Equal[null]}) /bc Unable to find a pet to equip C9=/if ({PKPetName.Equal[null]}) /return ; check for an empty inventory slot C10=/bc equipping {PKPetName} ; need to check for empty inventory slot ; /if (!${InvSlot[23 - 32].Item.ID}) - updated to check 10 slots C11=/if (!{Defined[EmptySlot]}) /declare EmptySlot string outer false C12=/if (!{InvSlot[23].Item.ID}) /varset EmptySlot true C13=/if (!{InvSlot[24].Item.ID}) /varset EmptySlot true C14=/if (!{InvSlot[25].Item.ID}) /varset EmptySlot true C15=/if (!{InvSlot[26].Item.ID}) /varset EmptySlot true C16=/if (!{InvSlot[27].Item.ID}) /varset EmptySlot true C17=/if (!{InvSlot[28].Item.ID}) /varset EmptySlot true C18=/if (!{InvSlot[29].Item.ID}) /varset EmptySlot true C19=/if (!{InvSlot[30].Item.ID}) /varset EmptySlot true C20=/if (!{InvSlot[31].Item.ID}) /varset EmptySlot true C21=/if (!{InvSlot[32].Item.ID}) /varset EmptySlot true C22=/if (${EmptySlot.Equal[false]}) /bc no empty slots, sorry no pet kit right now. C23=/if (${EmptySlot.Equal[false]}) /return 0 ; Allow for more than 30 seconds by setting the timer to 10 minutes C24=/varset Timer 10m ; summon the pet armor C25=/bc giving pet armor C26=/call CastCall {Me.CleanName} cast`` ``petarmor C27=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; unfold the armorbag C28=/call CastCall {Me.CleanName} cast`` ``armorbag C29=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; hand armor to pet ; adjust the armor below to match those summoned in the bag C30=/call GiveCheck {PKPetName} Frightforged`` ``Plate`` ``Helm|Frightforged`` ``Plate`` ``Breastplate|Frightforged`` ``Plate`` ``Bracers|Summoned:`` ``Frightforged`` ``Belt C31=/call GiveCheck {PKPetName} Frightforged`` ``Plate`` ``Vambraces|Frightforged`` ``Plate`` ``Gauntlets|Frightforged`` ``Plate`` ``Greaves|Frightforged`` ``Plate`` ``Boots ; delete the Phantom Satchel ; **DANGER** if you are using any Phantom Satchels to store items this could be disastrous C32=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup C33=/delay 5 C34=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy C35=/echo destroyed Phantom Satchel C36=/delay 1s ;summon the pet weapons C37=/echo giving pet weapons C38=/call CastCall {Me.CleanName} cast`` ``petweap C39=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; unfold the weapbag C40=/call CastCall {Me.CleanName} cast`` ``weapbag C41=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; hand weapon to pet ; adjust the weapons below to match those summoned in the bag C42=/call GiveCheck {PKPetName} Summoned:`` ``Frightforged`` ``Iceblade|Summoned:`` ``Frightforged`` ``Iceblade ; delete the Pouch of Quellious ; **DANGER** if you are using any Pouch of Quellious' to store items this could be disastrous C43=/nomodkey /itemnotify {FindItem[Pouch of Quellious].InvSlot} leftmouseup C44=/delay 5 C45=/if ({Cursor.Name.Equal[Pouch of Quellious]}) /destroy C46=/echo destroyed Pouch of Quellious C47=/delay 1s ; summon pet focus items C48=/bc giving pet focus items C49=/call CastCall {Me.CleanName} cast`` ``petfocus C50=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; unfold the focusbag C51=/call CastCall {Me.CleanName} cast`` ``focusbag C52=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; hand focus items to pet ; adjust the focus items below to match those summoned in the bag C53=/call GiveCheck {PKPetName} Nint's`` ``Linked`` ``Bracelet|Nint's`` ``Jade`` ``Bracelet|Nint's`` ``Ridged`` ``Earhoop|Nint's`` ``Gold`` ``Ring C54=/call GiveCheck {PKPetName} Nint's`` ``Woven`` ``Shawl|Nint's`` ``Satin`` ``Choker ; delete the Phantom Satchel ; **DANGER** if you are using any Phantom Satchels to store items this could be disastrous C55=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup C56=/delay 5 C57=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy C58=/echo destroyed Phantom Satchel C59=/delay 1s ; summon the visor C60=/echo giving pet visor C61=/call CastCall {Me.CleanName} cast`` ``visor C62=/multiline ; /delay 1s ; /autoinventory ; /delay 1s ; hand the visor to pet ; adjust the below to match summoned visor C63=/call GiveCheck {PKPetName} Summoned:`` ``Visor`` ``of`` ``Gobeker C64=/bc pet {PKPetName} ready for battle!","title":"Example 3 from three-p-o"},{"location":"macros/gallery/script-examples/#buying-items","text":"A \"buy\" procedure was recently added to Modbot.inc. The syntax is: Buy [Script-BuyStuff] Commands=1 C1=/call Buy ''water flask'' 75 yenny","title":"Buying Items"},{"location":"macros/gallery/script-examples/#dropping-group-out-of-task","text":"[Script-droptask] Commands=6 C1=/if (!{Defined[k]}) /declare k int local 1 C2=/if (!{Group.Member[{k}].CleanName.Equal[{Me.CleanName}]}) /multiline ; /taskremove {Group.Member[{k}]};/delay 1s C3=/varset k {Math.Calc[{k}+1]} C4=/if ({k}<={Group.Members}) /varset a 1 C5=/delay 6 C6=/taskquit","title":"Dropping group out of task"},{"location":"macros/gallery/script-examples/#clearing-your-bots-target","text":"Sometimes your bots remain fixated on a target (e.g. after you switch targets, kill a mob and decide to mez/blur the rest \\(think Old Man McKenzie instances\\) ). Here is a line that you can toss on a hot key that will clear the target from all of your ModBot bots: /bcaa //multiline ; /varset ACMATarget 0;/target clear","title":"Clearing your Bot's Target"},{"location":"macros/gallery/sk.mac-nytemyst/","tags":["macro"],"text":"Sk.mac - nytemyst \u00b6 Forum Link \u00b6 sk.mac - Nytemyst Description \u00b6 This macro is mainly for high level shadow knights, but possible for low levels to use. this macro is designed with the toon having the ROF Expansion. This macro is not meant to go out and pull but instead more like \"guard\" the camp that you're currently at. Will attempt to use aggro spells and range items to aggro mobs from a distance that you have set. Required Plugins \u00b6 MQ2Exchange MQ2MoveUtils MQ2Melee This one is optional and not really needed but the macro will not do little things like bash,or put pet on hold. You will need to turn off all stick settings on the plugin as they will interfere with the macro. MQ2BagWindow This is required to cast items in bags without having the bag opened. Required Include Files \u00b6 General.inc - All the macros made/updated by me will use this include. Contains common features all the macros use to ease in updating functions and features to all the macros instead of updating each macro seperatly. Will be included with the zip. Spell_Routines.inc Ninjadvloot.inc If you don't want to use Ninjadvloot.inc you can comment out or delete these lines. #include ninjadvloot.inc - Line 11 /call SetupAdvLootVars- Line 35 /if (${DoLoot} && !${Me.Moving} && !${Me.Invis}) /call LootMobs - Line 54 AAPurchase.inc If you don't want to use AAPurchase.inc You can comment out or delete these lines. #include AAPurchase.inc - Line 10 /call AAInit - Line 37 Updates \u00b6 Commands \u00b6 /radius # - Sets the distance for checking mobs /aggro On/Off - If this is set to off then the macro will not aggro anything and just do buffs. /usepet On/Off - If this is on, then the macro will create a pet and haste it. /dps On/Off - If this on then it will not cast any aggro spells or try to taunt and just do dps spells. Must set an MA on this mode. /ma name - This changes the ma to the person designated when in dps mode. /sticksetting # - This changes the stick range you will stick at. DPS MODE ONLY. /assistdistance # - This changes how close the mob must be before you engage. DPS MODE ONLY /assistat # - This changes at what % of health before engaging. DPS MODE ONLY /doloot On/Off - This changes where you will loot corpses or not. /checknames On/Off - This changes whether you want to check for a name or a mezz immuned mob that went in to camp while currently fighting something else. If it's on it will change target to the name or mezzimmune. If it's off it won't target the name or mezzimmune until the current target is dead. /Dot On/Off - Turns dotting on or off. /leash On/Off - If this is set to off the toon will not leash back to the current stake point. /leashlength # - This changes how far away you have to be from the stake to leash back. /autoadjustexp On/Off - This turns on or off whether you want it to monitor your XP level and switch between Level and AA. /maintexplvl # - This changes the amount of Level xp that is required before the toon is automatically switched over to AA - Autoadjustexp Open is require to be turned on. /autosit On/Off - Turns auto sitting on or off. Ini Samples \u00b6 NameList [Discord_raid] Name=|Pallorax the soul slayer|a gelidran rift slave|a pyrilen rift slave|Venom Lord Ksathrax|Mindshear Acolyte|Venomous projection|a venom protector|Mindshear Avatar| MezzImmuneList [korascian_raid] MezzImmune=|a crystalline nexiont| IgnoreList [Oldcommons] Exclude=|Peron ThreadSpinner|Innkeep Dolman|Innkeep Olissa|Innkeep Redthorn| Tip for adding mobs into this list without manually into the INI. Create a hotkey like so. /named ${Target.CleanName} /exclude ${Target.CleanName} /mezzimmune ${Target.CleanName} This allows you to add to those lists for any mob you're target while the macro is running. -Note No spell below requires you to put in the Ranks unless it's mentioned to do so. With the exception of buffs no spell is membed before hand. You must have it already memed if you want to use it. SK_Bobby.ini [Settings] RangeItem=Huntsman's Ethereal Quiver - This is the item that does the actually summoning RangeItemSummon=Ethereal Arrow - This is the item that is actually summoned. MobRadius=10 - How far you want to look for mobs. Aggro=0 - Whether to aggro mobs or not. ItemShrink=Earring of Diminutiveness - Item you use to shrink yourself. CheckNames=1 - If set to 0 the macro will not switch targets if a name, or mezzimmune mob comes into camp after you already are fighting a mob. UsePet=0 - Whether to summon a pet. DpsMode=0 - If set to 1 will turn on DPS Mode. In Dps mode it will assist another toon and not try to aggro and only do dps type abilities. MainAssist=somebody - Main person you will assist while in DPS Mode SecondAssist=somebody - If main person is not in zone or dead. TrippleAssist=somebody - If second person is not in zone or dead. EventsMaster=somebody - If you are using my events.inc. This is the person you will send a tell to saying you just received and emote. This is meant for raids. StickSetting=35 - Sets how close you want to stick to the mob - DPS MODE ONLY AssistDistance=80 - How close the mob must be before you will assist - DPS MODE ONLY AssistAt=97 - What % of HP the mob must before you attack. - DPS MODE ONLY UseIRC=0 - Whether to join IRC or not. DoLoot=0 - Turns on autolooting if you are using ninjaadvloot.inc DoDot=0 - Turns Dotting on or off NumOfDots=1 - How many Dots you will be casting. [Spells] SteelyStance=Steely Stance - Temporary HP buff you want to cast during combat. SkinBuff=Malarian Skin - Skin proc buff you want to cast during combat. WithStand=WithStand - Withstand style Disc to use right before mob comes into camp. BladeStrike=Gouging Blade - Blade strike style disc to use during combat. CrimesonBlade=Crimson Blade - Crimson Blade style disc to use during names. DefensiveDisc=Malarian Carapace - Defensive disc to use when fighting a name. HateSpell1=Terror of Jelvalak - Main hate spell and hate spell used to do initial aggro. HateSpell2=Terror of the Soulbleeder - Second hate spell. HateSpell3=Terror of Vergalid - 3rd Hate spell. AeHateSpell1=Burst of Spite - Main AE aggro spell. AeHateSpell2=Revile - Second AE Aggro spell. AeHateSpell3=Vilify - Third AE Aggro spell. AeHateSpell4=Dread Gaze - Fourth AE aggro Spell. NukeSpell1=Malarian Spear - Main Nuke Spell. NukeSpell2=Rotmarrow Spear - Second Nuke Spell. ChallengeSpell=Charge for Power - Spell used For temporary aggro and AC ChallengeSpellRecourse=Charge for Power Recourse rk. ii - This is the resource you get when you challengespell is successful. You must put the RANK here if version 2 or 3. LifeTapSpell1=Touch of Tharoff - Main lifetap spell LifeTapSpell2=Touch of Kildrukaun - Second Lifetap spell LifeTapSpell3=Touch of Severan - Third lifetap spell DireImplication=Dire Implication - Emergency Lifetap Spell HpTapSpell=Touch of Lanys - Lifetap spell that increases your aggro and Max Health Temporarily. HpTapSpellRecourse=Gift of Lanys - The resource you receive by casting your HpTapSpell. You must put in the RANK here if version 2 or 3 BondSpell=Bond of Laarthik - LifeTap Dot Spell. BondSpellRecourse=Bond of Laarthik recourse rk. iii - Resource you receive by casting your Lifetap Dot. You must put in the RANK here if version 2 or 3. ManaTapSpell1=Laarthik's bite - Main Manatap Spell ManaTapSpell2=Ancient: Bite of Muram - Second ManaTap Spell PetSpell=Minion of Sebilis - Spell to summon your pet. PetSpellHaste=Gift of Sathir - Spell to haste your pet. RespiteDisc=Rest - Disc using when low on endurance Dot1=Changeme - Name of the Dot you will be casting BuffGem=12 - Gem where you want all your buff spells to use when buffing [SelfBuffs] NumSelfBuff=1 - Amount of self buffs you will be casting SelfBuff1=ChangeMe - Name of the Spell,item, or alt. SelfType1=ChangeMe - can gem1,1,alt,or item [ITEMS] ClickyBP=Elegant Soulrender Breastplate - The name of the Group or Raid BP for that expansion. [GeneralSettings] DoLeash=1 - Turns leashing on or off. Leashlength=25 - How far away from the stake you must be before it leashes back. AutoExpAdjust=1 - Whether to switch to AA or level automatically. MaintExpLvl=20 - What % of level XP before switching to AA MaxLevel=100 - Max level the toon can reach MasterList=NULL - What toons are allowed to send the bot a tell with a / command such as /say hi and the bot will do the command. Autosit=1 - Turns auto sitting on or off. RelayTells=0 - Turns relaying tells to BC on or of AutoBalance=0 - Turns autobalancing of a group of Mobs HP - DPS MODE ONLY - Leave off currently doesn't work. AutoBalanceHPCheck=5 - % of health differemce before considered unbalanced. DoFood=0 - Turns summoning turkey or milk on or off. Bot Flow \u00b6 After starting the macro if you do not have Aggro turned on or dps mode turned on it will just buff itself. If you have aggro on it's first going to look for mobs in a 50 radius range. It will automatically choose a name,mezzimmune, or the lowest HP mob within that radius. If there are no mobs in a 50 range radius then the macro will check if it has rez affects on. If so the macro will just buff itself and not try to aggro anything beyond the 50 radius. For mobs beyond the 50 radius it will look for mobs at a distance you set under \"Mobradius\". It will grab the highest level ,Named,mezzimmune mob and work it's way down. Macro does the initial aggro in 2 ways and both will be attempted to use. Will try to cast the first hate spell you have set in the ini and will try to use any range item like bow and arrow. If a mob goes into camp before you pulled enters camp it will switch to mob that's in camp. If the mob takes more then 20 seconds the camp the macro will clear the target, ignore that mob from pulling for 60 seconds and look for something else. If that mob eventually makes it into camp it will aggro the mob whether the timer is up or not. Once mob in camp it will stick to the mob. Use numerous Discs and spells such as demand for power,withstand,bite aa. Will constantly monitor health and will do lifetaps to keep it's self up. Will also nuke and dot. If it encounters a name it will using all tanking disciplines as well as dps disciples that stack with the tanking ones. Will use AA snare on any mobs that are trying to flee. Will keep any Skin or steely stance buffs up during combat. If more then one mop is in camp it will use ae aggro. If more then 3 mobs in camp and the health drops to low it will attempt to use deflection disc.","title":"Sk.mac - nytemyst"},{"location":"macros/gallery/sk.mac-nytemyst/#skmac-nytemyst","text":"","title":"Sk.mac - nytemyst"},{"location":"macros/gallery/sk.mac-nytemyst/#forum-link","text":"sk.mac - Nytemyst","title":"Forum Link"},{"location":"macros/gallery/sk.mac-nytemyst/#description","text":"This macro is mainly for high level shadow knights, but possible for low levels to use. this macro is designed with the toon having the ROF Expansion. This macro is not meant to go out and pull but instead more like \"guard\" the camp that you're currently at. Will attempt to use aggro spells and range items to aggro mobs from a distance that you have set.","title":"Description"},{"location":"macros/gallery/sk.mac-nytemyst/#required-plugins","text":"MQ2Exchange MQ2MoveUtils MQ2Melee This one is optional and not really needed but the macro will not do little things like bash,or put pet on hold. You will need to turn off all stick settings on the plugin as they will interfere with the macro. MQ2BagWindow This is required to cast items in bags without having the bag opened.","title":"Required Plugins"},{"location":"macros/gallery/sk.mac-nytemyst/#required-include-files","text":"General.inc - All the macros made/updated by me will use this include. Contains common features all the macros use to ease in updating functions and features to all the macros instead of updating each macro seperatly. Will be included with the zip. Spell_Routines.inc Ninjadvloot.inc If you don't want to use Ninjadvloot.inc you can comment out or delete these lines. #include ninjadvloot.inc - Line 11 /call SetupAdvLootVars- Line 35 /if (${DoLoot} && !${Me.Moving} && !${Me.Invis}) /call LootMobs - Line 54 AAPurchase.inc If you don't want to use AAPurchase.inc You can comment out or delete these lines. #include AAPurchase.inc - Line 10 /call AAInit - Line 37","title":"Required Include Files"},{"location":"macros/gallery/sk.mac-nytemyst/#updates","text":"","title":"Updates"},{"location":"macros/gallery/sk.mac-nytemyst/#commands","text":"/radius # - Sets the distance for checking mobs /aggro On/Off - If this is set to off then the macro will not aggro anything and just do buffs. /usepet On/Off - If this is on, then the macro will create a pet and haste it. /dps On/Off - If this on then it will not cast any aggro spells or try to taunt and just do dps spells. Must set an MA on this mode. /ma name - This changes the ma to the person designated when in dps mode. /sticksetting # - This changes the stick range you will stick at. DPS MODE ONLY. /assistdistance # - This changes how close the mob must be before you engage. DPS MODE ONLY /assistat # - This changes at what % of health before engaging. DPS MODE ONLY /doloot On/Off - This changes where you will loot corpses or not. /checknames On/Off - This changes whether you want to check for a name or a mezz immuned mob that went in to camp while currently fighting something else. If it's on it will change target to the name or mezzimmune. If it's off it won't target the name or mezzimmune until the current target is dead. /Dot On/Off - Turns dotting on or off. /leash On/Off - If this is set to off the toon will not leash back to the current stake point. /leashlength # - This changes how far away you have to be from the stake to leash back. /autoadjustexp On/Off - This turns on or off whether you want it to monitor your XP level and switch between Level and AA. /maintexplvl # - This changes the amount of Level xp that is required before the toon is automatically switched over to AA - Autoadjustexp Open is require to be turned on. /autosit On/Off - Turns auto sitting on or off.","title":"Commands"},{"location":"macros/gallery/sk.mac-nytemyst/#ini-samples","text":"NameList [Discord_raid] Name=|Pallorax the soul slayer|a gelidran rift slave|a pyrilen rift slave|Venom Lord Ksathrax|Mindshear Acolyte|Venomous projection|a venom protector|Mindshear Avatar| MezzImmuneList [korascian_raid] MezzImmune=|a crystalline nexiont| IgnoreList [Oldcommons] Exclude=|Peron ThreadSpinner|Innkeep Dolman|Innkeep Olissa|Innkeep Redthorn| Tip for adding mobs into this list without manually into the INI. Create a hotkey like so. /named ${Target.CleanName} /exclude ${Target.CleanName} /mezzimmune ${Target.CleanName} This allows you to add to those lists for any mob you're target while the macro is running. -Note No spell below requires you to put in the Ranks unless it's mentioned to do so. With the exception of buffs no spell is membed before hand. You must have it already memed if you want to use it. SK_Bobby.ini [Settings] RangeItem=Huntsman's Ethereal Quiver - This is the item that does the actually summoning RangeItemSummon=Ethereal Arrow - This is the item that is actually summoned. MobRadius=10 - How far you want to look for mobs. Aggro=0 - Whether to aggro mobs or not. ItemShrink=Earring of Diminutiveness - Item you use to shrink yourself. CheckNames=1 - If set to 0 the macro will not switch targets if a name, or mezzimmune mob comes into camp after you already are fighting a mob. UsePet=0 - Whether to summon a pet. DpsMode=0 - If set to 1 will turn on DPS Mode. In Dps mode it will assist another toon and not try to aggro and only do dps type abilities. MainAssist=somebody - Main person you will assist while in DPS Mode SecondAssist=somebody - If main person is not in zone or dead. TrippleAssist=somebody - If second person is not in zone or dead. EventsMaster=somebody - If you are using my events.inc. This is the person you will send a tell to saying you just received and emote. This is meant for raids. StickSetting=35 - Sets how close you want to stick to the mob - DPS MODE ONLY AssistDistance=80 - How close the mob must be before you will assist - DPS MODE ONLY AssistAt=97 - What % of HP the mob must before you attack. - DPS MODE ONLY UseIRC=0 - Whether to join IRC or not. DoLoot=0 - Turns on autolooting if you are using ninjaadvloot.inc DoDot=0 - Turns Dotting on or off NumOfDots=1 - How many Dots you will be casting. [Spells] SteelyStance=Steely Stance - Temporary HP buff you want to cast during combat. SkinBuff=Malarian Skin - Skin proc buff you want to cast during combat. WithStand=WithStand - Withstand style Disc to use right before mob comes into camp. BladeStrike=Gouging Blade - Blade strike style disc to use during combat. CrimesonBlade=Crimson Blade - Crimson Blade style disc to use during names. DefensiveDisc=Malarian Carapace - Defensive disc to use when fighting a name. HateSpell1=Terror of Jelvalak - Main hate spell and hate spell used to do initial aggro. HateSpell2=Terror of the Soulbleeder - Second hate spell. HateSpell3=Terror of Vergalid - 3rd Hate spell. AeHateSpell1=Burst of Spite - Main AE aggro spell. AeHateSpell2=Revile - Second AE Aggro spell. AeHateSpell3=Vilify - Third AE Aggro spell. AeHateSpell4=Dread Gaze - Fourth AE aggro Spell. NukeSpell1=Malarian Spear - Main Nuke Spell. NukeSpell2=Rotmarrow Spear - Second Nuke Spell. ChallengeSpell=Charge for Power - Spell used For temporary aggro and AC ChallengeSpellRecourse=Charge for Power Recourse rk. ii - This is the resource you get when you challengespell is successful. You must put the RANK here if version 2 or 3. LifeTapSpell1=Touch of Tharoff - Main lifetap spell LifeTapSpell2=Touch of Kildrukaun - Second Lifetap spell LifeTapSpell3=Touch of Severan - Third lifetap spell DireImplication=Dire Implication - Emergency Lifetap Spell HpTapSpell=Touch of Lanys - Lifetap spell that increases your aggro and Max Health Temporarily. HpTapSpellRecourse=Gift of Lanys - The resource you receive by casting your HpTapSpell. You must put in the RANK here if version 2 or 3 BondSpell=Bond of Laarthik - LifeTap Dot Spell. BondSpellRecourse=Bond of Laarthik recourse rk. iii - Resource you receive by casting your Lifetap Dot. You must put in the RANK here if version 2 or 3. ManaTapSpell1=Laarthik's bite - Main Manatap Spell ManaTapSpell2=Ancient: Bite of Muram - Second ManaTap Spell PetSpell=Minion of Sebilis - Spell to summon your pet. PetSpellHaste=Gift of Sathir - Spell to haste your pet. RespiteDisc=Rest - Disc using when low on endurance Dot1=Changeme - Name of the Dot you will be casting BuffGem=12 - Gem where you want all your buff spells to use when buffing [SelfBuffs] NumSelfBuff=1 - Amount of self buffs you will be casting SelfBuff1=ChangeMe - Name of the Spell,item, or alt. SelfType1=ChangeMe - can gem1,1,alt,or item [ITEMS] ClickyBP=Elegant Soulrender Breastplate - The name of the Group or Raid BP for that expansion. [GeneralSettings] DoLeash=1 - Turns leashing on or off. Leashlength=25 - How far away from the stake you must be before it leashes back. AutoExpAdjust=1 - Whether to switch to AA or level automatically. MaintExpLvl=20 - What % of level XP before switching to AA MaxLevel=100 - Max level the toon can reach MasterList=NULL - What toons are allowed to send the bot a tell with a / command such as /say hi and the bot will do the command. Autosit=1 - Turns auto sitting on or off. RelayTells=0 - Turns relaying tells to BC on or of AutoBalance=0 - Turns autobalancing of a group of Mobs HP - DPS MODE ONLY - Leave off currently doesn't work. AutoBalanceHPCheck=5 - % of health differemce before considered unbalanced. DoFood=0 - Turns summoning turkey or milk on or off.","title":"Ini Samples"},{"location":"macros/gallery/sk.mac-nytemyst/#bot-flow","text":"After starting the macro if you do not have Aggro turned on or dps mode turned on it will just buff itself. If you have aggro on it's first going to look for mobs in a 50 radius range. It will automatically choose a name,mezzimmune, or the lowest HP mob within that radius. If there are no mobs in a 50 range radius then the macro will check if it has rez affects on. If so the macro will just buff itself and not try to aggro anything beyond the 50 radius. For mobs beyond the 50 radius it will look for mobs at a distance you set under \"Mobradius\". It will grab the highest level ,Named,mezzimmune mob and work it's way down. Macro does the initial aggro in 2 ways and both will be attempted to use. Will try to cast the first hate spell you have set in the ini and will try to use any range item like bow and arrow. If a mob goes into camp before you pulled enters camp it will switch to mob that's in camp. If the mob takes more then 20 seconds the camp the macro will clear the target, ignore that mob from pulling for 60 seconds and look for something else. If that mob eventually makes it into camp it will aggro the mob whether the timer is up or not. Once mob in camp it will stick to the mob. Use numerous Discs and spells such as demand for power,withstand,bite aa. Will constantly monitor health and will do lifetaps to keep it's self up. Will also nuke and dot. If it encounters a name it will using all tanking disciplines as well as dps disciples that stack with the tanking ones. Will use AA snare on any mobs that are trying to flee. Will keep any Skin or steely stance buffs up during combat. If more then one mop is in camp it will use ae aggro. If more then 3 mobs in camp and the health drops to low it will attempt to use deflection disc.","title":"Bot Flow"},{"location":"macros/gallery/snare/","tags":["macro"],"text":"Snare \u00b6 Macro to automatically snare target Works by: Checks to see if target has been snared since based upon if it is an NPC, % of health and checking the variable. When any mob dies, it resets the variable and only when a mob dies (or it wears off, which is extremely rare). #include spell_routines.inc #Event EnsnareWornOff \"#*#ensnare spell has worn off#*#\" #Event Exp \"#*#party experience!#*#\" #Event Exp \"#*#gain experience!#*#\" #Event Exp \"#*#slain#*#\" Sub Main /echo 1... /declare Ensnared bool outer FALSE :loop |Snare check |/assist <<<<tank name>>>> /if (${Target.ID} && ${Target.PctHPs}<99 && !${Ensnared}) /call Ensnare /doevents /delay 1s /goto :loop /return Sub Ensnare /call Cast \"Ensnare\" gem3 10s /if (${Macro.Return.Equal[CAST_SUCCESS]} || ${Macro.Return.Equal[CAST_IMMUNE]}) /varset Ensnared TRUE /return Sub Event_Exp /varset Ensnared FALSE /return Sub Event_EnsnareWornOff /varset Ensnared FALSE /return","title":"Snare"},{"location":"macros/gallery/snare/#snare","text":"Macro to automatically snare target Works by: Checks to see if target has been snared since based upon if it is an NPC, % of health and checking the variable. When any mob dies, it resets the variable and only when a mob dies (or it wears off, which is extremely rare). #include spell_routines.inc #Event EnsnareWornOff \"#*#ensnare spell has worn off#*#\" #Event Exp \"#*#party experience!#*#\" #Event Exp \"#*#gain experience!#*#\" #Event Exp \"#*#slain#*#\" Sub Main /echo 1... /declare Ensnared bool outer FALSE :loop |Snare check |/assist <<<<tank name>>>> /if (${Target.ID} && ${Target.PctHPs}<99 && !${Ensnared}) /call Ensnare /doevents /delay 1s /goto :loop /return Sub Ensnare /call Cast \"Ensnare\" gem3 10s /if (${Macro.Return.Equal[CAST_SUCCESS]} || ${Macro.Return.Equal[CAST_IMMUNE]}) /varset Ensnared TRUE /return Sub Event_Exp /varset Ensnared FALSE /return Sub Event_EnsnareWornOff /varset Ensnared FALSE /return","title":"Snare"},{"location":"macros/gallery/spell-routines.inc/","tags":["macro"],"text":"Spell Routines.inc \u00b6 Introduction \u00b6 Spell_Routines.inc is an incredibly useful snippet which casts spells, clicks items and activates AAs reliably, deals with fizzles, and provides a wealth of return code information for use in the calling macro. It was originally written by ~rusty and later improved by A_Druid_00 (VIP version), and is probably the most-used inc file today. It's the de-facto standard include for any macro which requires the casting of a spell, an AA, or clicking of an item. As with many of the inc files on the forums, there are 2 versions of spell_routines.inc: Non-VIP . This is the original from ~rusty. VIP . This is the updated version, maintained by A_Druid_00. The VIP version has been improved slightly and it a bit smaller (and thus faster). It also improves speed by making use of the MQ2Exchange plugin which is available in the VIP area. Both versions are interchangeable, and there are only minor differences between them. Both are fully functional. Usage \u00b6 To make use of the Spell_Routines.inc file, save it to your main Macros directory and then add this to the top of your macro: #include Spell_Routines.inc After this, you can use the commands/functions listed below. /call Cast \u00b6 /call Cast \"spellname|itemname|AAname|AA#\" [item|alt|gem#] \"give up time\" \"custom subroutine name\" [\"Number of resist recasts\"] Note: Any of the above fields must use quotes if they are more than one word. This will cast a spell or AA, or click an item. Examples: /call Cast \"Complete Healing\" | Cast Complete Healing if it is memmed /call Cast \"Arcane Rune\" gem5 7s | Cast Arcane Rune, memorizing it in gem5 if not already, and keep casting for 7s in case of interrupts /call Cast \"Eldritch Rune\" alt | Cast Eldritch Rune /call Cast \"173\" alt | Cast Eldritch Rune The most useful part about this routine is the custom subroutine. Take the following example: /call Cast \"Complete Healing\" gem1 10s CheckHP The CheckHP subroutine is as follows: Sub CheckHP /if ( ${Target.PctHPs}>=80 ) /call Interrupt /return This will continuously /call the CheckHP subroutine while the spell is casting, and if the target's HPs rise above 80% (ie. they got a heal from someone else), it will interrupt the casting. /call SwapItem \u00b6 /call SwapItem \"item name\" slotname This will swap an item into a specific slot. /call SwapItem \"Darkblade of the Warlord\" mainhand This will swap your Darkblade of the Warlord into your main hand. /call EquipItem \u00b6 /call EquipItem \"item name|slotname\" This will equip an item into the slot you specify. It returns \"old item|slotname\", so that you can use the same function to swap the original item back. /call EquipItem \"Sharp Ended Broken Lever\" | This returns \"Staff of Vindication|mainhand\" Note the following example: /call EquipItem \"Sharp Ended Broken Lever\" /declare olditem string outer ${Macro.Return} | Do something with your new main hand... /call EquipItem \"${Macro.Return}\" /call Interrupt \u00b6 /call Interrupt This will interrupt whatever spell/item/AA is currently being cast. Essentially it dismounts if you're on a horse, and then does a /stopcast. Note: if you don't want to interrupt a spell while mounted, put this at the top of your macro: /declare noInterrupt int outer 1 Return Codes \u00b6 /call Cast returns the following: CAST_CANCELLED Spell was cancelled by ducking (either manually or because mob died) CAST_CANNOTSEE You can't see your target CAST_IMMUNE Target is immune to this spell CAST_INTERRUPTED Casting was interrupted and exceeded the given time limit CAST_INVIS You were invis, and noInvis is set to true CAST_NOTARGET You don't have a target selected for this spell CAST_NOTMEMMED Spell is not memmed and you gem to mem was not specified CAST_NOTREADY AA ability or spell is not ready yet CAST_OUTOFMANA You don't have enough mana for this spell! CAST_OUTOFRANGE Target is out of range CAST_RESISTED Your spell was resisted! CAST_SUCCESS Your spell was cast successfully! (yay) CAST_UNKNOWNSPELL Spell/Item/Ability was not found Other \u00b6 If you don't want this to cast spells while you're invis, in your main macro have this at the top: /declare noInvis int outer 1 This will make it return CAST_INVIS if you're invis Below is a list of outer scope variables you can access in your macros: refreshTime | How much time is left till you're done recovering from casting castEndTime | How much time left till you're done casting the current spell... usable in custom spell Subs spellNotHold | 1 if your last spell didn't take hold, 0 otherwise spellRecastTime1-9 | How much time left until the spell is back up","title":"Spell Routines.inc"},{"location":"macros/gallery/spell-routines.inc/#spell-routinesinc","text":"","title":"Spell Routines.inc"},{"location":"macros/gallery/spell-routines.inc/#introduction","text":"Spell_Routines.inc is an incredibly useful snippet which casts spells, clicks items and activates AAs reliably, deals with fizzles, and provides a wealth of return code information for use in the calling macro. It was originally written by ~rusty and later improved by A_Druid_00 (VIP version), and is probably the most-used inc file today. It's the de-facto standard include for any macro which requires the casting of a spell, an AA, or clicking of an item. As with many of the inc files on the forums, there are 2 versions of spell_routines.inc: Non-VIP . This is the original from ~rusty. VIP . This is the updated version, maintained by A_Druid_00. The VIP version has been improved slightly and it a bit smaller (and thus faster). It also improves speed by making use of the MQ2Exchange plugin which is available in the VIP area. Both versions are interchangeable, and there are only minor differences between them. Both are fully functional.","title":"Introduction"},{"location":"macros/gallery/spell-routines.inc/#usage","text":"To make use of the Spell_Routines.inc file, save it to your main Macros directory and then add this to the top of your macro: #include Spell_Routines.inc After this, you can use the commands/functions listed below.","title":"Usage"},{"location":"macros/gallery/spell-routines.inc/#call-cast","text":"/call Cast \"spellname|itemname|AAname|AA#\" [item|alt|gem#] \"give up time\" \"custom subroutine name\" [\"Number of resist recasts\"] Note: Any of the above fields must use quotes if they are more than one word. This will cast a spell or AA, or click an item. Examples: /call Cast \"Complete Healing\" | Cast Complete Healing if it is memmed /call Cast \"Arcane Rune\" gem5 7s | Cast Arcane Rune, memorizing it in gem5 if not already, and keep casting for 7s in case of interrupts /call Cast \"Eldritch Rune\" alt | Cast Eldritch Rune /call Cast \"173\" alt | Cast Eldritch Rune The most useful part about this routine is the custom subroutine. Take the following example: /call Cast \"Complete Healing\" gem1 10s CheckHP The CheckHP subroutine is as follows: Sub CheckHP /if ( ${Target.PctHPs}>=80 ) /call Interrupt /return This will continuously /call the CheckHP subroutine while the spell is casting, and if the target's HPs rise above 80% (ie. they got a heal from someone else), it will interrupt the casting.","title":"/call Cast"},{"location":"macros/gallery/spell-routines.inc/#call-swapitem","text":"/call SwapItem \"item name\" slotname This will swap an item into a specific slot. /call SwapItem \"Darkblade of the Warlord\" mainhand This will swap your Darkblade of the Warlord into your main hand.","title":"/call SwapItem"},{"location":"macros/gallery/spell-routines.inc/#call-equipitem","text":"/call EquipItem \"item name|slotname\" This will equip an item into the slot you specify. It returns \"old item|slotname\", so that you can use the same function to swap the original item back. /call EquipItem \"Sharp Ended Broken Lever\" | This returns \"Staff of Vindication|mainhand\" Note the following example: /call EquipItem \"Sharp Ended Broken Lever\" /declare olditem string outer ${Macro.Return} | Do something with your new main hand... /call EquipItem \"${Macro.Return}\"","title":"/call EquipItem"},{"location":"macros/gallery/spell-routines.inc/#call-interrupt","text":"/call Interrupt This will interrupt whatever spell/item/AA is currently being cast. Essentially it dismounts if you're on a horse, and then does a /stopcast. Note: if you don't want to interrupt a spell while mounted, put this at the top of your macro: /declare noInterrupt int outer 1","title":"/call Interrupt"},{"location":"macros/gallery/spell-routines.inc/#return-codes","text":"/call Cast returns the following: CAST_CANCELLED Spell was cancelled by ducking (either manually or because mob died) CAST_CANNOTSEE You can't see your target CAST_IMMUNE Target is immune to this spell CAST_INTERRUPTED Casting was interrupted and exceeded the given time limit CAST_INVIS You were invis, and noInvis is set to true CAST_NOTARGET You don't have a target selected for this spell CAST_NOTMEMMED Spell is not memmed and you gem to mem was not specified CAST_NOTREADY AA ability or spell is not ready yet CAST_OUTOFMANA You don't have enough mana for this spell! CAST_OUTOFRANGE Target is out of range CAST_RESISTED Your spell was resisted! CAST_SUCCESS Your spell was cast successfully! (yay) CAST_UNKNOWNSPELL Spell/Item/Ability was not found","title":"Return Codes"},{"location":"macros/gallery/spell-routines.inc/#other","text":"If you don't want this to cast spells while you're invis, in your main macro have this at the top: /declare noInvis int outer 1 This will make it return CAST_INVIS if you're invis Below is a list of outer scope variables you can access in your macros: refreshTime | How much time is left till you're done recovering from casting castEndTime | How much time left till you're done casting the current spell... usable in custom spell Subs spellNotHold | 1 if your last spell didn't take hold, 0 otherwise spellRecastTime1-9 | How much time left until the spell is back up","title":"Other"},{"location":"macros/gallery/spell-skill-trainer/","tags":["macro"],"text":"Spell Skill Trainer \u00b6 This macro was originally published in the Macro Depot 3.0 Forum, and has been successfully used to max out spell casting skills (abjuration, alteration, channeling, conjuration, divination, evocation, meditation and specializations). Instructions Paste this code into a file called practice.mac in your \\macros directory. Memorize the spells you wish to cast to work on skill. I recommend using the highest level spell with the least amount of mana. I also suggest acquiring the following buffs from an enchanter: clarity (or clarity 2), gift of magic, insight \\(+12wis +6int\\) or brilliance \\(+6wis +12int\\) , and intellectual superiority \\(cuts down on fizzles\\) . Note, at level 46, the first 3 spells are replaced by Koadic's Endless Intellect (aka KEI). I've also found it very helpful to work on these skills in the guild hall \"jacuzzi\" since a) your buffs won't fade, and b) the jacuzzi nearly double your mana regen. Damage spells do not \"take\" on you for the most part, and if you should be working on conjuration with a summoning spell(such as Halo of Light), you do NOT need to delete the item! You cannot summon a 2 nd halo, for example, however you will still get skillups. |///////////////////////////////////////////////////////////////////////////////// | | Spell Practice Macro | practice.mac | Author : JP5 | Date : 2004-08-05 21:03pm GMT | Useage : /macro practice [gem#] [target] | Example : /macro practice 5 Gobartik | Description : | -> Target is optional. Default target is ${Me} when not defined. | | -> If you wish to stop practicing, hit ESC. | | -> When macro ends (with ESC or skill max), you will be given a report of your | skillups. | | -> As long as your DD doesn't do over 20% damage to yourself, you won't die | from nuking yourself... | |///////////////////////////////////////////////////////////////////////////////// #event NotTakeHold \"Your spell did not take hold.\" #event ClarityFades \"The cool breeze fades.\" #event SkillUp \"You have become better at #1#! (#2#)\" #event ESC \"You no longer have a target.\" Sub Main /declare GemNumber int outer /declare PTarget string outer /if (${Defined[Param0]}) { /varset GemNumber ${Param0} /echo Practicing ${Spell[${Me.Gem[${GemNumber}]}].Skill}. Hit ESC at any time to end and see results. } else { /echo Usage: /macro practice [gem\\#\\] \\[target]``` /echo Which spell would you like to practice? /endmacro `} /if (${Defined[Param1]}) { /varset PTarget ${Param1} } else { /echo No target defined. Defaulting to ${Me}. /varset PTarget ${Me} } /declare MainSkillUp int outer 0 /declare SecSkillUp int outer 0 :start /stand /target ${PTarget} :bleh /doevents /if (${Me.SpellReady[${GemNumber}]}) { /if (${Me.Gem[${GemNumber}].Mana} > ${Me.CurrentMana}) { /sit /goto :medup } /if (${Me.PctHPs}<20) { /sit /echo Ending Macro. HPs are too low. /call Results } /if (${Me.State.NotEqual[STAND]}) { /stand /delay 1 } /if (${Math.Calc[${Me.Level}*5+5]}==${Me.Skill[${Spell[${Me.Gem[${GemNumber}]}].Skill}]}) { /call Results } /goto :cast } else { /goto :bleh } :cast /cast ${GemNumber} /goto :bleh :medup /doevents /if (${Me.State.NotEqual[SIT]}) { /delay 10 /sit } /if (${Me.CurrentMana}==${Me.MaxMana}) { /goto :start } else { /goto :medup } /return |-- Sub Event_ClarityFades Sub Event_ClarityFades :test /if (${Me.Class.Name.Equal[Enchanter]}) { /if (${Me.SpellReady[Clarity]}) { /if (${Me.CurrentMana}>${Spell[Clarity].Mana}) { /stand /cast Clarity } else { /sit /goto :test } } else { /goto :test } } /return |-- Sub Event_NotTakeHold Sub Event_NotTakeHold /echo Macro ended. Invalid Target. /call Results /return Sub Event_ESC /echo Macro Ended by user. /call Results /return |-- Sub Event_SkillUp Sub Event_SkillUp(string Line, string SkillType, int SkillValue) /if (${Spell[${Me.Gem[${GemNumber}]}].Skill.Equal[${SkillType}]}) { /varcalc MainSkillUp ${MainSkillUp}+1 } /if (${Spell[${Me.Gem[${GemNumber}]}].Skill.NotEqual[${SkillType}]}) { /varcalc SecSkillUp ${SecSkillUp}+1 } /if (${Spell[${Me.Gem[${GemNumber}]}].Skill.Equal[${SkillType}]}) { /if (${Math.Calc[${Me.Level}*5+5]}==${SkillValue}) { /call Results } } /return |-- Sub Results Sub Results /echo Results: ${Spell[${Me.Gem[${GemNumber}]}].Skill} (${Me.Skill[${Spell[${Me.Gem[${GemNumber}]}].Skill}]}) -- Total of ${MainSkillUp} skillups! /echo Total other skillups (not ${Spell[${Me.Gem[${GemNumber}]}].Skill}) -- ${SecSkillUp}. /endmacro /return","title":"Spell Skill Trainer"},{"location":"macros/gallery/spell-skill-trainer/#spell-skill-trainer","text":"This macro was originally published in the Macro Depot 3.0 Forum, and has been successfully used to max out spell casting skills (abjuration, alteration, channeling, conjuration, divination, evocation, meditation and specializations). Instructions Paste this code into a file called practice.mac in your \\macros directory. Memorize the spells you wish to cast to work on skill. I recommend using the highest level spell with the least amount of mana. I also suggest acquiring the following buffs from an enchanter: clarity (or clarity 2), gift of magic, insight \\(+12wis +6int\\) or brilliance \\(+6wis +12int\\) , and intellectual superiority \\(cuts down on fizzles\\) . Note, at level 46, the first 3 spells are replaced by Koadic's Endless Intellect (aka KEI). I've also found it very helpful to work on these skills in the guild hall \"jacuzzi\" since a) your buffs won't fade, and b) the jacuzzi nearly double your mana regen. Damage spells do not \"take\" on you for the most part, and if you should be working on conjuration with a summoning spell(such as Halo of Light), you do NOT need to delete the item! You cannot summon a 2 nd halo, for example, however you will still get skillups. |///////////////////////////////////////////////////////////////////////////////// | | Spell Practice Macro | practice.mac | Author : JP5 | Date : 2004-08-05 21:03pm GMT | Useage : /macro practice [gem#] [target] | Example : /macro practice 5 Gobartik | Description : | -> Target is optional. Default target is ${Me} when not defined. | | -> If you wish to stop practicing, hit ESC. | | -> When macro ends (with ESC or skill max), you will be given a report of your | skillups. | | -> As long as your DD doesn't do over 20% damage to yourself, you won't die | from nuking yourself... | |///////////////////////////////////////////////////////////////////////////////// #event NotTakeHold \"Your spell did not take hold.\" #event ClarityFades \"The cool breeze fades.\" #event SkillUp \"You have become better at #1#! (#2#)\" #event ESC \"You no longer have a target.\" Sub Main /declare GemNumber int outer /declare PTarget string outer /if (${Defined[Param0]}) { /varset GemNumber ${Param0} /echo Practicing ${Spell[${Me.Gem[${GemNumber}]}].Skill}. Hit ESC at any time to end and see results. } else { /echo Usage: /macro practice [gem\\#\\] \\[target]``` /echo Which spell would you like to practice? /endmacro `} /if (${Defined[Param1]}) { /varset PTarget ${Param1} } else { /echo No target defined. Defaulting to ${Me}. /varset PTarget ${Me} } /declare MainSkillUp int outer 0 /declare SecSkillUp int outer 0 :start /stand /target ${PTarget} :bleh /doevents /if (${Me.SpellReady[${GemNumber}]}) { /if (${Me.Gem[${GemNumber}].Mana} > ${Me.CurrentMana}) { /sit /goto :medup } /if (${Me.PctHPs}<20) { /sit /echo Ending Macro. HPs are too low. /call Results } /if (${Me.State.NotEqual[STAND]}) { /stand /delay 1 } /if (${Math.Calc[${Me.Level}*5+5]}==${Me.Skill[${Spell[${Me.Gem[${GemNumber}]}].Skill}]}) { /call Results } /goto :cast } else { /goto :bleh } :cast /cast ${GemNumber} /goto :bleh :medup /doevents /if (${Me.State.NotEqual[SIT]}) { /delay 10 /sit } /if (${Me.CurrentMana}==${Me.MaxMana}) { /goto :start } else { /goto :medup } /return |-- Sub Event_ClarityFades Sub Event_ClarityFades :test /if (${Me.Class.Name.Equal[Enchanter]}) { /if (${Me.SpellReady[Clarity]}) { /if (${Me.CurrentMana}>${Spell[Clarity].Mana}) { /stand /cast Clarity } else { /sit /goto :test } } else { /goto :test } } /return |-- Sub Event_NotTakeHold Sub Event_NotTakeHold /echo Macro ended. Invalid Target. /call Results /return Sub Event_ESC /echo Macro Ended by user. /call Results /return |-- Sub Event_SkillUp Sub Event_SkillUp(string Line, string SkillType, int SkillValue) /if (${Spell[${Me.Gem[${GemNumber}]}].Skill.Equal[${SkillType}]}) { /varcalc MainSkillUp ${MainSkillUp}+1 } /if (${Spell[${Me.Gem[${GemNumber}]}].Skill.NotEqual[${SkillType}]}) { /varcalc SecSkillUp ${SecSkillUp}+1 } /if (${Spell[${Me.Gem[${GemNumber}]}].Skill.Equal[${SkillType}]}) { /if (${Math.Calc[${Me.Level}*5+5]}==${SkillValue}) { /call Results } } /return |-- Sub Results Sub Results /echo Results: ${Spell[${Me.Gem[${GemNumber}]}].Skill} (${Me.Skill[${Spell[${Me.Gem[${GemNumber}]}].Skill}]}) -- Total of ${MainSkillUp} skillups! /echo Total other skillups (not ${Spell[${Me.Gem[${GemNumber}]}].Skill}) -- ${SecSkillUp}. /endmacro /return","title":"Spell Skill Trainer"},{"location":"macros/gallery/wait4rez.inc/","tags":["macro"],"text":"Wait4Rez.inc \u00b6 Wait4Rez.inc by A_Druid_00 (originally written by fantum409) is a snippet which handles the following: Consents group, guild and raid Waits for the Rez box to pop up Accepts the rez Loots your corpse There are 2 versions of Wait4Rez.inc on the MQ2 message boards: The Non-VIP version is located here . The VIP version is distributed with AutoBot.mac . A link to the main Autobot macro post on the forums is here .","title":"Wait4Rez.inc"},{"location":"macros/gallery/wait4rez.inc/#wait4rezinc","text":"Wait4Rez.inc by A_Druid_00 (originally written by fantum409) is a snippet which handles the following: Consents group, guild and raid Waits for the Rez box to pop up Accepts the rez Loots your corpse There are 2 versions of Wait4Rez.inc on the MQ2 message boards: The Non-VIP version is located here . The VIP version is distributed with AutoBot.mac . A link to the main Autobot macro post on the forums is here .","title":"Wait4Rez.inc"},{"location":"main/","text":"Getting Started \u00b6 Starting/Stopping \u00b6 Once you have built MQ successfully, you can launch it by changing to the Releases directory and opening MacroQuest.exe . It doesn't matter if MQ is started while EverQuest is running or not. If you do start it after you start EverQuest, you will have to wait a few seconds before it finishes loading and you see the results in-game. MQ can be stopped from within game, by typing /unload . If you are running multiple sessions, you will have to do this in each session. After unloading, you can close the tray icon by right-clicking on it and chosing Exit. Multiple Sessions \u00b6 MacroQuest becomes part of EverQuest when you play, and anything you do inside one session is physically and logically separate from all others (just like your two copies of EverQuest dont blend together). This means that if you load a plugin in one session, it's not going to automatically load in the other. However, when you load a plugin, it will automatically load the next time a MacroQuest session begins. If that happens to be a second EQ session launching, then it may appear to your untrained eye as applying the plugin loading to all running sessions. Likewise, if you run a macro in one session, it's not going to automatically load in others. And if you run a command in one session, it's not going to automatically run in others. EQ Commands that are enhanced \u00b6 The following common EverQuest slash commands are enhanced by MacroQuest: /cast /charinfo /help /location /target /who /whotarget A full list is available in the Slash Commands page. MQ-only Commands \u00b6 The following commonly used slash commands are added by MacroQuest: /destroy /drop /echo /face /identify /itemtarget /macro /memspell /mqfont /mqpause /multiline /popup /plugin /ranged /skills /whofilter /unload A full list is available on the Slash Commands page. MacroQuest.ini \u00b6 NamingSpawn Article about manipulating the ini Macros and Plugins \u00b6 Macros \u00b6 You can load a macro with the following command: /macro`<arguments> eg. /macro autobot` To end a macro, use this command: /endmacro See the Getting Startaed section for further information on macros, and /macro and /endmacro for starting and stopping. Plugins \u00b6 MQ plugins are modular and can be loaded and unloaded on demand. To load a plugin, type: /plugin eg. /plugin mq2melee To unload a plugin: /pluginunload eg. /plugin mq2melee unload See the Plugins section for further information on plugins, and /plugin for starting and stopping. Custom UIs \u00b6 The EverQuest UI can also be enhanced through the use of MQ2 information. Things like your Target's level and class can be added to your Target Window, buff timers to your Buffs Window and other stats like mana regen, HP regen, Accuracy and Strikethrough to your Player Window. See the Custom UIs page for further information on what you can add, and how to do so. HUDs \u00b6 MacroQuest can enable a custom Heads Up Display to show almost any kind of data on top of your UI. Instructions for configuration as well as further information can be found on the MQ2HUD page. CFG Files \u00b6 See the CFG Files section for further information. Troubleshooting \u00b6 **I don't see anything on the map, even though I compiled with no errors and I can see other MQ2 windows like the Chat window.** You need to load the MQ2Map plugin using the command \"/plugin MQ2Map\" in-game. When you execute /mapfilter with any options, all layers that were previously visible disappear. Krust UI issue, or bad mapfilter options. **With MQ2 running, Monk's \"Projection\" ability cannot be seen and its title (xxxxxx's projection) is also not displayed** Use /showpet command to disable the pet filter.","title":"Getting Started"},{"location":"main/#getting-started","text":"","title":"Getting Started"},{"location":"main/#startingstopping","text":"Once you have built MQ successfully, you can launch it by changing to the Releases directory and opening MacroQuest.exe . It doesn't matter if MQ is started while EverQuest is running or not. If you do start it after you start EverQuest, you will have to wait a few seconds before it finishes loading and you see the results in-game. MQ can be stopped from within game, by typing /unload . If you are running multiple sessions, you will have to do this in each session. After unloading, you can close the tray icon by right-clicking on it and chosing Exit.","title":"Starting/Stopping"},{"location":"main/#multiple-sessions","text":"MacroQuest becomes part of EverQuest when you play, and anything you do inside one session is physically and logically separate from all others (just like your two copies of EverQuest dont blend together). This means that if you load a plugin in one session, it's not going to automatically load in the other. However, when you load a plugin, it will automatically load the next time a MacroQuest session begins. If that happens to be a second EQ session launching, then it may appear to your untrained eye as applying the plugin loading to all running sessions. Likewise, if you run a macro in one session, it's not going to automatically load in others. And if you run a command in one session, it's not going to automatically run in others.","title":"Multiple Sessions"},{"location":"main/#eq-commands-that-are-enhanced","text":"The following common EverQuest slash commands are enhanced by MacroQuest: /cast /charinfo /help /location /target /who /whotarget A full list is available in the Slash Commands page.","title":"EQ Commands that are enhanced"},{"location":"main/#mq-only-commands","text":"The following commonly used slash commands are added by MacroQuest: /destroy /drop /echo /face /identify /itemtarget /macro /memspell /mqfont /mqpause /multiline /popup /plugin /ranged /skills /whofilter /unload A full list is available on the Slash Commands page.","title":"MQ-only Commands"},{"location":"main/#macroquestini","text":"NamingSpawn Article about manipulating the ini","title":"MacroQuest.ini"},{"location":"main/#macros-and-plugins","text":"","title":"Macros and Plugins"},{"location":"main/#macros","text":"You can load a macro with the following command: /macro`<arguments> eg. /macro autobot` To end a macro, use this command: /endmacro See the Getting Startaed section for further information on macros, and /macro and /endmacro for starting and stopping.","title":"Macros"},{"location":"main/#plugins","text":"MQ plugins are modular and can be loaded and unloaded on demand. To load a plugin, type: /plugin eg. /plugin mq2melee To unload a plugin: /pluginunload eg. /plugin mq2melee unload See the Plugins section for further information on plugins, and /plugin for starting and stopping.","title":"Plugins"},{"location":"main/#custom-uis","text":"The EverQuest UI can also be enhanced through the use of MQ2 information. Things like your Target's level and class can be added to your Target Window, buff timers to your Buffs Window and other stats like mana regen, HP regen, Accuracy and Strikethrough to your Player Window. See the Custom UIs page for further information on what you can add, and how to do so.","title":"Custom UIs"},{"location":"main/#huds","text":"MacroQuest can enable a custom Heads Up Display to show almost any kind of data on top of your UI. Instructions for configuration as well as further information can be found on the MQ2HUD page.","title":"HUDs"},{"location":"main/#cfg-files","text":"See the CFG Files section for further information.","title":"CFG Files"},{"location":"main/#troubleshooting","text":"**I don't see anything on the map, even though I compiled with no errors and I can see other MQ2 windows like the Chat window.** You need to load the MQ2Map plugin using the command \"/plugin MQ2Map\" in-game. When you execute /mapfilter with any options, all layers that were previously visible disappear. Krust UI issue, or bad mapfilter options. **With MQ2 running, Monk's \"Projection\" ability cannot be seen and its title (xxxxxx's projection) is also not displayed** Use /showpet command to disable the pet filter.","title":"Troubleshooting"},{"location":"main/about-docs/","text":"Working with the Documentation \u00b6 Making Edits \u00b6 TOOD Searching for Content \u00b6 Tags can be used to assist in searching for specific things. Here are some examples of tags that are in use: tlo datatype command plugin macro lua Tags \u00b6 [TAGS]","title":"Working with the Documentation"},{"location":"main/about-docs/#working-with-the-documentation","text":"","title":"Working with the Documentation"},{"location":"main/about-docs/#making-edits","text":"TOOD","title":"Making Edits"},{"location":"main/about-docs/#searching-for-content","text":"Tags can be used to assist in searching for specific things. Here are some examples of tags that are in use: tlo datatype command plugin macro lua","title":"Searching for Content"},{"location":"main/about-docs/#tags","text":"[TAGS]","title":"Tags"},{"location":"main/building/","text":"Building MacroQuest \u00b6 Download & Install Visual Studio 2019/2022 \u00b6 Links and instructions can be found at: https://visualstudio.microsoft.com/downloads/ Be sure to install MSVC v142 - VS2019 c++ x86/x64 build tools as part of the installation. How to Build \u00b6 Download & Install Git for Windows \u00b6 Links and instructions can be found at: https://git-scm.com The recommended way to build MacroQuest is from a source code checkout using Git. There are many how to guides for installing and setting up git. Here is one of them Check Out the Latest Source Code \u00b6 Clone (create a local copy) the repository. This will create the subfolder macroquest that containes a copy of the source code. git clone https://github.com/macroquest/macroquest.git Initialize the submodules. Move (cd) to the newly created macroquest folder before executing this command. If you have run this step before, you can skip it. git submodule init Update the submodules to the newest versions. Ensure you are in the newly created macroquest folder before executing this command. git submodule update If this is your first time downloading the source code, proceed to Build Steps. Updating an Existing Checkout \u00b6 MacroQuest is updated often, especially after a patch. Make sure before you build that you have the latest source code for MacroQuest and all of its dependencies. If you already have the source, it is a good idea to make sure that you pull all the latest changes. git pull --rebase Update Submodules. This ensures that dependencies have the latest code. git submodule update At this point, the source should be ready to compile. Proceed to Build Steps. Build Steps (Live/Test) \u00b6 Open the MacroQuest.sln file in the src directory. Double clicking this file should open Visual Studio. If prompted to upgrade, click Cancel. Make sure your eqlib branch is on live or test Select the Release and (x64) configuration from the drop-down menu near the top of the window. Since the project moved to 64-bit, ensure all project configurations are set to (x64) in the Solution Macroquest Property Pages. From the Visual Studio main menu, select Build then Configuration Manager then ensure the Platform column for each project is set to (x64) . Select Build -> Build Solution from the menu. The built files will be placed in build/bin/Release . To start MacroQuest, run MacroQuest.exe . This will launch the application to the tray, and install MacroQuest into any running EverQuest processes. Build Steps (Emu) \u00b6 Open the MacroQuest.sln file in the src directory. Double clicking this file should open Visual Studio. If prompted to upgrade, click Cancel. Make sure your eqlib branch is on emu Select the Release and Win32 configuration from the drop-down menu near the top of the window. Select Build -> Build Solution from the menu. The built files will be placed in build/bin/Release . To start MacroQuest, run MacroQuest.exe . This will launch the application to the tray, and install MacroQuest into any running EverQuest processes. Building Live/Test/Emu from the same folder \u00b6 By default MacroQuest does not separate build outputs. Regardless whether you are building for Live or Test or Emu, all release outputs go to build/bin/release . However, macroquest does provide an option to separate these out further by setting the environment variable MQ_BUILD_SEPARATE to 1. When this environment variable is set to 1, the Client Target is added to your build path. For example, when building for Live your output path would be build/Live/bin/release while when building for Emu your output path would be build/Emu/bin/release . This allows you to share the same macroquest directory and just swap eqlib when you want to change client builds. Adding Your Own Plugins \u00b6 Note: If you have any custom plugins you want to build, put the sources for them in the plugins folder, for example: plugins/MQ2Foo/MQ2Foo.cpp Do not put them in src/plugins , this path is reserved for the MacroQuest developers. To add any personal plugins to the solution: Right-click the solution in the Solution Explorer and click Add -> Add Existing Project... Select your .vcxproj file Repeat as necessary Updating Plugins from Legacy MacroQuest \u00b6 If you are converting plugins over from Legacy MacroQuest (e.g. MQ2), it is recommended that you re-run the plugin generator first, and then copy your source files into the generated project. For example: cd plugins mkplugin MQ2Foo This will generate a MQ2Foo.vcxproj , MQ2Foo.cpp and several other files in a MQ2Foo folder. You can now add this project to the solution and add/replace the sources with your own. Directory Structure \u00b6 Folder Name Purpose build Build artifacts. This is where you can find the output when you compile MacroQuest and your plugins. contrib Third-Party source code. data Additional non-source code files used by MacroQuest. docs Documentation extras Optional files that are not required, but may be useful. This includes sources for plugins that are no longer maintained. include Public header files that are used for building MacroQuest and plugins. plugins This folder is reserved for you to add your own personal plugins. src The source code for the MacroQuest executable and its core plugins. tools Source code and additional tools that are used for MacroQuest development, but not part of the main project. Additional Files of Interest \u00b6 plugins/mkplugin.exe Generates a new plugin from the template. Use this when creating a new plugin, or when converting an existing plugin from legacy MacroQuest. src/MacroQuest.sln The main MacroQuest solution file. Use this to build the project.","title":"Building MacroQuest"},{"location":"main/building/#building-macroquest","text":"","title":"Building MacroQuest"},{"location":"main/building/#download-install-visual-studio-20192022","text":"Links and instructions can be found at: https://visualstudio.microsoft.com/downloads/ Be sure to install MSVC v142 - VS2019 c++ x86/x64 build tools as part of the installation.","title":"Download &amp; Install Visual Studio 2019/2022"},{"location":"main/building/#how-to-build","text":"","title":"How to Build"},{"location":"main/building/#download-install-git-for-windows","text":"Links and instructions can be found at: https://git-scm.com The recommended way to build MacroQuest is from a source code checkout using Git. There are many how to guides for installing and setting up git. Here is one of them","title":"Download &amp; Install Git for Windows"},{"location":"main/building/#check-out-the-latest-source-code","text":"Clone (create a local copy) the repository. This will create the subfolder macroquest that containes a copy of the source code. git clone https://github.com/macroquest/macroquest.git Initialize the submodules. Move (cd) to the newly created macroquest folder before executing this command. If you have run this step before, you can skip it. git submodule init Update the submodules to the newest versions. Ensure you are in the newly created macroquest folder before executing this command. git submodule update If this is your first time downloading the source code, proceed to Build Steps.","title":"Check Out the Latest Source Code"},{"location":"main/building/#updating-an-existing-checkout","text":"MacroQuest is updated often, especially after a patch. Make sure before you build that you have the latest source code for MacroQuest and all of its dependencies. If you already have the source, it is a good idea to make sure that you pull all the latest changes. git pull --rebase Update Submodules. This ensures that dependencies have the latest code. git submodule update At this point, the source should be ready to compile. Proceed to Build Steps.","title":"Updating an Existing Checkout"},{"location":"main/building/#build-steps-livetest","text":"Open the MacroQuest.sln file in the src directory. Double clicking this file should open Visual Studio. If prompted to upgrade, click Cancel. Make sure your eqlib branch is on live or test Select the Release and (x64) configuration from the drop-down menu near the top of the window. Since the project moved to 64-bit, ensure all project configurations are set to (x64) in the Solution Macroquest Property Pages. From the Visual Studio main menu, select Build then Configuration Manager then ensure the Platform column for each project is set to (x64) . Select Build -> Build Solution from the menu. The built files will be placed in build/bin/Release . To start MacroQuest, run MacroQuest.exe . This will launch the application to the tray, and install MacroQuest into any running EverQuest processes.","title":"Build Steps (Live/Test)"},{"location":"main/building/#build-steps-emu","text":"Open the MacroQuest.sln file in the src directory. Double clicking this file should open Visual Studio. If prompted to upgrade, click Cancel. Make sure your eqlib branch is on emu Select the Release and Win32 configuration from the drop-down menu near the top of the window. Select Build -> Build Solution from the menu. The built files will be placed in build/bin/Release . To start MacroQuest, run MacroQuest.exe . This will launch the application to the tray, and install MacroQuest into any running EverQuest processes.","title":"Build Steps (Emu)"},{"location":"main/building/#building-livetestemu-from-the-same-folder","text":"By default MacroQuest does not separate build outputs. Regardless whether you are building for Live or Test or Emu, all release outputs go to build/bin/release . However, macroquest does provide an option to separate these out further by setting the environment variable MQ_BUILD_SEPARATE to 1. When this environment variable is set to 1, the Client Target is added to your build path. For example, when building for Live your output path would be build/Live/bin/release while when building for Emu your output path would be build/Emu/bin/release . This allows you to share the same macroquest directory and just swap eqlib when you want to change client builds.","title":"Building Live/Test/Emu from the same folder"},{"location":"main/building/#adding-your-own-plugins","text":"Note: If you have any custom plugins you want to build, put the sources for them in the plugins folder, for example: plugins/MQ2Foo/MQ2Foo.cpp Do not put them in src/plugins , this path is reserved for the MacroQuest developers. To add any personal plugins to the solution: Right-click the solution in the Solution Explorer and click Add -> Add Existing Project... Select your .vcxproj file Repeat as necessary","title":"Adding Your Own Plugins"},{"location":"main/building/#updating-plugins-from-legacy-macroquest","text":"If you are converting plugins over from Legacy MacroQuest (e.g. MQ2), it is recommended that you re-run the plugin generator first, and then copy your source files into the generated project. For example: cd plugins mkplugin MQ2Foo This will generate a MQ2Foo.vcxproj , MQ2Foo.cpp and several other files in a MQ2Foo folder. You can now add this project to the solution and add/replace the sources with your own.","title":"Updating Plugins from Legacy MacroQuest"},{"location":"main/building/#directory-structure","text":"Folder Name Purpose build Build artifacts. This is where you can find the output when you compile MacroQuest and your plugins. contrib Third-Party source code. data Additional non-source code files used by MacroQuest. docs Documentation extras Optional files that are not required, but may be useful. This includes sources for plugins that are no longer maintained. include Public header files that are used for building MacroQuest and plugins. plugins This folder is reserved for you to add your own personal plugins. src The source code for the MacroQuest executable and its core plugins. tools Source code and additional tools that are used for MacroQuest development, but not part of the main project.","title":"Directory Structure"},{"location":"main/building/#additional-files-of-interest","text":"plugins/mkplugin.exe Generates a new plugin from the template. Use this when creating a new plugin, or when converting an existing plugin from legacy MacroQuest. src/MacroQuest.sln The main MacroQuest solution file. Use this to build the project.","title":"Additional Files of Interest"},{"location":"main/cheat-classifications/","text":"Cheat Classifications \u00b6 When the VIP forums opened, Lax posted a little system of classifying cheats or \"hacks\". Passive hacks are those that show different information without really changing the rules. For example, \"fish eyes\" or \"ultravision\" would simply show how you can see things. It doesn't require you to modify properties of a character or item to do so, this can be done just by telling the display to show you things differently. Active hacks are those that could warp you around or otherwise really change the rules of how the game plays. \"mounts without models\" is an \"active\" hack. It's modifying the rules of the game by allowing you to use a horse without having models on but is not going to give the server the impression that you are cheating because the server doesn't know if you have models on or not. Server-Active hacks broadcasting information to the server that could possibly give you away if they wanted to put in a check for it. \"Warping\" is an example of a Server-Active hack. Note that our Rules allow for most Passive hacks, but NOT Active or Server-Active hacks.","title":"Cheat Classifications"},{"location":"main/cheat-classifications/#cheat-classifications","text":"When the VIP forums opened, Lax posted a little system of classifying cheats or \"hacks\". Passive hacks are those that show different information without really changing the rules. For example, \"fish eyes\" or \"ultravision\" would simply show how you can see things. It doesn't require you to modify properties of a character or item to do so, this can be done just by telling the display to show you things differently. Active hacks are those that could warp you around or otherwise really change the rules of how the game plays. \"mounts without models\" is an \"active\" hack. It's modifying the rules of the game by allowing you to use a horse without having models on but is not going to give the server the impression that you are cheating because the server doesn't know if you have models on or not. Server-Active hacks broadcasting information to the server that could possibly give you away if they wanted to put in a check for it. \"Warping\" is an example of a Server-Active hack. Note that our Rules allow for most Passive hacks, but NOT Active or Server-Active hacks.","title":"Cheat Classifications"},{"location":"main/credits/","text":"Credits \u00b6 Warning This section is out of date and hasn't been updated for a really long time. People Associated with the MacroQuest Project \u00b6 People are not listed within a section in any particular order. Recent developers brainiac knightly dannuic Past developers Plazmic dont_know_at_all Lax Amadeus EqMule Ohmz_cc ieatacid rswiders Other administration and/or minor developers Rizwank L124RD Mckorr Tuxracer Wassup Major Wiki contributors Terramantian Terramantian was given an honorary VIP for his numerous contributions to the Wiki Major plugin developers A_Enchanter_00 ( MQ2AdvPath , MQ2VoiceCommand, MQ2CastTimer) s0rcier ( MQ2Melee , MQ2Cast ) CyberTech, Cr4zyb4rd ( MQ2Twist ) koad (MQ2Timer), MQ2Twist ) Shire ( MQ2DPS ) tonio ( MQ2MoveUtils ) brainiac ( MQ2Nav ) Major \"macro\" developers GrimJack ( GenBot ) ml2517 (advbot) Other notable users aChallenged1 ( noob's best friend ) eqjoe MacroFiend vzmule TheWarden Imperfect","title":"Credits"},{"location":"main/credits/#credits","text":"Warning This section is out of date and hasn't been updated for a really long time.","title":"Credits"},{"location":"main/credits/#people-associated-with-the-macroquest-project","text":"People are not listed within a section in any particular order. Recent developers brainiac knightly dannuic Past developers Plazmic dont_know_at_all Lax Amadeus EqMule Ohmz_cc ieatacid rswiders Other administration and/or minor developers Rizwank L124RD Mckorr Tuxracer Wassup Major Wiki contributors Terramantian Terramantian was given an honorary VIP for his numerous contributions to the Wiki Major plugin developers A_Enchanter_00 ( MQ2AdvPath , MQ2VoiceCommand, MQ2CastTimer) s0rcier ( MQ2Melee , MQ2Cast ) CyberTech, Cr4zyb4rd ( MQ2Twist ) koad (MQ2Timer), MQ2Twist ) Shire ( MQ2DPS ) tonio ( MQ2MoveUtils ) brainiac ( MQ2Nav ) Major \"macro\" developers GrimJack ( GenBot ) ml2517 (advbot) Other notable users aChallenged1 ( noob's best friend ) eqjoe MacroFiend vzmule TheWarden Imperfect","title":"People Associated with the MacroQuest Project"},{"location":"main/hacker-stuff/","text":"Hacker Stuff \u00b6 ASM Instruction Reference C/C++ Tutorial Detours Explained dbgview Nmap","title":"Hacker Stuff"},{"location":"main/hacker-stuff/#hacker-stuff","text":"ASM Instruction Reference C/C++ Tutorial Detours Explained dbgview Nmap","title":"Hacker Stuff"},{"location":"main/history-of-macroquest/","text":"History Of MacroQuest \u00b6 MacroQuest \u00b6 In 1999, a site called HackersQuest opened its doors with public forums. It is interesting to note that many popular projects (black hat as well as white hat) seem to have been born there, or at least been somehow associated. Of note: WyvernX (also known as Admin) of XUnleashed, Ratt of ShowEQ, just some dude of EQWindows, and Mapfiend of RPG-Toolbox were some of the first registered users at HackersQuest. Plazmic first publicly announced what would be come MacroQuest in a post dated May 11 th , 2002, the date he joined HackersQuest. I'm currently working on a truely intelligent macro subsystem for EverQuest that can run while EQ is NOT the forground process. I have a test character that has levelled from 1 to 5 in North Qeynos chasing snakes and other things around, runs back to the gate to rest when low on health, and head to the merchants when low on packspace. Another character was running around Shadowhaven making and selling Pickled Gator meat for a small profit (really not worth the time) Would anyone be interested in this type of a macro program? I'm not sure fully what Xylobot offers, but I figure background macroing would be a hit nevertheless. A poll attached to the post turned up 3 votes -- one for \"I'd rather use Xylobot\", one for \"Running a macro in the background would be cool\", and one for \"Sign me up for the beta!\". A little bit less than a month later he posted again, this time with a link to a new site at sourceforge . The project was called MacroQuest, and would later become the most successful and popular tool for automating EverQuest_._ This new utility was originally only available for Windows 2000 and XP users, but later adapted for Windows 98 and ME. It boasted new commands that could be used directly in EverQuest, with variables and a macro language -- and even came with some macros, including a fletching macro to make arrows. Note: Credit for writing the above text goes to Feonix762. MacroQuest 2 \u00b6 Macroquest2 was developed from the existing MacroQuest project, initially by Lax. You may find the original post about MacroQuest2 replacing MacroQuest here . Post subject: Nonbelievers of Lax soon to be disproven! In the last 3 days I have been working hard to redefine the future of Macroquest. The people who have seen the work this far are pleased, and the time draws near to actually allow public beta testing. Please note that nothing in the current MQ will be changed, or broken. This will be an entirely new distribution, from the same place. For now the project is dubbed MQ2. So what is MQ2? MQ2 is an EverQuest development platform, with some default functionality. The development platform is so good, in fact, that it is second only to having the current EQ source code. Gone are the days for inline assembly (99% of it anyway) in MQ. Now we have a much cleaner and easier method of stealing! What was previously 10 lines of inline assembly, is now 1 line that looks like pEverQuest->dsp_chat(Line,Color);... MQ2 is plugin-based. There is a main DLL, MQ2Main, which contains the API needed to create plugins that do pretty much anything. Plugins simply include a \"MQ2Plugin.h\" header file and instantly gain access to everything in MQ2Main, all of the data structures, etc. To add custom commands, you use AddCommand. To add custom ParseMacroParameters parms, like $char, you use AddParm. To add a detour, you use AddDetour. To execute code on every MQ pulse, you make copy the plugin template function OnPulse(). And so on. It's incredibly simple. Many people have great ideas like bazaar functionality.. .. and many have things they do not want to share, and don't want to have to diff in their changes every time they get a new source. Now, instead of the cumbersome \"EQLib_Custom.cpp\", you simply make a plugin and it's independent. What sort of plugins...? Several features of \"old\" Macroquest are removed from the main system. Namely: FPS Limiter, Chat (including the windows), Map labelling, UI Labels, Item display mods, Telnet. Plugins can handle all of these and more. In fact, most of the features just listed already have been developed in plugin form. A little more testing by developers and things will be ready. Can my plugin use another plugin as an API? Sure. You probably shouldn't try to use things from plugins that arent designed to be API. Export things from the API plugin, and import them in the functional plugin, and make sure the functional plugin is using the .lib from the API plugin in addition to the others needed. What does this mean for us right NOW, not tomorrow when we can get this? MQ2 is a couple days behind as far as new features and fixes implemented in the \"old\" macroquest CVS. Anything implemented since a few days ago will have to be re-done into MQ2. I'm working fast to keep this delta as small as possible. WHEN DOES BETA START It should not be long before we have a zip for you to download for beta testing. Beta testing will last as long as it takes to get the plugins tested, which will not be long. Once the default set of plugins is working, we can call it a \"stable\" release.","title":"History Of MacroQuest"},{"location":"main/history-of-macroquest/#history-of-macroquest","text":"","title":"History Of MacroQuest"},{"location":"main/history-of-macroquest/#macroquest","text":"In 1999, a site called HackersQuest opened its doors with public forums. It is interesting to note that many popular projects (black hat as well as white hat) seem to have been born there, or at least been somehow associated. Of note: WyvernX (also known as Admin) of XUnleashed, Ratt of ShowEQ, just some dude of EQWindows, and Mapfiend of RPG-Toolbox were some of the first registered users at HackersQuest. Plazmic first publicly announced what would be come MacroQuest in a post dated May 11 th , 2002, the date he joined HackersQuest. I'm currently working on a truely intelligent macro subsystem for EverQuest that can run while EQ is NOT the forground process. I have a test character that has levelled from 1 to 5 in North Qeynos chasing snakes and other things around, runs back to the gate to rest when low on health, and head to the merchants when low on packspace. Another character was running around Shadowhaven making and selling Pickled Gator meat for a small profit (really not worth the time) Would anyone be interested in this type of a macro program? I'm not sure fully what Xylobot offers, but I figure background macroing would be a hit nevertheless. A poll attached to the post turned up 3 votes -- one for \"I'd rather use Xylobot\", one for \"Running a macro in the background would be cool\", and one for \"Sign me up for the beta!\". A little bit less than a month later he posted again, this time with a link to a new site at sourceforge . The project was called MacroQuest, and would later become the most successful and popular tool for automating EverQuest_._ This new utility was originally only available for Windows 2000 and XP users, but later adapted for Windows 98 and ME. It boasted new commands that could be used directly in EverQuest, with variables and a macro language -- and even came with some macros, including a fletching macro to make arrows. Note: Credit for writing the above text goes to Feonix762.","title":"MacroQuest"},{"location":"main/history-of-macroquest/#macroquest-2","text":"Macroquest2 was developed from the existing MacroQuest project, initially by Lax. You may find the original post about MacroQuest2 replacing MacroQuest here . Post subject: Nonbelievers of Lax soon to be disproven! In the last 3 days I have been working hard to redefine the future of Macroquest. The people who have seen the work this far are pleased, and the time draws near to actually allow public beta testing. Please note that nothing in the current MQ will be changed, or broken. This will be an entirely new distribution, from the same place. For now the project is dubbed MQ2. So what is MQ2? MQ2 is an EverQuest development platform, with some default functionality. The development platform is so good, in fact, that it is second only to having the current EQ source code. Gone are the days for inline assembly (99% of it anyway) in MQ. Now we have a much cleaner and easier method of stealing! What was previously 10 lines of inline assembly, is now 1 line that looks like pEverQuest->dsp_chat(Line,Color);... MQ2 is plugin-based. There is a main DLL, MQ2Main, which contains the API needed to create plugins that do pretty much anything. Plugins simply include a \"MQ2Plugin.h\" header file and instantly gain access to everything in MQ2Main, all of the data structures, etc. To add custom commands, you use AddCommand. To add custom ParseMacroParameters parms, like $char, you use AddParm. To add a detour, you use AddDetour. To execute code on every MQ pulse, you make copy the plugin template function OnPulse(). And so on. It's incredibly simple. Many people have great ideas like bazaar functionality.. .. and many have things they do not want to share, and don't want to have to diff in their changes every time they get a new source. Now, instead of the cumbersome \"EQLib_Custom.cpp\", you simply make a plugin and it's independent. What sort of plugins...? Several features of \"old\" Macroquest are removed from the main system. Namely: FPS Limiter, Chat (including the windows), Map labelling, UI Labels, Item display mods, Telnet. Plugins can handle all of these and more. In fact, most of the features just listed already have been developed in plugin form. A little more testing by developers and things will be ready. Can my plugin use another plugin as an API? Sure. You probably shouldn't try to use things from plugins that arent designed to be API. Export things from the API plugin, and import them in the functional plugin, and make sure the functional plugin is using the .lib from the API plugin in addition to the others needed. What does this mean for us right NOW, not tomorrow when we can get this? MQ2 is a couple days behind as far as new features and fixes implemented in the \"old\" macroquest CVS. Anything implemented since a few days ago will have to be re-done into MQ2. I'm working fast to keep this delta as small as possible. WHEN DOES BETA START It should not be long before we have a zip for you to download for beta testing. Beta testing will last as long as it takes to get the plugins tested, which will not be long. Once the default set of plugins is working, we can call it a \"stable\" release.","title":"MacroQuest 2"},{"location":"main/macroquest-launcher/","text":"MacroQuest Launcher \u00b6 Also known as MacroQuest.exe MacroQuest.exe is an open-source project and is known as the MacroQuest injector . Running MacroQuest.exe is the way to start MacroQuest.","title":"MacroQuest Launcher"},{"location":"main/macroquest-launcher/#macroquest-launcher","text":"Also known as MacroQuest.exe MacroQuest.exe is an open-source project and is known as the MacroQuest injector . Running MacroQuest.exe is the way to start MacroQuest.","title":"MacroQuest Launcher"},{"location":"main/macroquest.ini/","text":"MacroQuest.ini \u00b6 Overview \u00b6 MacroQuest.ini is the configuration file used by MacroQuest2. By default it is stored in the root MQ2 folder alongside macroquest.exe. INI Sections \u00b6 [MacroQuest] \u00b6 [Aliases] \u00b6 [Plugins] \u00b6 [Key Binds] \u00b6 [Substitutions] \u00b6 [SWho Filter] \u00b6 [Captions] \u00b6 [Caption Colors] \u00b6 [Filter Names] \u00b6 [AutoRun] \u00b6","title":"Configuration"},{"location":"main/macroquest.ini/#macroquestini","text":"","title":"MacroQuest.ini"},{"location":"main/macroquest.ini/#overview","text":"MacroQuest.ini is the configuration file used by MacroQuest2. By default it is stored in the root MQ2 folder alongside macroquest.exe.","title":"Overview"},{"location":"main/macroquest.ini/#ini-sections","text":"","title":"INI Sections"},{"location":"main/macroquest.ini/#macroquest","text":"","title":"[MacroQuest]"},{"location":"main/macroquest.ini/#aliases","text":"","title":"[Aliases]"},{"location":"main/macroquest.ini/#plugins","text":"","title":"[Plugins]"},{"location":"main/macroquest.ini/#key-binds","text":"","title":"[Key Binds]"},{"location":"main/macroquest.ini/#substitutions","text":"","title":"[Substitutions]"},{"location":"main/macroquest.ini/#swho-filter","text":"","title":"[SWho Filter]"},{"location":"main/macroquest.ini/#captions","text":"","title":"[Captions]"},{"location":"main/macroquest.ini/#caption-colors","text":"","title":"[Caption Colors]"},{"location":"main/macroquest.ini/#filter-names","text":"","title":"[Filter Names]"},{"location":"main/macroquest.ini/#autorun","text":"","title":"[AutoRun]"},{"location":"main/multiboxing/","text":"Multiboxing \u00b6 Multiboxing is not to be confused with botting . This article has been updated to describe the differences. Multiboxing describes the act of playing and controlling multiple characters at the same time, usually in an MMORPG. **Multiboxing, even with specialized Multiboxing Software like ISBoxer , is a EULA-safe activity as long as it is not combined with unsafe activity like botting or hacking.** See the main Multiboxing wiki article on isboxer.com for more information about licit multiboxing. Botting describes the act of automating a character, generally such that the character is capable of interpreting and responding to game events without human control. **Botting is prohibited by the EULA in EverQuest and other MMORPGs.** The remainder of the article continues to focus on botting and multi-botting, rather than multiboxing . Controlling bots \u00b6 Prior to MQ2 controlling bots was best handled by the creation of many specific hotkeys and moving between instances of EQ to click those hotkeys. MQ2 provides several macros such as AutoBot.mac and ModBot and a plugin or two like MQ2Melee that provide some ability for bots to act on their own. Communication between EQ instances \u00b6 There are several ways that bots can communicate between EQ instances. You can set up a shared chat channel in EQ. One character can write a formatted message to the channel that bots can read and respond. You can also use MQ2IRC , MQ2Telnet or MQ2EQBC that all keep the communication outside of EQ. Once your bots are setup and running you can use Custom UIs or MQ2HUD to see information about each of your bots. You can use EQ HotKeys to send commands to your bots.","title":"Multiboxing"},{"location":"main/multiboxing/#multiboxing","text":"Multiboxing is not to be confused with botting . This article has been updated to describe the differences. Multiboxing describes the act of playing and controlling multiple characters at the same time, usually in an MMORPG. **Multiboxing, even with specialized Multiboxing Software like ISBoxer , is a EULA-safe activity as long as it is not combined with unsafe activity like botting or hacking.** See the main Multiboxing wiki article on isboxer.com for more information about licit multiboxing. Botting describes the act of automating a character, generally such that the character is capable of interpreting and responding to game events without human control. **Botting is prohibited by the EULA in EverQuest and other MMORPGs.** The remainder of the article continues to focus on botting and multi-botting, rather than multiboxing .","title":"Multiboxing"},{"location":"main/multiboxing/#controlling-bots","text":"Prior to MQ2 controlling bots was best handled by the creation of many specific hotkeys and moving between instances of EQ to click those hotkeys. MQ2 provides several macros such as AutoBot.mac and ModBot and a plugin or two like MQ2Melee that provide some ability for bots to act on their own.","title":"Controlling bots"},{"location":"main/multiboxing/#communication-between-eq-instances","text":"There are several ways that bots can communicate between EQ instances. You can set up a shared chat channel in EQ. One character can write a formatted message to the channel that bots can read and respond. You can also use MQ2IRC , MQ2Telnet or MQ2EQBC that all keep the communication outside of EQ. Once your bots are setup and running you can use Custom UIs or MQ2HUD to see information about each of your bots. You can use EQ HotKeys to send commands to your bots.","title":"Communication between EQ instances"},{"location":"main/rules/","text":"Rules \u00b6 The most controversial rule we enforce on our forums has to do with Cheat Classifications . Many users feel that because using MacroQuest 2 in the first place is cheating, that all forms of cheating should be discussed and allowed on our forums. We disagree, and have drawn a line indicating what is allowed, and what is not allowed. The line is drawn at \"passive hacks\". There are serveral reasons for this. Self preservation -- The more blatant hacks that are exposed to the general EQ public, the greater the outcry for SoE to attack us. If SoE changes their antihacking efforts, it might take months for us to recover. Game preservation -- Some of us still play the game and it seems that active hacks always fall into the hands of idiots. Hack preservation -- Once the hack is out, everyone will abuse it and it will get nerfed.","title":"Rules"},{"location":"main/rules/#rules","text":"The most controversial rule we enforce on our forums has to do with Cheat Classifications . Many users feel that because using MacroQuest 2 in the first place is cheating, that all forms of cheating should be discussed and allowed on our forums. We disagree, and have drawn a line indicating what is allowed, and what is not allowed. The line is drawn at \"passive hacks\". There are serveral reasons for this. Self preservation -- The more blatant hacks that are exposed to the general EQ public, the greater the outcry for SoE to attack us. If SoE changes their antihacking efforts, it might take months for us to recover. Game preservation -- Some of us still play the game and it seems that active hacks always fall into the hands of idiots. Hack preservation -- Once the hack is out, everyone will abuse it and it will get nerfed.","title":"Rules"},{"location":"main/submodule-quick-list/","text":"Plugin Submodule Quick List \u00b6 A quick list of plugins that have been migrated and how to add them. Once they're all added, you can quickly update your plugins with: git pull --recurse-submodules . The solution file with all of these in it is here: MacroQuestCustom.sln (place this file in the src folder beside MacroQuest.sln) git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AASpend.git plugins/MQ2AASpend git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AdvPath.git plugins/MQ2AdvPath git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoAccept.git plugins/MQ2AutoAccept git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoCamp.git plugins/MQ2AutoCamp git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoClaim.git plugins/MQ2AutoClaim git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoForage.git plugins/MQ2AutoForage git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoGroup.git plugins/MQ2AutoGroup git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoLoot.git plugins/MQ2AutoLoot git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoLootSort.git plugins/MQ2AutoLootSort git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoSize.git plugins/MQ2AutoSize git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Bandolier.git plugins/MQ2Bandolier git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2BardSwap.git plugins/MQ2BardSwap git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Boxr.git plugins/MQ2Boxr git submodule add -b master -f https://github.com/brainiac/MQ2Camera.git plugins/MQ2Camera git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Cast.git plugins/MQ2Cast git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Clipboard.git plugins/MQ2Clipboard git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Collections.git plugins/MQ2Collections git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2CPULoad.git plugins/MQ2CPULoad git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Cursor.git plugins/MQ2Cursor git submodule add -b master -f https://github.com/dannuic/MQ2Dan.git plugins/MQ2Dan git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Debuffs.git plugins/MQ2Debuffs git submodule add -b master -f https://gitlab.com/alynel/MQ2Discord.git plugins/MQ2Discord git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2DPSAdv.git plugins/MQ2DPSAdv git submodule add -b master -f https://github.com/brainiac/MQ2EasyFind.git plugins/MQ2EasyFind git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2EQBC.git plugins/MQ2EQBC git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Events.git plugins/MQ2Events git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Exchange.git plugins/MQ2Exchange git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2FarmTest.git plugins/MQ2FarmTest git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2FeedMe.git plugins/MQ2FeedMe git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2GMCheck.git plugins/MQ2GMCheck git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2GroupInfo.git plugins/MQ2GroupInfo git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2HeadShot.git plugins/MQ2HeadShot git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2HUDMove.git plugins/MQ2HUDMove git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Ice.git plugins/MQ2Ice git submodule add -b main -f https://gitlab.com/Ortster/MQItemColor.git plugins/MQItemColor git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2ItemScore.git plugins/MQ2ItemScore git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2KillTracker.git plugins/MQ2KillTracker git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2KissTemplate.git plugins/MQ2KissTemplate git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2LinkDB.git plugins/MQ2LinkDB git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Log.git plugins/MQ2Log git submodule add -b master -f https://github.com/jessebevil/MQ2LootManager.git plugins/MQ2LootManager git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Medley.git plugins/MQ2Medley git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Melee.git plugins/MQ2Melee git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2MoveUtils.git plugins/MQ2MoveUtils git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2MyButtons.git plugins/MQ2MyButtons git submodule add -b master -f https://github.com/brainiac/MQ2Nav.git plugins/MQ2Nav git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2NetBots.git plugins/MQ2NetBots git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Notepad.git plugins/MQ2Notepad git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2OTD.git plugins/MQ2OTD git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Paranoid.git plugins/MQ2Paranoid git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2PlatTracker.git plugins/MQ2PlatTracker git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2PluginManager.git plugins/MQ2PluginManager git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2PortalSetter.git plugins/MQ2PortalSetter git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Posse.git plugins/MQ2Posse git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2RaidUtils.git plugins/MQ2RaidUtils git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Rand.git plugins/MQ2Rand git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2React.git plugins/MQ2React git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2RelayTells.git plugins/MQ2RelayTells git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Relocate.git plugins/MQ2Relocate git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Rewards.git plugins/MQ2Rewards git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Rez.git plugins/MQ2Rez git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Say.git plugins/MQ2Say git submodule add -b master -f https://gitlab.com/Knightly1/MQ2ShellCmd.git plugins/MQ2ShellCmd git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2SpawnMaster.git plugins/MQ2SpawnMaster git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Spawns.git plugins/MQ2Spawns git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2SpawnSort.git plugins/MQ2SpawnSort git submodule add -b master -f https://gitlab.com/Knightly1/MQ2SQLite.git plugins/MQ2SQLite git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Status.git plugins/MQ2Status git submodule add -b master -f https://github.com/MMOBugs/MQ2Targets.git plugins/MQ2Targets git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2ToolTip.git plugins/MQ2ToolTip git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2TributeManager.git plugins/MQ2TributeManager git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2TSTrophy.git plugins/MQ2TSTrophy git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Twist.git plugins/MQ2Twist git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Vendors.git plugins/MQ2Vendors git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2WorstHurt.git plugins/MQ2WorstHurt git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2XAssist.git plugins/MQ2XAssist git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2XPTracker.git plugins/MQ2XPTracker # Emu only git submodule add -b main -f https://github.com/Knightly1/MQMountClassicModels.git plugins/MQMountClassicModels","title":"Plugin Submodule Quick List"},{"location":"main/submodule-quick-list/#plugin-submodule-quick-list","text":"A quick list of plugins that have been migrated and how to add them. Once they're all added, you can quickly update your plugins with: git pull --recurse-submodules . The solution file with all of these in it is here: MacroQuestCustom.sln (place this file in the src folder beside MacroQuest.sln) git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AASpend.git plugins/MQ2AASpend git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AdvPath.git plugins/MQ2AdvPath git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoAccept.git plugins/MQ2AutoAccept git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoCamp.git plugins/MQ2AutoCamp git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoClaim.git plugins/MQ2AutoClaim git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoForage.git plugins/MQ2AutoForage git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoGroup.git plugins/MQ2AutoGroup git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoLoot.git plugins/MQ2AutoLoot git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoLootSort.git plugins/MQ2AutoLootSort git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2AutoSize.git plugins/MQ2AutoSize git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Bandolier.git plugins/MQ2Bandolier git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2BardSwap.git plugins/MQ2BardSwap git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Boxr.git plugins/MQ2Boxr git submodule add -b master -f https://github.com/brainiac/MQ2Camera.git plugins/MQ2Camera git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Cast.git plugins/MQ2Cast git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Clipboard.git plugins/MQ2Clipboard git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Collections.git plugins/MQ2Collections git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2CPULoad.git plugins/MQ2CPULoad git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Cursor.git plugins/MQ2Cursor git submodule add -b master -f https://github.com/dannuic/MQ2Dan.git plugins/MQ2Dan git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Debuffs.git plugins/MQ2Debuffs git submodule add -b master -f https://gitlab.com/alynel/MQ2Discord.git plugins/MQ2Discord git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2DPSAdv.git plugins/MQ2DPSAdv git submodule add -b master -f https://github.com/brainiac/MQ2EasyFind.git plugins/MQ2EasyFind git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2EQBC.git plugins/MQ2EQBC git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Events.git plugins/MQ2Events git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Exchange.git plugins/MQ2Exchange git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2FarmTest.git plugins/MQ2FarmTest git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2FeedMe.git plugins/MQ2FeedMe git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2GMCheck.git plugins/MQ2GMCheck git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2GroupInfo.git plugins/MQ2GroupInfo git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2HeadShot.git plugins/MQ2HeadShot git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2HUDMove.git plugins/MQ2HUDMove git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Ice.git plugins/MQ2Ice git submodule add -b main -f https://gitlab.com/Ortster/MQItemColor.git plugins/MQItemColor git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2ItemScore.git plugins/MQ2ItemScore git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2KillTracker.git plugins/MQ2KillTracker git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2KissTemplate.git plugins/MQ2KissTemplate git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2LinkDB.git plugins/MQ2LinkDB git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Log.git plugins/MQ2Log git submodule add -b master -f https://github.com/jessebevil/MQ2LootManager.git plugins/MQ2LootManager git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Medley.git plugins/MQ2Medley git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Melee.git plugins/MQ2Melee git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2MoveUtils.git plugins/MQ2MoveUtils git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2MyButtons.git plugins/MQ2MyButtons git submodule add -b master -f https://github.com/brainiac/MQ2Nav.git plugins/MQ2Nav git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2NetBots.git plugins/MQ2NetBots git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Notepad.git plugins/MQ2Notepad git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2OTD.git plugins/MQ2OTD git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Paranoid.git plugins/MQ2Paranoid git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2PlatTracker.git plugins/MQ2PlatTracker git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2PluginManager.git plugins/MQ2PluginManager git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2PortalSetter.git plugins/MQ2PortalSetter git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Posse.git plugins/MQ2Posse git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2RaidUtils.git plugins/MQ2RaidUtils git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Rand.git plugins/MQ2Rand git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2React.git plugins/MQ2React git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2RelayTells.git plugins/MQ2RelayTells git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Relocate.git plugins/MQ2Relocate git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Rewards.git plugins/MQ2Rewards git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Rez.git plugins/MQ2Rez git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Say.git plugins/MQ2Say git submodule add -b master -f https://gitlab.com/Knightly1/MQ2ShellCmd.git plugins/MQ2ShellCmd git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2SpawnMaster.git plugins/MQ2SpawnMaster git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Spawns.git plugins/MQ2Spawns git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2SpawnSort.git plugins/MQ2SpawnSort git submodule add -b master -f https://gitlab.com/Knightly1/MQ2SQLite.git plugins/MQ2SQLite git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Status.git plugins/MQ2Status git submodule add -b master -f https://github.com/MMOBugs/MQ2Targets.git plugins/MQ2Targets git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2ToolTip.git plugins/MQ2ToolTip git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2TributeManager.git plugins/MQ2TributeManager git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2TSTrophy.git plugins/MQ2TSTrophy git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Twist.git plugins/MQ2Twist git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Vendors.git plugins/MQ2Vendors git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2WorstHurt.git plugins/MQ2WorstHurt git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2XAssist.git plugins/MQ2XAssist git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2XPTracker.git plugins/MQ2XPTracker # Emu only git submodule add -b main -f https://github.com/Knightly1/MQMountClassicModels.git plugins/MQMountClassicModels","title":"Plugin Submodule Quick List"},{"location":"main/developing/","text":"Developing MacroQuest \u00b6 Warning This content is outdated or incomplete. placeholder","title":"Developing MacroQuest"},{"location":"main/developing/#developing-macroquest","text":"Warning This content is outdated or incomplete. placeholder","title":"Developing MacroQuest"},{"location":"main/developing/buff-predicates/","text":"Buff Predicates \u00b6 Added a system to simplify the code when searching for buffs. You can generate a function that takes a template buff (nominally of EQ_Affect , CachedBuff , or EQ_Spell* types) that can be passed into a function to count or get buffs. Four useful classes that inherit from SpellAttribute<T> were created: SpellAffect(eEQSPA, (optional) isIncrease = true) SpellCategory(eEQSPELLCAT) SpellSubCat(eEQSPELLCAT) SpellClassMask(PlayerClass...) These objects can be chained together with normal boolean operators (&&, ||, and the unary ! for SpellClassMask ) to create a predicate function. Use of this is something like: Example (C++) auto buffslot = GetSelfBuff ( SpellAffect ( SPA_AC , true ) && SpellCategory ( SPELLCAT_HP_BUFFS ) && ( SpellSubCat ( SPELLCAT_AEGOLISM ) || SpellSubCat ( SPELLCAT_SYMBOL )) && SpellClassMask ( Cleric )); As part of this change, the following functions have been deprecated, as their functionality has been replaced by this new system: GetTargetBuffByCategory() GetTargetBuffBySubCat() GetTargetBuffBySPA() HasCachedTargetBuffSubCat() HasCachedTargetBuffSPA() GetSelfBuffByCategory() GetSelfBuffBySubCat() GetSelfBuffBySPA() GetSelfShortBuffBySPA()","title":"Buff Predicates"},{"location":"main/developing/buff-predicates/#buff-predicates","text":"Added a system to simplify the code when searching for buffs. You can generate a function that takes a template buff (nominally of EQ_Affect , CachedBuff , or EQ_Spell* types) that can be passed into a function to count or get buffs. Four useful classes that inherit from SpellAttribute<T> were created: SpellAffect(eEQSPA, (optional) isIncrease = true) SpellCategory(eEQSPELLCAT) SpellSubCat(eEQSPELLCAT) SpellClassMask(PlayerClass...) These objects can be chained together with normal boolean operators (&&, ||, and the unary ! for SpellClassMask ) to create a predicate function. Use of this is something like: Example (C++) auto buffslot = GetSelfBuff ( SpellAffect ( SPA_AC , true ) && SpellCategory ( SPELLCAT_HP_BUFFS ) && ( SpellSubCat ( SPELLCAT_AEGOLISM ) || SpellSubCat ( SPELLCAT_SYMBOL )) && SpellClassMask ( Cleric )); As part of this change, the following functions have been deprecated, as their functionality has been replaced by this new system: GetTargetBuffByCategory() GetTargetBuffBySubCat() GetTargetBuffBySPA() HasCachedTargetBuffSubCat() HasCachedTargetBuffSPA() GetSelfBuffByCategory() GetSelfBuffBySubCat() GetSelfBuffBySPA() GetSelfShortBuffBySPA()","title":"Buff Predicates"},{"location":"main/developing/debugging/","text":"Crash To Desktop \u00b6 Warning this information is obsolete and needs to be revised! Necessary Information \u00b6 We need to know the actual error. The address, the address that was probably trying to be read, etc. Copy and paste from the debugger. We need to know if the crash itself was in EVERQUEST, or MACROQUEST. If it was in MacroQuest, the debugger will show you the source line. If not, it will show you some disassembly and an offset in eqgame.exe (most likely). a. Inside MacroQuest - The error information from #1 as well as the source line that caused the crash. If you can, copy and paste us the surrounding code block and let us know which source file it was in (e.g. MQ2Utilities.cpp) b. Inside EverQuest - The error information #1 including the offset in eqgame.exe, copy and paste a couple lines of the disassembly if you can, AND GET THE FUNCTION CALL STACK. If we get the function call stack, it may be VERY easy to fix the problem. If not, may be very DIFFICULT to fix the problem. If you cannot get this information, you might as well not report the bug. Debuggers \u00b6 Stuff you need to know about debuggers: How to attach a debugger to the process, and how to enable trapping of the 0xC0000005 exception (the majority of crash bugs) Where to find the debug spew as well as crash information (for info #1) when eqgame.exe crashes Where to find the source line (for info #2a only) when eqgame crashes inside macroquest Where to find the disassembly (for info #2b only) when eqgame crashes Where to find the function call stack (for info #2b only) when eqgame crashes Visual Studio .Net \u00b6 Debug menu->Processes option. In the \"Available Processes\" list select eqgame.exe. Click \"Attach\". In the \"Attach to Process\" box that pops up, select only \"Native\" in the list. Hit OK. The popup closes and the debugger attaches; click \"Close\" in the processes window. To enable trapping of the 0xC0000005 exception, open Debug->Exceptions (alternatively ctrl+alt+E). Expand \"Win32 Exceptions\". Select \"c0000005 Access violation\". Select the two \"Break into the debugger\" options. Hit OK. Debug spew can be found in the \"Output window\" by hitting ctrl+alt+O, or by going View->Other Windows->Output. The crash information will be displayed there when eqgame crashes. VS.NET will automatically point to the source file and put a green arrow by the source line that caused the problem, assuming macroquest was compiled on the computer you are running this on. If the disassembly does not show up, you can switch to the disassembly window by hitting alt+8 or by going debug->windows->disassembly The function call stack can be found in the toolbar that contains \"Program\", \"Thread\" and \"Stack Frame\". The call stack will be seen in the \"stack frame\" combo box. Pull it down and take note of the top few if not the entire list. Visual Studio 6 \u00b6 Build menu->Start Debug->Attach to process... Check the \"Show System Processes\" button. Select \"eqgame\" in the list. Hit OK. The c0000005 exception trapping can be enabled by going Debug->Exceptions. Select c0000005 Access violation. Click \"Stop always\". Hit \"Change\". Hit \"OK. Debug spew can be found in the \"Output window\" by hitting alt+2, or by going View->Output. The crash information will be displayed there when eqgame crashes. VS6 should automatically point to the source file and put a green arrow by the source line that caused the problem, assuming MacroQuest was compiled on the computer you are running this on. If the disassembly does not show up, you can switch to the disassembly window by hitting alt+8 or by going View->Debug Windows->Disassembly The function call stack can be found in the \"Call Stack\" window, found by pressing alt+7 or by going View->Debug Windows->Call Stack WINDBG \u00b6 Build MQ2 (nmake or VS are both fine) Make sure that the PDB files created have the same date as DLLs Download windbg ( http://www.microsoft.com/whdc/devtools/debugging/installx86.mspx#a ) and install it Make sure that the PDB files are in the same directory as where you start MQ. Start MQ, EQ, and windbg. (wineq or eqw will work too) On windbg, press F6 and choose eqgame.exe. Once it has broken in, press F5 to continue. If you don't press F5 quickly enough (a few seconds or so), there is a chance that you will be disconnected. This is because the game is stopped while you are in the debugger and it is not responding to the server. In EQ, take the steps that normally crash. When the debugger breaks in, goto to the command window of windbg Enter this command: .sympath SRV*c:\\winnt\\symbols* http://msdl.microsoft.com/download/symbols or Enter this command: !symfix Enter the command 'r' for registers. Enter the command 'kv' for stack backtrace. If the crash is in MQ code, you should see the source file open and show the line that caused the problem (if you compiled it on the same machine as you are running on). Alt-3 brings up the local variables. See if there is anything of interest there. Post the output from those commands here: http://www.macroquest.org/phpBB2/viewforum.php?f=28 . Visual Studio 2005 Express \u00b6 Tools->Attach to Process->Select instance of EQ to debug and click 'Attach\" Should automatically detect \"Native Code\". Debug->Exceptions expand the \"Win 32 Exceptions\" tree and select \"c0000005 Access violation\" and hit ok. When eqgame crashes the debug spew is in the output window usually in the upper right window, but can be foiund by Debug->Windows->Output. When EQ crashes VS2005 will popup a box with \"break\", \"ignore\", or \"continue\" to choose from. Select \"Break\" or all your debug information will be wiped out. It should then open up the source file and place an error next to the line it crashed at. Dissasembly can be found at alt+8, or Debug->Windows->Dissasembly. Call stack may pop up on its own in lower window as a tab, but if not alt+7 or debug->windows->Call Stack","title":"Debugging"},{"location":"main/developing/debugging/#crash-to-desktop","text":"Warning this information is obsolete and needs to be revised!","title":"Crash To Desktop"},{"location":"main/developing/debugging/#necessary-information","text":"We need to know the actual error. The address, the address that was probably trying to be read, etc. Copy and paste from the debugger. We need to know if the crash itself was in EVERQUEST, or MACROQUEST. If it was in MacroQuest, the debugger will show you the source line. If not, it will show you some disassembly and an offset in eqgame.exe (most likely). a. Inside MacroQuest - The error information from #1 as well as the source line that caused the crash. If you can, copy and paste us the surrounding code block and let us know which source file it was in (e.g. MQ2Utilities.cpp) b. Inside EverQuest - The error information #1 including the offset in eqgame.exe, copy and paste a couple lines of the disassembly if you can, AND GET THE FUNCTION CALL STACK. If we get the function call stack, it may be VERY easy to fix the problem. If not, may be very DIFFICULT to fix the problem. If you cannot get this information, you might as well not report the bug.","title":"Necessary Information"},{"location":"main/developing/debugging/#debuggers","text":"Stuff you need to know about debuggers: How to attach a debugger to the process, and how to enable trapping of the 0xC0000005 exception (the majority of crash bugs) Where to find the debug spew as well as crash information (for info #1) when eqgame.exe crashes Where to find the source line (for info #2a only) when eqgame crashes inside macroquest Where to find the disassembly (for info #2b only) when eqgame crashes Where to find the function call stack (for info #2b only) when eqgame crashes","title":"Debuggers"},{"location":"main/developing/debugging/#visual-studio-net","text":"Debug menu->Processes option. In the \"Available Processes\" list select eqgame.exe. Click \"Attach\". In the \"Attach to Process\" box that pops up, select only \"Native\" in the list. Hit OK. The popup closes and the debugger attaches; click \"Close\" in the processes window. To enable trapping of the 0xC0000005 exception, open Debug->Exceptions (alternatively ctrl+alt+E). Expand \"Win32 Exceptions\". Select \"c0000005 Access violation\". Select the two \"Break into the debugger\" options. Hit OK. Debug spew can be found in the \"Output window\" by hitting ctrl+alt+O, or by going View->Other Windows->Output. The crash information will be displayed there when eqgame crashes. VS.NET will automatically point to the source file and put a green arrow by the source line that caused the problem, assuming macroquest was compiled on the computer you are running this on. If the disassembly does not show up, you can switch to the disassembly window by hitting alt+8 or by going debug->windows->disassembly The function call stack can be found in the toolbar that contains \"Program\", \"Thread\" and \"Stack Frame\". The call stack will be seen in the \"stack frame\" combo box. Pull it down and take note of the top few if not the entire list.","title":"Visual Studio .Net"},{"location":"main/developing/debugging/#visual-studio-6","text":"Build menu->Start Debug->Attach to process... Check the \"Show System Processes\" button. Select \"eqgame\" in the list. Hit OK. The c0000005 exception trapping can be enabled by going Debug->Exceptions. Select c0000005 Access violation. Click \"Stop always\". Hit \"Change\". Hit \"OK. Debug spew can be found in the \"Output window\" by hitting alt+2, or by going View->Output. The crash information will be displayed there when eqgame crashes. VS6 should automatically point to the source file and put a green arrow by the source line that caused the problem, assuming MacroQuest was compiled on the computer you are running this on. If the disassembly does not show up, you can switch to the disassembly window by hitting alt+8 or by going View->Debug Windows->Disassembly The function call stack can be found in the \"Call Stack\" window, found by pressing alt+7 or by going View->Debug Windows->Call Stack","title":"Visual Studio 6"},{"location":"main/developing/debugging/#windbg","text":"Build MQ2 (nmake or VS are both fine) Make sure that the PDB files created have the same date as DLLs Download windbg ( http://www.microsoft.com/whdc/devtools/debugging/installx86.mspx#a ) and install it Make sure that the PDB files are in the same directory as where you start MQ. Start MQ, EQ, and windbg. (wineq or eqw will work too) On windbg, press F6 and choose eqgame.exe. Once it has broken in, press F5 to continue. If you don't press F5 quickly enough (a few seconds or so), there is a chance that you will be disconnected. This is because the game is stopped while you are in the debugger and it is not responding to the server. In EQ, take the steps that normally crash. When the debugger breaks in, goto to the command window of windbg Enter this command: .sympath SRV*c:\\winnt\\symbols* http://msdl.microsoft.com/download/symbols or Enter this command: !symfix Enter the command 'r' for registers. Enter the command 'kv' for stack backtrace. If the crash is in MQ code, you should see the source file open and show the line that caused the problem (if you compiled it on the same machine as you are running on). Alt-3 brings up the local variables. See if there is anything of interest there. Post the output from those commands here: http://www.macroquest.org/phpBB2/viewforum.php?f=28 .","title":"WINDBG"},{"location":"main/developing/debugging/#visual-studio-2005-express","text":"Tools->Attach to Process->Select instance of EQ to debug and click 'Attach\" Should automatically detect \"Native Code\". Debug->Exceptions expand the \"Win 32 Exceptions\" tree and select \"c0000005 Access violation\" and hit ok. When eqgame crashes the debug spew is in the output window usually in the upper right window, but can be foiund by Debug->Windows->Output. When EQ crashes VS2005 will popup a box with \"break\", \"ignore\", or \"continue\" to choose from. Select \"Break\" or all your debug information will be wiped out. It should then open up the source file and place an error next to the line it crashed at. Dissasembly can be found at alt+8, or Debug->Windows->Dissasembly. Call stack may pop up on its own in lower window as a tab, but if not alt+7 or debug->windows->Call Stack","title":"Visual Studio 2005 Express"},{"location":"main/developing/vcpkg/","text":"Using Vcpkg in MacroQuest \u00b6 MacroQuest incorporates the vcpkg library manager for C and C++ to make installing and maintaining third party libraries easier. Microsoft's vcpkg is a compile-from-source library manager that uses cmake to compile the library on the system it is needed. This has the benefits of both distributing a lib AND distributing source to make it easy to compile libs so that you don't have to worry about which directories to include and setup. For MacroQuest, we have slightly modified the way that vcpkg works. Installation of vcpkg \u00b6 While you can bootstrap and install vcpkg yourself and it will work, it is easier to let MacroQuest's build scripts handle this for you. The first time that you build MacroQuest from the sln file, vcpkg will bootstrap itself. From that point, the vcpkg.exe will exist in contrib/vcpkg and this is the file that can be used to search for packages. Because of the modifications for MacroQuest, you do not need to run vcpkg integrate or vcpkg integrate install. Installation of packages \u00b6 vcpkg_mq is setup to use custom manifests to install required packages. These manifests are automatically set with the static triplet to match your architecture. Including packages with your plugin or project requires that you create a manifest file next to your vcxproj. In that same directory, you'll create vcpkg_mq.txt with a list of the packages that your project requires. The packages are separated by line breaks and mimic the format that you would use on the command line to install a package. The triplet is only required if it is different from your architecture or if you don't want it to be static. For example, if you wanted yaml-cpp and sleepy-discord, but you wanted the websocketpp feature of sleepy-discord, your vcpkg_mq.txt manifest would look like: vcpkg_mq.txt yaml-cpp sleepy-discord[websocketpp] Next time that you build, these packages will be automatically installed. Inclusion of libraries in your project \u00b6 If you are building a plugin or one of the core projects, the include paths for headers and libraries are already set. Just #include \"yourlibrary.h\" as you normally would and add any .lib file to your dependency list. You do not need to add the paths unless your library installs to a non-standard location or a subdirectory. This can be done through the Visual Studio interface, but below is an example of what a vcxproj might look like when adding yaml-cpp to the list of dependencies: <ItemDefinitionGroup Condition= \"'$(Configuration)|$(Platform)'=='Debug|Win32'\" > <Link> <AdditionalDependencies> libyaml-cppmdd.lib;%(AdditionalDependencies) </AdditionalDependencies> </Link> </ItemDefinitionGroup> <ItemDefinitionGroup Condition= \"'$(Configuration)|$(Platform)'=='Release|Win32'\" > <Link> <AdditionalDependencies> libyaml-cppmd.lib;%(AdditionalDependencies) </AdditionalDependencies> </Link> </ItemDefinitionGroup> If you do need to set specific paths, make sure that those paths are relative. Updates \u00b6 When you update the repository, vcpkg_mq will update itself if you have git installed in your path. When the git hash for the submodule changes, vcpkg_mq will manage its own updates both for the executable and for any installed packages, there is nothing you need to do. To force an update of vcpkg, delete the following file: contrib/vcpkg/vcpkg_mq_last_bootstrap.txt This typically only needs to be done when the vcpkg repo is updated, but is also helpful for testing. Removing packages \u00b6 Prebuilt packages are not removed, only updated as needed. To uninstall a package, use vcpkg remove as you would normally.","title":"Using Vcpkg"},{"location":"main/developing/vcpkg/#using-vcpkg-in-macroquest","text":"MacroQuest incorporates the vcpkg library manager for C and C++ to make installing and maintaining third party libraries easier. Microsoft's vcpkg is a compile-from-source library manager that uses cmake to compile the library on the system it is needed. This has the benefits of both distributing a lib AND distributing source to make it easy to compile libs so that you don't have to worry about which directories to include and setup. For MacroQuest, we have slightly modified the way that vcpkg works.","title":"Using Vcpkg in MacroQuest"},{"location":"main/developing/vcpkg/#installation-of-vcpkg","text":"While you can bootstrap and install vcpkg yourself and it will work, it is easier to let MacroQuest's build scripts handle this for you. The first time that you build MacroQuest from the sln file, vcpkg will bootstrap itself. From that point, the vcpkg.exe will exist in contrib/vcpkg and this is the file that can be used to search for packages. Because of the modifications for MacroQuest, you do not need to run vcpkg integrate or vcpkg integrate install.","title":"Installation of vcpkg"},{"location":"main/developing/vcpkg/#installation-of-packages","text":"vcpkg_mq is setup to use custom manifests to install required packages. These manifests are automatically set with the static triplet to match your architecture. Including packages with your plugin or project requires that you create a manifest file next to your vcxproj. In that same directory, you'll create vcpkg_mq.txt with a list of the packages that your project requires. The packages are separated by line breaks and mimic the format that you would use on the command line to install a package. The triplet is only required if it is different from your architecture or if you don't want it to be static. For example, if you wanted yaml-cpp and sleepy-discord, but you wanted the websocketpp feature of sleepy-discord, your vcpkg_mq.txt manifest would look like: vcpkg_mq.txt yaml-cpp sleepy-discord[websocketpp] Next time that you build, these packages will be automatically installed.","title":"Installation of packages"},{"location":"main/developing/vcpkg/#inclusion-of-libraries-in-your-project","text":"If you are building a plugin or one of the core projects, the include paths for headers and libraries are already set. Just #include \"yourlibrary.h\" as you normally would and add any .lib file to your dependency list. You do not need to add the paths unless your library installs to a non-standard location or a subdirectory. This can be done through the Visual Studio interface, but below is an example of what a vcxproj might look like when adding yaml-cpp to the list of dependencies: <ItemDefinitionGroup Condition= \"'$(Configuration)|$(Platform)'=='Debug|Win32'\" > <Link> <AdditionalDependencies> libyaml-cppmdd.lib;%(AdditionalDependencies) </AdditionalDependencies> </Link> </ItemDefinitionGroup> <ItemDefinitionGroup Condition= \"'$(Configuration)|$(Platform)'=='Release|Win32'\" > <Link> <AdditionalDependencies> libyaml-cppmd.lib;%(AdditionalDependencies) </AdditionalDependencies> </Link> </ItemDefinitionGroup> If you do need to set specific paths, make sure that those paths are relative.","title":"Inclusion of libraries in your project"},{"location":"main/developing/vcpkg/#updates","text":"When you update the repository, vcpkg_mq will update itself if you have git installed in your path. When the git hash for the submodule changes, vcpkg_mq will manage its own updates both for the executable and for any installed packages, there is nothing you need to do. To force an update of vcpkg, delete the following file: contrib/vcpkg/vcpkg_mq_last_bootstrap.txt This typically only needs to be done when the vcpkg repo is updated, but is also helpful for testing.","title":"Updates"},{"location":"main/developing/vcpkg/#removing-packages","text":"Prebuilt packages are not removed, only updated as needed. To uninstall a package, use vcpkg remove as you would normally.","title":"Removing packages"},{"location":"main/features/anonymize/","text":"Anonymize \u00b6 Reason for Existence \u00b6 MQ2Anonymize has the singular purpose of filtering text displayed to the user. It is mostly useful in streaming/recording applications with the hope that any identifying information is not visible to others. This, of course, is an intractable problem so the best that we can do is filter words and hope it works. It is by no means a perfect safety tool and if the user cares about anonymity, should be used in service of supporting a larger anonymization strategy. Word of Warning \u00b6 This plugin will only filter in game . What that means is that any text at server select, character select, login, etc will not be filtered . Please make any considerations necessary to prevent visibility of the client outside of actual in-game experiences. How Your Plugin Can Anonymize \u00b6 MQ2Anonymize cannot control what plugin authors do, so instead we provide the API to anonymize any text that the plugin may render if anonymization is turned on . We are able to anonymize central points of text display (such as writing the the MQ2 console with WriteChatColor and variants of it), but anything that renders text outside those plugins will need to have explicit API calls to Anonymize() . For plugin authors: when in doubt make sure to test that anonymization works in game with your plugin before releasing it! API \u00b6 The API is very simple: CXStr& Anonymize(CXStr& Text) The signature is such that it satisfies 2 things: can be linked via C-style linkage for use externally, and can be called in-line. The function uses Text as a buffer and returns it as a result. This means that the plugin writer will need to allocate the CXStr passed to the appropriate scope (usually on the stack is fine), but since it's not a c-string, we don't need to support MAX_STRING allocations on the stack anymore. This also has the advantage of using EQ's native string class ( CXStr ) so it should be very easy to integrate. Example \u00b6 CXStr text ( text_to_anonymize ); text = Anonymize ( text ); End-User Instructions \u00b6 In order to enable anonymization, the end-user (player) needs to do some setup. Turning it on and off is simple: /mqanon will simply toggle the active state of anonymization. All interaction with this functionality is done with arguments to this command, here is a brief summary. Important Note: Due to the quirky nature of how EQ sets bone sprite text, we have implemented anon into the captions code. If you want name sprites to anonymize, you must turn captions on with /caption MQCaptions on ! Command Reference \u00b6 no arguments: toggle on/off state of anonymization /mqanon asterisk <name> add a filter for name and replace it with asterisks /mqanon class <name> add a filter for name and replace it with class information /mqanon custom <name> <text> add a filter for name and replace it with custom text /mqanon drop <name> remove the filter for name /mqanon alias <name> <alternate> add an alternate for name will use the same replacement strategy as name /mqanon unalias [name] <alternate> remove an alternate from name specifying the name is optional here /mqanon me [asterisk|class|me|none] set self anonymization to strategy if no argument is specified, will use the me strategy /mqanon group <asterisk|class|none> set group anonymization to strategy /mqanon fellowship <asterisk|class|none> set fellowship anonymization to strategy /mqanon guild <asterisk|class|none> set guild anonymization to strategy /mqanon raid <asterisk|class|none> set raid anonymization to strategy /mqanon save save the current configuration /mqanon load load the configuration from file for use when editing the config externally /mqanon [command] -h or /mqanon [command] --help display help commands that take arguments also allow this switch Replacement Priority \u00b6 Since the same character can exist in multiple groupings (guild/group/raid, etc) and each grouping can have a separate strategy, there is a defined order in which text replacing is done. That means that a name that exists in multiple groupings will use the highest priority replacement strategy. The priority is as follows: 1) Custom 2) Self 3) Group 4) Guild 5) Raid Replacement Strategies \u00b6 There are some pre-built strategies that are commonly used (as seen in the command reference): - asterisk - replaces the middle characters in the name with asterisks - Myname becomes M****e - class - replaces the name with \"[${{Spawn[pc {0}].Level}}] ${{Spawn[pc {0}].Race}} ${{Spawn[pc {0}].Class}} ${{Spawn[pc {0}].Type}}\" - note that this assumes a pc - me - replaces the name with \"[${Me.Level}] ${Me.Race} ${Me.Class} ${Me.Type}\" - only appropriate when anonymizing the client's character - where - this keyword allows completely generic anonymization - the string will be processed as macro text at the time of replacement","title":"Anonymize"},{"location":"main/features/anonymize/#anonymize","text":"","title":"Anonymize"},{"location":"main/features/anonymize/#reason-for-existence","text":"MQ2Anonymize has the singular purpose of filtering text displayed to the user. It is mostly useful in streaming/recording applications with the hope that any identifying information is not visible to others. This, of course, is an intractable problem so the best that we can do is filter words and hope it works. It is by no means a perfect safety tool and if the user cares about anonymity, should be used in service of supporting a larger anonymization strategy.","title":"Reason for Existence"},{"location":"main/features/anonymize/#word-of-warning","text":"This plugin will only filter in game . What that means is that any text at server select, character select, login, etc will not be filtered . Please make any considerations necessary to prevent visibility of the client outside of actual in-game experiences.","title":"Word of Warning"},{"location":"main/features/anonymize/#how-your-plugin-can-anonymize","text":"MQ2Anonymize cannot control what plugin authors do, so instead we provide the API to anonymize any text that the plugin may render if anonymization is turned on . We are able to anonymize central points of text display (such as writing the the MQ2 console with WriteChatColor and variants of it), but anything that renders text outside those plugins will need to have explicit API calls to Anonymize() . For plugin authors: when in doubt make sure to test that anonymization works in game with your plugin before releasing it!","title":"How Your Plugin Can Anonymize"},{"location":"main/features/anonymize/#api","text":"The API is very simple: CXStr& Anonymize(CXStr& Text) The signature is such that it satisfies 2 things: can be linked via C-style linkage for use externally, and can be called in-line. The function uses Text as a buffer and returns it as a result. This means that the plugin writer will need to allocate the CXStr passed to the appropriate scope (usually on the stack is fine), but since it's not a c-string, we don't need to support MAX_STRING allocations on the stack anymore. This also has the advantage of using EQ's native string class ( CXStr ) so it should be very easy to integrate.","title":"API"},{"location":"main/features/anonymize/#example","text":"CXStr text ( text_to_anonymize ); text = Anonymize ( text );","title":"Example"},{"location":"main/features/anonymize/#end-user-instructions","text":"In order to enable anonymization, the end-user (player) needs to do some setup. Turning it on and off is simple: /mqanon will simply toggle the active state of anonymization. All interaction with this functionality is done with arguments to this command, here is a brief summary. Important Note: Due to the quirky nature of how EQ sets bone sprite text, we have implemented anon into the captions code. If you want name sprites to anonymize, you must turn captions on with /caption MQCaptions on !","title":"End-User Instructions"},{"location":"main/features/anonymize/#command-reference","text":"no arguments: toggle on/off state of anonymization /mqanon asterisk <name> add a filter for name and replace it with asterisks /mqanon class <name> add a filter for name and replace it with class information /mqanon custom <name> <text> add a filter for name and replace it with custom text /mqanon drop <name> remove the filter for name /mqanon alias <name> <alternate> add an alternate for name will use the same replacement strategy as name /mqanon unalias [name] <alternate> remove an alternate from name specifying the name is optional here /mqanon me [asterisk|class|me|none] set self anonymization to strategy if no argument is specified, will use the me strategy /mqanon group <asterisk|class|none> set group anonymization to strategy /mqanon fellowship <asterisk|class|none> set fellowship anonymization to strategy /mqanon guild <asterisk|class|none> set guild anonymization to strategy /mqanon raid <asterisk|class|none> set raid anonymization to strategy /mqanon save save the current configuration /mqanon load load the configuration from file for use when editing the config externally /mqanon [command] -h or /mqanon [command] --help display help commands that take arguments also allow this switch","title":"Command Reference"},{"location":"main/features/anonymize/#replacement-priority","text":"Since the same character can exist in multiple groupings (guild/group/raid, etc) and each grouping can have a separate strategy, there is a defined order in which text replacing is done. That means that a name that exists in multiple groupings will use the highest priority replacement strategy. The priority is as follows: 1) Custom 2) Self 3) Group 4) Guild 5) Raid","title":"Replacement Priority"},{"location":"main/features/anonymize/#replacement-strategies","text":"There are some pre-built strategies that are commonly used (as seen in the command reference): - asterisk - replaces the middle characters in the name with asterisks - Myname becomes M****e - class - replaces the name with \"[${{Spawn[pc {0}].Level}}] ${{Spawn[pc {0}].Race}} ${{Spawn[pc {0}].Class}} ${{Spawn[pc {0}].Type}}\" - note that this assumes a pc - me - replaces the name with \"[${Me.Level}] ${Me.Race} ${Me.Class} ${Me.Type}\" - only appropriate when anonymizing the client's character - where - this keyword allows completely generic anonymization - the string will be processed as macro text at the time of replacement","title":"Replacement Strategies"},{"location":"main/features/cached-buffs/","text":"Cached Buffs \u00b6 -Previously Added: .CachedBuffCount to the spawn tlo. it returns -1 if no buffs are cached for the spawn or number of buffs cached. -Previously Added: .CachedBuff[x] to the spawn tlo where x is a spellid if its a number and a spell name if not. It returns a MQ2CachedBuffType. -Previously Added: .CachedBuff[#x] to the spawn tlo where #x is a buffslot between 1-97. It returns a MQ2CachedBuffType. -Previously Added: .CachedBuff[*x] to the spawn tlo where *x is a index (buffslots are not sorted). It returns a MQ2CachedBuffType. -Previously Added: .CachedBuff[^x] to the spawn tlo where ^x is a keyword. It returns a MQ2CachedBuffType. ^x keywords: Slowed Rooted Mezzed Crippled Maloed Tashed Snared and Beneficial -Using CachedBuff to get buff info on targets, group members etc, only requires you to target the entity once. after thats done, buffs are cached. -The upside is obviously that we don't have to target back and forth constantly.","title":"Cached Buffs"},{"location":"main/features/cached-buffs/#cached-buffs","text":"-Previously Added: .CachedBuffCount to the spawn tlo. it returns -1 if no buffs are cached for the spawn or number of buffs cached. -Previously Added: .CachedBuff[x] to the spawn tlo where x is a spellid if its a number and a spell name if not. It returns a MQ2CachedBuffType. -Previously Added: .CachedBuff[#x] to the spawn tlo where #x is a buffslot between 1-97. It returns a MQ2CachedBuffType. -Previously Added: .CachedBuff[*x] to the spawn tlo where *x is a index (buffslots are not sorted). It returns a MQ2CachedBuffType. -Previously Added: .CachedBuff[^x] to the spawn tlo where ^x is a keyword. It returns a MQ2CachedBuffType. ^x keywords: Slowed Rooted Mezzed Crippled Maloed Tashed Snared and Beneficial -Using CachedBuff to get buff info on targets, group members etc, only requires you to target the entity once. after thats done, buffs are cached. -The upside is obviously that we don't have to target back and forth constantly.","title":"Cached Buffs"},{"location":"main/features/cfg-files/","text":"CFG Files \u00b6 Introduction \u00b6 CFG files are files which contain commands to be run at certain times. The file must contain commands the same as you would use them normally. Each command will be executed in order, however there are NO macro blocks, events, etc, in a CFG file. CFG files may be present in .\\Configs, in . (Release), or potentially in the EverQuest directory. Note that the Release would be the same as wherever your Macroquest.ini is. You can manually load a CFG file while in-game using the /loadcfg command. The following CFG files will be loaded at the following times: autoexec.cfg Executed on the first pulse (when you reach character select, or when you are in game) charselect.cfg Executed when you reach character select ingame.cfg Executed when you enter the game zoned.cfg Executed after you finish zoning, but right before the map-specific config is executed server_character .cfg Executed when a certain character enters the world classname.cfg Executed when char of 'classname' enters world. e.g., bard.cfg mapshortname .cfg Executed when you zone into this zone pluginname -autoexec.cfg Executed when this plugin is loaded (after its initialization is complete) Examples \u00b6 Example use of zoned.cfg : * You have a macro that wants to summon a mount (or cast SoW, etc), but should only attempt this in outdoor zones. In zoned.cfg , set a global variable to automatically set the zone to outdoor. Modify your macro to attempt to summon a horse at some appropriate point and capture a failed summon via /doevents. Reset the value of the variable to indoor and it will hold until you zone again. The newbie zones on the Progression servers have 100s of corpses all over, creating a lot of lag. /if (${SpawnCount[corpse]}>150) /hidecorpse all Example of a CFG file entry for a specific character: /custombind add lootcorpse /custombind set lootcorpse /multiline ; /target corpse radius 17; /loot /bind lootcorpse f Example of a specific zone CFG: This will fix UI Corruption in The Devastion zone due to a massive (800+) number of spawns on the map.\\ devastation.cfg /maphide npc 49","title":"CFG Files"},{"location":"main/features/cfg-files/#cfg-files","text":"","title":"CFG Files"},{"location":"main/features/cfg-files/#introduction","text":"CFG files are files which contain commands to be run at certain times. The file must contain commands the same as you would use them normally. Each command will be executed in order, however there are NO macro blocks, events, etc, in a CFG file. CFG files may be present in .\\Configs, in . (Release), or potentially in the EverQuest directory. Note that the Release would be the same as wherever your Macroquest.ini is. You can manually load a CFG file while in-game using the /loadcfg command. The following CFG files will be loaded at the following times: autoexec.cfg Executed on the first pulse (when you reach character select, or when you are in game) charselect.cfg Executed when you reach character select ingame.cfg Executed when you enter the game zoned.cfg Executed after you finish zoning, but right before the map-specific config is executed server_character .cfg Executed when a certain character enters the world classname.cfg Executed when char of 'classname' enters world. e.g., bard.cfg mapshortname .cfg Executed when you zone into this zone pluginname -autoexec.cfg Executed when this plugin is loaded (after its initialization is complete)","title":"Introduction"},{"location":"main/features/cfg-files/#examples","text":"Example use of zoned.cfg : * You have a macro that wants to summon a mount (or cast SoW, etc), but should only attempt this in outdoor zones. In zoned.cfg , set a global variable to automatically set the zone to outdoor. Modify your macro to attempt to summon a horse at some appropriate point and capture a failed summon via /doevents. Reset the value of the variable to indoor and it will hold until you zone again. The newbie zones on the Progression servers have 100s of corpses all over, creating a lot of lag. /if (${SpawnCount[corpse]}>150) /hidecorpse all Example of a CFG file entry for a specific character: /custombind add lootcorpse /custombind set lootcorpse /multiline ; /target corpse radius 17; /loot /bind lootcorpse f Example of a specific zone CFG: This will fix UI Corruption in The Devastion zone due to a massive (800+) number of spawns on the map.\\ devastation.cfg /maphide npc 49","title":"Examples"},{"location":"main/features/custom-uis/","text":"Custom UIs \u00b6 Introduction \u00b6 MacroQuest has several built-in EQTypes that can be used to customize your UI. These EQTypes function the same as those in EQ, however allow you to display information in your UI that you normally would not be able to see. Alternatively, if there is no built-in EQType, you can use Tooltips to display custom MQ2 information (including data/variables from plugins). See the MQ2Labels page for the EQType definitions and examples. List of Custom UIs \u00b6 This is a list of the most popular Custom UIs: krust UI AYA Strike Quartz UI Frequency UI","title":"Custom UIs"},{"location":"main/features/custom-uis/#custom-uis","text":"","title":"Custom UIs"},{"location":"main/features/custom-uis/#introduction","text":"MacroQuest has several built-in EQTypes that can be used to customize your UI. These EQTypes function the same as those in EQ, however allow you to display information in your UI that you normally would not be able to see. Alternatively, if there is no built-in EQType, you can use Tooltips to display custom MQ2 information (including data/variables from plugins). See the MQ2Labels page for the EQType definitions and examples.","title":"Introduction"},{"location":"main/features/custom-uis/#list-of-custom-uis","text":"This is a list of the most popular Custom UIs: krust UI AYA Strike Quartz UI Frequency UI","title":"List of Custom UIs"},{"location":"main/features/framelimiter/","text":"Frame Limiter \u00b6 Frame limiter is a built-in feature of MacroQuest that helps control the resource usage of EverQuest by limiting how often the game renders frames.","title":"Frame Limiter"},{"location":"main/features/framelimiter/#frame-limiter","text":"Frame limiter is a built-in feature of MacroQuest that helps control the resource usage of EverQuest by limiting how often the game renders frames.","title":"Frame Limiter"},{"location":"main/features/namingspawn/","text":"NamingSpawn \u00b6 So this topic doesn't have it's own Forum catagory that I saw. So I'm creating a thread in Macro Mania because it's to do with coding logic that follows along the same guidelines as the MQ2HUD.ini in a way. I'm talking about the [Captions] section of Macroquest.ini that most people don't even know exists. The [Captions] section uses a little known TLO that's not echoable in MQ2 that inherits the \"Spawn\" datatype to display information on NPC's and players. It's the code that shows you the details of player/NPC/pet spawns in MQ2. Why do you care? Well recently I created a HUD that got a lot of positive attention. the logic used to create the HUD is a lot like the logic that will be used to explain the captions section of Macroquest.ini What can you do with [Captions] section of the Macroquest2.ini, well. See for yourself what I've done in a few minutes of coding using the ${NamingSpawn} TLO. This is an altered form of the [Captions] section of the macroquest.ini I've changed NPC= section to display the information I want to see. The ${NamingSpawn} inherits the spawn data type. https://macroquest.org/wiki/index.php/DataType:spawn While the wiki is certainly dated, just with that link alone you can find a lot of information. Basically anything you see in that list should be allowed to attach to the end of ${NamingSpawn}. You can test them with ${Target.datamember} IE: ${NamingSpawn.Body} will display \"Humaniod\", \"Animal\", \"Plant\", \"Undead\", etc so you can just look at the targets name and see if you can use your body specific spells/banestrike. I've added distance using ${NamingSpawn.Distance} and there is a lot more that you can add that I just haven't done yet. Limitations - You're only allowed two lines. So while you can \\n to go to a next line, you can only do this once as two lines is the maximum. Player1, Player2, Player3, etc......what does it mean? The players are directly attached to /shownames 1, 2, 3, 4 etc in game. This only applies to player information. So if you want /shownames 1 to not show anything at all, you can do something like. Player1= \\({If[\\) ,,]} Someone recently mentioned mobs Feigning Death in EQ. Well perhaps you want to add ${NamingSpawn.Feigning} to the display of NPC's? \\({If[\\) ,FD,]} will display FD if the NPC is FD. Want to know what spell a player is casting? Add \\({If[\\) , Casting: ${NamingSpawn.Casting},]} to the Player# you want to show that information. Great for PVP when you want to stop a player from casting a heal by stunning them but don't want to waste your bash/stun on a trivial spell that won't save their life. /evil grin. So as you can see this is a very powerful feature that most players either don't know exists or don't know how to edit. Got your captions setup already? type /captions anon on, then take a screenshot and post it along with the associated code! ~Chatwiththisname --Update-- [QUOTE=KingArthur;348346] And is there anyway to reload the settings other than a totally relog?? is there any slash command like /reload or something? Ty''' I completely overlooked this question. The answer is YES~! So if you make changes and want to test them you have to type /unload Then right click on the tray icon for MQ2 and hit \"Refresh injections\" That will effectively reload the MacroQuest.ini and update your [Captions] I don't know of any other way other than this. How does an ${If[,,,]} statement work? The following is how an ${If[,,,]} statement works. ${If[ThisIsTrue,DoThis,ElseDoThis]} How does a ${Select[,]} statement work? The following is how a ${Select[,]} statement works. ${Select[CompareThis,toThis,andThis,andThis]} if CompareThis is equal toThis, OR andThis, OR andThis then it evaluates TRUE. Example of a Select statement. ${Select[${NamingSpawn.ID},${Group.Member[1].ID},${Group.Member[2].ID},${Group.Member[3].ID}]} The above code evaluates true if the Spawn's ID is the first, second, or third group member in your group window. How do I nest an ${Select[,]} inside an ${If[,,,]} You would do ${If[${Select[CompareThis,toThis,andThis,andThis]},IfTrueDoThis,IfFalseDoThis]} What if I don't want it to do anything if it's false? You leave the Else portion blank. ${If[ThisIsTrue,DoThis,]} What can I do with ${NamingSpawn} NamingSpawn appears to inherit all members of ${Spawn[]} TLO. Therefore the following list should be available to ${NamingSpawn}. Some things may only apply to the current character you are playing. [spawn] Member1=ID Member2=Name Member3=Level Member4=X Member5=Y Member6=Z Member7=DistanceX Member8=DistanceY Member9=DistanceZ Member10=Distance Member11=Distance3D Member12=DistancePredict Member13=Next Member14=Prev Member15=Heading Member16=Speed Member17=Levitating Member18=Sneaking Member19=HeadingTo Member20=Light Member21=Body Member22=State Member23=CurrentHPs Member24=MaxHPs Member25=PctHPs Member26=Deity Member28=Type Member29=CleanName Member30=Surname Member31=Guild Member32=GuildStatus Member33=Master Member34=Pet Member35=Race Member36=Class Member38=Gender Member39=GM Member40=Height Member41=MaxRange Member42=AARank Member43=Casting Member44=Mount Member45=FeetWet Member46=Underwater Member48=Animation Member49=Holding Member50=Look Member51=N Member52=W Member53=U Member54=S Member55=E Member56=D Member57=DistanceN Member58=DistanceW Member59=DistanceU Member60=Invis Member61=Linkdead Member62=LFG Member63=Trader Member64=AFK Member65=ConColor Member67=Standing Member68=Sitting Member69=Ducking Member70=Feigning Member71=Binding Member72=Invited Member73=NearestSpawn Member74=MaxRangeTo Member75=DisplayName Member76=AATitle Member77=GroupLeader Member78=Mark Member79=Assist Member80=Anonymous Member81=Roleplaying Member82=LineOfSight Member83=HeadingToLoc Member84=Title Member85=Suffix Member86=Fleeing Member87=Named Member88=Buyer Member89=Moving Member90=StandState Member91=Dead Member92=Stunned Member93=Hovering Member94=CurrentMana Member95=MaxMana Member96=CurrentEndurance Member97=PctEndurance Member98=MaxEndurance Member99=Loc Member100=LocYX Member101=LocYXZ Member102=Owner Member103=Following Member104=Address Member105=Inviter Member106=MercID Member107=ContractorID Member108=PctMana Member109=Primary Member110=Secondary Member111=Equipment Member112=Targetable Member113=PlayerState Member114=Stuck Member115=Aggressive Member116=CanSplashLand Member117=IsBerserk Member118=pTouchingSwitch Member119=bShowHelm Member120=CorpseDragCount Member121=bBetaBuffed Member122=CombatSkillTicks Member123=FD Member124=InPvPArea Member125=bAlwaysShowAura Member126=GMRank Member127=WarCry Member128=IsPassenger Member129=LastCastTime Member130=DragNames Member131=DraggingPlayer Member132=bStationary Member133=BearingToTarget Member134=bTempPet Member135=HoldingAnimation Member136=Blind Member137=LastCastNum Member138=CollisionCounter Member139=CeilingHeightAtCurrLocation Member140=AssistName Member141=SeeInvis Member142=SpawnStatus Member143=bWaitingForPort Member144=EQLoc Member145=MQLoc Member146=TimeBeenDead Member147=FloorZ Member148=IsSummoned Member149=TargetOfTarget Mez Detection for NPC's. ${If[${Select[${NamingSpawn.Animation},110,26,32,71,72,111]} && ${Select[${NamingSpawn.ID},${Me.XTarget[1].ID},${Me.XTarget[2].ID},${Me.XTarget[3].ID},${Me.XTarget[4].ID},${Me.XTarget[5].ID},${Me.XTarget[5].ID},${Me.XTarget[6].ID},${Me.XTarget[7].ID},${Me.XTarget[8].ID},${Me.XTarget[9].ID},${Me.XTarget[10].ID},${Me.XTarget[11].ID},${Me.XTarget[12].ID},${Me.XTarget[13].ID},${Me.XTarget[14].ID},${Me.XTarget[15].ID}]},>>>Mezzed<<<,]} Group Role Detection for Main Tank, Main Assist, and Puller to go on Player# ${If[${NamingSpawn.ID}==${Group.MainAssist.ID}, MA,]} ${If[${NamingSpawn.ID}==${Group.MainTank.ID}, MT,]} ${If[${NamingSpawn.ID}==${Group.Puller.ID}, Puller,]}","title":"NamingSpawn"},{"location":"main/features/namingspawn/#namingspawn","text":"So this topic doesn't have it's own Forum catagory that I saw. So I'm creating a thread in Macro Mania because it's to do with coding logic that follows along the same guidelines as the MQ2HUD.ini in a way. I'm talking about the [Captions] section of Macroquest.ini that most people don't even know exists. The [Captions] section uses a little known TLO that's not echoable in MQ2 that inherits the \"Spawn\" datatype to display information on NPC's and players. It's the code that shows you the details of player/NPC/pet spawns in MQ2. Why do you care? Well recently I created a HUD that got a lot of positive attention. the logic used to create the HUD is a lot like the logic that will be used to explain the captions section of Macroquest.ini What can you do with [Captions] section of the Macroquest2.ini, well. See for yourself what I've done in a few minutes of coding using the ${NamingSpawn} TLO. This is an altered form of the [Captions] section of the macroquest.ini I've changed NPC= section to display the information I want to see. The ${NamingSpawn} inherits the spawn data type. https://macroquest.org/wiki/index.php/DataType:spawn While the wiki is certainly dated, just with that link alone you can find a lot of information. Basically anything you see in that list should be allowed to attach to the end of ${NamingSpawn}. You can test them with ${Target.datamember} IE: ${NamingSpawn.Body} will display \"Humaniod\", \"Animal\", \"Plant\", \"Undead\", etc so you can just look at the targets name and see if you can use your body specific spells/banestrike. I've added distance using ${NamingSpawn.Distance} and there is a lot more that you can add that I just haven't done yet. Limitations - You're only allowed two lines. So while you can \\n to go to a next line, you can only do this once as two lines is the maximum. Player1, Player2, Player3, etc......what does it mean? The players are directly attached to /shownames 1, 2, 3, 4 etc in game. This only applies to player information. So if you want /shownames 1 to not show anything at all, you can do something like. Player1= \\({If[\\) ,,]} Someone recently mentioned mobs Feigning Death in EQ. Well perhaps you want to add ${NamingSpawn.Feigning} to the display of NPC's? \\({If[\\) ,FD,]} will display FD if the NPC is FD. Want to know what spell a player is casting? Add \\({If[\\) , Casting: ${NamingSpawn.Casting},]} to the Player# you want to show that information. Great for PVP when you want to stop a player from casting a heal by stunning them but don't want to waste your bash/stun on a trivial spell that won't save their life. /evil grin. So as you can see this is a very powerful feature that most players either don't know exists or don't know how to edit. Got your captions setup already? type /captions anon on, then take a screenshot and post it along with the associated code! ~Chatwiththisname --Update-- [QUOTE=KingArthur;348346] And is there anyway to reload the settings other than a totally relog?? is there any slash command like /reload or something? Ty''' I completely overlooked this question. The answer is YES~! So if you make changes and want to test them you have to type /unload Then right click on the tray icon for MQ2 and hit \"Refresh injections\" That will effectively reload the MacroQuest.ini and update your [Captions] I don't know of any other way other than this. How does an ${If[,,,]} statement work? The following is how an ${If[,,,]} statement works. ${If[ThisIsTrue,DoThis,ElseDoThis]} How does a ${Select[,]} statement work? The following is how a ${Select[,]} statement works. ${Select[CompareThis,toThis,andThis,andThis]} if CompareThis is equal toThis, OR andThis, OR andThis then it evaluates TRUE. Example of a Select statement. ${Select[${NamingSpawn.ID},${Group.Member[1].ID},${Group.Member[2].ID},${Group.Member[3].ID}]} The above code evaluates true if the Spawn's ID is the first, second, or third group member in your group window. How do I nest an ${Select[,]} inside an ${If[,,,]} You would do ${If[${Select[CompareThis,toThis,andThis,andThis]},IfTrueDoThis,IfFalseDoThis]} What if I don't want it to do anything if it's false? You leave the Else portion blank. ${If[ThisIsTrue,DoThis,]} What can I do with ${NamingSpawn} NamingSpawn appears to inherit all members of ${Spawn[]} TLO. Therefore the following list should be available to ${NamingSpawn}. Some things may only apply to the current character you are playing. [spawn] Member1=ID Member2=Name Member3=Level Member4=X Member5=Y Member6=Z Member7=DistanceX Member8=DistanceY Member9=DistanceZ Member10=Distance Member11=Distance3D Member12=DistancePredict Member13=Next Member14=Prev Member15=Heading Member16=Speed Member17=Levitating Member18=Sneaking Member19=HeadingTo Member20=Light Member21=Body Member22=State Member23=CurrentHPs Member24=MaxHPs Member25=PctHPs Member26=Deity Member28=Type Member29=CleanName Member30=Surname Member31=Guild Member32=GuildStatus Member33=Master Member34=Pet Member35=Race Member36=Class Member38=Gender Member39=GM Member40=Height Member41=MaxRange Member42=AARank Member43=Casting Member44=Mount Member45=FeetWet Member46=Underwater Member48=Animation Member49=Holding Member50=Look Member51=N Member52=W Member53=U Member54=S Member55=E Member56=D Member57=DistanceN Member58=DistanceW Member59=DistanceU Member60=Invis Member61=Linkdead Member62=LFG Member63=Trader Member64=AFK Member65=ConColor Member67=Standing Member68=Sitting Member69=Ducking Member70=Feigning Member71=Binding Member72=Invited Member73=NearestSpawn Member74=MaxRangeTo Member75=DisplayName Member76=AATitle Member77=GroupLeader Member78=Mark Member79=Assist Member80=Anonymous Member81=Roleplaying Member82=LineOfSight Member83=HeadingToLoc Member84=Title Member85=Suffix Member86=Fleeing Member87=Named Member88=Buyer Member89=Moving Member90=StandState Member91=Dead Member92=Stunned Member93=Hovering Member94=CurrentMana Member95=MaxMana Member96=CurrentEndurance Member97=PctEndurance Member98=MaxEndurance Member99=Loc Member100=LocYX Member101=LocYXZ Member102=Owner Member103=Following Member104=Address Member105=Inviter Member106=MercID Member107=ContractorID Member108=PctMana Member109=Primary Member110=Secondary Member111=Equipment Member112=Targetable Member113=PlayerState Member114=Stuck Member115=Aggressive Member116=CanSplashLand Member117=IsBerserk Member118=pTouchingSwitch Member119=bShowHelm Member120=CorpseDragCount Member121=bBetaBuffed Member122=CombatSkillTicks Member123=FD Member124=InPvPArea Member125=bAlwaysShowAura Member126=GMRank Member127=WarCry Member128=IsPassenger Member129=LastCastTime Member130=DragNames Member131=DraggingPlayer Member132=bStationary Member133=BearingToTarget Member134=bTempPet Member135=HoldingAnimation Member136=Blind Member137=LastCastNum Member138=CollisionCounter Member139=CeilingHeightAtCurrLocation Member140=AssistName Member141=SeeInvis Member142=SpawnStatus Member143=bWaitingForPort Member144=EQLoc Member145=MQLoc Member146=TimeBeenDead Member147=FloorZ Member148=IsSummoned Member149=TargetOfTarget Mez Detection for NPC's. ${If[${Select[${NamingSpawn.Animation},110,26,32,71,72,111]} && ${Select[${NamingSpawn.ID},${Me.XTarget[1].ID},${Me.XTarget[2].ID},${Me.XTarget[3].ID},${Me.XTarget[4].ID},${Me.XTarget[5].ID},${Me.XTarget[5].ID},${Me.XTarget[6].ID},${Me.XTarget[7].ID},${Me.XTarget[8].ID},${Me.XTarget[9].ID},${Me.XTarget[10].ID},${Me.XTarget[11].ID},${Me.XTarget[12].ID},${Me.XTarget[13].ID},${Me.XTarget[14].ID},${Me.XTarget[15].ID}]},>>>Mezzed<<<,]} Group Role Detection for Main Tank, Main Assist, and Puller to go on Player# ${If[${NamingSpawn.ID}==${Group.MainAssist.ID}, MA,]} ${If[${NamingSpawn.ID}==${Group.MainTank.ID}, MT,]} ${If[${NamingSpawn.ID}==${Group.Puller.ID}, Puller,]}","title":"NamingSpawn"},{"location":"main/features/parser/","text":"Macro Parser Explained \u00b6 Explanation without Colors \u00b6 For this explanation, ${Me.Name} will return \"Knightly\" and ${Me.Class} will return \"Programancer.\" I'm also going to reference the Spawn ID of Knightly with ${Spawn[=Knightly].ID} returning \"007\" even though this is meaningless outside of the context of this explanation. The MacroQuest parser first parses from left to right to tokenize the variables that need to be parsed. That means in the command: /echo My name is ${Me.Name} and my class is ${Me.Class}. MacroQuest first parses ${Me.Name} so that the above becomes: My name is Knightly and my class is ${Me.Class}. And then parses ${Me.Class} so that the above returns: [MQ2] My name is Knightly and my class is Programancer. Nested queries are processed from right to left AFTER it has been tokenized. What this means is that in: /echo My ID is ${Spawn[=${Me.Name}].ID} and my class is ${Me.Class}. MacroQuest first tokenizes to get ${Spawn[=${Me.Name}].ID} and then parses ${Me.Name} becoming: My ID is ${Spawn[=Knightly].ID} and my class is ${Me.Class}. Since there are still items to parse it continues to the left to get: My ID is 007 and my class is ${Me.Class}. And finally returns: [MQ2] My ID is 007 and my class is Programancer The exception to this is when you override the parser with the ${Parse[]} functionality. This tells the parser to \"START HERE\" on any tokenized string. The outermost Parse function always wins. The number after the brace tells the Parse override how many times to iterate. This means in the command: /echo My ID is ${Parse[0,${Spawn[=${Me.Name}].ID}]} and my class is ${Me.Class}. MacroQuest first tokenizes to get ${Parse[0,${Spawn[=${Me.Name}].ID}]} and, because there is a ${Parse[]} that gets evaluated first. In this case, the parse is 0 which means \"do not parse\" so this becomes: My ID is ${Spawn[=${Me.Name}].ID} and my class is ${Me.Class}. And MacroQuest moves on to evaluating the ${Me.Class} token to output: [MQ2] My ID is ${Spawn[=${Me.Name}].ID} and my class is Programancer. You can use this to stop the parsing after one iteration: /echo My ID is ${Parse[1,${Spawn[=${Me.Name}].ID}]} and my class is ${Me.Class}. MacroQuest first tokenizes to get ${Parse[1,${Spawn[=${Me.Name}].ID}]} and because there is a ${Parse[]} that gets evaluated first. In this case, the parse is 1 which means \"parse one time\" so this becomes: My ID is ${Parse[0,${Spawn[=Knightly].ID}]} and my class is ${Me.Class}. Which then becomes: My ID is ${Spawn[=Knightly].ID} and my class is ${Me.Class}. And MacroQuest moves on to evaluating the ${Me.Class} token to output: [MQ2] My ID is ${Spawn[=Knightly].ID} and my class is Programancer. Setting this to higher numbers allows you to iterate as many times as necessary, but each iteration only parses the innermost variable. That means, too many iterations will end up as if you hadn't used ${Parse[]} at all. In this same scenario consider if we used 2 iterations: /echo My ID is ${Parse[2,${Spawn[=${Me.Name}].ID}]} and my class is ${Me.Class}. Again, starting with the first token ${Parse[2,${Spawn[=${Me.Name}].ID}]} the line becomes: My ID is ${Parse[1,${Spawn[=Knightly].ID}]} and my class is ${Me.Class}. And then the next iteration it becomes: My ID is ${Parse[0,007]} and my class is ${Me.Class}. And then: My ID is 007 and my class is ${Me.Class}. Until, finally, the Parse section is done and the parser moves on to ${Me.Class} and outputs: [MQ2] My ID is 007 and my class is Programancer. So you can see that in this case ${Parse[2,${Spawn[=${Me.Name}].ID}]} and ${Spawn[=${Me.Name}].ID} are functionally equivalent. Parse priority is also true for NESTED parses, so the outermost parse gets evaluated first and the action on that determines how the inner parses will get handled. Consider for example: /echo This test is ${Parse[0,${Parse[1,${Me.Name}]}]}. Which will return: [MQ2] This test is ${Parse[1,${Me.Name}]}. Changing the first 0 to a 1 to make the command: /echo This test is ${Parse[1,${Parse[1,${Me.Name}]}]}. Will become: This test is ${Parse[0,${Parse[0,Knightly]}]}. Which will return: [MQ2] This test is ${Parse[0,Knightly]} Finally, swapping the 0 and 1 from the first command will make the command: /echo This test is ${Parse[1,${Parse[0,${Me.Name}]}]}. Which will become: This test is ${Parse[0,${Me.Name}]}. And then output: [MQ2] This test is ${Me.Name} Explanation Colorized (requires LaTeX viewer) \u00b6 For this explanation, \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) will return \" \\( \\textcolor{teal}{\\text{Knightly}} \\) \" and \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) will return \" \\( \\textcolor{green}{\\text{Programancer}} \\) .\" I'm also going to reference the Spawn ID of Knightly with \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=Knightly].ID\\}}} \\) returning \" \\( \\textcolor{purple}{\\text{007}} \\) \" even though this is meaningless outside of the context of this explanation. The MacroQuest parser first parses from left to right to tokenize the variables that need to be parsed. That means in the command: /echo My name is \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . MacroQuest first parses \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) so that the above becomes: My name is \\( \\textcolor{teal}{\\text{Knightly}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . And then parses \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) so that the above returns: [MQ2] My name is Knightly and my class is Programancer. Nested queries are processed from right to left AFTER it has been tokenized. What this means is that in: /echo My ID is \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . MacroQuest first tokenizes to get \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) and then parses \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) becoming: My ID is \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{Knightly}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . Since there are still items to parse it continues to the left to get: My ID is \\( \\textcolor{purple}{\\text{007}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . And finally returns: [MQ2] My ID is 007 and my class is Programancer The exception to this is when you override the parser with the ( \\textcolor{red}{\\text{\\$\\{Parse[]\\}}} \\) functionality. This tells the parser to \"START HERE\" on any tokenized string. The outermost Parse function always wins. The number after the brace tells the Parse override how many times to iterate. This means in the command: /echo My ID is \\( \\textcolor{red}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . MacroQuest first tokenizes to get \\( \\textcolor{red}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and, because there is a \\( \\textcolor{red}{\\text{\\$\\{Parse[]\\}}} \\) that gets evaluated first. In this case, the parse is 0 which means \"do not parse\" so this becomes: My ID is \\( \\textcolor{red}{\\text{\\$\\{Spawn[=\\$\\{Me.Name\\}].ID\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . And MacroQuest moves on to evaluating the \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) token to output: [MQ2] My ID is ${Spawn[=${Me.Name}].ID} and my class is Programancer. You can use this to stop the parsing after one iteration: /echo My ID is \\( \\textcolor{red}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . MacroQuest first tokenizes to get \\( \\textcolor{red}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and because there is a \\( \\textcolor{red}{\\text{\\$\\{Parse[]\\}}} \\) that gets evaluated first. In this case, the parse is 1 which means \"parse one time\" so this becomes: My ID is \\( \\textcolor{red}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{Knightly}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . Which then becomes: My ID is \\( \\textcolor{red}{\\text{\\$\\{Spawn[=Knightly].ID\\}\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . And MacroQuest moves on to evaluating the \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) token to output: [MQ2] My ID is ${Spawn[=Knightly].ID} and my class is Programancer. Setting this to higher numbers allows you to iterate as many times as necessary, but each iteration only parses the innermost variable. That means, too many iterations will end up as if you hadn't used ( \\textcolor{red}{\\text{\\$\\{Parse[]\\}}} \\) at all. In this same scenario consider if we used 2 iterations: /echo My ID is \\( \\textcolor{red}{\\text{\\$\\{Parse[2,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . Again, starting with the first token \\( \\textcolor{red}{\\text{\\$\\{Parse[2,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) the line becomes: My ID is \\( \\textcolor{red}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{Knightly}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . And then the next iteration it becomes: My ID is \\( \\textcolor{red}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{purple}{\\text{007}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . And then: My ID is \\( \\textcolor{purple}{\\text{007}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . Until, finally, the Parse section is done and the parser moves on to \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) and outputs: [MQ2] My ID is 007 and my class is Programancer. So you can see that in this case \\( \\textcolor{red}{\\text{\\$\\{Parse[2,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) are functionally equivalent. Parse priority is also true for NESTED parses, so the outermost parse gets evaluated first and the action on that determines how the inner parses will get handled. Consider for example: /echo This test is \\( \\textcolor{orange}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{red}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) \\( \\textcolor{orange}{\\text{]\\}}} \\) . Which will return: [MQ2] This test is ${Parse[1,${Me.Name}]}. Changing the first 0 to a 1 to make the command: /echo This test is \\( \\textcolor{orange}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{red}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) \\( \\textcolor{orange}{\\text{]\\}}} \\) . Will become: This test is \\( \\textcolor{orange}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{red}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{teal}{\\text{Knightly}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) \\( \\textcolor{orange}{\\text{]\\}}} \\) . Which will return: [MQ2] This test is ${Parse[0,Knightly]} Finally, swapping the 0 and 1 from the first command will make the command: /echo This test is \\( \\textcolor{orange}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{red}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) \\( \\textcolor{orange}{\\text{]\\}}} \\) . Which will become: This test is \\( \\textcolor{red}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) . And then output: [MQ2] This test is ${Me.Name}","title":"Parser Walkthrough"},{"location":"main/features/parser/#macro-parser-explained","text":"","title":"Macro Parser Explained"},{"location":"main/features/parser/#explanation-without-colors","text":"For this explanation, ${Me.Name} will return \"Knightly\" and ${Me.Class} will return \"Programancer.\" I'm also going to reference the Spawn ID of Knightly with ${Spawn[=Knightly].ID} returning \"007\" even though this is meaningless outside of the context of this explanation. The MacroQuest parser first parses from left to right to tokenize the variables that need to be parsed. That means in the command: /echo My name is ${Me.Name} and my class is ${Me.Class}. MacroQuest first parses ${Me.Name} so that the above becomes: My name is Knightly and my class is ${Me.Class}. And then parses ${Me.Class} so that the above returns: [MQ2] My name is Knightly and my class is Programancer. Nested queries are processed from right to left AFTER it has been tokenized. What this means is that in: /echo My ID is ${Spawn[=${Me.Name}].ID} and my class is ${Me.Class}. MacroQuest first tokenizes to get ${Spawn[=${Me.Name}].ID} and then parses ${Me.Name} becoming: My ID is ${Spawn[=Knightly].ID} and my class is ${Me.Class}. Since there are still items to parse it continues to the left to get: My ID is 007 and my class is ${Me.Class}. And finally returns: [MQ2] My ID is 007 and my class is Programancer The exception to this is when you override the parser with the ${Parse[]} functionality. This tells the parser to \"START HERE\" on any tokenized string. The outermost Parse function always wins. The number after the brace tells the Parse override how many times to iterate. This means in the command: /echo My ID is ${Parse[0,${Spawn[=${Me.Name}].ID}]} and my class is ${Me.Class}. MacroQuest first tokenizes to get ${Parse[0,${Spawn[=${Me.Name}].ID}]} and, because there is a ${Parse[]} that gets evaluated first. In this case, the parse is 0 which means \"do not parse\" so this becomes: My ID is ${Spawn[=${Me.Name}].ID} and my class is ${Me.Class}. And MacroQuest moves on to evaluating the ${Me.Class} token to output: [MQ2] My ID is ${Spawn[=${Me.Name}].ID} and my class is Programancer. You can use this to stop the parsing after one iteration: /echo My ID is ${Parse[1,${Spawn[=${Me.Name}].ID}]} and my class is ${Me.Class}. MacroQuest first tokenizes to get ${Parse[1,${Spawn[=${Me.Name}].ID}]} and because there is a ${Parse[]} that gets evaluated first. In this case, the parse is 1 which means \"parse one time\" so this becomes: My ID is ${Parse[0,${Spawn[=Knightly].ID}]} and my class is ${Me.Class}. Which then becomes: My ID is ${Spawn[=Knightly].ID} and my class is ${Me.Class}. And MacroQuest moves on to evaluating the ${Me.Class} token to output: [MQ2] My ID is ${Spawn[=Knightly].ID} and my class is Programancer. Setting this to higher numbers allows you to iterate as many times as necessary, but each iteration only parses the innermost variable. That means, too many iterations will end up as if you hadn't used ${Parse[]} at all. In this same scenario consider if we used 2 iterations: /echo My ID is ${Parse[2,${Spawn[=${Me.Name}].ID}]} and my class is ${Me.Class}. Again, starting with the first token ${Parse[2,${Spawn[=${Me.Name}].ID}]} the line becomes: My ID is ${Parse[1,${Spawn[=Knightly].ID}]} and my class is ${Me.Class}. And then the next iteration it becomes: My ID is ${Parse[0,007]} and my class is ${Me.Class}. And then: My ID is 007 and my class is ${Me.Class}. Until, finally, the Parse section is done and the parser moves on to ${Me.Class} and outputs: [MQ2] My ID is 007 and my class is Programancer. So you can see that in this case ${Parse[2,${Spawn[=${Me.Name}].ID}]} and ${Spawn[=${Me.Name}].ID} are functionally equivalent. Parse priority is also true for NESTED parses, so the outermost parse gets evaluated first and the action on that determines how the inner parses will get handled. Consider for example: /echo This test is ${Parse[0,${Parse[1,${Me.Name}]}]}. Which will return: [MQ2] This test is ${Parse[1,${Me.Name}]}. Changing the first 0 to a 1 to make the command: /echo This test is ${Parse[1,${Parse[1,${Me.Name}]}]}. Will become: This test is ${Parse[0,${Parse[0,Knightly]}]}. Which will return: [MQ2] This test is ${Parse[0,Knightly]} Finally, swapping the 0 and 1 from the first command will make the command: /echo This test is ${Parse[1,${Parse[0,${Me.Name}]}]}. Which will become: This test is ${Parse[0,${Me.Name}]}. And then output: [MQ2] This test is ${Me.Name}","title":"Explanation without Colors"},{"location":"main/features/parser/#explanation-colorized-requires-latex-viewer","text":"For this explanation, \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) will return \" \\( \\textcolor{teal}{\\text{Knightly}} \\) \" and \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) will return \" \\( \\textcolor{green}{\\text{Programancer}} \\) .\" I'm also going to reference the Spawn ID of Knightly with \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=Knightly].ID\\}}} \\) returning \" \\( \\textcolor{purple}{\\text{007}} \\) \" even though this is meaningless outside of the context of this explanation. The MacroQuest parser first parses from left to right to tokenize the variables that need to be parsed. That means in the command: /echo My name is \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . MacroQuest first parses \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) so that the above becomes: My name is \\( \\textcolor{teal}{\\text{Knightly}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . And then parses \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) so that the above returns: [MQ2] My name is Knightly and my class is Programancer. Nested queries are processed from right to left AFTER it has been tokenized. What this means is that in: /echo My ID is \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . MacroQuest first tokenizes to get \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) and then parses \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) becoming: My ID is \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{Knightly}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . Since there are still items to parse it continues to the left to get: My ID is \\( \\textcolor{purple}{\\text{007}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . And finally returns: [MQ2] My ID is 007 and my class is Programancer The exception to this is when you override the parser with the ( \\textcolor{red}{\\text{\\$\\{Parse[]\\}}} \\) functionality. This tells the parser to \"START HERE\" on any tokenized string. The outermost Parse function always wins. The number after the brace tells the Parse override how many times to iterate. This means in the command: /echo My ID is \\( \\textcolor{red}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . MacroQuest first tokenizes to get \\( \\textcolor{red}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and, because there is a \\( \\textcolor{red}{\\text{\\$\\{Parse[]\\}}} \\) that gets evaluated first. In this case, the parse is 0 which means \"do not parse\" so this becomes: My ID is \\( \\textcolor{red}{\\text{\\$\\{Spawn[=\\$\\{Me.Name\\}].ID\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . And MacroQuest moves on to evaluating the \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) token to output: [MQ2] My ID is ${Spawn[=${Me.Name}].ID} and my class is Programancer. You can use this to stop the parsing after one iteration: /echo My ID is \\( \\textcolor{red}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . MacroQuest first tokenizes to get \\( \\textcolor{red}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and because there is a \\( \\textcolor{red}{\\text{\\$\\{Parse[]\\}}} \\) that gets evaluated first. In this case, the parse is 1 which means \"parse one time\" so this becomes: My ID is \\( \\textcolor{red}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{Knightly}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . Which then becomes: My ID is \\( \\textcolor{red}{\\text{\\$\\{Spawn[=Knightly].ID\\}\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . And MacroQuest moves on to evaluating the \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) token to output: [MQ2] My ID is ${Spawn[=Knightly].ID} and my class is Programancer. Setting this to higher numbers allows you to iterate as many times as necessary, but each iteration only parses the innermost variable. That means, too many iterations will end up as if you hadn't used ( \\textcolor{red}{\\text{\\$\\{Parse[]\\}}} \\) at all. In this same scenario consider if we used 2 iterations: /echo My ID is \\( \\textcolor{red}{\\text{\\$\\{Parse[2,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . Again, starting with the first token \\( \\textcolor{red}{\\text{\\$\\{Parse[2,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) the line becomes: My ID is \\( \\textcolor{red}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{Knightly}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . And then the next iteration it becomes: My ID is \\( \\textcolor{red}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{purple}{\\text{007}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . And then: My ID is \\( \\textcolor{purple}{\\text{007}} \\) and my class is \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) . Until, finally, the Parse section is done and the parser moves on to \\( \\textcolor{green}{\\text{\\$\\{Me.Class\\}}} \\) and outputs: [MQ2] My ID is 007 and my class is Programancer. So you can see that in this case \\( \\textcolor{red}{\\text{\\$\\{Parse[2,}} \\) \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) and \\( \\textcolor{purple}{\\text{\\$\\{Spawn[=}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{purple}{\\text{].ID\\}}} \\) are functionally equivalent. Parse priority is also true for NESTED parses, so the outermost parse gets evaluated first and the action on that determines how the inner parses will get handled. Consider for example: /echo This test is \\( \\textcolor{orange}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{red}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) \\( \\textcolor{orange}{\\text{]\\}}} \\) . Which will return: [MQ2] This test is ${Parse[1,${Me.Name}]}. Changing the first 0 to a 1 to make the command: /echo This test is \\( \\textcolor{orange}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{red}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) \\( \\textcolor{orange}{\\text{]\\}}} \\) . Will become: This test is \\( \\textcolor{orange}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{red}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{teal}{\\text{Knightly}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) \\( \\textcolor{orange}{\\text{]\\}}} \\) . Which will return: [MQ2] This test is ${Parse[0,Knightly]} Finally, swapping the 0 and 1 from the first command will make the command: /echo This test is \\( \\textcolor{orange}{\\text{\\$\\{Parse[1,}} \\) \\( \\textcolor{red}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) \\( \\textcolor{orange}{\\text{]\\}}} \\) . Which will become: This test is \\( \\textcolor{red}{\\text{\\$\\{Parse[0,}} \\) \\( \\textcolor{teal}{\\text{\\$\\{Me.Name\\}}} \\) \\( \\textcolor{red}{\\text{]\\}}} \\) . And then output: [MQ2] This test is ${Me.Name}","title":"Explanation Colorized (requires LaTeX viewer)"},{"location":"main/other-applications/eqemu/","text":"EQEmu \u00b6 General \u00b6 EQEmu (or EQEmulator) is a free (under GNU GPL) open source EverQuest server emulator. Using EQEmu you can create and run your own EverQuest server, or play on servers other people have created. Some servers play exactly like EQLive, while others have custom content such as zones, NPCs, equipment, allowing players to do what they want, or giving them access to GM commands. Use with MQ \u00b6 Currently, MQ does not have a standard build for EQEmu servers, but the work is on the schedule and will be coming soon. External links \u00b6 EQEmulator.net MQ2Emu.com MQEmulator.net ProjectEQ Fork Project 1999","title":"EQEmu"},{"location":"main/other-applications/eqemu/#eqemu","text":"","title":"EQEmu"},{"location":"main/other-applications/eqemu/#general","text":"EQEmu (or EQEmulator) is a free (under GNU GPL) open source EverQuest server emulator. Using EQEmu you can create and run your own EverQuest server, or play on servers other people have created. Some servers play exactly like EQLive, while others have custom content such as zones, NPCs, equipment, allowing players to do what they want, or giving them access to GM commands.","title":"General"},{"location":"main/other-applications/eqemu/#use-with-mq","text":"Currently, MQ does not have a standard build for EQEmu servers, but the work is on the schedule and will be coming soon.","title":"Use with MQ"},{"location":"main/other-applications/eqemu/#external-links","text":"EQEmulator.net MQ2Emu.com MQEmulator.net ProjectEQ Fork Project 1999","title":"External links"},{"location":"main/other-applications/text-editors/","text":"Text Editors \u00b6 Visual Studio Code \u00b6 Visual Studio Code ( Download ) VSCode Syntax Extension Crimson Editor \u00b6 Crimson Editor (Download) Crimson Editor Syntax Notepad++ \u00b6 Notepad++ (Download) Notepadplusplus Syntax File TextPad \u00b6 TextPad (Download) Textpad Syntax UltraEdit \u00b6 UltraEdit UltraEdit Syntax File","title":"Text Editors"},{"location":"main/other-applications/text-editors/#text-editors","text":"","title":"Text Editors"},{"location":"main/other-applications/text-editors/#visual-studio-code","text":"Visual Studio Code ( Download ) VSCode Syntax Extension","title":"Visual Studio Code"},{"location":"main/other-applications/text-editors/#crimson-editor","text":"Crimson Editor (Download) Crimson Editor Syntax","title":"Crimson Editor"},{"location":"main/other-applications/text-editors/#notepad","text":"Notepad++ (Download) Notepadplusplus Syntax File","title":"Notepad++"},{"location":"main/other-applications/text-editors/#textpad","text":"TextPad (Download) Textpad Syntax","title":"TextPad"},{"location":"main/other-applications/text-editors/#ultraedit","text":"UltraEdit UltraEdit Syntax File","title":"UltraEdit"},{"location":"main/other-applications/text-editors/notepadplusplus-syntax-file/","text":"Notepad++ Syntax File \u00b6 Pre-requesites \u00b6 Notepad++ version 8.2 or higher notepad-plus.sourceforge.net Installation \u00b6 Current Versions of notepad will allow you to import languages Open notepad++ and select language->User Defined language->Define your language Download the two language files: DarkModeMQLang.xml LightModeMQLang.xml To Select Dark Mode in Notepad++ Select Settings->Preferences->Dark Mode and select enable dark mode. I would only install one of the two but you can always remove/change the Ext. in User Defined Languages to disable them.","title":"Notepad++ Syntax File"},{"location":"main/other-applications/text-editors/notepadplusplus-syntax-file/#notepad-syntax-file","text":"","title":"Notepad++ Syntax File"},{"location":"main/other-applications/text-editors/notepadplusplus-syntax-file/#pre-requesites","text":"Notepad++ version 8.2 or higher notepad-plus.sourceforge.net","title":"Pre-requesites"},{"location":"main/other-applications/text-editors/notepadplusplus-syntax-file/#installation","text":"Current Versions of notepad will allow you to import languages Open notepad++ and select language->User Defined language->Define your language Download the two language files: DarkModeMQLang.xml LightModeMQLang.xml To Select Dark Mode in Notepad++ Select Settings->Preferences->Dark Mode and select enable dark mode. I would only install one of the two but you can always remove/change the Ext. in User Defined Languages to disable them.","title":"Installation"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/","text":"UltraEdit Syntax File \u00b6 Pre-requesites \u00b6 Windows 98, Windows Me, Windows 2000, Windows XP Ultraedit 11.10 or higher from www.ultraedit.com Installing the Highlighting Syntax Definition \u00b6 Open your WORDFILE.TXT file. It is installed in the same directory as UltraEdit, usually C:\\Program Files\\UltraEdit\\Wordfile.txt. Copy/paste the section below into the bottom of the file. Look for the next available section number to use. Section headings begin with /LXX\"Language\" where XX is a number from 1 to 20. Change the section number of the code below to the next available number and it's ready to use! Install Highlighting Syntax for UltraEdit v15+ \u00b6 Simply copy/paste the section below into a NEW .uew file in the %appdata%\\IDMComp\\UltraEdit\\wordfiles directory. Open UltraEdit (or close/reopen, new definitions are not available until UE is restarted.) Select: View > View as (Highlighting File Type) > [whatever you named the file as from step 1 above.] Highlighting Syntax Definition \u00b6 /L12\"MacroQuest2\" Line Comment Preceding Chars = [~*)|] Line Comment Num = 2| Block Comment On = |* Block Comment Off = *| Escape Char = \\ String Chars = \" File Extensions = MAC INC /Delimiters = .~ !@%^&*()+=|\\[]{}:;\"<>, ? /Function String = \"%Sub[ ^t*]+^([a-zA-Z_0-9]+^)\" /Indent Strings = \"/for\" \"} else {\" \"{\" /Unindent Strings = \"/next\" \"} else /\" \"} else {\" \"}\" /Open Brace Strings =\"{\" \"(\" \"[\" /Close Brace Strings =\"}\" \")\" \"]\" /Ignore Strings SOL = \"|*\" \"*|\" /Open Fold Strings = \"sub\" /Close Fold Strings = \"/return\" /C1\"Macroquest2 Commands\" // /aa /alert /alias /altkey // /banklist /beep /bind // /call /caption /captioncolor /cast /charinfo /cleanup /clearerrors /click /combine /ctrlkey /custombind // /defaulthud /delay /destroy /docommand /doors /doortarget /dosocial /drop /dumpbinds /declare /deletevar /doevents // /echo /endmacro // /face /filter /for // /goto // /help /hud /highlight // /identify /ini /itemnotify /items /itemtarget /if // /keepkeys /keypress // /loadcfg /loadspells /location /loginname /look /listmacros /loadhud // /memspell /mouseto /mqfont /mqlog /mqpause /multiline /macro /mapclick /mapfilter /maphide /mapnames /mapshow // /nomodkey /noparse /notify /next // /plugin /popup // /ranged /return // /sellitem /setautorun /shiftkey /skills /spew /squelch /substitute /seterror // /target /timed // /unload /updateitems // /varset /varcalc /vardata // /where /who /whofilter /whotarget /windows /windowstate // /stick /circle /moveto bool array downto else global int local main next outer string to timer /C2\"EQ Commands\" // /anon /a /afk /assist /attack /auction /autojoin /autosplit // /book /bug /b // /camp /cast /channel /chatfontsize /consent /corpse // /decline /disband /dismount /doability /duel /d /dynamiclights // /em /exit // /facepick /fastdrop /feedback /filter /follow /friend // /gems /gsay /g /guild /guildsay /guildinvite /guildremove /guilddelete /guildstatus /guildleader /guildwar /guildpeace /guildmotd // /help /hidecorpses /ignore /inspect /invite /invwinlabels // /language /lfg /log /location /loc /loot /lootnodrop // /mcicontrol /me /mousespeed /msg // /note // /ooc // /pet /petition /played // /quit // /random /reply /report /resetwindows /reverb /reversesound /roleplay // /serverfilter /shout /shownames /showspelleffects /sit /split /stopsong /surname // /targetgroupbuff /tell /time /trackfilter /trackplayers /tracksort // /usercolor // /vrdelay // /who /whotarget /wincolor /yell /C3\"EQ Emotes\" // /agree /amaze /apologize /applaud // /bite /bleed /blink /blush /boggle /bonk /bored /bow /brb /burp /bye // /cackle /calm /cheer /clap /comfort /congratulate /cough /cringe /cry /curious // /dance /drool /duck // /eye // /fidget /flex // /gasp /giggle /glare /grin /groan /grovel // /happy /hungry // /introduce // /jk // /kneel // /lost // /massage /moan /mourn // /nod /nudge // /panic /pat /peer /plead /point /ponder /purr /puzzle // /raise /ready /roar /rofl // /salute /shiver /shrug /sigh /smack /smirk /snarl /snicker /stare // /tap /tease /thank /thirsty // /veto // /wave /welcome /whine /whistle // /yawn /C4\"TLOs\" AltAbility Bool Corpse Cursor Defined FindItemBankCount FindItemBank FindItemCount FindItem Float Foreground FPS GameTime Ground GroupLeaderName GroupLeader Heading HUD If Ini Int InvSlot Irc LastSpawn MacroQuest Macro MapSpawn Math MaxFPS Merchant Me NearestSpawn Param0 Param1 Param2 Param3 Param4 Param5 Param6 Param7 Param8 Param9 P0 P1 P2 P3 P4 P5 P6 P7 P8 P9 Plugin Raid Select SelectedItem Skill SpawnCount Spawn Spell Switch Target Time Type Window Zone /C5\"Members\" A AAExp AAPoints AARank AARankRequired AATitle Abs Ability AbilityReady Accuracy AccuracyBonus Acos AERange AFK AltAbility AltAbilityReady AltAbilityTimer AltTimer AltTimerReady AGI AmIGroupLeader Animation Anonymous Arg Asin Assist Atan AttackBonus AttackSpeed AverageLevel AvoidanceBonus B Base Basic Bank bazaaritem BGColor Binding Body Book Buddy Buddies Buff BuildDate BuyPrice Calc CanCast CareerFavor Cash CashBank CastOnAnother CastOnYou Casting CastTime Centi CHA Child Channel Charges Children Class CleanName Checked ClericType Clock Combat CombatAbility CombatAbilityReady CombatAbilityTimer CombatEffectsBonus Compare CompareCS ConColor Container Connected Copper CopperBank Cos Cost Count CountBuffs CurrentFavor CurrentHPs CurrentMana CurrentWeight D DamageShieldBonus Dar Date Day DayOfWeek Dec Deci DefaultX DefaultY DefaultZ Degrees DegreesCCW Description DEX Diety Dimensions Distance DistanceX DistanceY DistanceZ Distance3D DistancePredict DistanceW DistanceN DistanceU DMGBonus Done DoTShieldBonus DruidType Ducking Duration E EffectType Enabled Endurance EnduranceBonus EnduranceRegen Error Exp FeedWet Feigning Find FirstChild FizzleTime Float Foreground FreeBuffSlots FreeInventory G GameState Gem Gender GM Gold GoldBank Group Gravity GroupAssistTarget Grouped GroupLeader GroupLeaderExp GroupLeaderPoints GroupList GroupMarkNPC GukEarned Guild GuildStatus Heading HeadingTo HeadingToLoc Height Hex Highlighted Holding Hour Hours HPBonus HPRegen HPRegenBouns HScrollMax HScrollPos HscrollPct HUD Hunger Int INT Inventory Invis Invited Items Item ItemID Language LargestFreeInventory LastCommand LastTell LastSeen LDoNPoints LDoNTheme Leader Left Length Level Levitating LFG Light LineOfSight LinkDead List LoginName Look Looter Looters LootTypeLore Lower Magic ManaBonus ManaRegen ManaRegenBonus Mark Markup Master MaxEndurance MaxRank Max MaxClip MaxHPs MaxMana MaxRange MaxRangeTo Member Members Mid Milli MinClip MinLevel Minute Minutes MirEarned MMEarned Mod Month Mount MouseX MouseY MouseOver Moving MQ2DataError MyCastTime N Name NearestSpawn NecromancerType Next Nick Night NoDrop NoRent Open Pack Params Parent PctAAExp PctEndurance PctExp PctGroupLeader PctHPS PctMana PctRaidLeaderExp Pet PetBuff PetClass Platinum PlatinumBank PlatinumShared Port Precision Prev Price PureCaster PushBack Quantity R Race RaidAssistTarget RaidLeader RaidLeaderExp RaidLeaderPoints RaidMarkNPC Rand Range RangedReady Rank RecastTime RecastType RecoveryTime RequiresAbility RequiresAbilityPoints Return ReuseTime ResistAdj Reverse Right Roleplaying RujEarned Running RunTime S ScreenID Second Seconds SecondsSinceMidnight SellPrice Server ShieldingBonus ShamanType ShortName Siblings Silver SilverBank Sin Sitting Size Skill SkillCapPre50 SkillCapPost50 SkyType Slot Spell Song Spawn Speed SpellReady SpellShieldBonus SpellType Sqrt STA Stack Stackable Standing StartingSkill State Status StatusID STR StrikeThroughBonus Stunned StunResistBonus Style Suffix Surname svCold svDisease svFire svMagic svPoison Swimming SyntaxError TakEarned Tan TargetOfTarget Target TargetType Team Text Thirst Ticks Time TimeHMS Time12 Time24 Token Tooltip TotalLevels TotalMinutes TotalSeconds Trader Tribute Type U Underwater Upper Value VScrollMax VScrollPos VScrollPos VScrollPct W WIS Weight WornSlots WornSlot X Y Year Z /C6\"Pre-Processor\" #turbo #define #include #event #chat Sub ** : Event_ /C7\"Inventory Slots\" ammo arms back charm chest face feet hands head leftear leftfinger leftwrist legs mainhand neck offhand ranged rightear rightfinger rightwrist shoulder waist ** bank bazaar enviro inspect loot merchant pack sharedbank trade /C8\"Operators\" .Equal .NotEqual .EqualCS .NotEqualCS .Not * + - = // % & > < = ! < > ~ \\ ^ $ | { } Using UltraEdit with the Syntax Highlighting \u00b6 What Highlighted Syntax Looks Like \u00b6 A simple example of a highlighted macro: <font color=\"green\">``\\| _- EventTest.mac -`</font>` `<font color=\"green\">` Demo for /doevents`</font>` `<font color=\"green\">` Chat and YouSay are handled every loop`</font>` `<font color=\"green\">` JudgesYou and Rude are only handled when YouSay`</font>` `<font color=\"green\">` calls /doevents for all_ \\|`</font>```` \\#turbo```````<font color=\"red\">````\\#chat`</font>` say #eventYouSay\"You say, '#1#'\" `\\#eventJudgesYou\"(\\#1\\#\\) judges you amiably\"`<font color=\"red\">```\\#event`</font>` Rude `<font color=\"purple\">`\"\\(\\#1\\#\\) makes a rude gesture\\#\\*\\#\"`</font>` ```Sub Main /declareConCheckint outer`</font>` `<font color=\"#ff0000\">`0`</font>` `<font color=\"red\">`:Loop`</font>` `<font color=\"blue\">`/doevents`</font>` `<font color=\"#0000ff\">`/delay`</font>` `<font color=\"#ff0000\">`2`</font>` `<font color=\"#0000ff\">`/goto`</font>` `<font color=\"#ff0000\">`:Loop`</font>` `<font color=\"#0000ff\">`/return`</font>` Sub Event_Chat `/echoYou got a${Param0}from${Param1}:`<font color=\"#ff0000\">```${`</font><font color=\"#0000ff\">`Param2`</font><font color=\"#ff0000\">`}`</font>` `<font color=\"#0000ff\">`/return`</font>` ```Sub Event_YouSay(stringline,stringfirstword) /echoin YouxxxSay${firstword} ${`</font>`firstword`<font color=\"#ff0000\">`.NotEqual`</font>`[Hail\\]`<font color=\"#ff0000\">`}`</font>` `<font color=\"#0000ff\">`/if`</font>` \\(`<font color=\"#ff0000\">`${`</font>`firstword`<font color=\"#ff0000\">`.NotEqual`</font>`\\[Hail]`<font color=\"#ff0000\">`}`</font>`) `<font color=\"#ff0000\">`{`</font>` `<font color=\"#0000ff\">`/varset`</font>` ConCheck `<font color=\"#ff0000\">`0`</font>` `<font color=\"#0000ff\">`/return`</font>` `<font color=\"#ff0000\">`}`</font>` `<font color=\"#0000ff\">`/echo`</font>` You con'd amiable `<font color=\"#ff0000\">`${`</font>`ConCheck`<font color=\"#ff0000\">`}`</font>` times since you last hailed.``````/return`` ````` `<font color=\"#ff0000\">`Sub Event\\_JudgesYou`</font>`(`<font color=\"#0000ff\">`string`</font>` line, `<font color=\"#0000ff\">`string`</font>` who)`````` /echoYou con'd amiable to${who}```````<font color=\"#0000ff\">````/varcalc`</font>` ConCheck `<font color=\"#ff0000\">`${`</font>`ConCheck}`<font color=\"#ff0000\">`+1`</font>` `<font color=\"#0000ff\">`/return`</font>` Sub Event_Rude(stringline,stringwho) `/echo`<font color=\"#ff0000\">```${`</font>`who`<font color=\"#ff0000\">`}`</font>` flipped someone off!``` /return You may want to change the default colors that UltraEdit chooses for the different categories. To do that navigate to: Advanced \u2192 Configuration \u2192 Editor Display \u2192 Syntax Highlighting and you can change the colors to your own choosing. Indenting \u00b6 Ultraedit will also perform automatic indenting for you. It will create an indent whenever it see you have an open \"{\" and will unindent whenever it see a closing \"}\". You can also manually reformat any section by highlighting it then choosing Format \u2192 Indent Section from the UltraEdit Menu. Note: There is currently one bug in how indenting works. It currently does not properly unindent /elseif statements. UltraEdit will also not bring the final \"}\" back to the beginning of the first if like it is supposed to. Example 1: What UltraEdit Should do Sub ChatOut(string ChatTarget,string ChatText) /if (${ChatIn.Equal[tell]}) { /tell ${ChatInChannel} ${ChatText} } else /if (${ChatIn.Equal[Group]}) { /g ${ChatText} } else /if (${ChatIn.Equal[Raid]}) { /rs ${ChatText} } else /if (${ChatIn.Equal[Say]}) { /say ${ChatText} } else /if (${ChatIn.Equal[Channel]}) { /chat #${ChatInChannel} ${ChatText} } else /if (${ChatIn.Equal[IRC]}) { /irc ${ChatText} } else /if (${ChatIn.Equal[GUILD]}) { /gu ${ChatText} } else /if (${ChatIn.Equal[Auction]}) { /auc ${ChatText} } else { /e Incorrect Arguments: Chatin: ${ChatIn} ChatinChanel: ${ChatinChannel} /call ShowHelp } /return Example 2: What UltraEdit Does Sub ChatOut(string ChatTarget,string ChatText) /if (${ChatIn.Equal[tell]}) { /tell ${ChatInChannel} ${ChatText} } else /if (${ChatIn.Equal[Group]}) { /g ${ChatText} } else /if (${ChatIn.Equal[Raid]}) { /rs ${ChatText} } else /if (${ChatIn.Equal[Say]}) { /say ${ChatText} } else /if (${ChatIn.Equal[Channel]}) { /chat #${ChatInChannel} ${ChatText} } else /if (${ChatIn.Equal[IRC]}) { /irc ${ChatText} } else /if (${ChatIn.Equal[GUILD]}) { /gu ${ChatText} } else /if (${ChatIn.Equal[Auction]}) { /auc ${ChatText} } else { /e Incorrect Arguments: Chatin: ${ChatIn} ChatinChanel: ${ChatinChannel} /call ShowHelp } /return","title":"UltraEdit Syntax File"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#ultraedit-syntax-file","text":"","title":"UltraEdit Syntax File"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#pre-requesites","text":"Windows 98, Windows Me, Windows 2000, Windows XP Ultraedit 11.10 or higher from www.ultraedit.com","title":"Pre-requesites"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#installing-the-highlighting-syntax-definition","text":"Open your WORDFILE.TXT file. It is installed in the same directory as UltraEdit, usually C:\\Program Files\\UltraEdit\\Wordfile.txt. Copy/paste the section below into the bottom of the file. Look for the next available section number to use. Section headings begin with /LXX\"Language\" where XX is a number from 1 to 20. Change the section number of the code below to the next available number and it's ready to use!","title":"Installing the Highlighting Syntax Definition"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#install-highlighting-syntax-for-ultraedit-v15","text":"Simply copy/paste the section below into a NEW .uew file in the %appdata%\\IDMComp\\UltraEdit\\wordfiles directory. Open UltraEdit (or close/reopen, new definitions are not available until UE is restarted.) Select: View > View as (Highlighting File Type) > [whatever you named the file as from step 1 above.]","title":"Install Highlighting Syntax for UltraEdit v15+"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#highlighting-syntax-definition","text":"/L12\"MacroQuest2\" Line Comment Preceding Chars = [~*)|] Line Comment Num = 2| Block Comment On = |* Block Comment Off = *| Escape Char = \\ String Chars = \" File Extensions = MAC INC /Delimiters = .~ !@%^&*()+=|\\[]{}:;\"<>, ? /Function String = \"%Sub[ ^t*]+^([a-zA-Z_0-9]+^)\" /Indent Strings = \"/for\" \"} else {\" \"{\" /Unindent Strings = \"/next\" \"} else /\" \"} else {\" \"}\" /Open Brace Strings =\"{\" \"(\" \"[\" /Close Brace Strings =\"}\" \")\" \"]\" /Ignore Strings SOL = \"|*\" \"*|\" /Open Fold Strings = \"sub\" /Close Fold Strings = \"/return\" /C1\"Macroquest2 Commands\" // /aa /alert /alias /altkey // /banklist /beep /bind // /call /caption /captioncolor /cast /charinfo /cleanup /clearerrors /click /combine /ctrlkey /custombind // /defaulthud /delay /destroy /docommand /doors /doortarget /dosocial /drop /dumpbinds /declare /deletevar /doevents // /echo /endmacro // /face /filter /for // /goto // /help /hud /highlight // /identify /ini /itemnotify /items /itemtarget /if // /keepkeys /keypress // /loadcfg /loadspells /location /loginname /look /listmacros /loadhud // /memspell /mouseto /mqfont /mqlog /mqpause /multiline /macro /mapclick /mapfilter /maphide /mapnames /mapshow // /nomodkey /noparse /notify /next // /plugin /popup // /ranged /return // /sellitem /setautorun /shiftkey /skills /spew /squelch /substitute /seterror // /target /timed // /unload /updateitems // /varset /varcalc /vardata // /where /who /whofilter /whotarget /windows /windowstate // /stick /circle /moveto bool array downto else global int local main next outer string to timer /C2\"EQ Commands\" // /anon /a /afk /assist /attack /auction /autojoin /autosplit // /book /bug /b // /camp /cast /channel /chatfontsize /consent /corpse // /decline /disband /dismount /doability /duel /d /dynamiclights // /em /exit // /facepick /fastdrop /feedback /filter /follow /friend // /gems /gsay /g /guild /guildsay /guildinvite /guildremove /guilddelete /guildstatus /guildleader /guildwar /guildpeace /guildmotd // /help /hidecorpses /ignore /inspect /invite /invwinlabels // /language /lfg /log /location /loc /loot /lootnodrop // /mcicontrol /me /mousespeed /msg // /note // /ooc // /pet /petition /played // /quit // /random /reply /report /resetwindows /reverb /reversesound /roleplay // /serverfilter /shout /shownames /showspelleffects /sit /split /stopsong /surname // /targetgroupbuff /tell /time /trackfilter /trackplayers /tracksort // /usercolor // /vrdelay // /who /whotarget /wincolor /yell /C3\"EQ Emotes\" // /agree /amaze /apologize /applaud // /bite /bleed /blink /blush /boggle /bonk /bored /bow /brb /burp /bye // /cackle /calm /cheer /clap /comfort /congratulate /cough /cringe /cry /curious // /dance /drool /duck // /eye // /fidget /flex // /gasp /giggle /glare /grin /groan /grovel // /happy /hungry // /introduce // /jk // /kneel // /lost // /massage /moan /mourn // /nod /nudge // /panic /pat /peer /plead /point /ponder /purr /puzzle // /raise /ready /roar /rofl // /salute /shiver /shrug /sigh /smack /smirk /snarl /snicker /stare // /tap /tease /thank /thirsty // /veto // /wave /welcome /whine /whistle // /yawn /C4\"TLOs\" AltAbility Bool Corpse Cursor Defined FindItemBankCount FindItemBank FindItemCount FindItem Float Foreground FPS GameTime Ground GroupLeaderName GroupLeader Heading HUD If Ini Int InvSlot Irc LastSpawn MacroQuest Macro MapSpawn Math MaxFPS Merchant Me NearestSpawn Param0 Param1 Param2 Param3 Param4 Param5 Param6 Param7 Param8 Param9 P0 P1 P2 P3 P4 P5 P6 P7 P8 P9 Plugin Raid Select SelectedItem Skill SpawnCount Spawn Spell Switch Target Time Type Window Zone /C5\"Members\" A AAExp AAPoints AARank AARankRequired AATitle Abs Ability AbilityReady Accuracy AccuracyBonus Acos AERange AFK AltAbility AltAbilityReady AltAbilityTimer AltTimer AltTimerReady AGI AmIGroupLeader Animation Anonymous Arg Asin Assist Atan AttackBonus AttackSpeed AverageLevel AvoidanceBonus B Base Basic Bank bazaaritem BGColor Binding Body Book Buddy Buddies Buff BuildDate BuyPrice Calc CanCast CareerFavor Cash CashBank CastOnAnother CastOnYou Casting CastTime Centi CHA Child Channel Charges Children Class CleanName Checked ClericType Clock Combat CombatAbility CombatAbilityReady CombatAbilityTimer CombatEffectsBonus Compare CompareCS ConColor Container Connected Copper CopperBank Cos Cost Count CountBuffs CurrentFavor CurrentHPs CurrentMana CurrentWeight D DamageShieldBonus Dar Date Day DayOfWeek Dec Deci DefaultX DefaultY DefaultZ Degrees DegreesCCW Description DEX Diety Dimensions Distance DistanceX DistanceY DistanceZ Distance3D DistancePredict DistanceW DistanceN DistanceU DMGBonus Done DoTShieldBonus DruidType Ducking Duration E EffectType Enabled Endurance EnduranceBonus EnduranceRegen Error Exp FeedWet Feigning Find FirstChild FizzleTime Float Foreground FreeBuffSlots FreeInventory G GameState Gem Gender GM Gold GoldBank Group Gravity GroupAssistTarget Grouped GroupLeader GroupLeaderExp GroupLeaderPoints GroupList GroupMarkNPC GukEarned Guild GuildStatus Heading HeadingTo HeadingToLoc Height Hex Highlighted Holding Hour Hours HPBonus HPRegen HPRegenBouns HScrollMax HScrollPos HscrollPct HUD Hunger Int INT Inventory Invis Invited Items Item ItemID Language LargestFreeInventory LastCommand LastTell LastSeen LDoNPoints LDoNTheme Leader Left Length Level Levitating LFG Light LineOfSight LinkDead List LoginName Look Looter Looters LootTypeLore Lower Magic ManaBonus ManaRegen ManaRegenBonus Mark Markup Master MaxEndurance MaxRank Max MaxClip MaxHPs MaxMana MaxRange MaxRangeTo Member Members Mid Milli MinClip MinLevel Minute Minutes MirEarned MMEarned Mod Month Mount MouseX MouseY MouseOver Moving MQ2DataError MyCastTime N Name NearestSpawn NecromancerType Next Nick Night NoDrop NoRent Open Pack Params Parent PctAAExp PctEndurance PctExp PctGroupLeader PctHPS PctMana PctRaidLeaderExp Pet PetBuff PetClass Platinum PlatinumBank PlatinumShared Port Precision Prev Price PureCaster PushBack Quantity R Race RaidAssistTarget RaidLeader RaidLeaderExp RaidLeaderPoints RaidMarkNPC Rand Range RangedReady Rank RecastTime RecastType RecoveryTime RequiresAbility RequiresAbilityPoints Return ReuseTime ResistAdj Reverse Right Roleplaying RujEarned Running RunTime S ScreenID Second Seconds SecondsSinceMidnight SellPrice Server ShieldingBonus ShamanType ShortName Siblings Silver SilverBank Sin Sitting Size Skill SkillCapPre50 SkillCapPost50 SkyType Slot Spell Song Spawn Speed SpellReady SpellShieldBonus SpellType Sqrt STA Stack Stackable Standing StartingSkill State Status StatusID STR StrikeThroughBonus Stunned StunResistBonus Style Suffix Surname svCold svDisease svFire svMagic svPoison Swimming SyntaxError TakEarned Tan TargetOfTarget Target TargetType Team Text Thirst Ticks Time TimeHMS Time12 Time24 Token Tooltip TotalLevels TotalMinutes TotalSeconds Trader Tribute Type U Underwater Upper Value VScrollMax VScrollPos VScrollPos VScrollPct W WIS Weight WornSlots WornSlot X Y Year Z /C6\"Pre-Processor\" #turbo #define #include #event #chat Sub ** : Event_ /C7\"Inventory Slots\" ammo arms back charm chest face feet hands head leftear leftfinger leftwrist legs mainhand neck offhand ranged rightear rightfinger rightwrist shoulder waist ** bank bazaar enviro inspect loot merchant pack sharedbank trade /C8\"Operators\" .Equal .NotEqual .EqualCS .NotEqualCS .Not * + - = // % & > < = ! < > ~ \\ ^ $ | { }","title":"Highlighting Syntax Definition"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#using-ultraedit-with-the-syntax-highlighting","text":"","title":"Using UltraEdit with the Syntax Highlighting"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#what-highlighted-syntax-looks-like","text":"A simple example of a highlighted macro: <font color=\"green\">``\\| _- EventTest.mac -`</font>` `<font color=\"green\">` Demo for /doevents`</font>` `<font color=\"green\">` Chat and YouSay are handled every loop`</font>` `<font color=\"green\">` JudgesYou and Rude are only handled when YouSay`</font>` `<font color=\"green\">` calls /doevents for all_ \\|`</font>```` \\#turbo```````<font color=\"red\">````\\#chat`</font>` say #eventYouSay\"You say, '#1#'\" `\\#eventJudgesYou\"(\\#1\\#\\) judges you amiably\"`<font color=\"red\">```\\#event`</font>` Rude `<font color=\"purple\">`\"\\(\\#1\\#\\) makes a rude gesture\\#\\*\\#\"`</font>` ```Sub Main /declareConCheckint outer`</font>` `<font color=\"#ff0000\">`0`</font>` `<font color=\"red\">`:Loop`</font>` `<font color=\"blue\">`/doevents`</font>` `<font color=\"#0000ff\">`/delay`</font>` `<font color=\"#ff0000\">`2`</font>` `<font color=\"#0000ff\">`/goto`</font>` `<font color=\"#ff0000\">`:Loop`</font>` `<font color=\"#0000ff\">`/return`</font>` Sub Event_Chat `/echoYou got a${Param0}from${Param1}:`<font color=\"#ff0000\">```${`</font><font color=\"#0000ff\">`Param2`</font><font color=\"#ff0000\">`}`</font>` `<font color=\"#0000ff\">`/return`</font>` ```Sub Event_YouSay(stringline,stringfirstword) /echoin YouxxxSay${firstword} ${`</font>`firstword`<font color=\"#ff0000\">`.NotEqual`</font>`[Hail\\]`<font color=\"#ff0000\">`}`</font>` `<font color=\"#0000ff\">`/if`</font>` \\(`<font color=\"#ff0000\">`${`</font>`firstword`<font color=\"#ff0000\">`.NotEqual`</font>`\\[Hail]`<font color=\"#ff0000\">`}`</font>`) `<font color=\"#ff0000\">`{`</font>` `<font color=\"#0000ff\">`/varset`</font>` ConCheck `<font color=\"#ff0000\">`0`</font>` `<font color=\"#0000ff\">`/return`</font>` `<font color=\"#ff0000\">`}`</font>` `<font color=\"#0000ff\">`/echo`</font>` You con'd amiable `<font color=\"#ff0000\">`${`</font>`ConCheck`<font color=\"#ff0000\">`}`</font>` times since you last hailed.``````/return`` ````` `<font color=\"#ff0000\">`Sub Event\\_JudgesYou`</font>`(`<font color=\"#0000ff\">`string`</font>` line, `<font color=\"#0000ff\">`string`</font>` who)`````` /echoYou con'd amiable to${who}```````<font color=\"#0000ff\">````/varcalc`</font>` ConCheck `<font color=\"#ff0000\">`${`</font>`ConCheck}`<font color=\"#ff0000\">`+1`</font>` `<font color=\"#0000ff\">`/return`</font>` Sub Event_Rude(stringline,stringwho) `/echo`<font color=\"#ff0000\">```${`</font>`who`<font color=\"#ff0000\">`}`</font>` flipped someone off!``` /return You may want to change the default colors that UltraEdit chooses for the different categories. To do that navigate to: Advanced \u2192 Configuration \u2192 Editor Display \u2192 Syntax Highlighting and you can change the colors to your own choosing.","title":"What Highlighted Syntax Looks Like"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#indenting","text":"Ultraedit will also perform automatic indenting for you. It will create an indent whenever it see you have an open \"{\" and will unindent whenever it see a closing \"}\". You can also manually reformat any section by highlighting it then choosing Format \u2192 Indent Section from the UltraEdit Menu. Note: There is currently one bug in how indenting works. It currently does not properly unindent /elseif statements. UltraEdit will also not bring the final \"}\" back to the beginning of the first if like it is supposed to. Example 1: What UltraEdit Should do Sub ChatOut(string ChatTarget,string ChatText) /if (${ChatIn.Equal[tell]}) { /tell ${ChatInChannel} ${ChatText} } else /if (${ChatIn.Equal[Group]}) { /g ${ChatText} } else /if (${ChatIn.Equal[Raid]}) { /rs ${ChatText} } else /if (${ChatIn.Equal[Say]}) { /say ${ChatText} } else /if (${ChatIn.Equal[Channel]}) { /chat #${ChatInChannel} ${ChatText} } else /if (${ChatIn.Equal[IRC]}) { /irc ${ChatText} } else /if (${ChatIn.Equal[GUILD]}) { /gu ${ChatText} } else /if (${ChatIn.Equal[Auction]}) { /auc ${ChatText} } else { /e Incorrect Arguments: Chatin: ${ChatIn} ChatinChanel: ${ChatinChannel} /call ShowHelp } /return Example 2: What UltraEdit Does Sub ChatOut(string ChatTarget,string ChatText) /if (${ChatIn.Equal[tell]}) { /tell ${ChatInChannel} ${ChatText} } else /if (${ChatIn.Equal[Group]}) { /g ${ChatText} } else /if (${ChatIn.Equal[Raid]}) { /rs ${ChatText} } else /if (${ChatIn.Equal[Say]}) { /say ${ChatText} } else /if (${ChatIn.Equal[Channel]}) { /chat #${ChatInChannel} ${ChatText} } else /if (${ChatIn.Equal[IRC]}) { /irc ${ChatText} } else /if (${ChatIn.Equal[GUILD]}) { /gu ${ChatText} } else /if (${ChatIn.Equal[Auction]}) { /auc ${ChatText} } else { /e Incorrect Arguments: Chatin: ${ChatIn} ChatinChanel: ${ChatinChannel} /call ShowHelp } /return","title":"Indenting"},{"location":"plugins/","text":"Plugins \u00b6 Introduction \u00b6 Plugins extend the functionality of MQ, usually at a lower level than macros do. For example, a macro may help you do automatically mez mobs within a certain range, or auto-attack mob within a certain range. A plugin may control lower level functions like casting the mez spell for you (ie. making sure you have the right target, auto-recasting if you fizzle, etc) or control movement to your intended victim and activating attack (ie. moving you to melee range, turning on attack, automatically backstabbing, turning off attack on enrage, etc). The functionality of plugins and macros often overlap, and in the above example its completely possible to do all the above using just a macro with no plugins. Plugins are written in C++ whereas macros use MQ2's internal scripting language. The internal scripting language is a lot easier to use and manipulate than C++, which is why you'll find a lot more macros than plugins on the MQ2 message boards. Finding Plugins \u00b6 Plugins can be found in the following forum: MQ2::Development::Plugins (VIP Only) ImaNoob posted a very helpful thread here. (VIP Only) Titled appropriately \"The Complete Idiots Guide to MQ2 and plugins\" Compiling Plugins \u00b6 Say you've seen an interesting looking plugin on the forums and you'd like to try it out, how exactly do you go about doing it? Open up a command prompt (Windows key + R, type \"cmd\" without quotation marks, press enter) and navigate to your MQ2 source directory (eg. cd \\mq2-latest ). Type \" mkplugin \". Use the name of the plugin from the forum post (eg. \" mkplugin MQ2Melee \"). This will create the directory under your MQ2 source root and add a few files in there. Go to this directory in Explorer and open the .cpp file (eg. MQ2Melee.cpp) in your favourite text editor (notepad will work just fine). If you don't have any file extensions on your files (ie. none of them end with .cpp), then in Explorer go to Tools - Folder Options - View tab and untick \"Hide file extensions for known file types\". Replace the contents of this file with the code copied from the forum post. This code will generally start with a header indicating the name of the plugin, author, and maybe a brief description of the function of the plugin. An example of the first few lines of the MQ2Melee plugin are below: //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=// // MQ2Melee.cpp | // Author: s0rCieR | // Version: 3.000 | // Date: 20060213 |yes it should be //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=// // #define aabug when alt abilities broken! // #define cabug when combat abilities broken! //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=// #include <mq/Plugin.h> PreSetup ( \"MQ2Melee\" ); PLUGIN_VERSION ( 3.000 ); Some plugins require additional files to be included as well (eg. .ccp, .h or .inc). Just create these files in the plugin directory with the names as given in the forum post. **Make sure to save them as plain text documents with the correct extension (ie. do not save them with .txt extension) otherwise the plugin will not find them.** After you've got the plugin created and all the files copied, open up the main MacroQuest2 project and add your newly created project: In VS 6, Go to Projects->Insert Projects into workspace, then select .dsp (eg. MQ2Melee.dsp). In VS .NET, go to File->Add Project->Existing project, and select the .vcproj (eg. MQ2Melee.vcproj). In VS 2005 AND NEWER , go to File->Add->Existing project, and select the .vcproj (or .vcxproj in newer versions of VS} (eg. MQ2Melee.vcproj or MQ2Melee.vcxproj). Compile the plugin: In VS 2005 and newer, click on the plugin name in the Solution Explorer window, then click Build->Build . Using Plugins \u00b6 MQ2 plugins are modular and can be loaded and unloaded on demand. See /plugin for information on loading and unloading plugins. If you need help with the plugin, you can most often find it within the main forum post or within the Wiki entry for that plugin. Some plugins have a built in help which can often be accessed in-game by typing the name of the plugin's slash command(s) followed by help, or just the slash command \\(s\\) by itself. (more examples?) For example, in the MQ2MoveUtils plugin, the plugin adds the /moveto and /makecamp slash commands. Typing \" /moveto help \" and \" /makecamp help \" will bring up a list of current options for that part of the MQ2MoveUtils plugin. Plugins included with MacroQuest2 \u00b6 MQ2Bzsrch -- a bazaar search plug-in MQ2Chat -- Directs MQ2 output to the regular chat window MQ2ChatWnd -- Directs MQ2 output to a special chat window (safer) MQ2CustomBinds -- Allows you to specify custom commands to execute on a key combination MQ2EQBugFix -- Currently nothing, but reserved for fixing bugs in EQ itself MQ2EQIM -- EQIM MQ2HUD -- Provides additional functionality to the HUD included with MQ2 MQ2IRC -- IRC plugin MQ2ItemDisplay -- Add extra data to item windows MQ2Labels -- allows custom UI labels MQ2Map -- enhanced map MQ2Telnet -- act as a telnet server for macro output List of Plugins with wiki pages \u00b6 MQ2AAPurchase MQ2AdvPath MQ2AutoForage MQ2AutoGroup MQ2AutoLogin MQ2AutoSize MQ2AutoSkills MQ2Bandolier MQ2BuffTool MQ2Cast MQ2CEcho MQ2Chat MQ2ChatEvents MQ2ChatWnd MQ2Clip MQ2Cursor MQ2CustomBinds MQ2Debuffs MQ2DPS MQ2DPSAdv MQ2EQBC MQ2EQBugFix MQ2EQIM MQ2Events MQ2Exchange MQ2EQBC MQ2FakeLink MQ2FeedMe MQ2FPS MQ2GMCheck MQ2HUD MQ2HUDMove MQ2IRC MQ2ItemDisplay MQ2Labels MQ2Linkdb MQ2Map MQ2Melee MQ2Medley MQ2Melee MQ2Missing MQ2MoveUtils MQ2MoveUtils:v11 MQ2NetBots MQ2NetHeal MQ2PQ MQ2RelayTells MQ2Rez MQ2Sound MQ2Spawn MQ2SpawnMaster MQ2Targets MQ2Telnet MQ2Timer MQ2Timestamp MQ2Tracking MQ2Twist MQ2Vendors MQ2Web MQ2XPTracker Troubleshooting \u00b6 See General Help for troubleshooting plugin problems. Writing Your Own Plugins \u00b6 See Developing Plugins for further information. Unloading a plugin from within a plugin \u00b6 Because call UnloadMQ2Plugin(name) from within a plugin will crash, you must use a macro command to unload the plugin. DoCommand(NULL, \"/timed 20 /plugin unload\"); will queue the macro command to unload after two seconds.","title":"Plugins"},{"location":"plugins/#plugins","text":"","title":"Plugins"},{"location":"plugins/#introduction","text":"Plugins extend the functionality of MQ, usually at a lower level than macros do. For example, a macro may help you do automatically mez mobs within a certain range, or auto-attack mob within a certain range. A plugin may control lower level functions like casting the mez spell for you (ie. making sure you have the right target, auto-recasting if you fizzle, etc) or control movement to your intended victim and activating attack (ie. moving you to melee range, turning on attack, automatically backstabbing, turning off attack on enrage, etc). The functionality of plugins and macros often overlap, and in the above example its completely possible to do all the above using just a macro with no plugins. Plugins are written in C++ whereas macros use MQ2's internal scripting language. The internal scripting language is a lot easier to use and manipulate than C++, which is why you'll find a lot more macros than plugins on the MQ2 message boards.","title":"Introduction"},{"location":"plugins/#finding-plugins","text":"Plugins can be found in the following forum: MQ2::Development::Plugins (VIP Only) ImaNoob posted a very helpful thread here. (VIP Only) Titled appropriately \"The Complete Idiots Guide to MQ2 and plugins\"","title":"Finding Plugins"},{"location":"plugins/#compiling-plugins","text":"Say you've seen an interesting looking plugin on the forums and you'd like to try it out, how exactly do you go about doing it? Open up a command prompt (Windows key + R, type \"cmd\" without quotation marks, press enter) and navigate to your MQ2 source directory (eg. cd \\mq2-latest ). Type \" mkplugin \". Use the name of the plugin from the forum post (eg. \" mkplugin MQ2Melee \"). This will create the directory under your MQ2 source root and add a few files in there. Go to this directory in Explorer and open the .cpp file (eg. MQ2Melee.cpp) in your favourite text editor (notepad will work just fine). If you don't have any file extensions on your files (ie. none of them end with .cpp), then in Explorer go to Tools - Folder Options - View tab and untick \"Hide file extensions for known file types\". Replace the contents of this file with the code copied from the forum post. This code will generally start with a header indicating the name of the plugin, author, and maybe a brief description of the function of the plugin. An example of the first few lines of the MQ2Melee plugin are below: //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=// // MQ2Melee.cpp | // Author: s0rCieR | // Version: 3.000 | // Date: 20060213 |yes it should be //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=// // #define aabug when alt abilities broken! // #define cabug when combat abilities broken! //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=// #include <mq/Plugin.h> PreSetup ( \"MQ2Melee\" ); PLUGIN_VERSION ( 3.000 ); Some plugins require additional files to be included as well (eg. .ccp, .h or .inc). Just create these files in the plugin directory with the names as given in the forum post. **Make sure to save them as plain text documents with the correct extension (ie. do not save them with .txt extension) otherwise the plugin will not find them.** After you've got the plugin created and all the files copied, open up the main MacroQuest2 project and add your newly created project: In VS 6, Go to Projects->Insert Projects into workspace, then select .dsp (eg. MQ2Melee.dsp). In VS .NET, go to File->Add Project->Existing project, and select the .vcproj (eg. MQ2Melee.vcproj). In VS 2005 AND NEWER , go to File->Add->Existing project, and select the .vcproj (or .vcxproj in newer versions of VS} (eg. MQ2Melee.vcproj or MQ2Melee.vcxproj). Compile the plugin: In VS 2005 and newer, click on the plugin name in the Solution Explorer window, then click Build->Build .","title":"Compiling Plugins"},{"location":"plugins/#using-plugins","text":"MQ2 plugins are modular and can be loaded and unloaded on demand. See /plugin for information on loading and unloading plugins. If you need help with the plugin, you can most often find it within the main forum post or within the Wiki entry for that plugin. Some plugins have a built in help which can often be accessed in-game by typing the name of the plugin's slash command(s) followed by help, or just the slash command \\(s\\) by itself. (more examples?) For example, in the MQ2MoveUtils plugin, the plugin adds the /moveto and /makecamp slash commands. Typing \" /moveto help \" and \" /makecamp help \" will bring up a list of current options for that part of the MQ2MoveUtils plugin.","title":"Using Plugins"},{"location":"plugins/#plugins-included-with-macroquest2","text":"MQ2Bzsrch -- a bazaar search plug-in MQ2Chat -- Directs MQ2 output to the regular chat window MQ2ChatWnd -- Directs MQ2 output to a special chat window (safer) MQ2CustomBinds -- Allows you to specify custom commands to execute on a key combination MQ2EQBugFix -- Currently nothing, but reserved for fixing bugs in EQ itself MQ2EQIM -- EQIM MQ2HUD -- Provides additional functionality to the HUD included with MQ2 MQ2IRC -- IRC plugin MQ2ItemDisplay -- Add extra data to item windows MQ2Labels -- allows custom UI labels MQ2Map -- enhanced map MQ2Telnet -- act as a telnet server for macro output","title":"Plugins included with MacroQuest2"},{"location":"plugins/#list-of-plugins-with-wiki-pages","text":"MQ2AAPurchase MQ2AdvPath MQ2AutoForage MQ2AutoGroup MQ2AutoLogin MQ2AutoSize MQ2AutoSkills MQ2Bandolier MQ2BuffTool MQ2Cast MQ2CEcho MQ2Chat MQ2ChatEvents MQ2ChatWnd MQ2Clip MQ2Cursor MQ2CustomBinds MQ2Debuffs MQ2DPS MQ2DPSAdv MQ2EQBC MQ2EQBugFix MQ2EQIM MQ2Events MQ2Exchange MQ2EQBC MQ2FakeLink MQ2FeedMe MQ2FPS MQ2GMCheck MQ2HUD MQ2HUDMove MQ2IRC MQ2ItemDisplay MQ2Labels MQ2Linkdb MQ2Map MQ2Melee MQ2Medley MQ2Melee MQ2Missing MQ2MoveUtils MQ2MoveUtils:v11 MQ2NetBots MQ2NetHeal MQ2PQ MQ2RelayTells MQ2Rez MQ2Sound MQ2Spawn MQ2SpawnMaster MQ2Targets MQ2Telnet MQ2Timer MQ2Timestamp MQ2Tracking MQ2Twist MQ2Vendors MQ2Web MQ2XPTracker","title":"List of Plugins with wiki pages"},{"location":"plugins/#troubleshooting","text":"See General Help for troubleshooting plugin problems.","title":"Troubleshooting"},{"location":"plugins/#writing-your-own-plugins","text":"See Developing Plugins for further information.","title":"Writing Your Own Plugins"},{"location":"plugins/#unloading-a-plugin-from-within-a-plugin","text":"Because call UnloadMQ2Plugin(name) from within a plugin will crash, you must use a macro command to unload the plugin. DoCommand(NULL, \"/timed 20 /plugin unload\"); will queue the macro command to unload after two seconds.","title":"Unloading a plugin from within a plugin"},{"location":"plugins/general-help/","text":"Help Plugins \u00b6 General Plugin Help \u00b6 First off, do you have the latest version of your plugin. Many plugins, especially the popular ones, are updated regularly. Always check back to the main forum post where you found your plugin to see if a later version is available. Have you got the latest MQ2 source files? Check the download page and make sure that you have have the latest MQ2 source. Some plugins depend on very recent changes to MQ2 to function/compile correctly. Have you read all the documentation on the plugin: 1. The initial forum post usually has some documentation in it, and most likely a link to further documentation (quite often a wiki page). If you still have no luck, read through every page on the forum post (it's sometimes quicker to read backwards, as the information is often more relevant to current problems). Some plugins require other plugins to function, but usually you are warned about these when starting the plugin. Check to make sure you have any other pre-requisite plugins, and that these plugins are configured correctly. Plugin Problems \u00b6","title":"General Help"},{"location":"plugins/general-help/#help-plugins","text":"","title":"Help Plugins"},{"location":"plugins/general-help/#general-plugin-help","text":"First off, do you have the latest version of your plugin. Many plugins, especially the popular ones, are updated regularly. Always check back to the main forum post where you found your plugin to see if a later version is available. Have you got the latest MQ2 source files? Check the download page and make sure that you have have the latest MQ2 source. Some plugins depend on very recent changes to MQ2 to function/compile correctly. Have you read all the documentation on the plugin: 1. The initial forum post usually has some documentation in it, and most likely a link to further documentation (quite often a wiki page). If you still have no luck, read through every page on the forum post (it's sometimes quicker to read backwards, as the information is often more relevant to current problems). Some plugins require other plugins to function, but usually you are warned about these when starting the plugin. Check to make sure you have any other pre-requisite plugins, and that these plugins are configured correctly.","title":"General Plugin Help"},{"location":"plugins/general-help/#plugin-problems","text":"","title":"Plugin Problems"},{"location":"plugins/community-plugins/","text":"Community Plugins \u00b6","title":"Community Plugins"},{"location":"plugins/community-plugins/#community-plugins","text":"","title":"Community Plugins"},{"location":"plugins/community-plugins/mq2aapurchase/","text":"MQ2AAPurchase \u00b6 Description \u00b6 by demonstar55: Mainly I wanted to have a plugin version of the include, but I wanted to make use of some new client functions exported to MQ2 \\(so requires MQ2-20151122\\) It works similar to MQ2AASpend that you can get with some precompiled MQ2 releases, but is missing the \"brute\" feature. Source at https://github.com/mackal/MQ2AAPurchase zip download also included in this post, but the github will always be up-to-date. You can find the latest version of MQ2AAPurchase here . Commands \u00b6 /aapurchase help -- List commands, aka this /aapurchase now -- start buying now /aapurchase add \\\"AA Name\\\" rank -- M for max instead of a rank /aapurchase bank # -- set the amount of points to bank /aapurchase load -- Reload INI INI \u00b6 [MQ2AAPurchase_Settings] BankPoints=40 AutoSpend=1 [MQ2AAPurchase_List] 1=New Tanaan Crafting Mastery|3 2=Combat Stability|M 3=General Sturdiness|M `` This says I want to start buying once I have 40 points banked and is on. It will buy up to rank 3 of New Tanaan Crafting Mastery, and will buy max ranks of Combat Stability and General Sturdiness. It's worth noting that in the MQ2AAPurchase_List section the order of entries is important, not the key, so you can just write a macro to build a INI, move entries around to the order you want without having to worry about changing the keys. It will also try to spend all your points each time it is triggered \\(like the skip option in the include\\) so if that's not the behavior you want, you'll have to convince me I should add it :P","title":"MQ2AAPurchase"},{"location":"plugins/community-plugins/mq2aapurchase/#mq2aapurchase","text":"","title":"MQ2AAPurchase"},{"location":"plugins/community-plugins/mq2aapurchase/#description","text":"by demonstar55: Mainly I wanted to have a plugin version of the include, but I wanted to make use of some new client functions exported to MQ2 \\(so requires MQ2-20151122\\) It works similar to MQ2AASpend that you can get with some precompiled MQ2 releases, but is missing the \"brute\" feature. Source at https://github.com/mackal/MQ2AAPurchase zip download also included in this post, but the github will always be up-to-date. You can find the latest version of MQ2AAPurchase here .","title":"Description"},{"location":"plugins/community-plugins/mq2aapurchase/#commands","text":"/aapurchase help -- List commands, aka this /aapurchase now -- start buying now /aapurchase add \\\"AA Name\\\" rank -- M for max instead of a rank /aapurchase bank # -- set the amount of points to bank /aapurchase load -- Reload INI","title":"Commands"},{"location":"plugins/community-plugins/mq2aapurchase/#ini","text":"[MQ2AAPurchase_Settings] BankPoints=40 AutoSpend=1 [MQ2AAPurchase_List] 1=New Tanaan Crafting Mastery|3 2=Combat Stability|M 3=General Sturdiness|M `` This says I want to start buying once I have 40 points banked and is on. It will buy up to rank 3 of New Tanaan Crafting Mastery, and will buy max ranks of Combat Stability and General Sturdiness. It's worth noting that in the MQ2AAPurchase_List section the order of entries is important, not the key, so you can just write a macro to build a INI, move entries around to the order you want without having to worry about changing the keys. It will also try to spend all your points each time it is triggered \\(like the skip option in the include\\) so if that's not the behavior you want, you'll have to convince me I should add it :P","title":"INI"},{"location":"plugins/community-plugins/mq2advpath/","text":"MQ2AdvPath \u00b6 Description \u00b6 This plugin allows you to record and playback player movement. Commands \u00b6 /afollow on\\|off nodoor\\|\\*door /afollow pause\\|unpause /afollow spawn # nodoor\\|\\*door /afollow nodoor\\|\\*door /play PathName\\|off reverse\\|\\*normal loop\\|\\*noloop smart pause\\|\\*unpause nodoor\\|\\*door /record /record save /record checkpoint TLOs \u00b6 ${AdvPath.Active} Plugin Loaded and ready ${AdvPath.State} // FollowState, 0 = off, 1 = Following, 2 = Playing, 3 = Recording ${AdvPath.Waypoints} // Total Number of Waypoints ${AdvPath.NextWaypoint} // Number of NextWaypoint ${AdvPath.Y Check Point Name OR Waypoint number } LOC ${AdvPath.X Check Point Name OR Waypoint number } LOC ${AdvPath.Z Check Point Name OR Waypoint number } LOC ${AdvPath.Monitor} // Spawn your following ${AdvPath.Idle} // Idel time when following and not moving ${AdvPath.Length} // Estimated length off the follow path ${AdvPath.Following} // BOOL Following spawn ? ${AdvPath.Playing} // BOOL Playing ? ${AdvPath.Recording} // BOOL Recording? ${AdvPath.Status} // INT Status 0 = off , 1 = on , 2 = paused? ${AdvPath.Paused} // BOOL Paused? ${AdvPath.WaitingWarp} // BOOL Wating if warp take action ?","title":"MQ2AdvPath"},{"location":"plugins/community-plugins/mq2advpath/#mq2advpath","text":"","title":"MQ2AdvPath"},{"location":"plugins/community-plugins/mq2advpath/#description","text":"This plugin allows you to record and playback player movement.","title":"Description"},{"location":"plugins/community-plugins/mq2advpath/#commands","text":"/afollow on\\|off nodoor\\|\\*door /afollow pause\\|unpause /afollow spawn # nodoor\\|\\*door /afollow nodoor\\|\\*door /play PathName\\|off reverse\\|\\*normal loop\\|\\*noloop smart pause\\|\\*unpause nodoor\\|\\*door /record /record save /record checkpoint","title":"Commands"},{"location":"plugins/community-plugins/mq2advpath/#tlos","text":"${AdvPath.Active} Plugin Loaded and ready ${AdvPath.State} // FollowState, 0 = off, 1 = Following, 2 = Playing, 3 = Recording ${AdvPath.Waypoints} // Total Number of Waypoints ${AdvPath.NextWaypoint} // Number of NextWaypoint ${AdvPath.Y Check Point Name OR Waypoint number } LOC ${AdvPath.X Check Point Name OR Waypoint number } LOC ${AdvPath.Z Check Point Name OR Waypoint number } LOC ${AdvPath.Monitor} // Spawn your following ${AdvPath.Idle} // Idel time when following and not moving ${AdvPath.Length} // Estimated length off the follow path ${AdvPath.Following} // BOOL Following spawn ? ${AdvPath.Playing} // BOOL Playing ? ${AdvPath.Recording} // BOOL Recording? ${AdvPath.Status} // INT Status 0 = off , 1 = on , 2 = paused? ${AdvPath.Paused} // BOOL Paused? ${AdvPath.WaitingWarp} // BOOL Wating if warp take action ?","title":"TLOs"},{"location":"plugins/community-plugins/mq2autoforage/","text":"MQ2AutoForage \u00b6 Description \u00b6 MQ2AutoForage Created by Bl!ng Simple plugin to automate the task of foraging (and eventually fishing). You can find the latest version of MQ2AutoForage here . Commands \u00b6 /startforage - commence autoforaging. /stopforage - stop autoforaging. /keepitem {item} - add/change the item in the .ini file to auto-keep. /destroyitem {item} - add/change the item in the .ini file to auto-destroy.","title":"MQ2AutoForage"},{"location":"plugins/community-plugins/mq2autoforage/#mq2autoforage","text":"","title":"MQ2AutoForage"},{"location":"plugins/community-plugins/mq2autoforage/#description","text":"MQ2AutoForage Created by Bl!ng Simple plugin to automate the task of foraging (and eventually fishing). You can find the latest version of MQ2AutoForage here .","title":"Description"},{"location":"plugins/community-plugins/mq2autoforage/#commands","text":"/startforage - commence autoforaging. /stopforage - stop autoforaging. /keepitem {item} - add/change the item in the .ini file to auto-keep. /destroyitem {item} - add/change the item in the .ini file to auto-destroy.","title":"Commands"},{"location":"plugins/community-plugins/mq2autogroup/","text":"MQ2AutoGroup \u00b6 Description \u00b6 Like it says this will autogroup, or auto accept raid invites from the names you have in your ini. Big thanks to Psycotic for the coding help. And to the other coders who's code i borrowed to try and put this thing together. Hopefully someone finds this plugin semi usefull. You can find the latest version of MQ2AutoGroup here . Commands \u00b6 /autogroup help \\| on \\| off \\| guild \\| load \\| save \\| add \\| del \\| clear \\| list help = list of ingame options on = turn plugin on off = turn plugin off guild = toggles automatic guild/raid invite accept from your guild members load = loads options and names from ini file \\( any current unsaved names will be lost\\) save = updates .ini to match current options and names add = add a new character name \\(ex: /autogroup add bubbawar\\) del = delete a character name \\(ex: /autogroup del 15 , deletes name number 15\\) clear = clears all character names list = lists current character names INI Entries \u00b6 [Settings] AutoGroup=on [Names] Name0=bob Name1=fred Name2=harry","title":"MQ2AutoGroup"},{"location":"plugins/community-plugins/mq2autogroup/#mq2autogroup","text":"","title":"MQ2AutoGroup"},{"location":"plugins/community-plugins/mq2autogroup/#description","text":"Like it says this will autogroup, or auto accept raid invites from the names you have in your ini. Big thanks to Psycotic for the coding help. And to the other coders who's code i borrowed to try and put this thing together. Hopefully someone finds this plugin semi usefull. You can find the latest version of MQ2AutoGroup here .","title":"Description"},{"location":"plugins/community-plugins/mq2autogroup/#commands","text":"/autogroup help \\| on \\| off \\| guild \\| load \\| save \\| add \\| del \\| clear \\| list help = list of ingame options on = turn plugin on off = turn plugin off guild = toggles automatic guild/raid invite accept from your guild members load = loads options and names from ini file \\( any current unsaved names will be lost\\) save = updates .ini to match current options and names add = add a new character name \\(ex: /autogroup add bubbawar\\) del = delete a character name \\(ex: /autogroup del 15 , deletes name number 15\\) clear = clears all character names list = lists current character names","title":"Commands"},{"location":"plugins/community-plugins/mq2autogroup/#ini-entries","text":"[Settings] AutoGroup=on [Names] Name0=bob Name1=fred Name2=harry","title":"INI Entries"},{"location":"plugins/community-plugins/mq2autosize/","text":"MQ2AutoSize \u00b6 Description \u00b6 This plugin will automatically shrink everyone within range down to minimum allowed size. They will automatically resize back to normal when they move out of range. (Current range is set at 50' - adjust with Range settings in INI) NOTE: These effects are CLIENT SIDE ONLY! You can find the latest version of MQ2AutoSize here . Commands \u00b6 /autosize - Toggles AutoSizing on/off /autosizeall - Toggles AutoSizing for whole zone /autosize [pc | npc | pets | mercs | mounts | corpse | target | everything | self ] /autosize dist - Toggles distance based AutoSize on/off /autosize range ### - Sets range for distance checking /autosize [ size | sizepc | sizenpc | sizepets | sizemercs | sizemounts | sizecorpse | sizetarget | sizeself ] ### (1-250) /autosize [help | status | autosave | save | load } INI Entries \u00b6 [Config] AutoSave=off ResizePC=on ResizeNPC=off ResizePets=off ResizeMercs=off ResizeAll=off ResizeMounts=off ResizeCorpse=off ResizeSelf=off SizeByRange=off Range=50 SizeDefault=1 SizePC=1 SizeNPC=1 SizePets=1 SizeMercs=1 SizeTarget=1 SizeMounts=1 SizeCorpse=1 SizeSelf=1","title":"MQ2AutoSize"},{"location":"plugins/community-plugins/mq2autosize/#mq2autosize","text":"","title":"MQ2AutoSize"},{"location":"plugins/community-plugins/mq2autosize/#description","text":"This plugin will automatically shrink everyone within range down to minimum allowed size. They will automatically resize back to normal when they move out of range. (Current range is set at 50' - adjust with Range settings in INI) NOTE: These effects are CLIENT SIDE ONLY! You can find the latest version of MQ2AutoSize here .","title":"Description"},{"location":"plugins/community-plugins/mq2autosize/#commands","text":"/autosize - Toggles AutoSizing on/off /autosizeall - Toggles AutoSizing for whole zone /autosize [pc | npc | pets | mercs | mounts | corpse | target | everything | self ] /autosize dist - Toggles distance based AutoSize on/off /autosize range ### - Sets range for distance checking /autosize [ size | sizepc | sizenpc | sizepets | sizemercs | sizemounts | sizecorpse | sizetarget | sizeself ] ### (1-250) /autosize [help | status | autosave | save | load }","title":"Commands"},{"location":"plugins/community-plugins/mq2autosize/#ini-entries","text":"[Config] AutoSave=off ResizePC=on ResizeNPC=off ResizePets=off ResizeMercs=off ResizeAll=off ResizeMounts=off ResizeCorpse=off ResizeSelf=off SizeByRange=off Range=50 SizeDefault=1 SizePC=1 SizeNPC=1 SizePets=1 SizeMercs=1 SizeTarget=1 SizeMounts=1 SizeCorpse=1 SizeSelf=1","title":"INI Entries"},{"location":"plugins/community-plugins/mq2autoskills/","text":"MQ2AutoSkills \u00b6 Description \u00b6 MQ2AutoSkills, developed by Cr4zyb4rd, is a plugin that attempts to use combat or other skills whenever they're available \\(and the pre-requisite conditions are met\\) . It also has the ability to turn off attack during ENRAGE or Infuriate. Currently supported skills are: Backstab Bash Begging Disarm Dragon Punch Eagle Strike Flying Kick Frenzy Evade Forage Feign Death Intimidation Kick Mend Pick Pockets Round Kick Sense Traps Slam Taunt Tiger Claw The plugin can be downloaded from here . ' 'Note: This plugin was developed many years ago and has been superceded by other more fully-featured plugins, the most popular being MQ2Melee . Commands \u00b6 In order for MQ2AutoSkills to use any of your skills, you must have the skill mapped to an ability button. /autoskills help This lists all options /autoskills list List available skills and whether they are enabled /autoskills settings List settings/thresholds /autoskills backoff \\# %HP at which to not re-engage after FD/Evade /autoskills melee \\# Range to be considered \"in melee range\" /autoskills mendhp \\# %HP at which to use the mend ability /autoskills skill Toggle a skill on/off and update the INI /autoskills skill on\\|off Enable/disable a skill Examples \u00b6 For a Warrior, you could use something like the following /autoskills taunt /autoskills bash /autoskills melee 15 For a Berserker , trying to optimize dps while watching cooldown timers /autoskills Frenzy /autoskills Volley /autoskills War Cry Bugs \u00b6 Trade/Vendor windows and possibly some other events may cause some skills to fire when not appropriate and spam you.","title":"MQ2AutoSkills"},{"location":"plugins/community-plugins/mq2autoskills/#mq2autoskills","text":"","title":"MQ2AutoSkills"},{"location":"plugins/community-plugins/mq2autoskills/#description","text":"MQ2AutoSkills, developed by Cr4zyb4rd, is a plugin that attempts to use combat or other skills whenever they're available \\(and the pre-requisite conditions are met\\) . It also has the ability to turn off attack during ENRAGE or Infuriate. Currently supported skills are: Backstab Bash Begging Disarm Dragon Punch Eagle Strike Flying Kick Frenzy Evade Forage Feign Death Intimidation Kick Mend Pick Pockets Round Kick Sense Traps Slam Taunt Tiger Claw The plugin can be downloaded from here . ' 'Note: This plugin was developed many years ago and has been superceded by other more fully-featured plugins, the most popular being MQ2Melee .","title":"Description"},{"location":"plugins/community-plugins/mq2autoskills/#commands","text":"In order for MQ2AutoSkills to use any of your skills, you must have the skill mapped to an ability button. /autoskills help This lists all options /autoskills list List available skills and whether they are enabled /autoskills settings List settings/thresholds /autoskills backoff \\# %HP at which to not re-engage after FD/Evade /autoskills melee \\# Range to be considered \"in melee range\" /autoskills mendhp \\# %HP at which to use the mend ability /autoskills skill Toggle a skill on/off and update the INI /autoskills skill on\\|off Enable/disable a skill","title":"Commands"},{"location":"plugins/community-plugins/mq2autoskills/#examples","text":"For a Warrior, you could use something like the following /autoskills taunt /autoskills bash /autoskills melee 15 For a Berserker , trying to optimize dps while watching cooldown timers /autoskills Frenzy /autoskills Volley /autoskills War Cry","title":"Examples"},{"location":"plugins/community-plugins/mq2autoskills/#bugs","text":"Trade/Vendor windows and possibly some other events may cause some skills to fire when not appropriate and spam you.","title":"Bugs"},{"location":"plugins/community-plugins/mq2bandolier/","text":"MQ2Bandolier \u00b6 Description \u00b6 MQ2Bandolier , written by Wassup, is an extension of the EQ Bandolier which allows you to swap items in any of your inventory slots. It requires MQ2Exchange in order to perform the item swapping. You can find the source to the plugin in the VIP forums here . Commands \u00b6 /createset slotname1|slotnumber1 slotname2|slotnumber2 ... \\(slotname21\\|slotnumber22\\) Creates a set in MQ2Bandolier_.ini using the selected equipment slots. If you use the name of an existing set, it will be over-written. /deleteset Deletes the specified setname from the characters ini. /equipset Equips all items of the specified set. Examples \u00b6 /createset ThisSet chest mainhand offhand /createset ThisSet 17 13 14 Both of the above examples will create the following INI entry: [ThisSet] 17=12345 13=23456 14=34567","title":"MQ2Bandolier"},{"location":"plugins/community-plugins/mq2bandolier/#mq2bandolier","text":"","title":"MQ2Bandolier"},{"location":"plugins/community-plugins/mq2bandolier/#description","text":"MQ2Bandolier , written by Wassup, is an extension of the EQ Bandolier which allows you to swap items in any of your inventory slots. It requires MQ2Exchange in order to perform the item swapping. You can find the source to the plugin in the VIP forums here .","title":"Description"},{"location":"plugins/community-plugins/mq2bandolier/#commands","text":"/createset slotname1|slotnumber1 slotname2|slotnumber2 ... \\(slotname21\\|slotnumber22\\) Creates a set in MQ2Bandolier_.ini using the selected equipment slots. If you use the name of an existing set, it will be over-written. /deleteset Deletes the specified setname from the characters ini. /equipset Equips all items of the specified set.","title":"Commands"},{"location":"plugins/community-plugins/mq2bandolier/#examples","text":"/createset ThisSet chest mainhand offhand /createset ThisSet 17 13 14 Both of the above examples will create the following INI entry: [ThisSet] 17=12345 13=23456 14=34567","title":"Examples"},{"location":"plugins/community-plugins/mq2bufftool/","text":"MQ2BuffTool \u00b6 Description \u00b6 MQ2BuffTool was written by s0rcier and is found in the VIP forums here . This plugin was written a replacement for his previous work, MQ2BuffUtils, offering an easier approach to buff management for the end user and less robotic interaction to be less detectable by others. Features \u00b6 XML Windows: fully resizable, cloasable, movable, lockable that remember their save location and states Buff Window List \\(Self & Pet\\) : sorted by remaining duration on buff, with colorful visual effects (red=detrimental, white=less then 1min, teal=less then 3mins, blue=less then 6mins or green if time left greater then 6mins), toggle option to include songs or not in visual buff list, Buffs Free and Max Slot display and same for Short Duration, right or left clicking on the Self Buff window will add or remove buff to the block list Block Window List: sorted by buff name, colorful \\(green means buff that will always been blocked, white for others\\) , toggle options for On/Off state and popups, Load and Save button to save or load settings, right or left clicking on selected buff will increase or decrease # of free slots attached to it (if number of free slots reach -1 it will remove that blocked buff) Commands \u00b6 General \u00b6 The following parameters may be used by any of the three primary commands. For example purposes /block will be used. '''/block /help Displays help output '''/block /load Loads settings and blocked spells list from configuration file. '''/block /save Saves settings and blocked spells list to configuration file. '''/block /block Toggles scanning for blocked buffs on and off '''/block /list Displays a list of spells currently being blocked '''/block /popup Toggles display of popup messages '''/block /window Popups XML windows /block \u00b6 **/block [ ## | -## ] _0_ \\| _1_ ** Blocks spell in buff slot ## \\(for short duration use slot -\\#\\#\\) , always \\(0\\) or only if free slots/optionally \\(1\\) /block Name ** _**0**_ **\\|** _**1**_ ** Blocks spell matching Name , always \\(0\\) or only if free slots/optionally \\(1\\) _'/block _ setname''&lt;/span&gt; Blocks spells from list setname in configuration file /unblock \u00b6 **/unblock [ ## | -## ]** Removes blocked spell in buff slot ## \\(for short duration use slot -\\#\\#\\) /unblock ** _**Name**_ ** Removes blocked spell matching Name /unblock ** _**setname**_ ** Removes blocked spells from list setname in configuration file /clickoff \u00b6 **/clickoff [ ## | -## ]** Clicks off spell in buff slot ## \\(for short duration use slot -\\#\\#\\) /unblock ** _**Name**_ ** Clicks off spell matching Name /unblock ** _**setname**_ ** Clicks off buffs from list setname in configuration file Top-Level Object: ${Block} \u00b6 Type Member Name Description int Avail \\***n**\\* Number of free buff slots in n \\(where _n_ can be 1=buffs, 2=short duration, 3=pets\\) int Count Number of buffs in blocked list int Maxim \\***n**\\* Number of total buff slots in n \\(where _n_ can be 1=buffs, 2=short duration, 3=pets\\) bool Popup TRUE if popups are enabled bool Quiet Always TRUE if plugin is loaded bool Ready TRUE if plugin loaded, INGAME, and blocking active int Spell \\***n**\\* Number of available buff slots for n \\(where _n_ spell ID or spell name\\) , returns -1 if none found int Total Total number of buffs blocked by plugin this session string To String TRUE if INGAME","title":"MQ2BuffTool"},{"location":"plugins/community-plugins/mq2bufftool/#mq2bufftool","text":"","title":"MQ2BuffTool"},{"location":"plugins/community-plugins/mq2bufftool/#description","text":"MQ2BuffTool was written by s0rcier and is found in the VIP forums here . This plugin was written a replacement for his previous work, MQ2BuffUtils, offering an easier approach to buff management for the end user and less robotic interaction to be less detectable by others.","title":"Description"},{"location":"plugins/community-plugins/mq2bufftool/#features","text":"XML Windows: fully resizable, cloasable, movable, lockable that remember their save location and states Buff Window List \\(Self & Pet\\) : sorted by remaining duration on buff, with colorful visual effects (red=detrimental, white=less then 1min, teal=less then 3mins, blue=less then 6mins or green if time left greater then 6mins), toggle option to include songs or not in visual buff list, Buffs Free and Max Slot display and same for Short Duration, right or left clicking on the Self Buff window will add or remove buff to the block list Block Window List: sorted by buff name, colorful \\(green means buff that will always been blocked, white for others\\) , toggle options for On/Off state and popups, Load and Save button to save or load settings, right or left clicking on selected buff will increase or decrease # of free slots attached to it (if number of free slots reach -1 it will remove that blocked buff)","title":"Features"},{"location":"plugins/community-plugins/mq2bufftool/#commands","text":"","title":"Commands"},{"location":"plugins/community-plugins/mq2bufftool/#general","text":"The following parameters may be used by any of the three primary commands. For example purposes /block will be used. '''/block /help Displays help output '''/block /load Loads settings and blocked spells list from configuration file. '''/block /save Saves settings and blocked spells list to configuration file. '''/block /block Toggles scanning for blocked buffs on and off '''/block /list Displays a list of spells currently being blocked '''/block /popup Toggles display of popup messages '''/block /window Popups XML windows","title":"General"},{"location":"plugins/community-plugins/mq2bufftool/#block","text":"**/block [ ## | -## ] _0_ \\| _1_ ** Blocks spell in buff slot ## \\(for short duration use slot -\\#\\#\\) , always \\(0\\) or only if free slots/optionally \\(1\\) /block Name ** _**0**_ **\\|** _**1**_ ** Blocks spell matching Name , always \\(0\\) or only if free slots/optionally \\(1\\) _'/block _ setname''&lt;/span&gt; Blocks spells from list setname in configuration file","title":"/block"},{"location":"plugins/community-plugins/mq2bufftool/#unblock","text":"**/unblock [ ## | -## ]** Removes blocked spell in buff slot ## \\(for short duration use slot -\\#\\#\\) /unblock ** _**Name**_ ** Removes blocked spell matching Name /unblock ** _**setname**_ ** Removes blocked spells from list setname in configuration file","title":"/unblock"},{"location":"plugins/community-plugins/mq2bufftool/#clickoff","text":"**/clickoff [ ## | -## ]** Clicks off spell in buff slot ## \\(for short duration use slot -\\#\\#\\) /unblock ** _**Name**_ ** Clicks off spell matching Name /unblock ** _**setname**_ ** Clicks off buffs from list setname in configuration file","title":"/clickoff"},{"location":"plugins/community-plugins/mq2bufftool/#top-level-object-block","text":"Type Member Name Description int Avail \\***n**\\* Number of free buff slots in n \\(where _n_ can be 1=buffs, 2=short duration, 3=pets\\) int Count Number of buffs in blocked list int Maxim \\***n**\\* Number of total buff slots in n \\(where _n_ can be 1=buffs, 2=short duration, 3=pets\\) bool Popup TRUE if popups are enabled bool Quiet Always TRUE if plugin is loaded bool Ready TRUE if plugin loaded, INGAME, and blocking active int Spell \\***n**\\* Number of available buff slots for n \\(where _n_ spell ID or spell name\\) , returns -1 if none found int Total Total number of buffs blocked by plugin this session string To String TRUE if INGAME","title":"Top-Level Object: ${Block}"},{"location":"plugins/community-plugins/mq2cast/","text":"MQ2Cast \u00b6 Introduction \u00b6 MQ2Cast by s0rCieR and A_Enchanter_00 is a plugin to handle most things related to spell casting, item clicking and activating of AAs. The official forum thread for MQ2Cast is here \\(VIP Only\\) . Features \u00b6 Reliably casts spells \\(auto-recasts on fizzles or gate collapses\\) . Will attempt to immobilize you before casting. Will cast immediately a spell is available, before the gem is even fully ready. Intelligently and reliably memorizes spells and allows saving and loading of custom spell sets. Will attempt to immobilize you if moving. Clicks items and activates AAs. Will equip items in bags before clicking, and then return them once clicked. Utilizes MQ2Bandolier to swap in sets of items before casting \\(ie. Focus items\\) . Auto-pause Stick and/or Advpath if detected and resume when complete. Custom interrupt function, to interrupt spells during casting \\(includes dismounting\\) . Returns control to the macro immediately after it has started \\(ie. while the spell is casting\\) , to allow the macro to perform other checks. Eg. while casting a heal spell, you could get the macro to check if the target has already been healed and then interrupt your spell if his HPs are above a certain amount. Requirements \u00b6 MQ2Bandolier For swapping in sets of items before casting \\(ie. focus items\\) MQ2Exchange For equipping clickies before using them Commands \u00b6 /casting \u00b6 Syntax: /casting \"Name\" [type] [options] Although the type is optional, it's always recommended to specify if you're casting a spell \\(specify the gem or number\\) , clicking an item \\(specify \"item\" or the slot name/slot number\\) or activating an AA \\(specify \"alt\"\\) , since there are AAs which have the same name as spells and spells and items can have the same IDs. The /casting command requires only 1 argument, the name of the spell you wish to cast. If the spell is not memmed, it will try and mem it in gem5 \\(this is the default if no gem is specified\\) . If the spell has more than one word, make sure to surround it with quotes. For example: /casting \"Minor Shielding\" This will cast the Minor Shielding spell if it is already memmed, or if not, will attempt to memorize it in gem5 before casting. You can also include the gem number \\(or just the number\\) after the name of the spell, to indicate which gem it should be memmed into. For example: /casting \"Minor Shielding\" 1 /casting \"Minor Shielding\" gem1 These will both cast Minor Shielding if memmed, or memorize it in gem1 before casting. The gem number can also be appended to the end of the spell name, separated by a pipe command, like so: /casting \"Minor Shielding|gem1\" /casting \"Minor Shielding|1\" You can also use the ID of the spell you wish to mem/cast. The following 4 examples all do the same thing: /casting 288|gem1 /casting 288|1 /casting 288 gem1 /casting 288 1 All of the above will cast \"Minor Shielding\" \\(ID 288\\) and mem it in gem1 if not already memmed. When clicking items you use the same syntax, except the \"name\" of the spell is the name of the item or the item's ID. It's always recommended to specify the type as \"item\" or specify the slot name/slot ID if you are clicking an item. For example: /casting \"Fabled Journeyman's Boots\" item /casting 68239|item /casting \"Shrunken Goblin Skull Earring\" leftear Options: The following optional parameters can be added to the /casting line: -bandolier| Equip the bandolier with before casting. Useful for focus effects. -invis With this parameter, it will not cast if you are invisible. -kill Keep casting this spell until the target dies. -maxtries|\\<#> Cast the spell this many times until successful. -recast|\\<#> Recast the spell this many times. -setin| Same as bandolier \\(left here for backwards-compatibility purposes\\) . -targetid|\\<#> Target this ID before casting. Examples: /casting \"Wunshi's Focusing\" gem4 -invis /casting \"Complete Heal|gem1\" -kill -targetid|1234 /casting \"Fizzle a Lot|gem4\" -maxtries|5 /casting \"uber nuke|9\" -kill /casting \"cannibalize\" gem3 -recast|5 /interrupt \u00b6 This will just interrupt the current spell/item/AA that is casting. It's the same as doing /stopcast, or /dismount then /stopcast if you're mounted at the time. /memorize \u00b6 Syntax: /memorize \"name\" [gem] As with the /casting command above, the /memorize command can take spell names or IDs, and can use gem# or just the numbers themselves. The gem# or number can also be appended to the end of the name. See the following examples: /memorize \"Minor Shielding\" /memorize \"Minor Shielding\" 1 /memorize 288|gem1 Multiple spells can be memorized with the same line, such as the following example: /memorize \"1234|1\" \"gate|2\" \"cannibalize|gem4\" As with /casting, the plugin will attempt to immobilize you before memorizing the spell. /sss \u00b6 ''Spell Set Save '' - This will save your any number of your currently memmed spells into a spell set. Syntax: /sss \"name\" [gems] Name is what you want your spell set to be called. If no gems are specified, all your gems are saved \\(ie. 123456789ABC\\) . You can specify a smaller subset if needed. /sss dps 1238 /sss dps 12ABC /sss wunshi 5 /ssm \u00b6 Spell Set Memorize - This will memorize a previously saved spell set. /ssm dps /ssl \u00b6 Spell Set List - This will list all spell sets that have been saved. /ssl /ssd \u00b6 Spell Set Delete - This will delete a spell set from the ini file. /ssd wunshi Top Level Objects \\(MQ2Data\\) \u00b6 bool ${Cast} Same as ${Cast.Active} \\(see below\\) . bool ${Cast.Active} Return TRUE if plugin is loaded and you are in-game. spell ${Cast.Effect} Returns the name of the spell being casted, or a NULL string if not casting. bool ${Cast.Ready} Return TRUE if ready to cast a spell, item or AA. bool ${Cast.Ready M } Return TRUE if ready to memorize a spell. bool ${Cast.Ready \\# } Return TRUE if gem # is ready to cast. bool ${Cast.Ready X } Return TRUE if spell, item, gem, ID, AA, etc is ready to cast. As spells and items can have the same IDs and spells and AAs can have the same names, it's a good idea to specify the type of cast to take place (ie. gem#/item/alt). Examples: ${Cast.Ready[spellname or spellid]} ${Cast.Ready[aaname or aaid]} ${Cast.Ready[itemname or itemid]} ${Cast.Ready[1460]} ${Cast.Ready[Death Peace]} ${Cast.Ready[Death Peace|alt]} ${Cast.Ready[Death Peace|gem]} ${Cast.Ready[Death Peace|gem3]} string ${Cast.Result} Returns a string containing the result of the /casting command. It can be one of the following: CAST_ABORTED : Casting Aborted \\(/interrupt\\) CAST_CANCELLED : Casting was aborted CAST_CANNOTSEE : Cannot see target CAST_COLLAPSE : Your Gate collapsed CAST_COMPONENTS : Missing Component CAST_DISTRACTED : You were distracted CAST_FIZZLE : Your cast fizzled CAST_IMMUNE : Target is immune the spell's effect CAST_INTERRUPTED : Casting was interupted CAST_INVISIBLE : You are invisible CAST_NOTARGET : No target CAST_NOTREADY : Not ready to cast CAST_OUTOFMANA : Not enough mana to cast spell CAST_OUTOFRANGE : Target is out of range CAST_OUTDOORS : Spell not working here \\(on mount ect..\\) CAST_PENDING : Casting is in progress CAST_RECOVER : Spell is not ready CAST_RESIST : Cast was resisted CAST_STANDING : Not standing CAST_STUNNED : You are stunned CAST_SUCCESS : The cast was a success CAST_TAKEHOLD : The spell did not take hold CAST_UNKNOWN : Unknown Spell string ${Cast.Return} Returns the result of the casting/memorize/interrupt request. string ${Cast.Status} Returns a string containing all the pending events. This string often contains multiple events (eg. when /casting still has to immobilize you and then memorize the spell before it can cast). The list of possible pending events is: I : idle and waiting for you A : advpath pause F : stick pause S : immobilize in progress M : memorize in progress E : item swapped D : ducking casting T : targeting C : spell casting in progress spell ${Cast.Stored} Returns the last spell that was cast, or NULL if no spell has been cast. bool ${Cast.Taken} Return TRUE if last spell cast didn't take hold on target. int ${Cast.Timing} Returns the estimated number of miliseconds remaining until the spell finished casting. MQ2CastTimer \u00b6 MQ2CastTimer is a plugin which allows you to check timers on active spells, and adds a Timer Window that can be used to monitor spells you have cast on others. Commands \u00b6 /timer \u00b6 Syntax: /timer [on|off] Turns timer Window on / off /timer clear [all|target|pc|npc|pet] Clear Spell timers /timer autorecast [#] Set Number of seconds left on spell before recasting Default:20 Top Level Objects \\(MQ2Data\\) \u00b6 ${SpellTimer SpawnID,Caster,Spell Name } int Returns time \\(in seconds\\) left on \"Spell Name\" by \"Caster\" on \"SpawnID\". :* Caster must be one of the following: me \\(default\\) , other or any . Examples: ${SpellTimer[${Target.ID},Euphoria]} ${SpellTimer[${Target.ID},me,Euphoria]} This will give the time remaining on the Euphoria spell that you cast on your current target \\(both examples do the same thing\\) . ${SpellTimer[${Target.ID},other,Euphoria]} This will give the time remaining on Euphoria on your current target, only if someone else cast it. ${SpellTimer[${Target.ID},any,Euphoria]} OR ${SpellTimer[${Target.ID},All,Euphoria]} This will give the time remaining on Euphoria on your current target, no matter who cast the spell. /if (${SpellTimer[${Target.ID},Euphoria]} < 15) { /call mq2cast Euphoria gem1 20s } Cast Euphoria on target if you originally cast the spell, and it has less than 15 sec left. ${SpellTimer[${Target.ID},any,\"Sha's Legacy\",\"Forlorn Deeds\",\"Desolate Deeds\",\"Turgur's Insects\",\"Balance of Discord\"]} If you want to check if a target is slowed you may use somthing like this. NOTE: this is just an example Timer Window \u00b6 An example of what the Timer Window looks like is \\(NOTE: Links removed as they are both dead.\\) \\(DarkDevil\\) The Timer Window shows the following information: Time Left The amount of time left on the spell, in HH:MM:SS format. Eg. 00:15:32. Tags Some information on the target. T : This is your current target. N : Spell did not take hold on this target. I : Target is immune to this spell. E : Event \\(Show that the timer is an Event\\) GA : This target is the Group Assist. G1-3 : This target is group marked 1-3. RA : This target is the Raid Assist. R1-3 : This target is raid marked 1-3. Spell Name The name of the spell. Spawn Name The unique name of the spawn. The buttons/comboboxes at the bottom of the window do the following: Button Pauses and unpauses the Timer Window. Combobox 1 Select what you want to do when left-clicking the line in the window: Target TargetNAB \\(Target nearest spawn without this spell\\) Recast spell \\(if memmed\\) Clear \\(removes timer\\) . You cannot remove an event. Combobox 2 Select what you want to do when right-clicking the line. Same choices as above. The Timer Settings Tab: Target \\(Current Target\\) Show Target Timers NPC Show Npc and Npc Pet Timers PC Show Pc Timers PET Show Pc Pet Timers Events \\(All Events\\) Show Events My Spells \\(Show Your Spells\\) Show My Spells Other's Spells \\(Show Other Spells\\) Show Other Spells An example INI entry created by the MQ2CastTimer Window is below. This contains the location, size and colors of the window. [Settings..] ChatTop=58 ChatBottom=233 ChatLeft=58 ChatRight=580 Locked=0 WindowTitle=Timers Fades=1 Delay=0 Duration=500 Alpha=255 FadeToAlpha=255 BGType=1 BGTint.red=93 BGTint.green=83 BGTint.blue=93 ActorModeLeft=0 ActorModeRight=2 DefaultGem=gem8 ShowTarget=0 ShowNpc=1 ShowPC=0 ShowPet=0 ShowEvent=1 ShowMySpells=1 ShowOtherSpells=0 Custom Events \u00b6 You can add Custom Events to the INI file in the following format: [Name of Event] duration=<#> event=<\" event text\"> spawntype=<1=pc|2=npc> The duration is in seconds. The event is the text that you see on the screen when you want the event to occur. An example is below: [NPC Gating] duration=5 event=\"#SpawnName# begins to cast the gate spell.\" spawntype=2 [NPC Complete Healing] duration=10 event=\"#SpawnName# begins to cast a spell.\" spawntype=2 [PC Complete Healing] duration=10 event=\"#SpawnName# begins to cast a spell.\" spawntype=1 [Redfang Despawn] duration=240 event=\"An ear-piercing screech reverberates throughout the surreal cavernous Demi-Plane of Blood, announcing the arrival of Redfang.\"","title":"MQ2Cast"},{"location":"plugins/community-plugins/mq2cast/#mq2cast","text":"","title":"MQ2Cast"},{"location":"plugins/community-plugins/mq2cast/#introduction","text":"MQ2Cast by s0rCieR and A_Enchanter_00 is a plugin to handle most things related to spell casting, item clicking and activating of AAs. The official forum thread for MQ2Cast is here \\(VIP Only\\) .","title":"Introduction"},{"location":"plugins/community-plugins/mq2cast/#features","text":"Reliably casts spells \\(auto-recasts on fizzles or gate collapses\\) . Will attempt to immobilize you before casting. Will cast immediately a spell is available, before the gem is even fully ready. Intelligently and reliably memorizes spells and allows saving and loading of custom spell sets. Will attempt to immobilize you if moving. Clicks items and activates AAs. Will equip items in bags before clicking, and then return them once clicked. Utilizes MQ2Bandolier to swap in sets of items before casting \\(ie. Focus items\\) . Auto-pause Stick and/or Advpath if detected and resume when complete. Custom interrupt function, to interrupt spells during casting \\(includes dismounting\\) . Returns control to the macro immediately after it has started \\(ie. while the spell is casting\\) , to allow the macro to perform other checks. Eg. while casting a heal spell, you could get the macro to check if the target has already been healed and then interrupt your spell if his HPs are above a certain amount.","title":"Features"},{"location":"plugins/community-plugins/mq2cast/#requirements","text":"MQ2Bandolier For swapping in sets of items before casting \\(ie. focus items\\) MQ2Exchange For equipping clickies before using them","title":"Requirements"},{"location":"plugins/community-plugins/mq2cast/#commands","text":"","title":"Commands"},{"location":"plugins/community-plugins/mq2cast/#casting","text":"Syntax: /casting \"Name\" [type] [options] Although the type is optional, it's always recommended to specify if you're casting a spell \\(specify the gem or number\\) , clicking an item \\(specify \"item\" or the slot name/slot number\\) or activating an AA \\(specify \"alt\"\\) , since there are AAs which have the same name as spells and spells and items can have the same IDs. The /casting command requires only 1 argument, the name of the spell you wish to cast. If the spell is not memmed, it will try and mem it in gem5 \\(this is the default if no gem is specified\\) . If the spell has more than one word, make sure to surround it with quotes. For example: /casting \"Minor Shielding\" This will cast the Minor Shielding spell if it is already memmed, or if not, will attempt to memorize it in gem5 before casting. You can also include the gem number \\(or just the number\\) after the name of the spell, to indicate which gem it should be memmed into. For example: /casting \"Minor Shielding\" 1 /casting \"Minor Shielding\" gem1 These will both cast Minor Shielding if memmed, or memorize it in gem1 before casting. The gem number can also be appended to the end of the spell name, separated by a pipe command, like so: /casting \"Minor Shielding|gem1\" /casting \"Minor Shielding|1\" You can also use the ID of the spell you wish to mem/cast. The following 4 examples all do the same thing: /casting 288|gem1 /casting 288|1 /casting 288 gem1 /casting 288 1 All of the above will cast \"Minor Shielding\" \\(ID 288\\) and mem it in gem1 if not already memmed. When clicking items you use the same syntax, except the \"name\" of the spell is the name of the item or the item's ID. It's always recommended to specify the type as \"item\" or specify the slot name/slot ID if you are clicking an item. For example: /casting \"Fabled Journeyman's Boots\" item /casting 68239|item /casting \"Shrunken Goblin Skull Earring\" leftear Options: The following optional parameters can be added to the /casting line: -bandolier| Equip the bandolier with before casting. Useful for focus effects. -invis With this parameter, it will not cast if you are invisible. -kill Keep casting this spell until the target dies. -maxtries|\\<#> Cast the spell this many times until successful. -recast|\\<#> Recast the spell this many times. -setin| Same as bandolier \\(left here for backwards-compatibility purposes\\) . -targetid|\\<#> Target this ID before casting. Examples: /casting \"Wunshi's Focusing\" gem4 -invis /casting \"Complete Heal|gem1\" -kill -targetid|1234 /casting \"Fizzle a Lot|gem4\" -maxtries|5 /casting \"uber nuke|9\" -kill /casting \"cannibalize\" gem3 -recast|5","title":"/casting"},{"location":"plugins/community-plugins/mq2cast/#interrupt","text":"This will just interrupt the current spell/item/AA that is casting. It's the same as doing /stopcast, or /dismount then /stopcast if you're mounted at the time.","title":"/interrupt"},{"location":"plugins/community-plugins/mq2cast/#memorize","text":"Syntax: /memorize \"name\" [gem] As with the /casting command above, the /memorize command can take spell names or IDs, and can use gem# or just the numbers themselves. The gem# or number can also be appended to the end of the name. See the following examples: /memorize \"Minor Shielding\" /memorize \"Minor Shielding\" 1 /memorize 288|gem1 Multiple spells can be memorized with the same line, such as the following example: /memorize \"1234|1\" \"gate|2\" \"cannibalize|gem4\" As with /casting, the plugin will attempt to immobilize you before memorizing the spell.","title":"/memorize"},{"location":"plugins/community-plugins/mq2cast/#sss","text":"''Spell Set Save '' - This will save your any number of your currently memmed spells into a spell set. Syntax: /sss \"name\" [gems] Name is what you want your spell set to be called. If no gems are specified, all your gems are saved \\(ie. 123456789ABC\\) . You can specify a smaller subset if needed. /sss dps 1238 /sss dps 12ABC /sss wunshi 5","title":"/sss"},{"location":"plugins/community-plugins/mq2cast/#ssm","text":"Spell Set Memorize - This will memorize a previously saved spell set. /ssm dps","title":"/ssm"},{"location":"plugins/community-plugins/mq2cast/#ssl","text":"Spell Set List - This will list all spell sets that have been saved. /ssl","title":"/ssl"},{"location":"plugins/community-plugins/mq2cast/#ssd","text":"Spell Set Delete - This will delete a spell set from the ini file. /ssd wunshi","title":"/ssd"},{"location":"plugins/community-plugins/mq2cast/#top-level-objects-mq2data","text":"bool ${Cast} Same as ${Cast.Active} \\(see below\\) . bool ${Cast.Active} Return TRUE if plugin is loaded and you are in-game. spell ${Cast.Effect} Returns the name of the spell being casted, or a NULL string if not casting. bool ${Cast.Ready} Return TRUE if ready to cast a spell, item or AA. bool ${Cast.Ready M } Return TRUE if ready to memorize a spell. bool ${Cast.Ready \\# } Return TRUE if gem # is ready to cast. bool ${Cast.Ready X } Return TRUE if spell, item, gem, ID, AA, etc is ready to cast. As spells and items can have the same IDs and spells and AAs can have the same names, it's a good idea to specify the type of cast to take place (ie. gem#/item/alt). Examples: ${Cast.Ready[spellname or spellid]} ${Cast.Ready[aaname or aaid]} ${Cast.Ready[itemname or itemid]} ${Cast.Ready[1460]} ${Cast.Ready[Death Peace]} ${Cast.Ready[Death Peace|alt]} ${Cast.Ready[Death Peace|gem]} ${Cast.Ready[Death Peace|gem3]} string ${Cast.Result} Returns a string containing the result of the /casting command. It can be one of the following: CAST_ABORTED : Casting Aborted \\(/interrupt\\) CAST_CANCELLED : Casting was aborted CAST_CANNOTSEE : Cannot see target CAST_COLLAPSE : Your Gate collapsed CAST_COMPONENTS : Missing Component CAST_DISTRACTED : You were distracted CAST_FIZZLE : Your cast fizzled CAST_IMMUNE : Target is immune the spell's effect CAST_INTERRUPTED : Casting was interupted CAST_INVISIBLE : You are invisible CAST_NOTARGET : No target CAST_NOTREADY : Not ready to cast CAST_OUTOFMANA : Not enough mana to cast spell CAST_OUTOFRANGE : Target is out of range CAST_OUTDOORS : Spell not working here \\(on mount ect..\\) CAST_PENDING : Casting is in progress CAST_RECOVER : Spell is not ready CAST_RESIST : Cast was resisted CAST_STANDING : Not standing CAST_STUNNED : You are stunned CAST_SUCCESS : The cast was a success CAST_TAKEHOLD : The spell did not take hold CAST_UNKNOWN : Unknown Spell string ${Cast.Return} Returns the result of the casting/memorize/interrupt request. string ${Cast.Status} Returns a string containing all the pending events. This string often contains multiple events (eg. when /casting still has to immobilize you and then memorize the spell before it can cast). The list of possible pending events is: I : idle and waiting for you A : advpath pause F : stick pause S : immobilize in progress M : memorize in progress E : item swapped D : ducking casting T : targeting C : spell casting in progress spell ${Cast.Stored} Returns the last spell that was cast, or NULL if no spell has been cast. bool ${Cast.Taken} Return TRUE if last spell cast didn't take hold on target. int ${Cast.Timing} Returns the estimated number of miliseconds remaining until the spell finished casting.","title":"Top Level Objects \\(MQ2Data\\)"},{"location":"plugins/community-plugins/mq2cast/#mq2casttimer","text":"MQ2CastTimer is a plugin which allows you to check timers on active spells, and adds a Timer Window that can be used to monitor spells you have cast on others.","title":"MQ2CastTimer"},{"location":"plugins/community-plugins/mq2cast/#commands_1","text":"","title":"Commands"},{"location":"plugins/community-plugins/mq2cast/#timer","text":"Syntax: /timer [on|off] Turns timer Window on / off /timer clear [all|target|pc|npc|pet] Clear Spell timers /timer autorecast [#] Set Number of seconds left on spell before recasting Default:20","title":"/timer"},{"location":"plugins/community-plugins/mq2cast/#top-level-objects-mq2data_1","text":"${SpellTimer SpawnID,Caster,Spell Name } int Returns time \\(in seconds\\) left on \"Spell Name\" by \"Caster\" on \"SpawnID\". :* Caster must be one of the following: me \\(default\\) , other or any . Examples: ${SpellTimer[${Target.ID},Euphoria]} ${SpellTimer[${Target.ID},me,Euphoria]} This will give the time remaining on the Euphoria spell that you cast on your current target \\(both examples do the same thing\\) . ${SpellTimer[${Target.ID},other,Euphoria]} This will give the time remaining on Euphoria on your current target, only if someone else cast it. ${SpellTimer[${Target.ID},any,Euphoria]} OR ${SpellTimer[${Target.ID},All,Euphoria]} This will give the time remaining on Euphoria on your current target, no matter who cast the spell. /if (${SpellTimer[${Target.ID},Euphoria]} < 15) { /call mq2cast Euphoria gem1 20s } Cast Euphoria on target if you originally cast the spell, and it has less than 15 sec left. ${SpellTimer[${Target.ID},any,\"Sha's Legacy\",\"Forlorn Deeds\",\"Desolate Deeds\",\"Turgur's Insects\",\"Balance of Discord\"]} If you want to check if a target is slowed you may use somthing like this. NOTE: this is just an example","title":"Top Level Objects \\(MQ2Data\\)"},{"location":"plugins/community-plugins/mq2cast/#timer-window","text":"An example of what the Timer Window looks like is \\(NOTE: Links removed as they are both dead.\\) \\(DarkDevil\\) The Timer Window shows the following information: Time Left The amount of time left on the spell, in HH:MM:SS format. Eg. 00:15:32. Tags Some information on the target. T : This is your current target. N : Spell did not take hold on this target. I : Target is immune to this spell. E : Event \\(Show that the timer is an Event\\) GA : This target is the Group Assist. G1-3 : This target is group marked 1-3. RA : This target is the Raid Assist. R1-3 : This target is raid marked 1-3. Spell Name The name of the spell. Spawn Name The unique name of the spawn. The buttons/comboboxes at the bottom of the window do the following: Button Pauses and unpauses the Timer Window. Combobox 1 Select what you want to do when left-clicking the line in the window: Target TargetNAB \\(Target nearest spawn without this spell\\) Recast spell \\(if memmed\\) Clear \\(removes timer\\) . You cannot remove an event. Combobox 2 Select what you want to do when right-clicking the line. Same choices as above. The Timer Settings Tab: Target \\(Current Target\\) Show Target Timers NPC Show Npc and Npc Pet Timers PC Show Pc Timers PET Show Pc Pet Timers Events \\(All Events\\) Show Events My Spells \\(Show Your Spells\\) Show My Spells Other's Spells \\(Show Other Spells\\) Show Other Spells An example INI entry created by the MQ2CastTimer Window is below. This contains the location, size and colors of the window. [Settings..] ChatTop=58 ChatBottom=233 ChatLeft=58 ChatRight=580 Locked=0 WindowTitle=Timers Fades=1 Delay=0 Duration=500 Alpha=255 FadeToAlpha=255 BGType=1 BGTint.red=93 BGTint.green=83 BGTint.blue=93 ActorModeLeft=0 ActorModeRight=2 DefaultGem=gem8 ShowTarget=0 ShowNpc=1 ShowPC=0 ShowPet=0 ShowEvent=1 ShowMySpells=1 ShowOtherSpells=0","title":"Timer Window"},{"location":"plugins/community-plugins/mq2cast/#custom-events","text":"You can add Custom Events to the INI file in the following format: [Name of Event] duration=<#> event=<\" event text\"> spawntype=<1=pc|2=npc> The duration is in seconds. The event is the text that you see on the screen when you want the event to occur. An example is below: [NPC Gating] duration=5 event=\"#SpawnName# begins to cast the gate spell.\" spawntype=2 [NPC Complete Healing] duration=10 event=\"#SpawnName# begins to cast a spell.\" spawntype=2 [PC Complete Healing] duration=10 event=\"#SpawnName# begins to cast a spell.\" spawntype=1 [Redfang Despawn] duration=240 event=\"An ear-piercing screech reverberates throughout the surreal cavernous Demi-Plane of Blood, announcing the arrival of Redfang.\"","title":"Custom Events"},{"location":"plugins/community-plugins/mq2cecho/","text":"MQ2CEcho \u00b6 Description \u00b6 Plugin to help colorize text in the MQ2 Window. Thank you for sharing htw! This plugin is included in the main source download. Link to the latest stable source: 1 Commands \u00b6 b = black g = green m = magenta o = orange p = purple r = red t = cyan u = blue w = white y = yellow x = default (whatever color was active immediately prior to the last color change; no -x btw) So example, \\au = blue, \\a-u = dark blue. \\aw = white, \\a-w = dark white \\(light gray\\) The 2 functions are the same, just one of them echoes the debug header mq2 does, i.e. MQ2 before your text output, the other doesn't. example: /cecho \\arThis is a \\attest\\ax.\\n\\agAll done, let's show a backslash: \\am\\","title":"MQ2Cecho"},{"location":"plugins/community-plugins/mq2cecho/#mq2cecho","text":"","title":"MQ2CEcho"},{"location":"plugins/community-plugins/mq2cecho/#description","text":"Plugin to help colorize text in the MQ2 Window. Thank you for sharing htw! This plugin is included in the main source download. Link to the latest stable source: 1","title":"Description"},{"location":"plugins/community-plugins/mq2cecho/#commands","text":"b = black g = green m = magenta o = orange p = purple r = red t = cyan u = blue w = white y = yellow x = default (whatever color was active immediately prior to the last color change; no -x btw) So example, \\au = blue, \\a-u = dark blue. \\aw = white, \\a-w = dark white \\(light gray\\) The 2 functions are the same, just one of them echoes the debug header mq2 does, i.e. MQ2 before your text output, the other doesn't. example: /cecho \\arThis is a \\attest\\ax.\\n\\agAll done, let's show a backslash: \\am\\","title":"Commands"},{"location":"plugins/community-plugins/mq2chatevents/","text":"MQ2ChatEvents \u00b6 Description \u00b6 MQ2ChatEvents The purpose of this plugin is to handle chat events in various ways. When a string \\(and optionally a corresponding color\\) is matched, several possible actions can be taken. Events are defined in the .ini file and can be enabled per character_server. I've used this as a general replacement for in-game macros, Audio Triggers, and even some tasks I wanted available outside of a running MQ macro. I realize there are other plugins that do these various pieces individually, but I liked the idea of having it all under one configuration. Parts of the code were pieced together from other plugins and I tried to give credit where appropriate. You can find the latest version of MQ2ChatEvents here . Features \u00b6 Match strings and perform an event Play a sound Up to 100 different matchable strings per event Use in-game variables in matchable strings Handy for generating custom voice sound files: http://www2.research.att.com/~ttsweb/tts/demo.php Display a popup Define popup text, including the full text of the matched string Define popup color Define popup duration Execute Commands Up to 100 commands per event Use in-game variables in commands. One command executed per pulse Display chat that gets lost while zoning This information used to be seen by OnIncomingChat \\) even though it was not displayed to the screen by the client. At that time, the messages could be captured and then printed after zoning was complete. Unfortunately, it looks like those messages are no longer seen by OnIncomingChat\\( --- It's amazing that SOE has never fixed this. I left the functionality in the plugin, but turned the default options off since it no longer works as it originally did. Commands \u00b6 Usage: /ce \\ Sound : Toggles playing of custom sounds Popup : Toggles displaying of custom popups MissedChat : Toggles popup notification after missing chat while zoning MissedChatEcho : Toggles echoing of missed chat to MQ window Commands : Toggles executing custom commands Verbose : Toggles verbosity on command execution. Echos the command before executing it (mostly to test variable substitution) On : Turns plugin On Off : Turns plugin Off Reload : Reload INI file Help : Displays the in game commands and shows the current settings INI \u00b6 INI Event Options: MatchString#=Chat string to match MatchColor#=Color to match. This must be the string name of a color defined in EQData.h Soundfile=Location of a .wav file to play when a match is found PopupText=Text to display as a popup when a match is found PopupColor=The color of the displayed popup when a match is found (again from EQData.h) PopupDuration=Time in ms that the popup should remain on screen Command#=Command to execute when a match is found. Examples \u00b6 [JoinGroup] MatchString1=${PuppetMaster} invites you to join a group Command1=/nomodkey /notify GroupWindow GW_FollowButton leftmouseup [AttackThis] MatchString1=AttackThis Command1=/squelch /stick off Command2=/melee on Command3=/if (${Me.CleanName.Equal[${MA1}]}) /target ${Spawn[${MATarget}]} Command4=/if (${Me.CleanName.Equal[${MA1}]}) /face Command5=/if (${Me.CleanName.Equal[${MA1}]}) /stick Command7=/if (${Me.CleanName.Equal[${MA1}]}) /killthis Command8=/rdpause off [TellIn] MatchString1=tells you MatchString2=told you MatchColor1=USERCOLOR_TELL Soundfile=g:\\\\mq2\\\\sounds\\\\message-inbound.wav PopupText= PopupColor= PopupDuration= Command1=/if (${Me.CleanName.NotEqual[${PuppetMaster}]}) /bct ${PuppetMaster} \"Received a TELL on <${Me.CleanName}>: #FULLTEXT#\" [TellOut] MatchString1=You tell MatchString2=You told MatchColor1=USERCOLOR_ECHO_TELL Soundfile=g:\\\\mq2\\\\sounds\\\\message-outbound.wav PopupText= PopupColor= PopupDuration= Command= [TellRelay] MatchString1=Received a TELL on < PopupText=---Received a tell on a bot!--- Soundfile=g:\\\\mq2\\\\sounds\\\\message-inbound.wav PopupDuration=10000 [OMMGaze] MatchString1=You feel a gaze of deadly power focusing on you. Soundfile=d:\\\\mq2\\\\sounds\\\\gaze.wav PopupText=---!!! GAZE !!! Click your mask now!--- PopupColor=CONCOLOR_RED PopupDuration=7000 Command1=/nomodkey /itemnotify ${FindItem[Mirrored Mask].InvSlot} rightmouseup [gate] MatchString1=begins to cast the gate spell. Soundfile=g:\\\\mq2\\\\sounds\\\\gate.wav PopupText=#FULLTEXT# PopupColor= PopupDuration= Command= [GoM] MatchString1=You have been granted a gift of mana! MatchString2=You have been granted a gift of radiant mana! MatchString3=You have been granted a gift of exquisite radiant mana! MatchString4=You have been granted a gift of amazing exquisite radiant mana! MatchString5=You've been granted a gift of dreamlike exquisite radiant mana! MatchString6=You've been granted a gift of ascendant exquisite radiant mana! MatchString7=You are granted a gift of phantasmal exquisite radiant mana MatchString8=You are granted a gift of gracious mana Soundfile=g:\\\\mq2\\\\sounds\\\\hoo-ah1.wav PopupText=~~ Gift of Mana! ~~ PopupColor= PopupDuration= Command= [DT] MatchString1=A dire disease creeps through your veins MatchString2=You feel the cold grip of death looming over you. MatchString3=You sense your doom approaching Soundfile=g:\\\\mq2\\\\sounds\\\\deathtouch.wav PopupText=~~ DT ~~ PopupColor= PopupDuration= Command1=/bca I'm Death Touched! [DA] MatchString1=You can't cast spells while invulnerable! Soundfile=g:\\\\mq2\\\\sounds\\\\DA.wav PopupText= PopupColor= PopupDuration= Command= [MercDefDisc] MatchString1=tells the group, 'Initiating Fortitude Discipline.' MatchString2=tells the group, 'Initiating Final Stand Discipline Rk. II.' Soundfile=g:\\\\mq2\\\\sounds\\\\MercDefensiveDisc.wav PopupText=Merc defensive disc PopupColor= PopupDuration=5000","title":"MQ2ChatEvents"},{"location":"plugins/community-plugins/mq2chatevents/#mq2chatevents","text":"","title":"MQ2ChatEvents"},{"location":"plugins/community-plugins/mq2chatevents/#description","text":"MQ2ChatEvents The purpose of this plugin is to handle chat events in various ways. When a string \\(and optionally a corresponding color\\) is matched, several possible actions can be taken. Events are defined in the .ini file and can be enabled per character_server. I've used this as a general replacement for in-game macros, Audio Triggers, and even some tasks I wanted available outside of a running MQ macro. I realize there are other plugins that do these various pieces individually, but I liked the idea of having it all under one configuration. Parts of the code were pieced together from other plugins and I tried to give credit where appropriate. You can find the latest version of MQ2ChatEvents here .","title":"Description"},{"location":"plugins/community-plugins/mq2chatevents/#features","text":"Match strings and perform an event Play a sound Up to 100 different matchable strings per event Use in-game variables in matchable strings Handy for generating custom voice sound files: http://www2.research.att.com/~ttsweb/tts/demo.php Display a popup Define popup text, including the full text of the matched string Define popup color Define popup duration Execute Commands Up to 100 commands per event Use in-game variables in commands. One command executed per pulse Display chat that gets lost while zoning This information used to be seen by OnIncomingChat \\) even though it was not displayed to the screen by the client. At that time, the messages could be captured and then printed after zoning was complete. Unfortunately, it looks like those messages are no longer seen by OnIncomingChat\\( --- It's amazing that SOE has never fixed this. I left the functionality in the plugin, but turned the default options off since it no longer works as it originally did.","title":"Features"},{"location":"plugins/community-plugins/mq2chatevents/#commands","text":"Usage: /ce \\ Sound : Toggles playing of custom sounds Popup : Toggles displaying of custom popups MissedChat : Toggles popup notification after missing chat while zoning MissedChatEcho : Toggles echoing of missed chat to MQ window Commands : Toggles executing custom commands Verbose : Toggles verbosity on command execution. Echos the command before executing it (mostly to test variable substitution) On : Turns plugin On Off : Turns plugin Off Reload : Reload INI file Help : Displays the in game commands and shows the current settings","title":"Commands"},{"location":"plugins/community-plugins/mq2chatevents/#ini","text":"INI Event Options: MatchString#=Chat string to match MatchColor#=Color to match. This must be the string name of a color defined in EQData.h Soundfile=Location of a .wav file to play when a match is found PopupText=Text to display as a popup when a match is found PopupColor=The color of the displayed popup when a match is found (again from EQData.h) PopupDuration=Time in ms that the popup should remain on screen Command#=Command to execute when a match is found.","title":"INI"},{"location":"plugins/community-plugins/mq2chatevents/#examples","text":"[JoinGroup] MatchString1=${PuppetMaster} invites you to join a group Command1=/nomodkey /notify GroupWindow GW_FollowButton leftmouseup [AttackThis] MatchString1=AttackThis Command1=/squelch /stick off Command2=/melee on Command3=/if (${Me.CleanName.Equal[${MA1}]}) /target ${Spawn[${MATarget}]} Command4=/if (${Me.CleanName.Equal[${MA1}]}) /face Command5=/if (${Me.CleanName.Equal[${MA1}]}) /stick Command7=/if (${Me.CleanName.Equal[${MA1}]}) /killthis Command8=/rdpause off [TellIn] MatchString1=tells you MatchString2=told you MatchColor1=USERCOLOR_TELL Soundfile=g:\\\\mq2\\\\sounds\\\\message-inbound.wav PopupText= PopupColor= PopupDuration= Command1=/if (${Me.CleanName.NotEqual[${PuppetMaster}]}) /bct ${PuppetMaster} \"Received a TELL on <${Me.CleanName}>: #FULLTEXT#\" [TellOut] MatchString1=You tell MatchString2=You told MatchColor1=USERCOLOR_ECHO_TELL Soundfile=g:\\\\mq2\\\\sounds\\\\message-outbound.wav PopupText= PopupColor= PopupDuration= Command= [TellRelay] MatchString1=Received a TELL on < PopupText=---Received a tell on a bot!--- Soundfile=g:\\\\mq2\\\\sounds\\\\message-inbound.wav PopupDuration=10000 [OMMGaze] MatchString1=You feel a gaze of deadly power focusing on you. Soundfile=d:\\\\mq2\\\\sounds\\\\gaze.wav PopupText=---!!! GAZE !!! Click your mask now!--- PopupColor=CONCOLOR_RED PopupDuration=7000 Command1=/nomodkey /itemnotify ${FindItem[Mirrored Mask].InvSlot} rightmouseup [gate] MatchString1=begins to cast the gate spell. Soundfile=g:\\\\mq2\\\\sounds\\\\gate.wav PopupText=#FULLTEXT# PopupColor= PopupDuration= Command= [GoM] MatchString1=You have been granted a gift of mana! MatchString2=You have been granted a gift of radiant mana! MatchString3=You have been granted a gift of exquisite radiant mana! MatchString4=You have been granted a gift of amazing exquisite radiant mana! MatchString5=You've been granted a gift of dreamlike exquisite radiant mana! MatchString6=You've been granted a gift of ascendant exquisite radiant mana! MatchString7=You are granted a gift of phantasmal exquisite radiant mana MatchString8=You are granted a gift of gracious mana Soundfile=g:\\\\mq2\\\\sounds\\\\hoo-ah1.wav PopupText=~~ Gift of Mana! ~~ PopupColor= PopupDuration= Command= [DT] MatchString1=A dire disease creeps through your veins MatchString2=You feel the cold grip of death looming over you. MatchString3=You sense your doom approaching Soundfile=g:\\\\mq2\\\\sounds\\\\deathtouch.wav PopupText=~~ DT ~~ PopupColor= PopupDuration= Command1=/bca I'm Death Touched! [DA] MatchString1=You can't cast spells while invulnerable! Soundfile=g:\\\\mq2\\\\sounds\\\\DA.wav PopupText= PopupColor= PopupDuration= Command= [MercDefDisc] MatchString1=tells the group, 'Initiating Fortitude Discipline.' MatchString2=tells the group, 'Initiating Final Stand Discipline Rk. II.' Soundfile=g:\\\\mq2\\\\sounds\\\\MercDefensiveDisc.wav PopupText=Merc defensive disc PopupColor= PopupDuration=5000","title":"Examples"},{"location":"plugins/community-plugins/mq2clip/","text":"MQ2Clip \u00b6 Description \u00b6 MQ2Clip \\(by Cr4zyb4rd\\) is a plugin that adjusts the EQ clip plane to a set amount \\(usually the minimum\\) when the session is in the background. This is fantastic for multiple EQ sessions on the same PC, since it reduces the CPU load by lowering the clip plane on all background sessions. You can find the latest version of MQ2Clip here . Commands \u00b6 /goodfps # Sets the background FPS that you'd consider \"good\".","title":"MQ2Clip"},{"location":"plugins/community-plugins/mq2clip/#mq2clip","text":"","title":"MQ2Clip"},{"location":"plugins/community-plugins/mq2clip/#description","text":"MQ2Clip \\(by Cr4zyb4rd\\) is a plugin that adjusts the EQ clip plane to a set amount \\(usually the minimum\\) when the session is in the background. This is fantastic for multiple EQ sessions on the same PC, since it reduces the CPU load by lowering the clip plane on all background sessions. You can find the latest version of MQ2Clip here .","title":"Description"},{"location":"plugins/community-plugins/mq2clip/#commands","text":"/goodfps # Sets the background FPS that you'd consider \"good\".","title":"Commands"},{"location":"plugins/community-plugins/mq2cursor/","text":"MQ2Cursor \u00b6 Description \u00b6 MQ2Cursor by s0rCieR is a plugin that tries to keep your cursor free of items. It was inspired by the plugins MQ2FeedMe and MQ2AutoDestroy. It also tries to keep you above a certain hunger/thirst level \\(so that you don't eat your stat food\\) . Additionally, it can be used to loot your own corpse. MQ2Cursor can be found here , in the VIP forums. Features: Auto Keep item from list up to a certain quantity. Consume, Drop, or Destroy when quantity is reached. Auto Sleep with certain windows are open (Spellbook, Casting, Bank, Give, Merchant, Trade, GuildTributemaster, TributeMaster, GuildBank, Inventory but not Loot window, Loot window but not Inventory). Quiet/Silent Operating Mode and Global On/Off flags. Autoloot your corpse when loot Window Up. All settings are saved to the INI file _.ini. Commands \u00b6 /cursor on|off|auto Turn plugin On/Off or Toggle /cursor silent on|off|auto Turn Quiet Mode On/Off or Toggle /cursor feeding Turn Feeding Mode On/Off or Toggle /cursor dropping Turn Dropping Mode On/Off or Toggle /cursor load|save Save/Load information from the INI file. /cursor rem \\(ove\\) |del \\(ete\\) id Remove ID or \\(Item on Cursor\\) . /cursor list partial name List items in the cursor list along with their status \\(drop, protected, etc\\) . A partial name can be supplied to further narrow down the list, but please remember that the partial name is case sensitive. /cursor al \\(l\\(ways\\) Always keep those \\(Item On Cursor\\) . /cursor # st<span class=\"arithmatex\">\\(acks\\)</span> Keep quantity # \\(Item On Cursor\\) . /cursor random # Random humanish delay in ms 0=off. /keep Keep Item on Cursor \\(and don't add it to the list\\) . /lootme on|off|auto Turn Plugin On/Off or Toggle. /lootme silent on|off|auto Turn Quiet Mode On/Off or Toggle. Examples \u00b6 /cursor 2 st /cursor rem 1685 /cursor silent on /cursor list Water","title":"MQ2Cursor"},{"location":"plugins/community-plugins/mq2cursor/#mq2cursor","text":"","title":"MQ2Cursor"},{"location":"plugins/community-plugins/mq2cursor/#description","text":"MQ2Cursor by s0rCieR is a plugin that tries to keep your cursor free of items. It was inspired by the plugins MQ2FeedMe and MQ2AutoDestroy. It also tries to keep you above a certain hunger/thirst level \\(so that you don't eat your stat food\\) . Additionally, it can be used to loot your own corpse. MQ2Cursor can be found here , in the VIP forums. Features: Auto Keep item from list up to a certain quantity. Consume, Drop, or Destroy when quantity is reached. Auto Sleep with certain windows are open (Spellbook, Casting, Bank, Give, Merchant, Trade, GuildTributemaster, TributeMaster, GuildBank, Inventory but not Loot window, Loot window but not Inventory). Quiet/Silent Operating Mode and Global On/Off flags. Autoloot your corpse when loot Window Up. All settings are saved to the INI file _.ini.","title":"Description"},{"location":"plugins/community-plugins/mq2cursor/#commands","text":"/cursor on|off|auto Turn plugin On/Off or Toggle /cursor silent on|off|auto Turn Quiet Mode On/Off or Toggle /cursor feeding Turn Feeding Mode On/Off or Toggle /cursor dropping Turn Dropping Mode On/Off or Toggle /cursor load|save Save/Load information from the INI file. /cursor rem \\(ove\\) |del \\(ete\\) id Remove ID or \\(Item on Cursor\\) . /cursor list partial name List items in the cursor list along with their status \\(drop, protected, etc\\) . A partial name can be supplied to further narrow down the list, but please remember that the partial name is case sensitive. /cursor al \\(l\\(ways\\) Always keep those \\(Item On Cursor\\) . /cursor # st<span class=\"arithmatex\">\\(acks\\)</span> Keep quantity # \\(Item On Cursor\\) . /cursor random # Random humanish delay in ms 0=off. /keep Keep Item on Cursor \\(and don't add it to the list\\) . /lootme on|off|auto Turn Plugin On/Off or Toggle. /lootme silent on|off|auto Turn Quiet Mode On/Off or Toggle.","title":"Commands"},{"location":"plugins/community-plugins/mq2cursor/#examples","text":"/cursor 2 st /cursor rem 1685 /cursor silent on /cursor list Water","title":"Examples"},{"location":"plugins/community-plugins/mq2debuffs/","text":"MQ2Debuffs \u00b6 Description \u00b6 This plugin is designed to help with curing detrimental effects. It is used to reports harmful effects, number of curse/disease/poison counters and various other detrimentals. Author: PinkFloyd33 Author: s0rcier Version: 1.2 Date: 20061223 v2.0 - Eqmule 07-22-2016 - Added string safety. MQ2Debuffs \u00b6 MQ2Debuffs was posted to the VIP section of MQ2 by pinkfloydx33 you can read the thread by following This Link. \\(VIP REQUIRED\\) Updated Apr 03, 2016 by Trevyn here Updated July 22, 2016 by EQMule: included in MQ2Update TLO \u00b6 Debuff (bool True if you have debuffs on that have counters on them, false if not) Debuff.Poisoned (int # of poison counters on you) Debuff.Diseased (int # of disease counters on you) Debuff.Cursed (int # of curse counters on you) Debuff.Corrupted (int # of corruption counters on you) Debuff.Poisons (int # of poison spells affecting you) Debuff.Diseases (int # of disease spells affecting you) Debuff.Curses (int # of curse spells affecting you) Debuff.Corruptions (int # of corruption spells affecting you) Debuff.Count (int # of debuffs that need cured, does not include snare) Debuff.HPDrain (int Amount of HP you are losing per tick from debuffs. This value is POSITIVE) Debuff.HPDrain[X] (int X= Disease, Poison, Curse, All: Number of specific counters effecting HP) Debuff.ManaDrain (int Amount of Mana you are losing per tick from debuffs. This value is POSITIVE) Debuff.ManaDrain[X] (int X= Disease, Poison, Curse, All: Number of specific counters effecting Mana) Debuff.EnduranceDrain (int Amount of Endurance you are losing per tick from debuffs. This value is POSITIVE) Debuff.EnduranceDrain[X] (int X= Disease, Poison, Curse, All: Number of specific counters effecting Endurance) Debuff.Slowed (bool True if you are Slowed (melee attacks), False if not) Debuff.SpellSlowed (bool True if you are SpellSlowed (spell haste reduction), False if not) Debuff.Snared (bool True if your are Snared, False if not) Debuff.ManaCost (bool True if your Spell Mana Cost has been raised, False if not) Debuff.CastingLevel (bool True if your Effective Casting Level has been reduced, False if not) Debuff.HealingEff (bool True if your Healing Effectiveness has been reduced, False if not) Debuff.SpellDmgEff (bool True if your Spell Damage Effectiveness has been reduced, False if not) Debuff.Blind (bool True if you are blind) Debuff.Charmed (bool True if you are charmed) Debuff.Feared (bool True if you are feared) Debuff.Silenced (bool True if you are silenced) Debuff.Invulnerable (bool True if you are invulnerable) Debuff.Detrimentals (bool True if you have any detrimental effects on you) Debuff.Counters (int # of poison/disease/curse/corruption counters on yourself) Debuff.Rooted (bool True if you are rooted) The TLO has been enhanced, revamped, recored, to be able to get Debuff Informations others then selfbuff. Debuff.X or Debuff[self].X or Debuff[myself].X : return infos for buff from self. Debuff[pet].X or Debuff[warder].X : return infos for buff from pet. Debuff[2899].X : return infos for buff for spell \"feeblemind\". Debuff[5682].X : return infos for buff for spell \"Chains of Anguish\". Debuff[5682 2899 887].X : return infos for buff from this bufflistid.","title":"MQ2Debuffs"},{"location":"plugins/community-plugins/mq2debuffs/#mq2debuffs","text":"","title":"MQ2Debuffs"},{"location":"plugins/community-plugins/mq2debuffs/#description","text":"This plugin is designed to help with curing detrimental effects. It is used to reports harmful effects, number of curse/disease/poison counters and various other detrimentals. Author: PinkFloyd33 Author: s0rcier Version: 1.2 Date: 20061223 v2.0 - Eqmule 07-22-2016 - Added string safety.","title":"Description"},{"location":"plugins/community-plugins/mq2debuffs/#mq2debuffs_1","text":"MQ2Debuffs was posted to the VIP section of MQ2 by pinkfloydx33 you can read the thread by following This Link. \\(VIP REQUIRED\\) Updated Apr 03, 2016 by Trevyn here Updated July 22, 2016 by EQMule: included in MQ2Update","title":"MQ2Debuffs"},{"location":"plugins/community-plugins/mq2debuffs/#tlo","text":"Debuff (bool True if you have debuffs on that have counters on them, false if not) Debuff.Poisoned (int # of poison counters on you) Debuff.Diseased (int # of disease counters on you) Debuff.Cursed (int # of curse counters on you) Debuff.Corrupted (int # of corruption counters on you) Debuff.Poisons (int # of poison spells affecting you) Debuff.Diseases (int # of disease spells affecting you) Debuff.Curses (int # of curse spells affecting you) Debuff.Corruptions (int # of corruption spells affecting you) Debuff.Count (int # of debuffs that need cured, does not include snare) Debuff.HPDrain (int Amount of HP you are losing per tick from debuffs. This value is POSITIVE) Debuff.HPDrain[X] (int X= Disease, Poison, Curse, All: Number of specific counters effecting HP) Debuff.ManaDrain (int Amount of Mana you are losing per tick from debuffs. This value is POSITIVE) Debuff.ManaDrain[X] (int X= Disease, Poison, Curse, All: Number of specific counters effecting Mana) Debuff.EnduranceDrain (int Amount of Endurance you are losing per tick from debuffs. This value is POSITIVE) Debuff.EnduranceDrain[X] (int X= Disease, Poison, Curse, All: Number of specific counters effecting Endurance) Debuff.Slowed (bool True if you are Slowed (melee attacks), False if not) Debuff.SpellSlowed (bool True if you are SpellSlowed (spell haste reduction), False if not) Debuff.Snared (bool True if your are Snared, False if not) Debuff.ManaCost (bool True if your Spell Mana Cost has been raised, False if not) Debuff.CastingLevel (bool True if your Effective Casting Level has been reduced, False if not) Debuff.HealingEff (bool True if your Healing Effectiveness has been reduced, False if not) Debuff.SpellDmgEff (bool True if your Spell Damage Effectiveness has been reduced, False if not) Debuff.Blind (bool True if you are blind) Debuff.Charmed (bool True if you are charmed) Debuff.Feared (bool True if you are feared) Debuff.Silenced (bool True if you are silenced) Debuff.Invulnerable (bool True if you are invulnerable) Debuff.Detrimentals (bool True if you have any detrimental effects on you) Debuff.Counters (int # of poison/disease/curse/corruption counters on yourself) Debuff.Rooted (bool True if you are rooted) The TLO has been enhanced, revamped, recored, to be able to get Debuff Informations others then selfbuff. Debuff.X or Debuff[self].X or Debuff[myself].X : return infos for buff from self. Debuff[pet].X or Debuff[warder].X : return infos for buff from pet. Debuff[2899].X : return infos for buff for spell \"feeblemind\". Debuff[5682].X : return infos for buff for spell \"Chains of Anguish\". Debuff[5682 2899 887].X : return infos for buff from this bufflistid.","title":"TLO"},{"location":"plugins/community-plugins/mq2dps/","text":"MQ2DPS \u00b6 MQ2Dps Display someone melee and non melee dmg \\(procs, casts, kicks, backstabs...\\) and DPS. ex: Jarr total dmg: 5600 \\(345\\) in 10, DPS : 560 total \\(non melee\\) in TIME \\(seconds\\) , DPS total/time All Damage Related Text MUST Be Allowed Developers \u00b6 Shire - 12-09-03 - Original Source Not Sure on Others, Someone Else Will Need to Add Them Commands \u00b6 /dps :* on|off|reset Activate dps parsing or not. reset parser Example \u00b6 /dps on Would Turn on the DPS Parsing Variables \u00b6 ${Dps.Version} ${Dps 0 .Dps} ${Dps 0 .Name} ${Dps.Me} ${Dps.MyPet} \\(id start at value 0, plugin internal id, not ingame spawn id.\\) Changes \u00b6 04/30/2004 v0.9.94 \u00b6 New param system ${Dps.Version} , ${Dps 0 .Dps} , ${Dps 0 .Name} , ${Dps.Me} , ${Dps.MyPet} Replace 0 by the index. Added options \"focus\", \"/dps focus %target%\", MAY CAUSE CTDs. Added Window infos saved into INI. But not working now. Added absolutedps true,false , Timer used for calculating player's dps is the same.\" 'This release is mainly for the window to work with new params system.' 03/20/2004 v0.9.93 \u00b6 Fixed assasination. Added Sorting by dps,melee,cast,total damage. Fixed some compilation warning \\(CXStr\\(\\) ) Added options \"petfollowowner\", \"/dps petfollowowner true\", if True pet'stats will be grouped with pet's owner. Extended window to display 8 char and player and player's pet dps. 12/13/2003 v0.9.92 \u00b6 Fixed Warder not being displayed under there owner. Fixed event mob dead. \\(need a bit more work\\) Mob name will appear red. Added a window that show real time DPS \\(only 4 first\\) . Added some command and param: /dps on|off|reset|showwindow) \\(dps\\(id\\),\\) dpsname \\(id\\) ,$dpsversion id start at value 0. 12/10/2003 v0.9.91 \u00b6 Fixed Mob total hp. Pet's owner will always been displayed now even if they don't do any damages. Changed the stats separator line to '----------------' Changed __time64_t data type to time_t \\(time.h\\) to make it VS 6 friendly. Let me know if it compiles now. 12/09/2003 v0.9.9 \u00b6 Released Screenshots \u00b6 Click Here For Screenshot \\(Not Working\\)","title":"MQ2DPS"},{"location":"plugins/community-plugins/mq2dps/#mq2dps","text":"MQ2Dps Display someone melee and non melee dmg \\(procs, casts, kicks, backstabs...\\) and DPS. ex: Jarr total dmg: 5600 \\(345\\) in 10, DPS : 560 total \\(non melee\\) in TIME \\(seconds\\) , DPS total/time All Damage Related Text MUST Be Allowed","title":"MQ2DPS"},{"location":"plugins/community-plugins/mq2dps/#developers","text":"Shire - 12-09-03 - Original Source Not Sure on Others, Someone Else Will Need to Add Them","title":"Developers"},{"location":"plugins/community-plugins/mq2dps/#commands","text":"/dps :* on|off|reset Activate dps parsing or not. reset parser","title":"Commands"},{"location":"plugins/community-plugins/mq2dps/#example","text":"/dps on Would Turn on the DPS Parsing","title":"Example"},{"location":"plugins/community-plugins/mq2dps/#variables","text":"${Dps.Version} ${Dps 0 .Dps} ${Dps 0 .Name} ${Dps.Me} ${Dps.MyPet} \\(id start at value 0, plugin internal id, not ingame spawn id.\\)","title":"Variables"},{"location":"plugins/community-plugins/mq2dps/#changes","text":"","title":"Changes"},{"location":"plugins/community-plugins/mq2dps/#04302004-v0994","text":"New param system ${Dps.Version} , ${Dps 0 .Dps} , ${Dps 0 .Name} , ${Dps.Me} , ${Dps.MyPet} Replace 0 by the index. Added options \"focus\", \"/dps focus %target%\", MAY CAUSE CTDs. Added Window infos saved into INI. But not working now. Added absolutedps true,false , Timer used for calculating player's dps is the same.\" 'This release is mainly for the window to work with new params system.'","title":"04/30/2004 v0.9.94"},{"location":"plugins/community-plugins/mq2dps/#03202004-v0993","text":"Fixed assasination. Added Sorting by dps,melee,cast,total damage. Fixed some compilation warning \\(CXStr\\(\\) ) Added options \"petfollowowner\", \"/dps petfollowowner true\", if True pet'stats will be grouped with pet's owner. Extended window to display 8 char and player and player's pet dps.","title":"03/20/2004 v0.9.93"},{"location":"plugins/community-plugins/mq2dps/#12132003-v0992","text":"Fixed Warder not being displayed under there owner. Fixed event mob dead. \\(need a bit more work\\) Mob name will appear red. Added a window that show real time DPS \\(only 4 first\\) . Added some command and param: /dps on|off|reset|showwindow) \\(dps\\(id\\),\\) dpsname \\(id\\) ,$dpsversion id start at value 0.","title":"12/13/2003 v0.9.92"},{"location":"plugins/community-plugins/mq2dps/#12102003-v0991","text":"Fixed Mob total hp. Pet's owner will always been displayed now even if they don't do any damages. Changed the stats separator line to '----------------' Changed __time64_t data type to time_t \\(time.h\\) to make it VS 6 friendly. Let me know if it compiles now.","title":"12/10/2003 v0.9.91"},{"location":"plugins/community-plugins/mq2dps/#12092003-v099","text":"Released","title":"12/09/2003 v0.9.9"},{"location":"plugins/community-plugins/mq2dps/#screenshots","text":"Click Here For Screenshot \\(Not Working\\)","title":"Screenshots"},{"location":"plugins/community-plugins/mq2dpsadv/","text":"MQ2DPSAdv \u00b6 Description \u00b6 MQ2DPSAdv CREATED BY WARNEN 2008-2009 You can find the latest version of MQ2DPSAdv here . Commands \u00b6 Needs additional information Utilizes an ingame UI window to interact with the plugin. You will need to copy the \"MQUI_DPSAdvWnd.xml\" from the forum post, and place it inside your preferred UI folder. Once ingame, load the plugin, then reload your UI.","title":"MQ2DPSAdv"},{"location":"plugins/community-plugins/mq2dpsadv/#mq2dpsadv","text":"","title":"MQ2DPSAdv"},{"location":"plugins/community-plugins/mq2dpsadv/#description","text":"MQ2DPSAdv CREATED BY WARNEN 2008-2009 You can find the latest version of MQ2DPSAdv here .","title":"Description"},{"location":"plugins/community-plugins/mq2dpsadv/#commands","text":"Needs additional information Utilizes an ingame UI window to interact with the plugin. You will need to copy the \"MQUI_DPSAdvWnd.xml\" from the forum post, and place it inside your preferred UI folder. Once ingame, load the plugin, then reload your UI.","title":"Commands"},{"location":"plugins/community-plugins/mq2events/","text":"MQ2Events \u00b6 Description \u00b6 Commands \u00b6 '/event [ load*</span> | deletename | settriggernametrigger text | setcommandnamecommand text | *list'' ] Variables \u00b6 EventArg1 these are set acording to last event triggered and correspond to #1# .. #9# EventArg2 these are not cleared so you can have one event use #9# and once set it will stay set until another #9# is encountered. EventArg3 EventArg4 EventArg5 EventArg6 EventArg7 EventArg8 EventArg9 INI file \u00b6 MQ2Events_CharacterName.ini Format: [eventname] trigger=trigger text command=command to execute when triggered Examples \u00b6 INI Entries \u00b6 [enrage] trigger=|${Target.DisplayName}| has become ENRAGED#2# command=/attack off [relaytell] trigger=#1# tells you, #2# command=/tell relaytargetname ${EventArg1} told me, '${EventArg2.Mid[2,${Math.Calc[${EventArg2.Length}-2]}]}' [group] trigger=#1#To join the group, click on the 'FOLLOW' option, or 'DISBAND' to cancel.#2# command=/timed ${Math.Calc[3+${Math.Rand[4]}].Int}s /keypress ctrl+i [raid] trigger=#1#To join the raid click the accept button in the raid window or type /raidaccept.#2# command=/timed ${Math.Calc[3+${Math.Rand[4]}].Int}s /raidaccept","title":"MQ2Events"},{"location":"plugins/community-plugins/mq2events/#mq2events","text":"","title":"MQ2Events"},{"location":"plugins/community-plugins/mq2events/#description","text":"","title":"Description"},{"location":"plugins/community-plugins/mq2events/#commands","text":"'/event [ load*</span> | deletename | settriggernametrigger text | setcommandnamecommand text | *list'' ]","title":"Commands"},{"location":"plugins/community-plugins/mq2events/#variables","text":"EventArg1 these are set acording to last event triggered and correspond to #1# .. #9# EventArg2 these are not cleared so you can have one event use #9# and once set it will stay set until another #9# is encountered. EventArg3 EventArg4 EventArg5 EventArg6 EventArg7 EventArg8 EventArg9","title":"Variables"},{"location":"plugins/community-plugins/mq2events/#ini-file","text":"MQ2Events_CharacterName.ini Format: [eventname] trigger=trigger text command=command to execute when triggered","title":"INI file"},{"location":"plugins/community-plugins/mq2events/#examples","text":"","title":"Examples"},{"location":"plugins/community-plugins/mq2events/#ini-entries","text":"[enrage] trigger=|${Target.DisplayName}| has become ENRAGED#2# command=/attack off [relaytell] trigger=#1# tells you, #2# command=/tell relaytargetname ${EventArg1} told me, '${EventArg2.Mid[2,${Math.Calc[${EventArg2.Length}-2]}]}' [group] trigger=#1#To join the group, click on the 'FOLLOW' option, or 'DISBAND' to cancel.#2# command=/timed ${Math.Calc[3+${Math.Rand[4]}].Int}s /keypress ctrl+i [raid] trigger=#1#To join the raid click the accept button in the raid window or type /raidaccept.#2# command=/timed ${Math.Calc[3+${Math.Rand[4]}].Int}s /raidaccept","title":"INI Entries"},{"location":"plugins/community-plugins/mq2exchange/","text":"MQ2Exchange \u00b6 Description \u00b6 MQ2Exchange , by Wassup, allows you to exchange items or unequip items without having any inventory windows or bags opened. The thread where this plugin began can be found in the VIP forums here . The current code being maintained by pms can be found here . Commands \u00b6 /exchange itemname\\|itemID slotname\\|slotnumber This exchanges the itemname/itemID into the slotname/slotnumber you define \\(see [Slot Names](../../reference/general/slot-names.md) for names/numbers\\) . If there is an item in that slot already, it will be placed in the first available inventory/bag slot that is of sufficient size for the item. Note: Item names that contain spaces must be enclosed in quotation marks, otherwise quotations marks are not required. /unequip slotname\\|slotnumber Unequips the item at slotname/slotnumber . Examples \u00b6 The following two examples will exchange Staff of Eternal Flames to the mainhand slot: /exchange \"staff of eternal flames\" mainhand /exchange 24789 13 The following two examples will unequip the item in your offhand slot: /unequip offhand /unequip 14 /exchange list gives a list of the equipment slot names and slot numbers. /exchange help gives a list of the commands available.","title":"MQ2Exchange"},{"location":"plugins/community-plugins/mq2exchange/#mq2exchange","text":"","title":"MQ2Exchange"},{"location":"plugins/community-plugins/mq2exchange/#description","text":"MQ2Exchange , by Wassup, allows you to exchange items or unequip items without having any inventory windows or bags opened. The thread where this plugin began can be found in the VIP forums here . The current code being maintained by pms can be found here .","title":"Description"},{"location":"plugins/community-plugins/mq2exchange/#commands","text":"/exchange itemname\\|itemID slotname\\|slotnumber This exchanges the itemname/itemID into the slotname/slotnumber you define \\(see [Slot Names](../../reference/general/slot-names.md) for names/numbers\\) . If there is an item in that slot already, it will be placed in the first available inventory/bag slot that is of sufficient size for the item. Note: Item names that contain spaces must be enclosed in quotation marks, otherwise quotations marks are not required. /unequip slotname\\|slotnumber Unequips the item at slotname/slotnumber .","title":"Commands"},{"location":"plugins/community-plugins/mq2exchange/#examples","text":"The following two examples will exchange Staff of Eternal Flames to the mainhand slot: /exchange \"staff of eternal flames\" mainhand /exchange 24789 13 The following two examples will unequip the item in your offhand slot: /unequip offhand /unequip 14 /exchange list gives a list of the equipment slot names and slot numbers. /exchange help gives a list of the commands available.","title":"Examples"},{"location":"plugins/community-plugins/mq2fakelink/","text":"MQ2FakeLink \u00b6 MQ2Fakelink Creates fake links to \"highlight\" text Source can be found at MQ2::Development::Plugins Forum Here Developers \u00b6 Dok - 08-13-2004 - Original Source Commands \u00b6 /fake :* ' ::*Must start with a / \\(as in /g, /gu, /1, etc\\) ::*use \\[ and ] to create links for text between ::*use \\<> before to link to a different object Example \u00b6 /fake /rs \\<\\> \\[CHEAL ] on \\[%T ] Will link CHEAL and %T over /raidsay Changes \u00b6 2004.08.13 \u00b6 Added ability to link any object with different name Changed trigger from and to \\[ and ] 2004.08.13 \u00b6 Initial Release","title":"MQ2FakeLink"},{"location":"plugins/community-plugins/mq2fakelink/#mq2fakelink","text":"MQ2Fakelink Creates fake links to \"highlight\" text Source can be found at MQ2::Development::Plugins Forum Here","title":"MQ2FakeLink"},{"location":"plugins/community-plugins/mq2fakelink/#developers","text":"Dok - 08-13-2004 - Original Source","title":"Developers"},{"location":"plugins/community-plugins/mq2fakelink/#commands","text":"/fake :* ' ::*Must start with a / \\(as in /g, /gu, /1, etc\\) ::*use \\[ and ] to create links for text between ::*use \\<> before to link to a different object","title":"Commands"},{"location":"plugins/community-plugins/mq2fakelink/#example","text":"/fake /rs \\<\\> \\[CHEAL ] on \\[%T ] Will link CHEAL and %T over /raidsay","title":"Example"},{"location":"plugins/community-plugins/mq2fakelink/#changes","text":"","title":"Changes"},{"location":"plugins/community-plugins/mq2fakelink/#20040813","text":"Added ability to link any object with different name Changed trigger from and to \\[ and ]","title":"2004.08.13"},{"location":"plugins/community-plugins/mq2fakelink/#20040813_1","text":"Initial Release","title":"2004.08.13"},{"location":"plugins/community-plugins/mq2feedme/","text":"MQ2FeedMe \u00b6 Description \u00b6 MQ2Feedme , by s0rCieR, is a plugin which will eat/drink items that you specify, in order to keep your hunger/thirst above a certain level \\(and thus not eat your stat food\\) . It can be found here . **An updated version of the plugin, with a few changes, can be found in this post by jaq.** Commands \u00b6 /autodrink Force manual drinking /autodrink 0 Turn off autodrinking /autodrink # Set thirst level. When ${Me.Thirst} is below this, the plugin will drink for you /autofeed Force manual feeding /autofeed 0 Turn off autofeeding /autofeed # Set hunger level, below which the plugin will automatically eat for you INI File \u00b6 This plugin stores its information in the file MQ2FeedMe.ini. This INI file contains a list of all the food/drink that should be consumed \\(see the sample INI in the first page of the plugin post\\) .","title":"MQ2FeedMe"},{"location":"plugins/community-plugins/mq2feedme/#mq2feedme","text":"","title":"MQ2FeedMe"},{"location":"plugins/community-plugins/mq2feedme/#description","text":"MQ2Feedme , by s0rCieR, is a plugin which will eat/drink items that you specify, in order to keep your hunger/thirst above a certain level \\(and thus not eat your stat food\\) . It can be found here . **An updated version of the plugin, with a few changes, can be found in this post by jaq.**","title":"Description"},{"location":"plugins/community-plugins/mq2feedme/#commands","text":"/autodrink Force manual drinking /autodrink 0 Turn off autodrinking /autodrink # Set thirst level. When ${Me.Thirst} is below this, the plugin will drink for you /autofeed Force manual feeding /autofeed 0 Turn off autofeeding /autofeed # Set hunger level, below which the plugin will automatically eat for you","title":"Commands"},{"location":"plugins/community-plugins/mq2feedme/#ini-file","text":"This plugin stores its information in the file MQ2FeedMe.ini. This INI file contains a list of all the food/drink that should be consumed \\(see the sample INI in the first page of the plugin post\\) .","title":"INI File"},{"location":"plugins/community-plugins/mq2gmcheck/","text":"MQ2GMCheck \u00b6 Description \u00b6 MQ2GMCheck Created by Bushdaka Check to see if a GM is in the zone. This is not fool proof. It is absolutely true that a GM could be right in front of you and you'd never know it. This plugin will simply find those who are in the zone and not gm-invis, or who just came into the zone and were not gm-invised at the time. If a GM comes into the zone already gm-invised, we will not know about that. You can find the latest version of MQ2GMCheck here . Commands \u00b6 /gmcheck on|off - enable/disable scanning for GMs /gmcheck char on|off - toggle chat channel alert /gmcheck chattimer X - set frequency of chant channel alert, default=15s /gmcheck popup on|off - toggle popup alert /gmcheck popuptimer X - set frequency of popup alert, default is 30s /gmcheck audio on|off - toggle audio alert /gmcheck audiotimer X - set frequency of audio alert, default is 30s /gmcheck list - list all known GMs currently in zone /gmcheck reset - reset list of known GMs in zone /gmcheck history - complete history dump /gmcheck zone - history of GMs in this zone /gmcheck server - history of GMs on this server /gmcheck servers - history of GMs on all servers /gmcheck timer X - set scan delay to X seconds, default is 2s /gmcheck help - show the available commands Datatype \u00b6 ${GMCheck} returns TRUE, FALSE, or DISABLED. ${GMCheck.Status} returns TRUE, FALSE, or DISABLED. ${GMCheck.Count} returns the number of GMs known in this zone. audio - put an entry for GMCHECK in the MQ2Sound.ini","title":"MQ2GMCheck"},{"location":"plugins/community-plugins/mq2gmcheck/#mq2gmcheck","text":"","title":"MQ2GMCheck"},{"location":"plugins/community-plugins/mq2gmcheck/#description","text":"MQ2GMCheck Created by Bushdaka Check to see if a GM is in the zone. This is not fool proof. It is absolutely true that a GM could be right in front of you and you'd never know it. This plugin will simply find those who are in the zone and not gm-invis, or who just came into the zone and were not gm-invised at the time. If a GM comes into the zone already gm-invised, we will not know about that. You can find the latest version of MQ2GMCheck here .","title":"Description"},{"location":"plugins/community-plugins/mq2gmcheck/#commands","text":"/gmcheck on|off - enable/disable scanning for GMs /gmcheck char on|off - toggle chat channel alert /gmcheck chattimer X - set frequency of chant channel alert, default=15s /gmcheck popup on|off - toggle popup alert /gmcheck popuptimer X - set frequency of popup alert, default is 30s /gmcheck audio on|off - toggle audio alert /gmcheck audiotimer X - set frequency of audio alert, default is 30s /gmcheck list - list all known GMs currently in zone /gmcheck reset - reset list of known GMs in zone /gmcheck history - complete history dump /gmcheck zone - history of GMs in this zone /gmcheck server - history of GMs on this server /gmcheck servers - history of GMs on all servers /gmcheck timer X - set scan delay to X seconds, default is 2s /gmcheck help - show the available commands","title":"Commands"},{"location":"plugins/community-plugins/mq2gmcheck/#datatype","text":"${GMCheck} returns TRUE, FALSE, or DISABLED. ${GMCheck.Status} returns TRUE, FALSE, or DISABLED. ${GMCheck.Count} returns the number of GMs known in this zone. audio - put an entry for GMCHECK in the MQ2Sound.ini","title":"Datatype"},{"location":"plugins/community-plugins/mq2hudmove/","text":"MQ2HUDMove \u00b6 Description \u00b6 MQ2HUDMove by ieatacid allows you to move HUDs or sections of HUDs easily. The plugin can be downloaded here . It requires the MQ2HUD plugin Features: HUDs can be moved to the location of the cursor, or up/down/left/right by the specified number of units. Individual elements can be moved, or user-specified sections HUD colors can also be changed to a number of preset colors. Commands \u00b6 /hudmove list List all HUDs in the loaded HUD set and all sections in MQ2HUD.ini /hudlist Same as above /hudcolor list List preset colors The following work with the currently loaded HUD /hudmove Move a single HUD /hudmove delete Delete a single HUD /hudmove \\<#> Move a single HUD a specified number of units in whatever direction /hudcolor Change HUD to preset color \\(red, yellow, green, darkgreen, blue, lightblue, purple, lightgrey, darkgrey\\) The following work for sections of HUDs '/hudmove \\<#> ' Move all HUDs within a specified section /hudmove ; \\<#> These comment tags let the user define their own sections, even if they span across multiple ini sections . Examples \u00b6 If we typed \"/hudmove ;section1 right 100\", it would move the HUD elements \"ManaRegen\" and \"BuffCount\" 100 units to the right. [elements] Level=3,339,649,0,255,255,${If[${Target.ID},${Target.Level} - ${Target.Class} - ${Target.Distance} - ${Target.LineOfSight},]} Raid=3,1263,468,0,255,255,${If[${Raid.Members}>0,In Raid - ${Raid.Members},]} TarID=3,172,337,0,255,0,ID: ${Target.ID} ;section1 ManaRegen=3,272,272,0,255,0,MR: ${Me.ManaRegen} BuffCount=3,272,367,0,255,0,Buffs: ${Me.CountBuffs} ;section2 ER=3,172,342,0,255,0,ER: ${Me.AltAbilityTimer[Eldritch Rune].TimeHMS} MGB=3,172,357,0,255,0,MGB: ${Me.AltAbilityTimer[Mass Group Buff].TimeHMS} For now, the only requirement for defining custom sections is that it follows this format: ;name","title":"MQ2HUDMove"},{"location":"plugins/community-plugins/mq2hudmove/#mq2hudmove","text":"","title":"MQ2HUDMove"},{"location":"plugins/community-plugins/mq2hudmove/#description","text":"MQ2HUDMove by ieatacid allows you to move HUDs or sections of HUDs easily. The plugin can be downloaded here . It requires the MQ2HUD plugin Features: HUDs can be moved to the location of the cursor, or up/down/left/right by the specified number of units. Individual elements can be moved, or user-specified sections HUD colors can also be changed to a number of preset colors.","title":"Description"},{"location":"plugins/community-plugins/mq2hudmove/#commands","text":"/hudmove list List all HUDs in the loaded HUD set and all sections in MQ2HUD.ini /hudlist Same as above /hudcolor list List preset colors The following work with the currently loaded HUD /hudmove Move a single HUD /hudmove delete Delete a single HUD /hudmove \\<#> Move a single HUD a specified number of units in whatever direction /hudcolor Change HUD to preset color \\(red, yellow, green, darkgreen, blue, lightblue, purple, lightgrey, darkgrey\\) The following work for sections of HUDs '/hudmove \\<#> ' Move all HUDs within a specified section /hudmove ; \\<#> These comment tags let the user define their own sections, even if they span across multiple ini sections .","title":"Commands"},{"location":"plugins/community-plugins/mq2hudmove/#examples","text":"If we typed \"/hudmove ;section1 right 100\", it would move the HUD elements \"ManaRegen\" and \"BuffCount\" 100 units to the right. [elements] Level=3,339,649,0,255,255,${If[${Target.ID},${Target.Level} - ${Target.Class} - ${Target.Distance} - ${Target.LineOfSight},]} Raid=3,1263,468,0,255,255,${If[${Raid.Members}>0,In Raid - ${Raid.Members},]} TarID=3,172,337,0,255,0,ID: ${Target.ID} ;section1 ManaRegen=3,272,272,0,255,0,MR: ${Me.ManaRegen} BuffCount=3,272,367,0,255,0,Buffs: ${Me.CountBuffs} ;section2 ER=3,172,342,0,255,0,ER: ${Me.AltAbilityTimer[Eldritch Rune].TimeHMS} MGB=3,172,357,0,255,0,MGB: ${Me.AltAbilityTimer[Mass Group Buff].TimeHMS} For now, the only requirement for defining custom sections is that it follows this format: ;name","title":"Examples"},{"location":"plugins/community-plugins/mq2linkdb/","text":"MQ2LinkDB \u00b6 Description \u00b6 MQ2LinkDB allows you to keep your own personalised database of item links. There are two versions of the plugin: v1: The original, by Ziggy is available here v2: An updated version of the plugin, which includes a TLO and linkbot functionality, was created by rswiders and is available in the VIP Forums here Features \u00b6 Able to import the huge database of links from http://eqitems.13 th -floor.org/ and add them. Watch chat for item links and add them automatically. Links are returned as tells and will go into the tell window. They do not go into your log file, nor does LinkDB show up when you try and reply. Commands \u00b6 /link Display statistics /link /import Import items.txt as downloaded from 13 th -Floor . To import this file, do the following: Download the items.zip file directly using this link Unzip the items.txt file to the \\Release directory In game, type /link /import and wait a few seconds for the items to be added Out of game, edit the MQ2LinkDB.txt file and: 1. Remove the first line \\(ends in \"wornlevel\"\\) 2. Search for \"iksar left hand\" and delete the 3 lines that end in '=\\ /link /max # Set maximum number of results \\(default 10\\) /link search Find items containg search string Added by v2 \u00b6 /link /scan on\\|off Turn on and off scanning incoming chat /link /click on\\|off Click on the link generated? Top-Level Objects \u00b6 Note: The TLO is only available in v2. string ${LinkDB \\***name**\\* } Display the link found by name . Use = name for an exact match. Examples \u00b6 /link baby joseph sayer You will get a tell with a link to the Baby Joseph Sayer. /shout OMG I'm a dork! I have ${LinkDB[=Baby Joseph Sayer]} in my pack. Ha! If the item is not found, the TLO returns an empty string, so you probably don't want to be directly shouting about Baby Joseph Sayer in your backpack. If you do and misspell his name, you will end up shouting about an empty string which isn't recommended.","title":"MQ2LinkDB"},{"location":"plugins/community-plugins/mq2linkdb/#mq2linkdb","text":"","title":"MQ2LinkDB"},{"location":"plugins/community-plugins/mq2linkdb/#description","text":"MQ2LinkDB allows you to keep your own personalised database of item links. There are two versions of the plugin: v1: The original, by Ziggy is available here v2: An updated version of the plugin, which includes a TLO and linkbot functionality, was created by rswiders and is available in the VIP Forums here","title":"Description"},{"location":"plugins/community-plugins/mq2linkdb/#features","text":"Able to import the huge database of links from http://eqitems.13 th -floor.org/ and add them. Watch chat for item links and add them automatically. Links are returned as tells and will go into the tell window. They do not go into your log file, nor does LinkDB show up when you try and reply.","title":"Features"},{"location":"plugins/community-plugins/mq2linkdb/#commands","text":"/link Display statistics /link /import Import items.txt as downloaded from 13 th -Floor . To import this file, do the following: Download the items.zip file directly using this link Unzip the items.txt file to the \\Release directory In game, type /link /import and wait a few seconds for the items to be added Out of game, edit the MQ2LinkDB.txt file and: 1. Remove the first line \\(ends in \"wornlevel\"\\) 2. Search for \"iksar left hand\" and delete the 3 lines that end in '=\\ /link /max # Set maximum number of results \\(default 10\\) /link search Find items containg search string","title":"Commands"},{"location":"plugins/community-plugins/mq2linkdb/#added-by-v2","text":"/link /scan on\\|off Turn on and off scanning incoming chat /link /click on\\|off Click on the link generated?","title":"Added by v2"},{"location":"plugins/community-plugins/mq2linkdb/#top-level-objects","text":"Note: The TLO is only available in v2. string ${LinkDB \\***name**\\* } Display the link found by name . Use = name for an exact match.","title":"Top-Level Objects"},{"location":"plugins/community-plugins/mq2linkdb/#examples","text":"/link baby joseph sayer You will get a tell with a link to the Baby Joseph Sayer. /shout OMG I'm a dork! I have ${LinkDB[=Baby Joseph Sayer]} in my pack. Ha! If the item is not found, the TLO returns an empty string, so you probably don't want to be directly shouting about Baby Joseph Sayer in your backpack. If you do and misspell his name, you will end up shouting about an empty string which isn't recommended.","title":"Examples"},{"location":"plugins/community-plugins/mq2medley/","text":"MQ2Medley \u00b6 Description \u00b6 MQ2Medley Created by winnower, updated by Dewey2461 Song scheduler for the modern bard. \"This plugin grew out my frustration with MQ2Twist and it being hard to change from twist to twist while still being efficient and not recasting the songs that already had signification duration left. Was hard to use aria, \"A Tune Struck in My Head\", and burn twists effectively\" This is the next evolution of MQ2Twist. Features Set conditions for each song in the medley. Only want to cast on named? Only want to do insult if mana > 10%? Only want to cast dots if attack is on? Only want to cast mana regen when not in combat? Advanced queuing support. Can specific target of queued spells for mez or cure and plugin will switch back to existing target with plugin reflexes. Optional interrupt when queing song. Adapt your song song set without missing a beat when under the effect of \"A tune stuck in my head\" Priority scheduling. Did you just mez 3 mobs? Switch back to your most important spells automatically Automatically switch to maintaining 7 songs when Tune is up Switch from medley to medley while still remembering the duration of current songs. Named up? just do switch to your burn medley to introduce new songs to the mix, while knowing what songs are already up. You can find the latest version of MQ2Medley here . Plugin Interaction \u00b6 MQ2Medley has no plugin dependencies MQ2Twist - should be able to coexist, just don't /twist and /medley at the same time MQ2Cast - recommend not using this on your bard. use \"/medley queue\" to cast items and aa with cast time. use /alt activate or /cast item to cast instant cast AA and items, can do this even while medley is active \\(bards are awesome like that\\) Commands \u00b6 /medley name - Sing the given medley /medley queue \"song/item/aa name\" [-targetid|spawnid] [-interrupt] - add songs to queue to cast once /medley stop/end/off - stop singing /medley - Resume the medley after using /medley stop /medley delay # - 10ths of a second, minimum of 0, default 3, how long after casting a spell to wait to cast next spell /medley reload - reload the INI file /medley quiet - Toggles songs listing for medley and queued songs /melody debug - now toggles on/off debugging information, saves its state Examples: */medley melee play medley defined in MQ2Medley-melee ini setion /medley queue \"Dirge of the Sleepwalker\" -interrupt Interrupt current song and cast AA \"Dirge of the Sleepwaler\" /medley queue \"Slumber of Silisia\" -targetid|${Me.XTarget 2 .ID} When current song ends, will mez XTarget 2 , briefly switching target to XTraget 2 then switching back to current target. Target will be switched for one pulse, which is typically less than 20ms /medley queue \"Blade of Vesagran\" Add epic click to queue /medley queue \"Lesson of the Devoted\" Lesson of the Devoted AA will be added to the twist queue and sung when current song finished TLO \u00b6 Medley.Medley string of current medley - false \\(boolean\\) if no current medley Medley.TTQE \\(time to queue empty\\) double time in seconds until queue is empty, this is estimate only. If performating normal medley, this will be 0.0 Medley.Tune - int 1 if buffed with \"A Tune Stuck in My Head\", 0 otherwise Medley.Active boolean true if MQ2Medley is currently trying to cast spells INI Format \u00b6 Can define multiply medleys in section named MQ2Medley-medleyname. Define up to 20 songs, song1-song20 Each song has 3 parts separate by carrot \\(^\\) symbol *Part 1: Song, Item or AA name *Part 2: Duration the song lasts, this must be an expression like you would send to ${Math.Calc part2 }. This how long you expect the buff to last. Notice use of ${Medley.Tune} in my example to increase duration if A Tune Stuck in my Head is up. *Part 3: Condition for this song to cast. Also an expression for Math.Calc Scheduling \u00b6 Songs will cast in priority order, song1 > song2 > ... > song20 Songs that are not read, will be skipped \\(Crescendo, Items, AA, etc\\) Songs that still have active duration will be skipped \\(typically will start casting a song if less than 6 seconds left on their duration\\) If all songs are active, then will cast the one that will expire soonest. INI Example \u00b6 [MQ2Medley-melee] songif=!${Me.Invis} song1=possessed dreadstone minstrel's rapier^8^${Target.Type.Equal[NPC]} && (${Target.PctHPs}<98) && !${Target.Slowed.ID} song2=Rapier of Somber Notes^60^${Spell[Symphony of Battle].Stacks}&&!${Me.Buff[Symphony of Battle].ID} song3=Selo's Sonata^60^${Spell[Selo's Sonata].Stacks} song4=Dichotomic Psalm^60^1 song5=Tune Stuck In Your Head^780^1 song6=War March of Jocelyn Rk. II^18+(6*${Medley.Tune})^1 song7=Aria of Maetanrus Rk. II^13 + (6*${Medley.Tune})^1 song8=Blade of Vesagran^120^${Target.Type.Equal[NPC]}&&${Target.PctHPs}<98&&(!${SpawnCount[group pc shaman radius 100]}||${Me.Song[Prophet's Gift of the Ruchu].ID}) song9=Boastful Bellow^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song10=Bladed Song^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song11=Fierce Eye^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song12=Fundament: Third Spire of the Minstrels^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song13=Funeral Dirge^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song14=Quick Time^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song15=Song of Stone^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song16=Fjilnauk's Song of Suffering Rk. II^18^1 song17=Silisia's Lively Crescendo^45^1 song18=Arcane Melody Rk. II^18 + (6*${Medley.Tune})^1","title":"MQ2Medley"},{"location":"plugins/community-plugins/mq2medley/#mq2medley","text":"","title":"MQ2Medley"},{"location":"plugins/community-plugins/mq2medley/#description","text":"MQ2Medley Created by winnower, updated by Dewey2461 Song scheduler for the modern bard. \"This plugin grew out my frustration with MQ2Twist and it being hard to change from twist to twist while still being efficient and not recasting the songs that already had signification duration left. Was hard to use aria, \"A Tune Struck in My Head\", and burn twists effectively\" This is the next evolution of MQ2Twist. Features Set conditions for each song in the medley. Only want to cast on named? Only want to do insult if mana > 10%? Only want to cast dots if attack is on? Only want to cast mana regen when not in combat? Advanced queuing support. Can specific target of queued spells for mez or cure and plugin will switch back to existing target with plugin reflexes. Optional interrupt when queing song. Adapt your song song set without missing a beat when under the effect of \"A tune stuck in my head\" Priority scheduling. Did you just mez 3 mobs? Switch back to your most important spells automatically Automatically switch to maintaining 7 songs when Tune is up Switch from medley to medley while still remembering the duration of current songs. Named up? just do switch to your burn medley to introduce new songs to the mix, while knowing what songs are already up. You can find the latest version of MQ2Medley here .","title":"Description"},{"location":"plugins/community-plugins/mq2medley/#plugin-interaction","text":"MQ2Medley has no plugin dependencies MQ2Twist - should be able to coexist, just don't /twist and /medley at the same time MQ2Cast - recommend not using this on your bard. use \"/medley queue\" to cast items and aa with cast time. use /alt activate or /cast item to cast instant cast AA and items, can do this even while medley is active \\(bards are awesome like that\\)","title":"Plugin Interaction"},{"location":"plugins/community-plugins/mq2medley/#commands","text":"/medley name - Sing the given medley /medley queue \"song/item/aa name\" [-targetid|spawnid] [-interrupt] - add songs to queue to cast once /medley stop/end/off - stop singing /medley - Resume the medley after using /medley stop /medley delay # - 10ths of a second, minimum of 0, default 3, how long after casting a spell to wait to cast next spell /medley reload - reload the INI file /medley quiet - Toggles songs listing for medley and queued songs /melody debug - now toggles on/off debugging information, saves its state Examples: */medley melee play medley defined in MQ2Medley-melee ini setion /medley queue \"Dirge of the Sleepwalker\" -interrupt Interrupt current song and cast AA \"Dirge of the Sleepwaler\" /medley queue \"Slumber of Silisia\" -targetid|${Me.XTarget 2 .ID} When current song ends, will mez XTarget 2 , briefly switching target to XTraget 2 then switching back to current target. Target will be switched for one pulse, which is typically less than 20ms /medley queue \"Blade of Vesagran\" Add epic click to queue /medley queue \"Lesson of the Devoted\" Lesson of the Devoted AA will be added to the twist queue and sung when current song finished","title":"Commands"},{"location":"plugins/community-plugins/mq2medley/#tlo","text":"Medley.Medley string of current medley - false \\(boolean\\) if no current medley Medley.TTQE \\(time to queue empty\\) double time in seconds until queue is empty, this is estimate only. If performating normal medley, this will be 0.0 Medley.Tune - int 1 if buffed with \"A Tune Stuck in My Head\", 0 otherwise Medley.Active boolean true if MQ2Medley is currently trying to cast spells","title":"TLO"},{"location":"plugins/community-plugins/mq2medley/#ini-format","text":"Can define multiply medleys in section named MQ2Medley-medleyname. Define up to 20 songs, song1-song20 Each song has 3 parts separate by carrot \\(^\\) symbol *Part 1: Song, Item or AA name *Part 2: Duration the song lasts, this must be an expression like you would send to ${Math.Calc part2 }. This how long you expect the buff to last. Notice use of ${Medley.Tune} in my example to increase duration if A Tune Stuck in my Head is up. *Part 3: Condition for this song to cast. Also an expression for Math.Calc","title":"INI Format"},{"location":"plugins/community-plugins/mq2medley/#scheduling","text":"Songs will cast in priority order, song1 > song2 > ... > song20 Songs that are not read, will be skipped \\(Crescendo, Items, AA, etc\\) Songs that still have active duration will be skipped \\(typically will start casting a song if less than 6 seconds left on their duration\\) If all songs are active, then will cast the one that will expire soonest.","title":"Scheduling"},{"location":"plugins/community-plugins/mq2medley/#ini-example","text":"[MQ2Medley-melee] songif=!${Me.Invis} song1=possessed dreadstone minstrel's rapier^8^${Target.Type.Equal[NPC]} && (${Target.PctHPs}<98) && !${Target.Slowed.ID} song2=Rapier of Somber Notes^60^${Spell[Symphony of Battle].Stacks}&&!${Me.Buff[Symphony of Battle].ID} song3=Selo's Sonata^60^${Spell[Selo's Sonata].Stacks} song4=Dichotomic Psalm^60^1 song5=Tune Stuck In Your Head^780^1 song6=War March of Jocelyn Rk. II^18+(6*${Medley.Tune})^1 song7=Aria of Maetanrus Rk. II^13 + (6*${Medley.Tune})^1 song8=Blade of Vesagran^120^${Target.Type.Equal[NPC]}&&${Target.PctHPs}<98&&(!${SpawnCount[group pc shaman radius 100]}||${Me.Song[Prophet's Gift of the Ruchu].ID}) song9=Boastful Bellow^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song10=Bladed Song^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song11=Fierce Eye^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song12=Fundament: Third Spire of the Minstrels^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song13=Funeral Dirge^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song14=Quick Time^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song15=Song of Stone^18^${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 song16=Fjilnauk's Song of Suffering Rk. II^18^1 song17=Silisia's Lively Crescendo^45^1 song18=Arcane Melody Rk. II^18 + (6*${Medley.Tune})^1","title":"INI Example"},{"location":"plugins/community-plugins/mq2melee/","text":"MQ2Melee \u00b6 Description \u00b6 MQ2Melee , written by s0rCieR, is designed to provide intelligent use of SHORT TIME REUSE MELEE ABILITIES and PET HANDLING during combat, depending on current combat conditions. It was developed to replace melee-oriented functions typically used in macros. MQ2Melee 7.09 Updated by Maskoi 02/17/2016 [can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=50&t=19600](https://macroquest.org/phpBB3/viewtopic.php?f=50&t=19600)\\) , in the VIP Plugin Forum. 6.0 Updated by Teichou 12/02/2012 for RoF, [can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=50&t=18581](https://macroquest.org/phpBB3/viewtopic.php?f=50&t=18581)\\) 5.0 and so on can be found here here Previous versions can be found here . History \u00b6 The inspiration for MQ2Melee was MQ2AutoSkills and MQ2ThrowIt . All credit for the concepts should go to Cr4zyb4rd and Bushdaka, authors of those plugins. Donations \u00b6 s0rcier is the author. Teichou and Maskoi is the current maintainer. If you want to give them money, look them up. Special Thanks \u00b6 Thumbs up and many thanks to the BETA Tester Team: A_Druid_00, Dark2phoenix, DigitalMocking, Lacky, Moeymoejoe, Outlander and Warauinu. Thanks to those plugin authors Busdaka, Cr4zyb4rd, Outlander, pms and Wassup for providing inspiration and help. And finally thanks to Dark2phoenix and Wasted for updating and maintaining this wiki page. Prerequisites \u00b6 You must have 1 point trained in any trainable Combat Ability you would like to use You must have purchased the Alternate Ability you would like to use You must have trained the Combat Discipline you would like to use You meet any prerequisites for the use of the ability (i.e. can't slam from a mount, can't bash without a shield or a two handed weapon and the AA ability, can't backstab without being behind target with a piercing weapon, etc) MQ2MoveUtils:v11 plugin is needed to use /stick parameters [Can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=31&t=15909](https://macroquest.org/phpBB3/viewtopic.php?f=31&t=15909)\\) . MQ2Cast is required to cast spells, activate Alternate Abilities or click items. [Can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=50&t=17517](https://macroquest.org/phpBB3/viewtopic.php?f=50&t=17517)\\) . MQ2Exchange is required to find and swap items if using MQ2Cast to click items. [Can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=50&t=16436](https://macroquest.org/phpBB3/viewtopic.php?f=50&t=16436)\\) . MQ2BagWindow is required for finding and swapping items. [Can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=50&t=17035](https://macroquest.org/phpBB3/viewtopic.php?f=50&t=17035)\\) . moveitems.h is required for swapping items and compiling. [Can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=31&t=17047](https://macroquest.org/phpBB3/viewtopic.php?f=31&t=17047)\\) . Features \u00b6 Auto use abilities according to user settings and game conditions. Auto-equip defined items for bashing, backstabbing or ranged attack. Built in user conditions to restrain the use of certain abilities. CHAT MONITORING: Auto-stand on Failed/Broken Feign Death. Monitoring of \"Begin to Cast\" messages for automatic Bash/Slam/Kick or casting of defined stuns. Automatic turning on/off of Attack on Enrage/Infuriate. MELEE: Auto-equipping of weapon set \\(s\\) prior to engaging \\(aggro/non-aggro sets\\) . Auto-use of defined combat or other abilities. User-configurable /stick arguments. MELEE \\(AGGRO MODE\\) : Auto Taunt when you loose aggro on target. Configurable spells to cast to gain/maintain aggro. MELEE \\(NON AGGRO MODE\\) : Back off/Feign/Evade fight if your health goes below a point. Auto Resume fight if your health goes back above a point. RANGED: Toggle between Melee/Ranged mode according to Target distance. Swap In/Out defined ranged items \\(bow/throwing\\) . Auto refill ammunition slot when less than 80 in a stack. Built-in /throwit command you could use to pull \\(see below for explanation\\) . Auto-Sleep mode while auto-fire is on. Configurable automatic facing of target. PET HANDLING: Issue /pet back and /pet hold after each mobs dies. Configure pet to wait to assist till mobs within range. Configure pet to wait for a specified time before assisting. Pet mend if its life goes below a certain point. Option to automatically re-engage target when no longer mezzed. Backup pet on enrage/infuriate events and re-engaging of target. Auto /pet hold if you manually hit back button or do /pet back. USER DEFINED CONDITIONS: Allows for conditional use of various abilities/disciplines. Allows for customized actions based on conditional statements. TOP-LEVEL OBJECTS: Provides MQ2Data information for better macro integration and HUD designs. Can be used with custom user-defined conditions. Supported Abilities \u00b6 Combat Abilities \u00b6 See MQ2Melee#Supported AA's, Combat Abilities, Skills & Spells by Class Alternate Advancement Abilities \u00b6 See MQ2Melee#Supported AA's, Combat Abilities, Skills & Spells by Class Melee Disciplines \u00b6 See MQ2Melee#Supported AA's, Combat Abilities, Skills & Spells by Class Detected Disciplines \u00b6 The following Disciplines are detected to promote some combat abilities: Ashenhand Discipline, Assassin Discipline \\(3\\) , Silentfist Discipline, and Thunderkick Discipline. Skills \u00b6 See MQ2Melee#Supported AA's, Combat Abilities, Skills & Spells by Class Spell Handling \u00b6 Provoke can be configured to cast any AA, disc or spell. It will auto-detect if you lose aggro, and then attempt to use any of the defined spells to regain it. To determine the proper Spell ID for any Discipline, Alternate Ability or Spell to be used with the provoke/stun commands use one of the following commands: For Disciplines use: /echo \\({Me.CombatAbility\\[\\) {Me.CombatAbility \\]} .ID} , replacing with the name of the Discipline. For AAs, use /aa info . The first number \\(before the AA name\\) is the Spell ID. For Spells, use /echo ${Spell[].ID} , replacing with the spell name. Alternatively, you can look on Lucy for the discipline/spell/AA and get the ID from there. Some common discipline IDs are listed below: Ancient Chaos Cry id=5016 Bazu Bellow id=6173 Bellow id=4681 Bellow of the Mastruq id=5015 Berate id=4682 Incite id=4697 Mock id=8467 Provoke id=4608 Crippling Strike id=468 Stuns can also be configured to cast any AA, disc or spells when MQ2Melee detects that your target begins to cast a spell. Provoke and Stun have built-in values, but they can always be overwritten using the command line (eg. **/melee provoke0=5015**) or by editing the** provoke0 setting in the INI file and then typing /melee reload** in game. Commands \u00b6 All options below are listed with on/off as the arguments used to enable/disable the option, however true or 1 can be used in place of on , and false or 0 can be used in place of off . Example: /melee on aggro=on taunt=on kick=1 bash=0 intimidation=false disarm=true /melee by itself will list all abilities and settings that are available to you. Some settings are dependant on others being active, so may not show up until you enable the prerequisite option. To find the relevant Item IDs for the various options, you can use the following command: /echo ${FindItem = .ID} , replacing with the name of the item you are looking for (no need to use quotes). Eg. /echo ${FindItem =Blade of Carnage .ID} results in \"25210\". /melee options \u00b6 on\\|off Turns plugin On/Off. aggro = on\\|off *Plugin tries to keep aggro on target using all enabled aggro abilities/disciplines until aggro is regained, or either you or the target dies.* aggropri = Item ID Item ID for primary weapon to be used in aggro mode. aggrosec = Item ID Item ID for secondary weapon to be used in aggro mode. arrow = Item ID Item ID of ammunition to use for ranged/throwing attacks. backoff = 0-100 *Turns attack off if your life percentage goes below the designated value. Will never back off due to low health if aggro=on.* bash = on\\|off Will try to bash target if you have a shield equipped or have have a 2-handed weapon and the 2 Hand Bash AA. battleleap = on\\|off Whether or not to use Battle Leap AA \\(Default=0/off\\) begging = on\\|off Will turn attack off and beg target and turn back on. bow = Item ID Item ID for ranged weapon. disarm = on\\|off Will try to disarm target if target is wielding a weapon. downflag0-19 = on\\|off downflag0 = on\\|off Whether or not to use defined DownShit0 from ini. After enabling this option, you must edit the INI file with your relevant DownShit command and then issue /melee load to enable it. enrage = on\\|off *Turns attack off and issues /pet hold \\(/pet back if hold not available\\) if target enrages and you are facing it. Automatically re-engages when enrage ends or if you are behind the target.* facing = on\\|off Whether or not to face target \\(checked every 2 seconds and only in ranged mode\\) . falls = on\\|off \\(Monk only\\) Auto-feign to reduce aggro?. holyflag0-19 = on\\|off holyflag0 = on\\|off Whether or not to use defined HolyShit0 from ini. After enabling this option, you must edit the INI file with your relevant HolyShit command and then issue /melee load to enable it. infuriate = on\\|off *Turns attack off and issues /pet hold \\(/pet back if hold not available\\) if target infuriates and you are facing it. Re-engages when infuriate ends or if you are behind the target.* intimidation = on\\|off Will use intimidation if available. jolt = 0-100 Jolt every # of hits \\(0=off\\) . kick = on\\|off Will use kick if available. melee = on\\|off Turn Melee Mode On/Off. meleepri = Item ID Item ID for primary weapon to be used in non-aggro mode. meleesec = Item ID Item ID for secondary weapon to be used in non-aggro mode mend = 0-100 Mend wounds if your life percentage goes below the designated value. petassist = on\\|off *Will send pet attack on engage and backoff on enrage/infuriate if those options are enabled. The plugin will also use /pet hold if you have that AA.* petdelay = 0-30 Will not engage pet until x seconds has passed. petmend = 0-100 *Cast \"Mend Companion\" or \"Replenish Companion\" if pet is at or below given health % (will cast higher of the two if you have both).* petrange = 0-150 Will not engage pet until mob is within x range of your pet. pickpocket = on\\|off Turn off attack & try to pickpocket if not in aggro mode. plugin = on\\|off Turn plugin on/off. poker = Item ID Item ID for backstabbing weapon. Will be swapped in before backstabbing if necessary. pothealfast = 0-100 Use fast heal potion when my HP falls below X % \\(default=30\\) . pothealover = 0-100 Use heal over time potion when my HP falls below X % \\(default=60\\) . provoke0 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for provoking \\(0=off\\) . provoke1 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for provoking \\(0=off\\) . provokeend = 0-100 Stop trying to provoke when target's health falls below X % \\(default=15\\) . provokemax = 0-100 Number of times you will try provoking aa/disc/spells to regain aggro \\(default=1\\) . provokeonce = on\\|off Only use provoke once to attempt to gain aggro. range = 0-250 Enables ranged attacks when target is at or beyond this range. Note that 0 disables ranged attacks completely. resume = 0-100 Stand up and turn back attack on if your life percentage goes above this value. Used with /melee feigndeath=on. shield = Item ID Item ID of shield to use for bashing slam = on\\|off Will slam as often as possible. sneak = on\\|off Will try to sneak if not in combat. standup = on\\|off Will stand you on a failed FD. stickdelay = 0-100 Wait X seconds before sticking to target. stickmode = 0\\|1\\|2 If 1, it will use the *stickcmd as defined in the INI file, if 0, it will use the default stick command, if 2, it will turn off sticking* stickrange = 0+ Enables sticking when target is at set distance away \\(0=no sticking\\) . stun0 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . stun1 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . stunning = 0-100 Cast defined Stun spell \\(s\\) if target at or below X % and/or if detected that target is casting a spell. taunt = on\\|off *Will push taunt button if aggro=on and you're not the target's target. Without a TauntIF statement, this will cause your toon to chain taunt. If you do not wish for that, use a TauntIF command \\(see below\\) .* throwstone = 0-100 Will use throw stone disc when ready and target in range. Note: Will not use in aggro/provoke mode if provoke has not been used yet. Supported AA's, Combat Abilities, Skills & Spells by Class \u00b6 Bard \u00b6 AA's Selo's Kick selos =0|1 off\\|on Boastful Bellow boastful =0|1 off\\|on Beastlord \u00b6 AA's Bite of the Asp asp =0|1 off\\|on Chameleon Strike cstrike =0|1 off\\|on Gorilla Smash gorillasmash =0|1 off\\|on Feral Swipe feralswipe =0|1 off\\|on Playing Possum feigndeath = 0-100 Attempt to feign death when life is below X %. 0=Off Raven's Claw ravens =0|1 off\\|on Combat Ability Bestial Vivisection, Bestial Rending, Bestial Evulsing bvivi = 0-100 Use ability when endurance above X %. 0=Off Rake, Foray, Harrow, Rush, Barrage, Pummel rake = 0-100 Use ability when endurance above X %. 0=Off Flurry of Claws, Tumult of Claws, Clamor of Claws fclaw = 0-100 Use ability when endurance above X %. 0=Off Berserker \u00b6 Combat Ability Shared Bloodlust, Shared Brutality, Shared Savagery, Shared Viciousness bloodlust = 0-100 Use ability when endurance above X % \\(0=off\\) . Leg Strike, Leg Cut, Leg Slice, Crippling Strike, Tendon Cleave, Tendon Sever, Tendon Shear, Tendon Lacerate, Tendon Slash, Tendon Gash cripple = 0-100 Use ability when endurance above X % \\(0=off\\) . Cry Havoc cryhavoc = 0-100 Use ability when endurance above X % \\(0=off\\) . Diversive Strike, Distracting Strike, Confusing Strike, Baffling Strike, Jarring Strike, Jarring Smash, Jarring Clash, Jarring Slam, Jarring Blow, Jarring Crush jolt =0-100] Jolt every # of hits \\(0=off\\) . Overpowering Frenzy, Overwhelming Frenzy, Vanquishing Frenzy opfrenzy = 0-100 Use ability when endurance above X % \\(0=off\\) . Rage Volley, Destroyer's Volley, Giant Slayer's Volley, Annihilator's Volley, Decimator's Volley, Eradicator's Volley, Savage Volley, Brutal Volley ragevolley = 0-100 Will use best ragevolley discipline that is available, ready and endurance above X % \\(0=off\\) . Axe of Rallos, Axe of Graster rallos = 0-100 Use ability when endurance above X % \\(0=off\\) . Slap in the Face, Kick in the Teeth, Punch in the Throat slapface = 0-100 Use ability when endurance above X % \\(0=off\\) . Head Strike, Head Pummel, Head Crush, Mind Strike, Temple Blow, Temple Strike, Temple Bash, Temple Chop, Temple Smash, Temple Crush stun1 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . Vigorous Axe Throw, Energetic Axe Throw, Brutal Axe Throw vigaxe = 0-100 Use ability when endurance above X % \\(0=off\\) . Monk \u00b6 AA Eye Gouge eyegouge =0|1 off\\|on Combat Ability Cloud of Fists cloud = 0-100 Use ability when endurance above X % \\(0=off\\) Feign Death, Imitate Death feign = 0-100 Attempt to feign death when life is below X %. 0=Off Fists of Wu fistofwu 0-100 Use ability when endurance above X % \\(0=off\\) . Leopard Claw, Dragon Fang, Clawstriker Flurry, Wheel Of Fists, Whorl Of Fists, Six-Step Pattern, Eight-Step Pattern leopardclaw = 0-100 Use ability when endurance above X % \\(0=off\\) . Drunken Monkey monkey = 0-100 Use ability when endurance above X % \\(0=off\\) Calanin's Synergy, Dreamwalker's Synergy, Veilwalker's Synergy, Shadewalker's Synergy synergy = 0-100 Use ability when endurance above X % \\(0=off\\) . Vigorous Shuriken vigshuriken = 0-100 Use ability when endurance above X % \\(0=off\\) . Skills Dragon Punch, Tail Rake \\(Iksar\\) dragonpunch =0|1 off\\|on Will use if available. Eagle Strike eaglestrike =0|1 off\\|on Will use if available. Flying Kick flyingkick =0|1 off\\|on Will use if available. Mend mend =0-100 off\\|on Mend wounds if your life percentage goes below the designated value. Round Kick roundkick =0|1 off\\|on Will use if available. Tiger Claw tigerclaw =0|1 off\\|on Will use if available. Paladin \u00b6 AA Divine Stun, Hand of Disruption, Force of Disruption provoke0 =id ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . stun0 =id ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . Lay Hands layhand = 0-100 Lay Hands on myself when my HP % falls below X . Combat Ability Righteous Indignation, Righteous Vexation, Righteous Umbrage rightind = 0-100 Use ability when endurance above X % \\(0=off\\) . Withstand, Defy, Renounce, Reprove, Repel withstand = 0-100 Use ability when endurance above X % \\(0=off\\) . Spells Challenge for Honor, Trial for Honor, Charge for Honor, Confrontation for Honor, Provocation for Honor, Demand for Honor, Reverent Force challengefor =0|1 off\\|on Activate aggro spells. Stun, Holy Might, Force of Akera, Force of Akilae, Ancient Force of Chaos, Force of Piety, Ancient Force of Jeron, Sacred Force, Force of Prexus. Solemn Force, Force of Timorous, Devout Force, Force of the Crying Seas, Earnest Force, Force of Marr, Force of the Iceclad provoke1 =id ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . stun1 =id ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . Steely Stance, Stubborn Stance, Stoic Stance, Steadfast Stance steely =0|1 off\\|on Activate defensive spells. Ranger \u00b6 AA Ferocious Kick ferociouskick =0|1 0=OFF/1=ON Combat Ability Jolting Snapkicks, Jolting Frontkicks, Jolting Hook Kicks, Jolting Crescent Kicks, Jolting Heel Kicks jltkicks = 0-100 endurance Storm of Blades, Focused Storm of Blades stormblades =0|1 0=OFF/1=ON Spells Jolt, Cinderjolt jolt =0-100] Jolt every # of hits \\(0=off\\) . Rogue \u00b6 Combos Assassinate assassinate =0|1 off\\|on Activate the assassinate skill \\(ie. Sneak, Hide, move behind target, activate Strike disc, backstab\\) . Combat Ability Assault, Battery, Onslaught, Incursion assault = 0-100 Use ability when endurance above X % \\(0=off\\) . Bleed, Wound, Lacerate, Gash bleed = 0-100 Use ability when endurance above X % \\(0=off\\) . Jugular Slash, Jugular Slice, Jugular Sever, Jugular Gash, Jugular Lacerate jugular = 0-100 Use ability when endurance above X % \\(0=off\\) Pinpoint Vulnerability, Pinpoint Weaknesses, Pinpoint Vitals, Pinpoint Flaws, Pinpoint Liabilities, Pinpoint Deficiencies pinpoint = 0-100 Use ability when endurance above X % \\(0=off\\) Sneak Attack, Thief's Vengeance, Assassin Strike, Kyv Strike, Ancient Chaos Strike, Daggerfall, Razor Arc, Swift Blade, Dagger Lunge, Dagger Swipe, Daggerswipe, Daggerstrike, Daggerthrust strike =0|1 off\\|on Use your best sneak attack disc Thief's Eye thiefeye = 0-100 Uses ability if your endurance is over X %. \\(0=off\\) . Vigorous Dagger-Throw, Vigorous Dagger-Strike, Energetic Dagger-Throw vigdagger = 0-100 Use ability when endurance above X % \\(0=off\\) . Skills Backstab backstab =0|1 off\\|on Will try to back stab if you wielding a piercing weapon in your main hand and behind the target. Escape escape = 0-100 Turn off Attack and use rogue escape skill if your life percentage goes below the designated value. Will never happen if aggro=on. Evade evade =0|1 off\\|on Will attempt to evade in fight to drop some aggro each time hide skill available, strongly suggest that you set unhide=1 to authorize plugin to break invis and rejoin the fight. Hide hide =0|1 off\\|on Will try to hide if you're not in a combat and not moving. Pickpocket pickpocket =0|1 off\\|on Turn off attack & try to pickpocket if not in aggro mode. Sense Traps sensetraps = on\\|off Will try to sense traps if not in combat. Sneak sneak =0|1 off\\|on Will try to sneak if not in combat. Shadow Knight \u00b6 AA Death Peace feign1 = 0-100 Attempt to feign death when life is below X %. 0=Off Harm Touch harmtouch =0|1 off\\|on Use Harm Touch ability when ready. Combat Ability Withstand, Defy, Renounce, Reprove, Repel withstand = 0-100 Use ability when endurance above X % \\(0=off\\) . Gouging Blade, Gashing Blade, Lacerating Blade gblade = 0-100 Use ability when endurance above X % \\(0=off\\) . Spells Feign Death, Comatose, Death Peace, Last Breath, Rigor Mortis, Last Grasp, Final Breath, Last Breath, Final Gasp, Terminal Breath feign0 = 0-100 Attempt to feign death when life is below X %. 0=Off Terror of Death, Terror of Terris, Terror of Thule, Terror of Discord, Terror of Vergalid, Terror of Soulbleeder, Terror of Jelvalak, Terror of Rerekalen, Terror of Poira, Terror of Narus provoke1 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for provoking \\(0=off\\) . Challenge for Power, Trial for Power, Charge for Power, Confrontation for Power, Provocation for Power, Demand for Power, Impose for Power challengefor =0|1 off\\|on Activate aggro spells. Steely Stance, Stubborn Stance, Stoic Stance, Steadfast Stance, Staunch Stance steely =0|1 off\\|on Activate defensive spells. Warrior \u00b6 AA Call of Challenge callchallenge =0|1 off\\|on Use Alt Ability when ready. Gut Punch gutpunch =0|1 off\\|on Use Alt Ability when ready. Knee Strike kneestrike =0|1 off\\|on Use Alt Ability when ready. Combat Ability Bracing Defense, Staunch Defense, Stalwart Defense, Steadfast Defense defense = 0-100 Use ability when endurance above X % \\(0=off\\) . Commanding Voice commanding = 0-100 Use ability when endurance above X % \\(0=off\\) . Field Armorer, Field Outfitter, Field Defender, Field Guardian fieldarm = 0-100 Use ability when endurance above X % \\(0=off\\) . Opportunistic Strike, Strategic Strike, Vital Strike, Vital Strike opportunisticstrike = 0-100 Use ability when endurance above X % \\(0=off\\) . Provoke, Belllow, Berate, Incite, Bellow of the Mastrug, Ancient Chaos Cry, Bazu Bellow, Scowl, Sneer, Jeer, Bazu Bluster, Bazu Roar, Scoff, Krondal's Roar, Ridicule provoke1 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for provoking \\(0=off\\) . Throat Jab throatjab = 0-100 Use ability when endurance above X % \\(0=off\\) . Top-Level Objects \u00b6 bool ${Melee} Same as ${Melee.Enable} \\(see below\\) . bool ${Melee.AggroMode} TRUE/FALSE if the plugin is operating in Aggro-mode or not. int ${Melee.Ammunition} Count of defined ammunition or current equipped ammunition. float ${Melee.BackAngle} Angle representing heading difference with current target's back. bool ${Melee.BackStabbing} TRUE/FALSE if backstab setting is on/off. int ${Melee.Casted} Time \\(in miliseconds\\) elapsed since last detected spell casting \\(60000 if none\\) . bool ${Melee.Combat} TRUE/FALSE if plugin enable and got valid kill target. Should replace ${Me.Combat} logic. int ${Melee.DiscID} Spell ID of currently running discipline, 0 if none. bool ${Melee.Enable} TRUE/FALSE if plugin on/off, NULL if not loaded. bool ${Melee.Engage} TRUE if we have a valid kill target and it's okay to turn attack on, FALSE if not. bool ${Melee.Enrage} Is kill target enraged? bool ${Melee.GotAggro} TRUE/FALSE if current target seems to be aggroed on you \\(not perfect\\) . bool ${Melee.Immobilize} TRUE if you have been standing still for more then 250ms, FALSE if not. bool ${Melee.Infuriate} TRUE if kill target is infuriated! int ${Melee.MeleeMode} Maximum distance to target to be considered in melee range. int ${Melee.RangeMode} Minimum distance to target to be considered in archery range. string ${Melee.Status} Current plugin status, can be one or more of the following: ENGAGED, WAITING, MELEE, RANGE, ENRAGE, INFURIATE, BACKING, ESCAPING, FEIGNING, EVADING, FALLING, STEALING, BEGGING. int ${Melee.Target} SpawnID of current valid kill target, otherwise 0. float ${Melee.ViewAngle} Angle of view with current target. Debugging TLOs: int ${meleemvb **idskill** } 1 if the skill is ready and target in range, 0 if not. Most combat and/or character kills that can use an ID are testable here. Examples of idskills are: idleopardclaw , idslam , idforage , idfrenzy , idtigerclaw , idescape . int ${meleemvi **variable** } 1/0 if the variable is set to on/off. This includes all variables that can be set on the command line. string ${meleemvs **option** } Evaluates option based on the current conditions and target. Options are all the INI options that contain command lines that need to be evaluated. Examples are: bashif , beggingif , tauntif , holyshit0 , holyshit1 , downshit1 , slamif , etc. Echoing one of these options will show you how they evaluate. INI File \u00b6 MQ2Melee saves most options for each character in the INI file called _.ini. Most options in the INI file are set using the command line \\(/melee _command=on\\|off_\\) and they are best set this way, and not by editing the INI file. Any options given this way are then saved to the INI file when you issue the command /melee save . Options that contain macro commands are set by editing the INI file and then loading the values with /melee load . \"IF\" Options \u00b6 The following \"IF\" options can be set in the INI file. They will then be evaluated before the relevant disc/skill is triggered. They all need to take the form of ${If _condition_,1,0 } statements and must return an integer. Any return of 0 is considered FALSE, any other integer is considered TRUE. Eg. \\({If\\[\\) ,1,0]} will always be evaluated correctly. Your defined condition must not exceed 255 characters, or it will cause the plugin to crash. backstabif bashif beggingif callchallengeif challengeforif commandingif cryhavocif disarmif dragonpunchif eaglestrikeif evadeif fallsif feralswipeif fistofwuif flyingkickif forageif frenzyif harmtouchif pothealfastif pothealoverif hideif intimidationif joltif kickif layhandif leopardclawif mendif pickpocketif provokeif ragevolleyif rakeif roundkickif sensetrapif slamif sneakif strikeif stunningif tauntif thiefeyeif throwstoneif tigerclawif twistedshankif Other Options \u00b6 stickcmd This command takes a list of options that should be passed to the /stick command. Eg. \"hold 15\" downshit0-downshit7 Each one of these takes a macro command that will be run when you are not in combat. Remember, you have to enable each option with /melee downflag#=on . holyshit0-holyshit7 Each one of these takes a macro command that will be run at the beginning of combat. Remember, you have to enable each option with /melee holyflag#=on . HolyShit and DownShit \u00b6 MQ2Melee now supports up to 20 macro command lines of each that will be executed when one of the following conditions are true: Holyshit: Commands will be executed when in combat, no casting going on and the cursor is free. Downshit: Commands will be executed when not in combat, not casting and the cursor is free. When setting these commands, you must be careful not to fall into an endless loop or create a spam war. Make sure that when your line finishes, it will set up something that will force it to be FALSE for a while! These Commands are turned on and off by downflagx and holyflagx if your downshit or holyshit parses ANY macro variables, you MUST set these flags to 2 instead of 1 INI File Examples \u00b6 Please Note: Use this section only for adding useful examples that can be included in the INI file, not for copy/pastes of the INI files themselves. Anyone can see what a default INI is by loading up the plugin, running /melee on , /melee save and then opening the INI file in Notepad. ; Will just echo that the macro is paused (this is stupid btw, but its an example.) ; SINCE WE USE A MACRO VARIABLE (ModVersion) WE NEED TO SET THE FLAG TO 2! downflag0=2 downshit0=/if (${Macro.Paused}) /echo ${Macro} ${ModVersion} is PAUSED! ; Swapping an Avatar-proccing weapon when needed. ; - The first line swaps your Ancient Prismatic Spear [id=29435] into your offhand if you don't already have it equipped and you don't have the Avatar buff ; - The second line swaps your Orcish Bone Axe [id=82634] back into your offhand if it's not equipped and you have the Avatar buff already holyshit0=/if (${Me.Inventory[offhand].ID}==82634 && !${Me.Buff[avatar].ID} && ${Spell[avatar].Stacks} && (${Melee.AggroMode} && ${Melee.GotAggro})) /exchange 29435 offhand holyshit1=/if (${Me.Inventory[offhand].ID}==29435 && (${Me.Buff[avatar].ID} || !${Spell[avatar].Stacks} || (${Melee.AggroMode} && !${Melee.GotAggro}))) /exchange 82634 offhand ; Activating the Area Taunt AA when multiple mobs in range holyshit2=/if (${Melee.Combat} && ${SpawnCount[npc radius 50 zradius 10]}>1 && ${Me.AltAbilityReady[area taunt]} && ${Melee.AggroMode}) /alt activate 110 ; Forage if you have a chest item (usually used to check if you awaiting a rez) and your cursor is free forageif=${If[${Me.Inventory[chest].ID} && !${Cursor.ID},1,0]} ;Swap in and click monk epic haste gloves [id=10652] (or monk ornate gloves [id=12623]) if needed holyshit0=/if (!${Me.Buff[Celestial Tranquility].ID} && ${Spell[Celestial Tranquility].Stacks} && ${Me.FreeBuffSlots}>=1) /casting 10652|hands ;For monks, toggle enrage detection if you have Master's Aura (makes you immune to enrage) holyshit2=/if (!${Me.Song[Master's Aura Effect].ID} && !${meleemvi[enrage]}) /melee enrage=1 holyshit3=/if (${Me.Song[Master's Aura Effect].ID} && ${meleemvi[enrage]}) /melee enrage=0 ; During downtime, check my clicky buffs and recast them if needed downshit0=/if (${Spell[Form of Defense I].Stacks} && !${Me.Buff[Form of Defense I].ID} && !${Me.Moving}) /casting \"Shroud of the Fallen Defender\"|back downshit1=/if (${Spell[Shield of the Arcane].Stacks} && !${Me.Buff[Shield of the Arcane].ID} && !${Me.Moving}) /casting \"Kizrak's Chestplate of Battle\"|chest ; Cast my clicky DS ring during combat if needed (it's insta-cast, so I can do so while in combat without affecting anything) holyshit4=/if (${Spell[Shield of the Eighth].Stacks} && !${Me.Buff[Shield of the Eighth].ID}) /casting \"Velium Coldain Insignia Ring\"|item ;Uses crippling strike to snare holyshit4=/if (${Target.CurrentHPs}<20 && ${Target.Speed}>50) /disc crippling strike ;During downtime, check my aura's and recast if needed downshit1=/if (!${Spell[${Me.Aura[1]}].ID} && !${Me.Moving} && !${Me.Invis} && ${Me.PctEndurance} > 4 && ${Me.Standing}) /disc Myrmidon's Aura ;Activate Respite on Warrior if Endurance is low and deactivate running defensive if needed downshit1=/if (${Me.PctEndurance}<25 && ${Me.CombatAbilityReady[Respite Rk. II]} && ${Me.CurrentEndurance}>100 && (${Zone.ID}!=344)) /disc Respite Rk. II downshit2=/if (${Window[CombatAbilityWnd].Child[CAW_CombatEffectLabel].Text.Equal[Staunch Defense Rk. II]} && ${Me.PctEndurance}<25) /notify CombatAbilityWnd CAW_CombatEffectButton leftmouseup ;Change cleric merc to reactive on named mobs, to balanced on non named mobs. Easily adjustable for DPS mercs holyshit1=/if (!${Target.Named} && ${Mercenary.State.Equal[ACTIVE]} && ${Mercenary.Stance.NotEqual[Balanced]} && ${Mercenary.Class.Name.Equal[Cleric]}) /stance balanced holyshit2=/if (${Target.Named} && ${Mercenary.State.Equal[ACTIVE]} && ${Mercenary.Stance.NotEqual[Reactive]} && ${Mercenary.Class.Name.Equal[Cleric]}) /stance reactive ;Pal/Sk check if target is undead and is not otherwise slowed, then use Helix of the Undying holyshit4=/if (${Target.Body.Name.Equal[Undead]} && ${Me.AltAbilityReady[2018]} && !${Bool[${Target.Slowed}]}) /alt activate 2018 ;Alernatively a slow weapon exchange using the Bandolier and mainhand check, if there is no enc/sham nearby to slow holyshit19=/if (!${Bool[${Target.Slowed}]} && ${Me.Inventory[mainhand].ID}!=133167 && !${SpawnCount[pc class shaman radius 50]} && !${SpawnCount[pc class enchanter radius 50]}) /Bandolier Activate Slow holyshit20=/if (${Bool[${Target.Slowed}]} && ${Me.Inventory[mainhand].ID}!=140616) /Bandolier Activate 1Hand ;Necro - utilize the aggro meter to FD off aggro when over a set percentage holyshit3=/if (${Me.PctAggro}>80 && ${Target.Distance}<15) /casting \"Improved Death Peace\" alt ;Sk centric but can be edited for use with any tank ;first line checks if first damage mod disc is ready, the target is named , endurance is over needed amount, and there is no current disc running ;second line does the same as first, but also check that first damage mod disc is unavailable ;third line does same as second , except it also checks that the second damage mod disc is unavailable holyshit7=/if (${Me.CombatAbilityReady[${Spell[Unholy Guardian Discipline].RankName}]} && ${Target.Named} && ${Me.CurrentEndurance}>5300 && !${Melee.DiscID}) /disc ${Spell[Unholy Guardian Discipline].RankName} holyshit8=/if (${Me.CombatAbilityReady[${Spell[Doomscale Mantle].RankName}]} && !${Me.CombatAbilityReady[${Spell[Unholy Guardian Discipline].RankName}]} && ${Target.Named} && ${Me.CurrentEndurance}>7700 && !${Melee.DiscID}) /disc ${Spell[Doomscale Mantle].RankName} holyshit9=/if (${Me.CombatAbilityReady[${Spell[Grelleth's Carapace].RankName}]} && !${Me.CombatAbilityReady[${Spell[Doomscale Mantle].RankName}]} && !${Me.CombatAbilityReady[${Spell[Unholy Guardian Discipline].RankName}]} && ${Target.Named} && ${Me.CurrentEndurance}>2700 && !${Melee.DiscID}) /disc ${Spell[Grelleth's Carapace].RankName} Optional Global INI File \u00b6 MQ2Melee also has 3 global \\(not character specific\\) parameters that can be set in a second, optional INI file. MQ2Melee uses default values for these parameters unless it finds a file named MQ2Melee.ini that you created in the same directory. Here is an example of a MQ2Melee.ini file and a description of the parameters: [Settings] SpawnType=10 MeleeKeys=z RangeKeys=x SpawnType : 0 + all desired target type modifier: \\(+1 PC\\) \\(+2 NPC\\) \\(+4 PC PET\\) \\(+8 NPC PET\\) \\(+16 PC CORPSE\\) (+32 NPC CORPSE) default is 10 \\(0 for base + 2 for NPC and + 8 for NPC PET\\) . MeleeKeys : Melee Attack Key \\(not same as eq please unless you like problems\\) default is z. RangeKeys : Range Attack Key default is x. Troubleshooting/FAQ \u00b6 I have made changes to my INI settings. How do I activate the new settings? If you have MQ2Melee loaded and use an editor to make changes to your INI file, use /melee load to reload your settings. Alternatively, you can unload and reload the plugin. I keep having to making changes to my melee settings from the command line. How do I save the new settings? From the command line type /melee save . I can't get the StickCmd to work With Version 4 of the MQ2Melee plugin there was a change to the StickCmd, wherein it no longer requires \"/stick\" in the parameters. The old format of \"StickCmd=/Stick hold 10 moveback\" thus becomes \"StickCmd=hold 10 moveback\". Also you will have to execute /melee stickmode=1 to tell the plugin to use stick arguments from ini and not built-in default /stick behaviour. **I get the message \"Exchange: -1 slot can not be Found\" or \"Item \"XYZ\" is not found\" for potion belt enabled items and using in downshit & holyshit command lines**. Use /potionbelt activate # Where as #=the potionbelt slot your item in \\(example for Haste potion that is in slot 2 of the potionbelt\\) downshit6=/if \\(${Spell\\[Elixir of Speed X\\].Stacks} && !${Me.Buff\\[Elixir of Speed X\\].ID} && !${Me.Moving}\\) /potionbelt activate 2","title":"MQ2Melee"},{"location":"plugins/community-plugins/mq2melee/#mq2melee","text":"","title":"MQ2Melee"},{"location":"plugins/community-plugins/mq2melee/#description","text":"MQ2Melee , written by s0rCieR, is designed to provide intelligent use of SHORT TIME REUSE MELEE ABILITIES and PET HANDLING during combat, depending on current combat conditions. It was developed to replace melee-oriented functions typically used in macros. MQ2Melee 7.09 Updated by Maskoi 02/17/2016 [can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=50&t=19600](https://macroquest.org/phpBB3/viewtopic.php?f=50&t=19600)\\) , in the VIP Plugin Forum. 6.0 Updated by Teichou 12/02/2012 for RoF, [can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=50&t=18581](https://macroquest.org/phpBB3/viewtopic.php?f=50&t=18581)\\) 5.0 and so on can be found here here Previous versions can be found here .","title":"Description"},{"location":"plugins/community-plugins/mq2melee/#history","text":"The inspiration for MQ2Melee was MQ2AutoSkills and MQ2ThrowIt . All credit for the concepts should go to Cr4zyb4rd and Bushdaka, authors of those plugins.","title":"History"},{"location":"plugins/community-plugins/mq2melee/#donations","text":"s0rcier is the author. Teichou and Maskoi is the current maintainer. If you want to give them money, look them up.","title":"Donations"},{"location":"plugins/community-plugins/mq2melee/#special-thanks","text":"Thumbs up and many thanks to the BETA Tester Team: A_Druid_00, Dark2phoenix, DigitalMocking, Lacky, Moeymoejoe, Outlander and Warauinu. Thanks to those plugin authors Busdaka, Cr4zyb4rd, Outlander, pms and Wassup for providing inspiration and help. And finally thanks to Dark2phoenix and Wasted for updating and maintaining this wiki page.","title":"Special Thanks"},{"location":"plugins/community-plugins/mq2melee/#prerequisites","text":"You must have 1 point trained in any trainable Combat Ability you would like to use You must have purchased the Alternate Ability you would like to use You must have trained the Combat Discipline you would like to use You meet any prerequisites for the use of the ability (i.e. can't slam from a mount, can't bash without a shield or a two handed weapon and the AA ability, can't backstab without being behind target with a piercing weapon, etc) MQ2MoveUtils:v11 plugin is needed to use /stick parameters [Can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=31&t=15909](https://macroquest.org/phpBB3/viewtopic.php?f=31&t=15909)\\) . MQ2Cast is required to cast spells, activate Alternate Abilities or click items. [Can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=50&t=17517](https://macroquest.org/phpBB3/viewtopic.php?f=50&t=17517)\\) . MQ2Exchange is required to find and swap items if using MQ2Cast to click items. [Can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=50&t=16436](https://macroquest.org/phpBB3/viewtopic.php?f=50&t=16436)\\) . MQ2BagWindow is required for finding and swapping items. [Can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=50&t=17035](https://macroquest.org/phpBB3/viewtopic.php?f=50&t=17035)\\) . moveitems.h is required for swapping items and compiling. [Can be found here] \\([https://macroquest.org/phpBB3/viewtopic.php?f=31&t=17047](https://macroquest.org/phpBB3/viewtopic.php?f=31&t=17047)\\) .","title":"Prerequisites"},{"location":"plugins/community-plugins/mq2melee/#features","text":"Auto use abilities according to user settings and game conditions. Auto-equip defined items for bashing, backstabbing or ranged attack. Built in user conditions to restrain the use of certain abilities. CHAT MONITORING: Auto-stand on Failed/Broken Feign Death. Monitoring of \"Begin to Cast\" messages for automatic Bash/Slam/Kick or casting of defined stuns. Automatic turning on/off of Attack on Enrage/Infuriate. MELEE: Auto-equipping of weapon set \\(s\\) prior to engaging \\(aggro/non-aggro sets\\) . Auto-use of defined combat or other abilities. User-configurable /stick arguments. MELEE \\(AGGRO MODE\\) : Auto Taunt when you loose aggro on target. Configurable spells to cast to gain/maintain aggro. MELEE \\(NON AGGRO MODE\\) : Back off/Feign/Evade fight if your health goes below a point. Auto Resume fight if your health goes back above a point. RANGED: Toggle between Melee/Ranged mode according to Target distance. Swap In/Out defined ranged items \\(bow/throwing\\) . Auto refill ammunition slot when less than 80 in a stack. Built-in /throwit command you could use to pull \\(see below for explanation\\) . Auto-Sleep mode while auto-fire is on. Configurable automatic facing of target. PET HANDLING: Issue /pet back and /pet hold after each mobs dies. Configure pet to wait to assist till mobs within range. Configure pet to wait for a specified time before assisting. Pet mend if its life goes below a certain point. Option to automatically re-engage target when no longer mezzed. Backup pet on enrage/infuriate events and re-engaging of target. Auto /pet hold if you manually hit back button or do /pet back. USER DEFINED CONDITIONS: Allows for conditional use of various abilities/disciplines. Allows for customized actions based on conditional statements. TOP-LEVEL OBJECTS: Provides MQ2Data information for better macro integration and HUD designs. Can be used with custom user-defined conditions.","title":"Features"},{"location":"plugins/community-plugins/mq2melee/#supported-abilities","text":"","title":"Supported Abilities"},{"location":"plugins/community-plugins/mq2melee/#combat-abilities","text":"See MQ2Melee#Supported AA's, Combat Abilities, Skills & Spells by Class","title":"Combat Abilities"},{"location":"plugins/community-plugins/mq2melee/#alternate-advancement-abilities","text":"See MQ2Melee#Supported AA's, Combat Abilities, Skills & Spells by Class","title":"Alternate Advancement Abilities"},{"location":"plugins/community-plugins/mq2melee/#melee-disciplines","text":"See MQ2Melee#Supported AA's, Combat Abilities, Skills & Spells by Class","title":"Melee Disciplines"},{"location":"plugins/community-plugins/mq2melee/#detected-disciplines","text":"The following Disciplines are detected to promote some combat abilities: Ashenhand Discipline, Assassin Discipline \\(3\\) , Silentfist Discipline, and Thunderkick Discipline.","title":"Detected Disciplines"},{"location":"plugins/community-plugins/mq2melee/#skills","text":"See MQ2Melee#Supported AA's, Combat Abilities, Skills & Spells by Class","title":"Skills"},{"location":"plugins/community-plugins/mq2melee/#spell-handling","text":"Provoke can be configured to cast any AA, disc or spell. It will auto-detect if you lose aggro, and then attempt to use any of the defined spells to regain it. To determine the proper Spell ID for any Discipline, Alternate Ability or Spell to be used with the provoke/stun commands use one of the following commands: For Disciplines use: /echo \\({Me.CombatAbility\\[\\) {Me.CombatAbility \\]} .ID} , replacing with the name of the Discipline. For AAs, use /aa info . The first number \\(before the AA name\\) is the Spell ID. For Spells, use /echo ${Spell[].ID} , replacing with the spell name. Alternatively, you can look on Lucy for the discipline/spell/AA and get the ID from there. Some common discipline IDs are listed below: Ancient Chaos Cry id=5016 Bazu Bellow id=6173 Bellow id=4681 Bellow of the Mastruq id=5015 Berate id=4682 Incite id=4697 Mock id=8467 Provoke id=4608 Crippling Strike id=468 Stuns can also be configured to cast any AA, disc or spells when MQ2Melee detects that your target begins to cast a spell. Provoke and Stun have built-in values, but they can always be overwritten using the command line (eg. **/melee provoke0=5015**) or by editing the** provoke0 setting in the INI file and then typing /melee reload** in game.","title":"Spell Handling"},{"location":"plugins/community-plugins/mq2melee/#commands","text":"All options below are listed with on/off as the arguments used to enable/disable the option, however true or 1 can be used in place of on , and false or 0 can be used in place of off . Example: /melee on aggro=on taunt=on kick=1 bash=0 intimidation=false disarm=true /melee by itself will list all abilities and settings that are available to you. Some settings are dependant on others being active, so may not show up until you enable the prerequisite option. To find the relevant Item IDs for the various options, you can use the following command: /echo ${FindItem = .ID} , replacing with the name of the item you are looking for (no need to use quotes). Eg. /echo ${FindItem =Blade of Carnage .ID} results in \"25210\".","title":"Commands"},{"location":"plugins/community-plugins/mq2melee/#melee-options","text":"on\\|off Turns plugin On/Off. aggro = on\\|off *Plugin tries to keep aggro on target using all enabled aggro abilities/disciplines until aggro is regained, or either you or the target dies.* aggropri = Item ID Item ID for primary weapon to be used in aggro mode. aggrosec = Item ID Item ID for secondary weapon to be used in aggro mode. arrow = Item ID Item ID of ammunition to use for ranged/throwing attacks. backoff = 0-100 *Turns attack off if your life percentage goes below the designated value. Will never back off due to low health if aggro=on.* bash = on\\|off Will try to bash target if you have a shield equipped or have have a 2-handed weapon and the 2 Hand Bash AA. battleleap = on\\|off Whether or not to use Battle Leap AA \\(Default=0/off\\) begging = on\\|off Will turn attack off and beg target and turn back on. bow = Item ID Item ID for ranged weapon. disarm = on\\|off Will try to disarm target if target is wielding a weapon. downflag0-19 = on\\|off downflag0 = on\\|off Whether or not to use defined DownShit0 from ini. After enabling this option, you must edit the INI file with your relevant DownShit command and then issue /melee load to enable it. enrage = on\\|off *Turns attack off and issues /pet hold \\(/pet back if hold not available\\) if target enrages and you are facing it. Automatically re-engages when enrage ends or if you are behind the target.* facing = on\\|off Whether or not to face target \\(checked every 2 seconds and only in ranged mode\\) . falls = on\\|off \\(Monk only\\) Auto-feign to reduce aggro?. holyflag0-19 = on\\|off holyflag0 = on\\|off Whether or not to use defined HolyShit0 from ini. After enabling this option, you must edit the INI file with your relevant HolyShit command and then issue /melee load to enable it. infuriate = on\\|off *Turns attack off and issues /pet hold \\(/pet back if hold not available\\) if target infuriates and you are facing it. Re-engages when infuriate ends or if you are behind the target.* intimidation = on\\|off Will use intimidation if available. jolt = 0-100 Jolt every # of hits \\(0=off\\) . kick = on\\|off Will use kick if available. melee = on\\|off Turn Melee Mode On/Off. meleepri = Item ID Item ID for primary weapon to be used in non-aggro mode. meleesec = Item ID Item ID for secondary weapon to be used in non-aggro mode mend = 0-100 Mend wounds if your life percentage goes below the designated value. petassist = on\\|off *Will send pet attack on engage and backoff on enrage/infuriate if those options are enabled. The plugin will also use /pet hold if you have that AA.* petdelay = 0-30 Will not engage pet until x seconds has passed. petmend = 0-100 *Cast \"Mend Companion\" or \"Replenish Companion\" if pet is at or below given health % (will cast higher of the two if you have both).* petrange = 0-150 Will not engage pet until mob is within x range of your pet. pickpocket = on\\|off Turn off attack & try to pickpocket if not in aggro mode. plugin = on\\|off Turn plugin on/off. poker = Item ID Item ID for backstabbing weapon. Will be swapped in before backstabbing if necessary. pothealfast = 0-100 Use fast heal potion when my HP falls below X % \\(default=30\\) . pothealover = 0-100 Use heal over time potion when my HP falls below X % \\(default=60\\) . provoke0 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for provoking \\(0=off\\) . provoke1 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for provoking \\(0=off\\) . provokeend = 0-100 Stop trying to provoke when target's health falls below X % \\(default=15\\) . provokemax = 0-100 Number of times you will try provoking aa/disc/spells to regain aggro \\(default=1\\) . provokeonce = on\\|off Only use provoke once to attempt to gain aggro. range = 0-250 Enables ranged attacks when target is at or beyond this range. Note that 0 disables ranged attacks completely. resume = 0-100 Stand up and turn back attack on if your life percentage goes above this value. Used with /melee feigndeath=on. shield = Item ID Item ID of shield to use for bashing slam = on\\|off Will slam as often as possible. sneak = on\\|off Will try to sneak if not in combat. standup = on\\|off Will stand you on a failed FD. stickdelay = 0-100 Wait X seconds before sticking to target. stickmode = 0\\|1\\|2 If 1, it will use the *stickcmd as defined in the INI file, if 0, it will use the default stick command, if 2, it will turn off sticking* stickrange = 0+ Enables sticking when target is at set distance away \\(0=no sticking\\) . stun0 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . stun1 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . stunning = 0-100 Cast defined Stun spell \\(s\\) if target at or below X % and/or if detected that target is casting a spell. taunt = on\\|off *Will push taunt button if aggro=on and you're not the target's target. Without a TauntIF statement, this will cause your toon to chain taunt. If you do not wish for that, use a TauntIF command \\(see below\\) .* throwstone = 0-100 Will use throw stone disc when ready and target in range. Note: Will not use in aggro/provoke mode if provoke has not been used yet.","title":"/melee options"},{"location":"plugins/community-plugins/mq2melee/#supported-aas-combat-abilities-skills-spells-by-class","text":"","title":"Supported AA's, Combat Abilities, Skills &amp; Spells by Class"},{"location":"plugins/community-plugins/mq2melee/#bard","text":"AA's Selo's Kick selos =0|1 off\\|on Boastful Bellow boastful =0|1 off\\|on","title":"Bard"},{"location":"plugins/community-plugins/mq2melee/#beastlord","text":"AA's Bite of the Asp asp =0|1 off\\|on Chameleon Strike cstrike =0|1 off\\|on Gorilla Smash gorillasmash =0|1 off\\|on Feral Swipe feralswipe =0|1 off\\|on Playing Possum feigndeath = 0-100 Attempt to feign death when life is below X %. 0=Off Raven's Claw ravens =0|1 off\\|on Combat Ability Bestial Vivisection, Bestial Rending, Bestial Evulsing bvivi = 0-100 Use ability when endurance above X %. 0=Off Rake, Foray, Harrow, Rush, Barrage, Pummel rake = 0-100 Use ability when endurance above X %. 0=Off Flurry of Claws, Tumult of Claws, Clamor of Claws fclaw = 0-100 Use ability when endurance above X %. 0=Off","title":"Beastlord"},{"location":"plugins/community-plugins/mq2melee/#berserker","text":"Combat Ability Shared Bloodlust, Shared Brutality, Shared Savagery, Shared Viciousness bloodlust = 0-100 Use ability when endurance above X % \\(0=off\\) . Leg Strike, Leg Cut, Leg Slice, Crippling Strike, Tendon Cleave, Tendon Sever, Tendon Shear, Tendon Lacerate, Tendon Slash, Tendon Gash cripple = 0-100 Use ability when endurance above X % \\(0=off\\) . Cry Havoc cryhavoc = 0-100 Use ability when endurance above X % \\(0=off\\) . Diversive Strike, Distracting Strike, Confusing Strike, Baffling Strike, Jarring Strike, Jarring Smash, Jarring Clash, Jarring Slam, Jarring Blow, Jarring Crush jolt =0-100] Jolt every # of hits \\(0=off\\) . Overpowering Frenzy, Overwhelming Frenzy, Vanquishing Frenzy opfrenzy = 0-100 Use ability when endurance above X % \\(0=off\\) . Rage Volley, Destroyer's Volley, Giant Slayer's Volley, Annihilator's Volley, Decimator's Volley, Eradicator's Volley, Savage Volley, Brutal Volley ragevolley = 0-100 Will use best ragevolley discipline that is available, ready and endurance above X % \\(0=off\\) . Axe of Rallos, Axe of Graster rallos = 0-100 Use ability when endurance above X % \\(0=off\\) . Slap in the Face, Kick in the Teeth, Punch in the Throat slapface = 0-100 Use ability when endurance above X % \\(0=off\\) . Head Strike, Head Pummel, Head Crush, Mind Strike, Temple Blow, Temple Strike, Temple Bash, Temple Chop, Temple Smash, Temple Crush stun1 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . Vigorous Axe Throw, Energetic Axe Throw, Brutal Axe Throw vigaxe = 0-100 Use ability when endurance above X % \\(0=off\\) .","title":"Berserker"},{"location":"plugins/community-plugins/mq2melee/#monk","text":"AA Eye Gouge eyegouge =0|1 off\\|on Combat Ability Cloud of Fists cloud = 0-100 Use ability when endurance above X % \\(0=off\\) Feign Death, Imitate Death feign = 0-100 Attempt to feign death when life is below X %. 0=Off Fists of Wu fistofwu 0-100 Use ability when endurance above X % \\(0=off\\) . Leopard Claw, Dragon Fang, Clawstriker Flurry, Wheel Of Fists, Whorl Of Fists, Six-Step Pattern, Eight-Step Pattern leopardclaw = 0-100 Use ability when endurance above X % \\(0=off\\) . Drunken Monkey monkey = 0-100 Use ability when endurance above X % \\(0=off\\) Calanin's Synergy, Dreamwalker's Synergy, Veilwalker's Synergy, Shadewalker's Synergy synergy = 0-100 Use ability when endurance above X % \\(0=off\\) . Vigorous Shuriken vigshuriken = 0-100 Use ability when endurance above X % \\(0=off\\) . Skills Dragon Punch, Tail Rake \\(Iksar\\) dragonpunch =0|1 off\\|on Will use if available. Eagle Strike eaglestrike =0|1 off\\|on Will use if available. Flying Kick flyingkick =0|1 off\\|on Will use if available. Mend mend =0-100 off\\|on Mend wounds if your life percentage goes below the designated value. Round Kick roundkick =0|1 off\\|on Will use if available. Tiger Claw tigerclaw =0|1 off\\|on Will use if available.","title":"Monk"},{"location":"plugins/community-plugins/mq2melee/#paladin","text":"AA Divine Stun, Hand of Disruption, Force of Disruption provoke0 =id ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . stun0 =id ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . Lay Hands layhand = 0-100 Lay Hands on myself when my HP % falls below X . Combat Ability Righteous Indignation, Righteous Vexation, Righteous Umbrage rightind = 0-100 Use ability when endurance above X % \\(0=off\\) . Withstand, Defy, Renounce, Reprove, Repel withstand = 0-100 Use ability when endurance above X % \\(0=off\\) . Spells Challenge for Honor, Trial for Honor, Charge for Honor, Confrontation for Honor, Provocation for Honor, Demand for Honor, Reverent Force challengefor =0|1 off\\|on Activate aggro spells. Stun, Holy Might, Force of Akera, Force of Akilae, Ancient Force of Chaos, Force of Piety, Ancient Force of Jeron, Sacred Force, Force of Prexus. Solemn Force, Force of Timorous, Devout Force, Force of the Crying Seas, Earnest Force, Force of Marr, Force of the Iceclad provoke1 =id ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . stun1 =id ID of the Disc/AA/Spell to use for stunning \\(0=off\\) . Steely Stance, Stubborn Stance, Stoic Stance, Steadfast Stance steely =0|1 off\\|on Activate defensive spells.","title":"Paladin"},{"location":"plugins/community-plugins/mq2melee/#ranger","text":"AA Ferocious Kick ferociouskick =0|1 0=OFF/1=ON Combat Ability Jolting Snapkicks, Jolting Frontkicks, Jolting Hook Kicks, Jolting Crescent Kicks, Jolting Heel Kicks jltkicks = 0-100 endurance Storm of Blades, Focused Storm of Blades stormblades =0|1 0=OFF/1=ON Spells Jolt, Cinderjolt jolt =0-100] Jolt every # of hits \\(0=off\\) .","title":"Ranger"},{"location":"plugins/community-plugins/mq2melee/#rogue","text":"Combos Assassinate assassinate =0|1 off\\|on Activate the assassinate skill \\(ie. Sneak, Hide, move behind target, activate Strike disc, backstab\\) . Combat Ability Assault, Battery, Onslaught, Incursion assault = 0-100 Use ability when endurance above X % \\(0=off\\) . Bleed, Wound, Lacerate, Gash bleed = 0-100 Use ability when endurance above X % \\(0=off\\) . Jugular Slash, Jugular Slice, Jugular Sever, Jugular Gash, Jugular Lacerate jugular = 0-100 Use ability when endurance above X % \\(0=off\\) Pinpoint Vulnerability, Pinpoint Weaknesses, Pinpoint Vitals, Pinpoint Flaws, Pinpoint Liabilities, Pinpoint Deficiencies pinpoint = 0-100 Use ability when endurance above X % \\(0=off\\) Sneak Attack, Thief's Vengeance, Assassin Strike, Kyv Strike, Ancient Chaos Strike, Daggerfall, Razor Arc, Swift Blade, Dagger Lunge, Dagger Swipe, Daggerswipe, Daggerstrike, Daggerthrust strike =0|1 off\\|on Use your best sneak attack disc Thief's Eye thiefeye = 0-100 Uses ability if your endurance is over X %. \\(0=off\\) . Vigorous Dagger-Throw, Vigorous Dagger-Strike, Energetic Dagger-Throw vigdagger = 0-100 Use ability when endurance above X % \\(0=off\\) . Skills Backstab backstab =0|1 off\\|on Will try to back stab if you wielding a piercing weapon in your main hand and behind the target. Escape escape = 0-100 Turn off Attack and use rogue escape skill if your life percentage goes below the designated value. Will never happen if aggro=on. Evade evade =0|1 off\\|on Will attempt to evade in fight to drop some aggro each time hide skill available, strongly suggest that you set unhide=1 to authorize plugin to break invis and rejoin the fight. Hide hide =0|1 off\\|on Will try to hide if you're not in a combat and not moving. Pickpocket pickpocket =0|1 off\\|on Turn off attack & try to pickpocket if not in aggro mode. Sense Traps sensetraps = on\\|off Will try to sense traps if not in combat. Sneak sneak =0|1 off\\|on Will try to sneak if not in combat.","title":"Rogue"},{"location":"plugins/community-plugins/mq2melee/#shadow-knight","text":"AA Death Peace feign1 = 0-100 Attempt to feign death when life is below X %. 0=Off Harm Touch harmtouch =0|1 off\\|on Use Harm Touch ability when ready. Combat Ability Withstand, Defy, Renounce, Reprove, Repel withstand = 0-100 Use ability when endurance above X % \\(0=off\\) . Gouging Blade, Gashing Blade, Lacerating Blade gblade = 0-100 Use ability when endurance above X % \\(0=off\\) . Spells Feign Death, Comatose, Death Peace, Last Breath, Rigor Mortis, Last Grasp, Final Breath, Last Breath, Final Gasp, Terminal Breath feign0 = 0-100 Attempt to feign death when life is below X %. 0=Off Terror of Death, Terror of Terris, Terror of Thule, Terror of Discord, Terror of Vergalid, Terror of Soulbleeder, Terror of Jelvalak, Terror of Rerekalen, Terror of Poira, Terror of Narus provoke1 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for provoking \\(0=off\\) . Challenge for Power, Trial for Power, Charge for Power, Confrontation for Power, Provocation for Power, Demand for Power, Impose for Power challengefor =0|1 off\\|on Activate aggro spells. Steely Stance, Stubborn Stance, Stoic Stance, Steadfast Stance, Staunch Stance steely =0|1 off\\|on Activate defensive spells.","title":"Shadow Knight"},{"location":"plugins/community-plugins/mq2melee/#warrior","text":"AA Call of Challenge callchallenge =0|1 off\\|on Use Alt Ability when ready. Gut Punch gutpunch =0|1 off\\|on Use Alt Ability when ready. Knee Strike kneestrike =0|1 off\\|on Use Alt Ability when ready. Combat Ability Bracing Defense, Staunch Defense, Stalwart Defense, Steadfast Defense defense = 0-100 Use ability when endurance above X % \\(0=off\\) . Commanding Voice commanding = 0-100 Use ability when endurance above X % \\(0=off\\) . Field Armorer, Field Outfitter, Field Defender, Field Guardian fieldarm = 0-100 Use ability when endurance above X % \\(0=off\\) . Opportunistic Strike, Strategic Strike, Vital Strike, Vital Strike opportunisticstrike = 0-100 Use ability when endurance above X % \\(0=off\\) . Provoke, Belllow, Berate, Incite, Bellow of the Mastrug, Ancient Chaos Cry, Bazu Bellow, Scowl, Sneer, Jeer, Bazu Bluster, Bazu Roar, Scoff, Krondal's Roar, Ridicule provoke1 = Disc/AA/Spell ID \\# ID of the Disc/AA/Spell to use for provoking \\(0=off\\) . Throat Jab throatjab = 0-100 Use ability when endurance above X % \\(0=off\\) .","title":"Warrior"},{"location":"plugins/community-plugins/mq2melee/#top-level-objects","text":"bool ${Melee} Same as ${Melee.Enable} \\(see below\\) . bool ${Melee.AggroMode} TRUE/FALSE if the plugin is operating in Aggro-mode or not. int ${Melee.Ammunition} Count of defined ammunition or current equipped ammunition. float ${Melee.BackAngle} Angle representing heading difference with current target's back. bool ${Melee.BackStabbing} TRUE/FALSE if backstab setting is on/off. int ${Melee.Casted} Time \\(in miliseconds\\) elapsed since last detected spell casting \\(60000 if none\\) . bool ${Melee.Combat} TRUE/FALSE if plugin enable and got valid kill target. Should replace ${Me.Combat} logic. int ${Melee.DiscID} Spell ID of currently running discipline, 0 if none. bool ${Melee.Enable} TRUE/FALSE if plugin on/off, NULL if not loaded. bool ${Melee.Engage} TRUE if we have a valid kill target and it's okay to turn attack on, FALSE if not. bool ${Melee.Enrage} Is kill target enraged? bool ${Melee.GotAggro} TRUE/FALSE if current target seems to be aggroed on you \\(not perfect\\) . bool ${Melee.Immobilize} TRUE if you have been standing still for more then 250ms, FALSE if not. bool ${Melee.Infuriate} TRUE if kill target is infuriated! int ${Melee.MeleeMode} Maximum distance to target to be considered in melee range. int ${Melee.RangeMode} Minimum distance to target to be considered in archery range. string ${Melee.Status} Current plugin status, can be one or more of the following: ENGAGED, WAITING, MELEE, RANGE, ENRAGE, INFURIATE, BACKING, ESCAPING, FEIGNING, EVADING, FALLING, STEALING, BEGGING. int ${Melee.Target} SpawnID of current valid kill target, otherwise 0. float ${Melee.ViewAngle} Angle of view with current target. Debugging TLOs: int ${meleemvb **idskill** } 1 if the skill is ready and target in range, 0 if not. Most combat and/or character kills that can use an ID are testable here. Examples of idskills are: idleopardclaw , idslam , idforage , idfrenzy , idtigerclaw , idescape . int ${meleemvi **variable** } 1/0 if the variable is set to on/off. This includes all variables that can be set on the command line. string ${meleemvs **option** } Evaluates option based on the current conditions and target. Options are all the INI options that contain command lines that need to be evaluated. Examples are: bashif , beggingif , tauntif , holyshit0 , holyshit1 , downshit1 , slamif , etc. Echoing one of these options will show you how they evaluate.","title":"Top-Level Objects"},{"location":"plugins/community-plugins/mq2melee/#ini-file","text":"MQ2Melee saves most options for each character in the INI file called _.ini. Most options in the INI file are set using the command line \\(/melee _command=on\\|off_\\) and they are best set this way, and not by editing the INI file. Any options given this way are then saved to the INI file when you issue the command /melee save . Options that contain macro commands are set by editing the INI file and then loading the values with /melee load .","title":"INI File"},{"location":"plugins/community-plugins/mq2melee/#if-options","text":"The following \"IF\" options can be set in the INI file. They will then be evaluated before the relevant disc/skill is triggered. They all need to take the form of ${If _condition_,1,0 } statements and must return an integer. Any return of 0 is considered FALSE, any other integer is considered TRUE. Eg. \\({If\\[\\) ,1,0]} will always be evaluated correctly. Your defined condition must not exceed 255 characters, or it will cause the plugin to crash. backstabif bashif beggingif callchallengeif challengeforif commandingif cryhavocif disarmif dragonpunchif eaglestrikeif evadeif fallsif feralswipeif fistofwuif flyingkickif forageif frenzyif harmtouchif pothealfastif pothealoverif hideif intimidationif joltif kickif layhandif leopardclawif mendif pickpocketif provokeif ragevolleyif rakeif roundkickif sensetrapif slamif sneakif strikeif stunningif tauntif thiefeyeif throwstoneif tigerclawif twistedshankif","title":"\"IF\" Options"},{"location":"plugins/community-plugins/mq2melee/#other-options","text":"stickcmd This command takes a list of options that should be passed to the /stick command. Eg. \"hold 15\" downshit0-downshit7 Each one of these takes a macro command that will be run when you are not in combat. Remember, you have to enable each option with /melee downflag#=on . holyshit0-holyshit7 Each one of these takes a macro command that will be run at the beginning of combat. Remember, you have to enable each option with /melee holyflag#=on .","title":"Other Options"},{"location":"plugins/community-plugins/mq2melee/#holyshit-and-downshit","text":"MQ2Melee now supports up to 20 macro command lines of each that will be executed when one of the following conditions are true: Holyshit: Commands will be executed when in combat, no casting going on and the cursor is free. Downshit: Commands will be executed when not in combat, not casting and the cursor is free. When setting these commands, you must be careful not to fall into an endless loop or create a spam war. Make sure that when your line finishes, it will set up something that will force it to be FALSE for a while! These Commands are turned on and off by downflagx and holyflagx if your downshit or holyshit parses ANY macro variables, you MUST set these flags to 2 instead of 1","title":"HolyShit and DownShit"},{"location":"plugins/community-plugins/mq2melee/#ini-file-examples","text":"Please Note: Use this section only for adding useful examples that can be included in the INI file, not for copy/pastes of the INI files themselves. Anyone can see what a default INI is by loading up the plugin, running /melee on , /melee save and then opening the INI file in Notepad. ; Will just echo that the macro is paused (this is stupid btw, but its an example.) ; SINCE WE USE A MACRO VARIABLE (ModVersion) WE NEED TO SET THE FLAG TO 2! downflag0=2 downshit0=/if (${Macro.Paused}) /echo ${Macro} ${ModVersion} is PAUSED! ; Swapping an Avatar-proccing weapon when needed. ; - The first line swaps your Ancient Prismatic Spear [id=29435] into your offhand if you don't already have it equipped and you don't have the Avatar buff ; - The second line swaps your Orcish Bone Axe [id=82634] back into your offhand if it's not equipped and you have the Avatar buff already holyshit0=/if (${Me.Inventory[offhand].ID}==82634 && !${Me.Buff[avatar].ID} && ${Spell[avatar].Stacks} && (${Melee.AggroMode} && ${Melee.GotAggro})) /exchange 29435 offhand holyshit1=/if (${Me.Inventory[offhand].ID}==29435 && (${Me.Buff[avatar].ID} || !${Spell[avatar].Stacks} || (${Melee.AggroMode} && !${Melee.GotAggro}))) /exchange 82634 offhand ; Activating the Area Taunt AA when multiple mobs in range holyshit2=/if (${Melee.Combat} && ${SpawnCount[npc radius 50 zradius 10]}>1 && ${Me.AltAbilityReady[area taunt]} && ${Melee.AggroMode}) /alt activate 110 ; Forage if you have a chest item (usually used to check if you awaiting a rez) and your cursor is free forageif=${If[${Me.Inventory[chest].ID} && !${Cursor.ID},1,0]} ;Swap in and click monk epic haste gloves [id=10652] (or monk ornate gloves [id=12623]) if needed holyshit0=/if (!${Me.Buff[Celestial Tranquility].ID} && ${Spell[Celestial Tranquility].Stacks} && ${Me.FreeBuffSlots}>=1) /casting 10652|hands ;For monks, toggle enrage detection if you have Master's Aura (makes you immune to enrage) holyshit2=/if (!${Me.Song[Master's Aura Effect].ID} && !${meleemvi[enrage]}) /melee enrage=1 holyshit3=/if (${Me.Song[Master's Aura Effect].ID} && ${meleemvi[enrage]}) /melee enrage=0 ; During downtime, check my clicky buffs and recast them if needed downshit0=/if (${Spell[Form of Defense I].Stacks} && !${Me.Buff[Form of Defense I].ID} && !${Me.Moving}) /casting \"Shroud of the Fallen Defender\"|back downshit1=/if (${Spell[Shield of the Arcane].Stacks} && !${Me.Buff[Shield of the Arcane].ID} && !${Me.Moving}) /casting \"Kizrak's Chestplate of Battle\"|chest ; Cast my clicky DS ring during combat if needed (it's insta-cast, so I can do so while in combat without affecting anything) holyshit4=/if (${Spell[Shield of the Eighth].Stacks} && !${Me.Buff[Shield of the Eighth].ID}) /casting \"Velium Coldain Insignia Ring\"|item ;Uses crippling strike to snare holyshit4=/if (${Target.CurrentHPs}<20 && ${Target.Speed}>50) /disc crippling strike ;During downtime, check my aura's and recast if needed downshit1=/if (!${Spell[${Me.Aura[1]}].ID} && !${Me.Moving} && !${Me.Invis} && ${Me.PctEndurance} > 4 && ${Me.Standing}) /disc Myrmidon's Aura ;Activate Respite on Warrior if Endurance is low and deactivate running defensive if needed downshit1=/if (${Me.PctEndurance}<25 && ${Me.CombatAbilityReady[Respite Rk. II]} && ${Me.CurrentEndurance}>100 && (${Zone.ID}!=344)) /disc Respite Rk. II downshit2=/if (${Window[CombatAbilityWnd].Child[CAW_CombatEffectLabel].Text.Equal[Staunch Defense Rk. II]} && ${Me.PctEndurance}<25) /notify CombatAbilityWnd CAW_CombatEffectButton leftmouseup ;Change cleric merc to reactive on named mobs, to balanced on non named mobs. Easily adjustable for DPS mercs holyshit1=/if (!${Target.Named} && ${Mercenary.State.Equal[ACTIVE]} && ${Mercenary.Stance.NotEqual[Balanced]} && ${Mercenary.Class.Name.Equal[Cleric]}) /stance balanced holyshit2=/if (${Target.Named} && ${Mercenary.State.Equal[ACTIVE]} && ${Mercenary.Stance.NotEqual[Reactive]} && ${Mercenary.Class.Name.Equal[Cleric]}) /stance reactive ;Pal/Sk check if target is undead and is not otherwise slowed, then use Helix of the Undying holyshit4=/if (${Target.Body.Name.Equal[Undead]} && ${Me.AltAbilityReady[2018]} && !${Bool[${Target.Slowed}]}) /alt activate 2018 ;Alernatively a slow weapon exchange using the Bandolier and mainhand check, if there is no enc/sham nearby to slow holyshit19=/if (!${Bool[${Target.Slowed}]} && ${Me.Inventory[mainhand].ID}!=133167 && !${SpawnCount[pc class shaman radius 50]} && !${SpawnCount[pc class enchanter radius 50]}) /Bandolier Activate Slow holyshit20=/if (${Bool[${Target.Slowed}]} && ${Me.Inventory[mainhand].ID}!=140616) /Bandolier Activate 1Hand ;Necro - utilize the aggro meter to FD off aggro when over a set percentage holyshit3=/if (${Me.PctAggro}>80 && ${Target.Distance}<15) /casting \"Improved Death Peace\" alt ;Sk centric but can be edited for use with any tank ;first line checks if first damage mod disc is ready, the target is named , endurance is over needed amount, and there is no current disc running ;second line does the same as first, but also check that first damage mod disc is unavailable ;third line does same as second , except it also checks that the second damage mod disc is unavailable holyshit7=/if (${Me.CombatAbilityReady[${Spell[Unholy Guardian Discipline].RankName}]} && ${Target.Named} && ${Me.CurrentEndurance}>5300 && !${Melee.DiscID}) /disc ${Spell[Unholy Guardian Discipline].RankName} holyshit8=/if (${Me.CombatAbilityReady[${Spell[Doomscale Mantle].RankName}]} && !${Me.CombatAbilityReady[${Spell[Unholy Guardian Discipline].RankName}]} && ${Target.Named} && ${Me.CurrentEndurance}>7700 && !${Melee.DiscID}) /disc ${Spell[Doomscale Mantle].RankName} holyshit9=/if (${Me.CombatAbilityReady[${Spell[Grelleth's Carapace].RankName}]} && !${Me.CombatAbilityReady[${Spell[Doomscale Mantle].RankName}]} && !${Me.CombatAbilityReady[${Spell[Unholy Guardian Discipline].RankName}]} && ${Target.Named} && ${Me.CurrentEndurance}>2700 && !${Melee.DiscID}) /disc ${Spell[Grelleth's Carapace].RankName}","title":"INI File Examples"},{"location":"plugins/community-plugins/mq2melee/#optional-global-ini-file","text":"MQ2Melee also has 3 global \\(not character specific\\) parameters that can be set in a second, optional INI file. MQ2Melee uses default values for these parameters unless it finds a file named MQ2Melee.ini that you created in the same directory. Here is an example of a MQ2Melee.ini file and a description of the parameters: [Settings] SpawnType=10 MeleeKeys=z RangeKeys=x SpawnType : 0 + all desired target type modifier: \\(+1 PC\\) \\(+2 NPC\\) \\(+4 PC PET\\) \\(+8 NPC PET\\) \\(+16 PC CORPSE\\) (+32 NPC CORPSE) default is 10 \\(0 for base + 2 for NPC and + 8 for NPC PET\\) . MeleeKeys : Melee Attack Key \\(not same as eq please unless you like problems\\) default is z. RangeKeys : Range Attack Key default is x.","title":"Optional Global INI File"},{"location":"plugins/community-plugins/mq2melee/#troubleshootingfaq","text":"I have made changes to my INI settings. How do I activate the new settings? If you have MQ2Melee loaded and use an editor to make changes to your INI file, use /melee load to reload your settings. Alternatively, you can unload and reload the plugin. I keep having to making changes to my melee settings from the command line. How do I save the new settings? From the command line type /melee save . I can't get the StickCmd to work With Version 4 of the MQ2Melee plugin there was a change to the StickCmd, wherein it no longer requires \"/stick\" in the parameters. The old format of \"StickCmd=/Stick hold 10 moveback\" thus becomes \"StickCmd=hold 10 moveback\". Also you will have to execute /melee stickmode=1 to tell the plugin to use stick arguments from ini and not built-in default /stick behaviour. **I get the message \"Exchange: -1 slot can not be Found\" or \"Item \"XYZ\" is not found\" for potion belt enabled items and using in downshit & holyshit command lines**. Use /potionbelt activate # Where as #=the potionbelt slot your item in \\(example for Haste potion that is in slot 2 of the potionbelt\\) downshit6=/if \\(${Spell\\[Elixir of Speed X\\].Stacks} && !${Me.Buff\\[Elixir of Speed X\\].ID} && !${Me.Moving}\\) /potionbelt activate 2","title":"Troubleshooting/FAQ"},{"location":"plugins/community-plugins/mq2missing/","text":"MQ2Missing \u00b6 Description \u00b6 MQ2Missing was written by s0rcier and is found in the VIP forums here . This plugin compares characters in one list of names to another, determining which names are missing from one list or the other. This plugin was released as a beta and never fully supported. Commands \u00b6 _*/missing _ list1\\*&lt;/span&gt; [ list2 ]** Acceptable list options DZ \\(people in current expedition\\) TASK \\(people in current task\\) RAID \\(people in current raid\\) ZONE \\(people in current zone\\) GUILD \\(people in current zone as you with the same guild tag\\)","title":"MQ2Missing"},{"location":"plugins/community-plugins/mq2missing/#mq2missing","text":"","title":"MQ2Missing"},{"location":"plugins/community-plugins/mq2missing/#description","text":"MQ2Missing was written by s0rcier and is found in the VIP forums here . This plugin compares characters in one list of names to another, determining which names are missing from one list or the other. This plugin was released as a beta and never fully supported.","title":"Description"},{"location":"plugins/community-plugins/mq2missing/#commands","text":"_*/missing _ list1\\*&lt;/span&gt; [ list2 ]** Acceptable list options DZ \\(people in current expedition\\) TASK \\(people in current task\\) RAID \\(people in current raid\\) ZONE \\(people in current zone\\) GUILD \\(people in current zone as you with the same guild tag\\)","title":"Commands"},{"location":"plugins/community-plugins/mq2netbots/","text":"MQ2NetBots \u00b6 Description \u00b6 MQ2NetBots was written by s0rcier and is found in the VIP forums here MQ2NetBots provides linked MQ2EQBC clients a method of sharing status and statistics. It makes that information available via Top-Level Object members for macro writers and HUD designers. Commands \u00b6 **/netbots [ on | off ]** Turns MQ2NetBots functionality on or off /netbots grab=**_**on**_**\\|**_**off**_ ** Receive status updates from other MQ2NetBots-enabled clients connected to the same EQBCS server. /netbots send=**_**on**_**\\|**_**off**_ ** Broadcast status updates to the EQBCS server. Top-Level Object: ${NetBots} \u00b6 Forms \u00b6 Type Form Description netbots NetBots Returns information about your client netbotsclient NetBots \\***Name**\\* Returns broadcast information about Name === Data Types === netbots Type string int bool bool bool string {| border=\"1\" cellpadding=\"2\" cellspacing=\"0\" width=\"600px\" !colspan=\"3\"| netbotsclient |- |style=\"background:#000000;color:#ffffff;text-align:left;width:15%;\"| Type |style=\"background:#000000;color:#ffffff;text-align:left;width:25%;\"| Member Name |style=\"background:#000000;color:#ffffff;text-align:left;\"| Description |- | string | Name |Name of Name |- | int | Zone |Zone ID of Name |- | int | Instance |Instance ID of Name |- | class | Class |Class of Name |- | int | Level |Level of Name |- | float | PctExp |Percent Experience of Name |- | float | PctAAExp |Percent AA Experience of Name |- | float | PctGroupLeaderExp |Percent Group Leader Experience of Name |- | int | CurrentHPs |Current Hitpoints of Name |- | int | MaxHPs |Total Hitpoints of Name |- | int | PctHPs |Current Hitpoints Percentage of Name |- | int | CurrentEndurance |Current Endurance of Name |- | int | MaxEndurance |Total Endurance of Name |- | int | PctEndurance |Current Endurance Percentage of Name |- | int | CurrentMana |Current Mana of Name |- | int | MaxMana |Total Mana of Name |- | int | PctMana |Current Mana Percentage of Name |- | int | PetID |Spawn ID of Name 's pet |- | int | PetHP |Hitpoints of Name 's pet |- | int | TargetID |Spawn ID of Name 's target |- | int | TargetHP |Hitpoints of Name 's target |- | spell | Casting |Spell Name is casting |- | string | State | State of Name STUN STAND SIT DUCK BIND FEIGN DEAD UNKNOWN |- | bool | Attacking |Is Name attacking? |- | bool | AFK |Is Name AFK? |- | bool | Binding |Is Name kneeling? |- | bool | Ducking |Is Name ducking? |- | bool | Feigning |Is Name feigning? |- | bool | Grouped |Is Name in a group? |- | bool | Invis |Is Name invisible? |- | bool | Levitating |Is Name levitating? |- | bool | LFG |Is Name LFG? |- | bool | Mounted |Is Name on a mount? |- | bool | Moving |Is Name moving? |- | bool | Raid |Is Name in a raid? |- | bool | Sitting |Is Name sitting? |- | bool | Standing |Is Name standing? |- | int | FreeBuffSlots |Total free buff slots of Name |- | bool | InZone |Is Name in the same zone? |- | bool | InGroup |Is Name in the same group? |- | string | Leader | Name 's group leader |- | int | Updated |Timestamp of last update from Name |- | string | Gem |All spells Name has memorized |- | spell | Gem **\\#** |Spell Name has in slot # |- | string | Buff |All buffs Name has |- | spell | Buff **\\#** |Buff Name has in buff slot # |- | string | Duration |Duration of all buffs Name has |- | int | Duration **\\#** |Duration of buff Name has in buff slot # |- | string | ShortBuff |All short buffs Name has |- | spell | ShortBuff **\\#** |ShortBuff Name has in buff slot # |- | string | PetBuff |All pet buffs Name 's pet has |- | spell | PetBuff **\\#** |Pet buff Name 's pet has in pet buff slot # |- | int | TotalAA |Total AA of Name |- | int | UsedAA |Total spent AA of Name |- | int | UnusedAA |Total unspent AA of Name |- | int | CombatState |Combat State of Name |- |} == Examples == Displays the duration remaining on the buff Samwell has in buff slot 4 /echo ${NetBots[Samwell].Duration[4]}","title":"MQ2NetBots"},{"location":"plugins/community-plugins/mq2netbots/#mq2netbots","text":"","title":"MQ2NetBots"},{"location":"plugins/community-plugins/mq2netbots/#description","text":"MQ2NetBots was written by s0rcier and is found in the VIP forums here MQ2NetBots provides linked MQ2EQBC clients a method of sharing status and statistics. It makes that information available via Top-Level Object members for macro writers and HUD designers.","title":"Description"},{"location":"plugins/community-plugins/mq2netbots/#commands","text":"**/netbots [ on | off ]** Turns MQ2NetBots functionality on or off /netbots grab=**_**on**_**\\|**_**off**_ ** Receive status updates from other MQ2NetBots-enabled clients connected to the same EQBCS server. /netbots send=**_**on**_**\\|**_**off**_ ** Broadcast status updates to the EQBCS server.","title":"Commands"},{"location":"plugins/community-plugins/mq2netbots/#top-level-object-netbots","text":"","title":"Top-Level Object: ${NetBots}"},{"location":"plugins/community-plugins/mq2netbots/#forms","text":"Type Form Description netbots NetBots Returns information about your client netbotsclient NetBots \\***Name**\\* Returns broadcast information about Name === Data Types === netbots Type string int bool bool bool string {| border=\"1\" cellpadding=\"2\" cellspacing=\"0\" width=\"600px\" !colspan=\"3\"| netbotsclient |- |style=\"background:#000000;color:#ffffff;text-align:left;width:15%;\"| Type |style=\"background:#000000;color:#ffffff;text-align:left;width:25%;\"| Member Name |style=\"background:#000000;color:#ffffff;text-align:left;\"| Description |- | string | Name |Name of Name |- | int | Zone |Zone ID of Name |- | int | Instance |Instance ID of Name |- | class | Class |Class of Name |- | int | Level |Level of Name |- | float | PctExp |Percent Experience of Name |- | float | PctAAExp |Percent AA Experience of Name |- | float | PctGroupLeaderExp |Percent Group Leader Experience of Name |- | int | CurrentHPs |Current Hitpoints of Name |- | int | MaxHPs |Total Hitpoints of Name |- | int | PctHPs |Current Hitpoints Percentage of Name |- | int | CurrentEndurance |Current Endurance of Name |- | int | MaxEndurance |Total Endurance of Name |- | int | PctEndurance |Current Endurance Percentage of Name |- | int | CurrentMana |Current Mana of Name |- | int | MaxMana |Total Mana of Name |- | int | PctMana |Current Mana Percentage of Name |- | int | PetID |Spawn ID of Name 's pet |- | int | PetHP |Hitpoints of Name 's pet |- | int | TargetID |Spawn ID of Name 's target |- | int | TargetHP |Hitpoints of Name 's target |- | spell | Casting |Spell Name is casting |- | string | State | State of Name STUN STAND SIT DUCK BIND FEIGN DEAD UNKNOWN |- | bool | Attacking |Is Name attacking? |- | bool | AFK |Is Name AFK? |- | bool | Binding |Is Name kneeling? |- | bool | Ducking |Is Name ducking? |- | bool | Feigning |Is Name feigning? |- | bool | Grouped |Is Name in a group? |- | bool | Invis |Is Name invisible? |- | bool | Levitating |Is Name levitating? |- | bool | LFG |Is Name LFG? |- | bool | Mounted |Is Name on a mount? |- | bool | Moving |Is Name moving? |- | bool | Raid |Is Name in a raid? |- | bool | Sitting |Is Name sitting? |- | bool | Standing |Is Name standing? |- | int | FreeBuffSlots |Total free buff slots of Name |- | bool | InZone |Is Name in the same zone? |- | bool | InGroup |Is Name in the same group? |- | string | Leader | Name 's group leader |- | int | Updated |Timestamp of last update from Name |- | string | Gem |All spells Name has memorized |- | spell | Gem **\\#** |Spell Name has in slot # |- | string | Buff |All buffs Name has |- | spell | Buff **\\#** |Buff Name has in buff slot # |- | string | Duration |Duration of all buffs Name has |- | int | Duration **\\#** |Duration of buff Name has in buff slot # |- | string | ShortBuff |All short buffs Name has |- | spell | ShortBuff **\\#** |ShortBuff Name has in buff slot # |- | string | PetBuff |All pet buffs Name 's pet has |- | spell | PetBuff **\\#** |Pet buff Name 's pet has in pet buff slot # |- | int | TotalAA |Total AA of Name |- | int | UsedAA |Total spent AA of Name |- | int | UnusedAA |Total unspent AA of Name |- | int | CombatState |Combat State of Name |- |} == Examples == Displays the duration remaining on the buff Samwell has in buff slot 4 /echo ${NetBots[Samwell].Duration[4]}","title":"Forms"},{"location":"plugins/community-plugins/mq2netheal/","text":"MQ2NetHeal \u00b6 Description \u00b6 MQ2NetHeal was written by s0rcier \\(With Major Credits A\\_Druid\\_00 and pinkfloydx33\\) and is found in the VIP forums here . MQ2NetHeal is used to provide more flexible way for macros, plugins and huds designers to access those information about healing and curing. MQ2NetHeal has three sections. NetHeal,NetCure, and NetWorst. * MQ2NetHeal provides linked MQ2EQBC clients a method of sharing status and statistics. It makes that information available via Top-Level Object members for macro writers and HUD designers. Commands \u00b6 /netheal \u00b6 **/netheal [ on | off ]** Turns MQ2NetHeal functionality on or off /netheal grab=**_**on**_**\\|**_**off**_ ** Receive status updates from other MQ2NetHeal-enabled clients connected to the same EQBCS server. /netheal send=**_**on**_**\\|**_**off**_ ** Broadcast status updates to the EQBCS server. _*/netheal _ hot\\_\\|\\_da\\*&lt;/span&gt; [ Time ] List ** Labels List with 'hot' or 'da' flag for set amount of time. \\(Time is in milliseconds.\\) Recommended use :: ${Target.CleanName} for single target, Or ${NetWorst.Members} for NetWorst Query. This is here for Macro control. /netcure \u00b6 **/netcure [ on | off ]** Toggles watching networks for afflictions /netcure audio=**_**on**_**\\|**_**off**_ ** Toggles playing audio sound. /netcure popup=**_**on**_**\\|**_**off**_ ** Toggles popup alerts. /netcure quiet=**_**on**_**\\|**_**off**_ ** Toggles sending reports to MQ2 Window. /networst \u00b6 **/networst [ on | off ]** Toggles watching for spawns health. /networst audio=**_**on**_**\\|**_**off**_ ** Toggles playing audio sound. /networst popup=**_**on**_**\\|**_**off**_ ** Toggles popup alerts. /networst quiet=**_**on**_**\\|**_**off**_ ** Toggles sending reports to MQ2 Window. /worst \u00b6 '''/worsttarget Query Targets the spawn that matchs Query. '''/worstcycle Query Cycles to the next spawn that matchs Query Valid Query Parameters :: radius,hp,pet,pc,group,self,fd,da,hot,war,clr,pal,rng,shd,dru,mnk,brd,rog,shm,nec,wiz,mag,enc,bst,ber,all or #ID#. hp,all and short class names could be use with % ie: shm80 war60 hp80 all99. Top-Level Objects \u00b6 ${NetHeal} \u00b6 All NetHeal TLOs can be used like : ${NetHeal X .Name} Or ${NetHeal.Name Y }. Where X could be Name/ID or Y is a Numerical Indice on Last ${NetWorst.Request}. string '''${NetHeal X .Name} Returns Name. int ${NetHeal X .ID} Return SpawnID. float ${NetHeal X .Distance} Return Distance. int ${NetHeal X .PctHPs} Return PctHPs. bool ${NetHeal X .Pet} Return This is a Pet? int ${NetHeal X .Class} Return Class. bool ${NetHeal X .Feign} Returns TRUE if X or Y is a NEC,SHD,MNK Class. bool ${NetHeal X .Canni} Returns TRUE if X or Y is a Cannibalize Class. int ${NetHeal X .Spawn} Return Spawn. int ${NetHeal X .da} Return da timer left. int ${NetHeal X .hot} Return hot timer left. int ${NetHeal X .ttl} Return 60000. -Currently Broken July 13 th , 2009 int ${NetHeal X .Updated} Return how old is This? ${NetCure} \u00b6 Correct parameters are. self,myself,pet,warder,spellid,spellidlist,${NetBots[].Buff} string ${NetCure X } Return list of harmfull effects. int ${NetCure X .Detrimentals} Return # of Detrimental Spells. int ${NetCure X .Counters} Return # of Counters. int ${NetCure X .Cursed} Return # of Curse Counters. int ${NetCure X .Diseased} Return # of Disease Counters. int ${NetCure X .Poisoned} Return # of Poison Counters. int ${NetCure X .EnduDrain} Return # of Endurance Drain Per Tick. int ${NetCure X .LifeDrain} Return # of Life Drain Per Tick. int ${NetCure X .ManaDrain} Return # of Mana Drain Per Tick int ${NetCure X .Blinded} Return # Blind Spells. int ${NetCure X .CastingLevel} Return # Reducing Casting Level. int ${NetCure X .Charmed} Return # Charm Spells. int ${NetCure X .Feared} Return # Fear Spells. int ${NetCure X .Healing} Return # Reducing Healing Effectiveness. int ${NetCure X .Invulnerable} Return # Invulnerability Spells int ${NetCure X .Mesmerized} Return # Memsmerize Spells. int ${NetCure X .Resistance} Return # Resist Debuff Spells. int ${NetCure X .Rooted} Return # Root Spells. int '''${NetCure X .Silenced) Return # Silence Spells. int ${NetCure X .Slowed} Return # Slow Spells. int ${NetCure X .Snared} Return # Snare Spells. int ${NetCure X .SpellCost} Return # Affecting Spell Mana Cost. int ${NetCure X .SpellSlowed} Return # Slowing Casting Speed. int ${NetCure X .SpellDamage} Return # Reducing Spell Damage. int ${NetCure X .Trigger} Return # That Trigger Something. ${NetWorst} \u00b6 int ${NetWorst.Affects} Returns Last # of People in Query Range. float ${NetWorst.Average} Returns HP Average People in Last Query. int ${NetWorst.Counter} Return Last # of People Matching Last Query. string ${NetWorst.Members} Return People SpawnID List of Last Query. int ${NetWorst.Request X } Return # of People Matching That Query. Valid Query Parameters :: radius,hp,pet,pc,group,self,fd,da,hot,war,clr,pal,rng,shd,dru,mnk,brd,rog,shm,nec,wiz,mag,enc,bst,ber,all or #ID#. hp,all and short class names could be use with % ie: shm80 war60 hp80 all99.","title":"MQ2NetHeal"},{"location":"plugins/community-plugins/mq2netheal/#mq2netheal","text":"","title":"MQ2NetHeal"},{"location":"plugins/community-plugins/mq2netheal/#description","text":"MQ2NetHeal was written by s0rcier \\(With Major Credits A\\_Druid\\_00 and pinkfloydx33\\) and is found in the VIP forums here . MQ2NetHeal is used to provide more flexible way for macros, plugins and huds designers to access those information about healing and curing. MQ2NetHeal has three sections. NetHeal,NetCure, and NetWorst. * MQ2NetHeal provides linked MQ2EQBC clients a method of sharing status and statistics. It makes that information available via Top-Level Object members for macro writers and HUD designers.","title":"Description"},{"location":"plugins/community-plugins/mq2netheal/#commands","text":"","title":"Commands"},{"location":"plugins/community-plugins/mq2netheal/#netheal","text":"**/netheal [ on | off ]** Turns MQ2NetHeal functionality on or off /netheal grab=**_**on**_**\\|**_**off**_ ** Receive status updates from other MQ2NetHeal-enabled clients connected to the same EQBCS server. /netheal send=**_**on**_**\\|**_**off**_ ** Broadcast status updates to the EQBCS server. _*/netheal _ hot\\_\\|\\_da\\*&lt;/span&gt; [ Time ] List ** Labels List with 'hot' or 'da' flag for set amount of time. \\(Time is in milliseconds.\\) Recommended use :: ${Target.CleanName} for single target, Or ${NetWorst.Members} for NetWorst Query. This is here for Macro control.","title":"/netheal"},{"location":"plugins/community-plugins/mq2netheal/#netcure","text":"**/netcure [ on | off ]** Toggles watching networks for afflictions /netcure audio=**_**on**_**\\|**_**off**_ ** Toggles playing audio sound. /netcure popup=**_**on**_**\\|**_**off**_ ** Toggles popup alerts. /netcure quiet=**_**on**_**\\|**_**off**_ ** Toggles sending reports to MQ2 Window.","title":"/netcure"},{"location":"plugins/community-plugins/mq2netheal/#networst","text":"**/networst [ on | off ]** Toggles watching for spawns health. /networst audio=**_**on**_**\\|**_**off**_ ** Toggles playing audio sound. /networst popup=**_**on**_**\\|**_**off**_ ** Toggles popup alerts. /networst quiet=**_**on**_**\\|**_**off**_ ** Toggles sending reports to MQ2 Window.","title":"/networst"},{"location":"plugins/community-plugins/mq2netheal/#worst","text":"'''/worsttarget Query Targets the spawn that matchs Query. '''/worstcycle Query Cycles to the next spawn that matchs Query Valid Query Parameters :: radius,hp,pet,pc,group,self,fd,da,hot,war,clr,pal,rng,shd,dru,mnk,brd,rog,shm,nec,wiz,mag,enc,bst,ber,all or #ID#. hp,all and short class names could be use with % ie: shm80 war60 hp80 all99.","title":"/worst"},{"location":"plugins/community-plugins/mq2netheal/#top-level-objects","text":"","title":"Top-Level Objects"},{"location":"plugins/community-plugins/mq2netheal/#netheal_1","text":"All NetHeal TLOs can be used like : ${NetHeal X .Name} Or ${NetHeal.Name Y }. Where X could be Name/ID or Y is a Numerical Indice on Last ${NetWorst.Request}. string '''${NetHeal X .Name} Returns Name. int ${NetHeal X .ID} Return SpawnID. float ${NetHeal X .Distance} Return Distance. int ${NetHeal X .PctHPs} Return PctHPs. bool ${NetHeal X .Pet} Return This is a Pet? int ${NetHeal X .Class} Return Class. bool ${NetHeal X .Feign} Returns TRUE if X or Y is a NEC,SHD,MNK Class. bool ${NetHeal X .Canni} Returns TRUE if X or Y is a Cannibalize Class. int ${NetHeal X .Spawn} Return Spawn. int ${NetHeal X .da} Return da timer left. int ${NetHeal X .hot} Return hot timer left. int ${NetHeal X .ttl} Return 60000. -Currently Broken July 13 th , 2009 int ${NetHeal X .Updated} Return how old is This?","title":"${NetHeal}"},{"location":"plugins/community-plugins/mq2netheal/#netcure_1","text":"Correct parameters are. self,myself,pet,warder,spellid,spellidlist,${NetBots[].Buff} string ${NetCure X } Return list of harmfull effects. int ${NetCure X .Detrimentals} Return # of Detrimental Spells. int ${NetCure X .Counters} Return # of Counters. int ${NetCure X .Cursed} Return # of Curse Counters. int ${NetCure X .Diseased} Return # of Disease Counters. int ${NetCure X .Poisoned} Return # of Poison Counters. int ${NetCure X .EnduDrain} Return # of Endurance Drain Per Tick. int ${NetCure X .LifeDrain} Return # of Life Drain Per Tick. int ${NetCure X .ManaDrain} Return # of Mana Drain Per Tick int ${NetCure X .Blinded} Return # Blind Spells. int ${NetCure X .CastingLevel} Return # Reducing Casting Level. int ${NetCure X .Charmed} Return # Charm Spells. int ${NetCure X .Feared} Return # Fear Spells. int ${NetCure X .Healing} Return # Reducing Healing Effectiveness. int ${NetCure X .Invulnerable} Return # Invulnerability Spells int ${NetCure X .Mesmerized} Return # Memsmerize Spells. int ${NetCure X .Resistance} Return # Resist Debuff Spells. int ${NetCure X .Rooted} Return # Root Spells. int '''${NetCure X .Silenced) Return # Silence Spells. int ${NetCure X .Slowed} Return # Slow Spells. int ${NetCure X .Snared} Return # Snare Spells. int ${NetCure X .SpellCost} Return # Affecting Spell Mana Cost. int ${NetCure X .SpellSlowed} Return # Slowing Casting Speed. int ${NetCure X .SpellDamage} Return # Reducing Spell Damage. int ${NetCure X .Trigger} Return # That Trigger Something.","title":"${NetCure}"},{"location":"plugins/community-plugins/mq2netheal/#networst_1","text":"int ${NetWorst.Affects} Returns Last # of People in Query Range. float ${NetWorst.Average} Returns HP Average People in Last Query. int ${NetWorst.Counter} Return Last # of People Matching Last Query. string ${NetWorst.Members} Return People SpawnID List of Last Query. int ${NetWorst.Request X } Return # of People Matching That Query. Valid Query Parameters :: radius,hp,pet,pc,group,self,fd,da,hot,war,clr,pal,rng,shd,dru,mnk,brd,rog,shm,nec,wiz,mag,enc,bst,ber,all or #ID#. hp,all and short class names could be use with % ie: shm80 war60 hp80 all99.","title":"${NetWorst}"},{"location":"plugins/community-plugins/mq2pq/","text":"MQ2PQ \u00b6 Description \u00b6 MQ2PQ \\(by dewey2461\\) Provide a general purpose spell priority queue. You can find the latest version of MQ2PQ here . Requirements \u00b6 Plugin:MQ2Cast for... you know... casting! Goals \u00b6 - Replace MQ2Twist / MQ2Medley / MQ2Melee shits. - Automatically figure out Rk.II & Rk. III versions. - Make it easy to write conditionals for individual spells and/or sets of spells. - Make it easy to see what is going on by providing a window with a list all your 'spells', and showing the status of the conditions. How? Define the spells \\( AA/Disc/Items \\) you want used in the order of importance. Each pulse the plugin find the most important 'spell' that is ready and casts it. 1. Download source and compile plugin. 2. Download UI and save in your EQ\\uifiles\\default folder. 3. In game type /plugin MQ2PQ 4. In game reload your UI. 5. Click the save button and go edit your servername_characerter.ini file. 6. In game click Load & On Commands \u00b6 Help - Show information load - Loads the saved configuration save - Saves the current state show - Shows the priority list window hide - Hides the priority list window on - Start casting spells. off - Stop casting spells. clear - Clears the priority list addset - Add a set to the priority list lag - How long after the \"casttime\" to consider the spell complete? BARDS ONLY - After \"casttime\"+lag , the plugin will send a /stopcast. Example \u00b6 Bard profile converted from MQ2Medley \\( WORKING \\) [MQ2PQ] Set=|melee ON=1 SHOW=1 CastLag=200 Silent=0 AutoSelect=1 [MQ2PQ-melee] CastIF=!${Me.Invis} Priority=0 Spell1_Name=possessed dreadstone minstrel's rapier Spell1_Recast=8000 Spell1_CastIF=${Target.Type.Equal[NPC]} && (${Target.PctHPs}<98) && !${Target.Slowed.ID} Spell2_Name=Rapier of Somber Notes Spell2_Recast=10000 Spell2_CastIF=${Spell[Symphony of Battle].Stacks}&&!${Me.Buff[Symphony of Battle].ID} Spell3_Name=Selo's Sonata Spell3_Recast=60000 Spell3_CastIF=${Spell[Selo's Sonata].Stacks} Spell4_Name=Dichotomic Psalm Spell5_Name=Tune Stuck In Your Head Spell6_Name=War March of Jocelyn Rk. II Spell7_Name=Aria of Maetanrus Rk. II Spell8_Name=Blade of Vesagran Spell8_CastIF=${Target.Type.Equal[NPC]}&&${Target.PctHPs}<98&&(!${SpawnCount[group pc shaman radius 100]}||${Me.Song[Prophet's Gift of the Ruchu].ID}) Spell9_Name=Boastful Bellow Spell9_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell10_Name=Bladed Song Spell10_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell11_Name=Fierce Eye Spell11_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell12_Name=Fundament: Third Spire of the Minstrels Spell12_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell13_Name=Funeral Dirge Spell13_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell14_Name=Quick Time Spell14_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell15_Name=Song of Stone Spell15_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell16_Name=Fjilnauk's Song of Suffering Spell17_Name=Silisia's Lively Crescendo Spell18_Name=Arcane Melody","title":"MQ2PQ"},{"location":"plugins/community-plugins/mq2pq/#mq2pq","text":"","title":"MQ2PQ"},{"location":"plugins/community-plugins/mq2pq/#description","text":"MQ2PQ \\(by dewey2461\\) Provide a general purpose spell priority queue. You can find the latest version of MQ2PQ here .","title":"Description"},{"location":"plugins/community-plugins/mq2pq/#requirements","text":"Plugin:MQ2Cast for... you know... casting!","title":"Requirements"},{"location":"plugins/community-plugins/mq2pq/#goals","text":"- Replace MQ2Twist / MQ2Medley / MQ2Melee shits. - Automatically figure out Rk.II & Rk. III versions. - Make it easy to write conditionals for individual spells and/or sets of spells. - Make it easy to see what is going on by providing a window with a list all your 'spells', and showing the status of the conditions. How? Define the spells \\( AA/Disc/Items \\) you want used in the order of importance. Each pulse the plugin find the most important 'spell' that is ready and casts it. 1. Download source and compile plugin. 2. Download UI and save in your EQ\\uifiles\\default folder. 3. In game type /plugin MQ2PQ 4. In game reload your UI. 5. Click the save button and go edit your servername_characerter.ini file. 6. In game click Load & On","title":"Goals"},{"location":"plugins/community-plugins/mq2pq/#commands","text":"Help - Show information load - Loads the saved configuration save - Saves the current state show - Shows the priority list window hide - Hides the priority list window on - Start casting spells. off - Stop casting spells. clear - Clears the priority list addset - Add a set to the priority list lag - How long after the \"casttime\" to consider the spell complete? BARDS ONLY - After \"casttime\"+lag , the plugin will send a /stopcast.","title":"Commands"},{"location":"plugins/community-plugins/mq2pq/#example","text":"Bard profile converted from MQ2Medley \\( WORKING \\) [MQ2PQ] Set=|melee ON=1 SHOW=1 CastLag=200 Silent=0 AutoSelect=1 [MQ2PQ-melee] CastIF=!${Me.Invis} Priority=0 Spell1_Name=possessed dreadstone minstrel's rapier Spell1_Recast=8000 Spell1_CastIF=${Target.Type.Equal[NPC]} && (${Target.PctHPs}<98) && !${Target.Slowed.ID} Spell2_Name=Rapier of Somber Notes Spell2_Recast=10000 Spell2_CastIF=${Spell[Symphony of Battle].Stacks}&&!${Me.Buff[Symphony of Battle].ID} Spell3_Name=Selo's Sonata Spell3_Recast=60000 Spell3_CastIF=${Spell[Selo's Sonata].Stacks} Spell4_Name=Dichotomic Psalm Spell5_Name=Tune Stuck In Your Head Spell6_Name=War March of Jocelyn Rk. II Spell7_Name=Aria of Maetanrus Rk. II Spell8_Name=Blade of Vesagran Spell8_CastIF=${Target.Type.Equal[NPC]}&&${Target.PctHPs}<98&&(!${SpawnCount[group pc shaman radius 100]}||${Me.Song[Prophet's Gift of the Ruchu].ID}) Spell9_Name=Boastful Bellow Spell9_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell10_Name=Bladed Song Spell10_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell11_Name=Fierce Eye Spell11_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell12_Name=Fundament: Third Spire of the Minstrels Spell12_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell13_Name=Funeral Dirge Spell13_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell14_Name=Quick Time Spell14_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell15_Name=Song of Stone Spell15_CastIF=${Target.Type.Equal[NPC]} && ${Target.PctHPs}<98 Spell16_Name=Fjilnauk's Song of Suffering Spell17_Name=Silisia's Lively Crescendo Spell18_Name=Arcane Melody","title":"Example"},{"location":"plugins/community-plugins/mq2relaytells/","text":"MQ2RelayTells \u00b6 Description \u00b6 MQ2RelayTells Plugin created by Sadge Please do not distribute without my consent. You can find the latest version of MQ2RelayTells here . This plugin will relay different types of tells to a chat channel you specify. You may also relay the tells to an email address or cellphone using Blat 262 found at www.blat.net In the MQ2Relaytells.ini file, you can change ChatChannel=/bc (default) to anything you want. For example, if you wanted to relay the tells to a character named Sillytoon, you'd change it to ChatChannel=/tell Sillytoon. Commands \u00b6 /relaycustomwill addto your ini file and will not relay any tells that contain. /relayhelp command. This allows you to view current settings /relayload command. This allows you to reload the ini file if you make changes.","title":"MQ2RelayTells"},{"location":"plugins/community-plugins/mq2relaytells/#mq2relaytells","text":"","title":"MQ2RelayTells"},{"location":"plugins/community-plugins/mq2relaytells/#description","text":"MQ2RelayTells Plugin created by Sadge Please do not distribute without my consent. You can find the latest version of MQ2RelayTells here . This plugin will relay different types of tells to a chat channel you specify. You may also relay the tells to an email address or cellphone using Blat 262 found at www.blat.net In the MQ2Relaytells.ini file, you can change ChatChannel=/bc (default) to anything you want. For example, if you wanted to relay the tells to a character named Sillytoon, you'd change it to ChatChannel=/tell Sillytoon.","title":"Description"},{"location":"plugins/community-plugins/mq2relaytells/#commands","text":"/relaycustomwill addto your ini file and will not relay any tells that contain. /relayhelp command. This allows you to view current settings /relayload command. This allows you to reload the ini file if you make changes.","title":"Commands"},{"location":"plugins/community-plugins/mq2rez/","text":"MQ2Rez \u00b6 Description \u00b6 Work done by Thez, Based off of dewey's MQ2AutoRez This plugin is set up to auto accept rezes based on INI configuration, along with auto looting your corpse. MQ2Rez You can find the latest version of MQ2Rez here . Commands \u00b6 /rez -> displays settings /rez accept on|off -> Toggle auto-accepting rezbox /rez spawn on|off -> Toggles going to bind point after death /rez pct # -> Autoaccepts rezes only if they are higher than # percent /rez loot on|off -> Toggle looting corpse when opened and when rezzed /rez silent -> Toggle messages for looting individual items /rez command on|off -> Toggle use of a command after looting out corpse /rez setcommand \"mycommand\" -> Set the command that you want. /rez help /rezzme -- Immediately respawn yourself without a rez. You will *not* regain any experience. The \"mycommand\" must be formatted like this: \"/memset group\" or \"/multiline ; /sit ; /memset group ; /mac rezbuffs\" etc.","title":"MQ2Rez"},{"location":"plugins/community-plugins/mq2rez/#mq2rez","text":"","title":"MQ2Rez"},{"location":"plugins/community-plugins/mq2rez/#description","text":"Work done by Thez, Based off of dewey's MQ2AutoRez This plugin is set up to auto accept rezes based on INI configuration, along with auto looting your corpse. MQ2Rez You can find the latest version of MQ2Rez here .","title":"Description"},{"location":"plugins/community-plugins/mq2rez/#commands","text":"/rez -> displays settings /rez accept on|off -> Toggle auto-accepting rezbox /rez spawn on|off -> Toggles going to bind point after death /rez pct # -> Autoaccepts rezes only if they are higher than # percent /rez loot on|off -> Toggle looting corpse when opened and when rezzed /rez silent -> Toggle messages for looting individual items /rez command on|off -> Toggle use of a command after looting out corpse /rez setcommand \"mycommand\" -> Set the command that you want. /rez help /rezzme -- Immediately respawn yourself without a rez. You will *not* regain any experience. The \"mycommand\" must be formatted like this: \"/memset group\" or \"/multiline ; /sit ; /memset group ; /mac rezbuffs\" etc.","title":"Commands"},{"location":"plugins/community-plugins/mq2sound/","text":"MQ2Sound \u00b6 Description \u00b6 MQ2Sound Developed by bushdaka. This is more of a utility plugin to provide an easy way to make custom alerts with some flexibility of where the WAV files are stored. You can find the latest version of MQ2Sound here . Commands \u00b6 /sound gmcheck - this would play the wav file mq2tripod.wav in your macros directory /sound spawnon - plays mq2spawnon.wav /sound 1 - would sound the notify alert /sound sound - ding! MQ2Sound.ini Examples \u00b6 [Default] sound=.\\\\macros\\\\mq2ding.wav gmcheck=.\\\\macros\\\\mq2tripod.wav spawnon=.\\\\macros\\\\mq2spawnon.wav spawnoff=.\\\\macros\\\\mq2spawnoff.wav alert=.\\\\macros\\\\mq2shot.wav 1=c:\\\\windows\\\\media\\\\notify.wav 2=c:\\\\windows\\\\media\\\\chord.wav 3=c:\\\\windows\\\\media\\\\tada.wav","title":"MQ2Sound"},{"location":"plugins/community-plugins/mq2sound/#mq2sound","text":"","title":"MQ2Sound"},{"location":"plugins/community-plugins/mq2sound/#description","text":"MQ2Sound Developed by bushdaka. This is more of a utility plugin to provide an easy way to make custom alerts with some flexibility of where the WAV files are stored. You can find the latest version of MQ2Sound here .","title":"Description"},{"location":"plugins/community-plugins/mq2sound/#commands","text":"/sound gmcheck - this would play the wav file mq2tripod.wav in your macros directory /sound spawnon - plays mq2spawnon.wav /sound 1 - would sound the notify alert /sound sound - ding!","title":"Commands"},{"location":"plugins/community-plugins/mq2sound/#mq2soundini-examples","text":"[Default] sound=.\\\\macros\\\\mq2ding.wav gmcheck=.\\\\macros\\\\mq2tripod.wav spawnon=.\\\\macros\\\\mq2spawnon.wav spawnoff=.\\\\macros\\\\mq2spawnoff.wav alert=.\\\\macros\\\\mq2shot.wav 1=c:\\\\windows\\\\media\\\\notify.wav 2=c:\\\\windows\\\\media\\\\chord.wav 3=c:\\\\windows\\\\media\\\\tada.wav","title":"MQ2Sound.ini Examples"},{"location":"plugins/community-plugins/mq2spawn/","text":"MQ2Spawn \u00b6 Description \u00b6 MQ2Spawn By pms The intention behind this plugin was to have the ability to announce all OnAddSpawn and OnRemoveSpawn to a dedicated window without the need of attaching a debugger. There are several great spawn tracking plugins on these forums such as MQ2Targets and MQ2Pop that offer named mob announcements, custom spawn search arguments, and many more features. This is not intended to be any sort of replacement for their great utility - just real-time tracking of desired spawn types. I borrowed ideas from MQ2ChatWnd, MQ2EQBC, MQ2TimeStamp, MQ2Paranoid, and others. You can find the latest version of MQ2 here . Commands \u00b6 /spawn - toggle announcements on/off /spawn on - turns announcements on /spawn off - turns announcements off /spawn loc - toggles spawn location suffix in output /spawn spawnid - toggles display of mob spawnid suffix in output /spawn timestamp - toggles timestamp prefix in output /spawn autosave - toggles autosaving of INI file upon setting change /spawn delay - Sets zone time delay /spawn log on - Turns logging on /spawn log off - Turns logging off /spawn log auto - Enables automatic logging /spawn log setpath- Set path to store log files /spawn save - save configuration to INI (also saves UI settings) /spawn load - load configuration from INI (also reloads UI settings) /spawn savebychar - toggle saving UI window settings to [i]server.charname[/i] INI section /spawn status - outputs current plugin settings /spawn help - outputs valid command parameters /spawn clear - clears UI text (like /mqclear) /spawn min - minimizes UI window (like /mqmin) /spawn font # - sets UI font size /spawn exclude name - adds a spawn name to the exclude list, if using multiple words use quotes e.g.: /spawn exclude guard /spawn exclude \"chuckles the great\" // Valid spawn type announcement toggles // e.g. /spwn all // e.g. /spwn pc // e.g. /dspwn npc // e.g. /dspwn all // // Note: 'all' will override settings and display all types when on // this does not reset your other toggles, so if you toggle 'all' off // it will announce only the types that are on, retaining old settings all - pc - npc - mount - pet - merc - flyer - campfire - banner - aura - object - untargetable - chest - trap - timer - trigger - corpse - item - unknown // you may also use the following commands, where you substitute [i]toggletype[/i] with any of those types listed above: /spwn [i]toggletype[/i] - toggles output of this type spawning /dspwn [i]toggletype[/i] - toggles output of this type despawning /spawn [i]toggletype[/i] spawn - toggles output of this type spawning /spawn [i]toggletype[/i] despawn - toggles output of this type despawning /spawn [i]toggletype[/i] minlevel # - sets minimum level a spawn of this type must be to display output (valid 1 to 99) /spawn [i]toggletype[/i] maxlevel # - sets maximum level a spawn of this type must be to display output (valid 1 to 99) /spawn [i]toggletype[/i] color FF00FF - sets the output text color for this spawn type to the supplied hexadecimal RGB color value. do NOT prefix this value with 0x, #, nor use the integer value.","title":"MQ2Spawn"},{"location":"plugins/community-plugins/mq2spawn/#mq2spawn","text":"","title":"MQ2Spawn"},{"location":"plugins/community-plugins/mq2spawn/#description","text":"MQ2Spawn By pms The intention behind this plugin was to have the ability to announce all OnAddSpawn and OnRemoveSpawn to a dedicated window without the need of attaching a debugger. There are several great spawn tracking plugins on these forums such as MQ2Targets and MQ2Pop that offer named mob announcements, custom spawn search arguments, and many more features. This is not intended to be any sort of replacement for their great utility - just real-time tracking of desired spawn types. I borrowed ideas from MQ2ChatWnd, MQ2EQBC, MQ2TimeStamp, MQ2Paranoid, and others. You can find the latest version of MQ2 here .","title":"Description"},{"location":"plugins/community-plugins/mq2spawn/#commands","text":"/spawn - toggle announcements on/off /spawn on - turns announcements on /spawn off - turns announcements off /spawn loc - toggles spawn location suffix in output /spawn spawnid - toggles display of mob spawnid suffix in output /spawn timestamp - toggles timestamp prefix in output /spawn autosave - toggles autosaving of INI file upon setting change /spawn delay - Sets zone time delay /spawn log on - Turns logging on /spawn log off - Turns logging off /spawn log auto - Enables automatic logging /spawn log setpath- Set path to store log files /spawn save - save configuration to INI (also saves UI settings) /spawn load - load configuration from INI (also reloads UI settings) /spawn savebychar - toggle saving UI window settings to [i]server.charname[/i] INI section /spawn status - outputs current plugin settings /spawn help - outputs valid command parameters /spawn clear - clears UI text (like /mqclear) /spawn min - minimizes UI window (like /mqmin) /spawn font # - sets UI font size /spawn exclude name - adds a spawn name to the exclude list, if using multiple words use quotes e.g.: /spawn exclude guard /spawn exclude \"chuckles the great\" // Valid spawn type announcement toggles // e.g. /spwn all // e.g. /spwn pc // e.g. /dspwn npc // e.g. /dspwn all // // Note: 'all' will override settings and display all types when on // this does not reset your other toggles, so if you toggle 'all' off // it will announce only the types that are on, retaining old settings all - pc - npc - mount - pet - merc - flyer - campfire - banner - aura - object - untargetable - chest - trap - timer - trigger - corpse - item - unknown // you may also use the following commands, where you substitute [i]toggletype[/i] with any of those types listed above: /spwn [i]toggletype[/i] - toggles output of this type spawning /dspwn [i]toggletype[/i] - toggles output of this type despawning /spawn [i]toggletype[/i] spawn - toggles output of this type spawning /spawn [i]toggletype[/i] despawn - toggles output of this type despawning /spawn [i]toggletype[/i] minlevel # - sets minimum level a spawn of this type must be to display output (valid 1 to 99) /spawn [i]toggletype[/i] maxlevel # - sets maximum level a spawn of this type must be to display output (valid 1 to 99) /spawn [i]toggletype[/i] color FF00FF - sets the output text color for this spawn type to the supplied hexadecimal RGB color value. do NOT prefix this value with 0x, #, nor use the integer value.","title":"Commands"},{"location":"plugins/community-plugins/mq2spawnmaster/","text":"MQ2SpawnMaster \u00b6 Description \u00b6 MQ2SpawnMaster By Cr4zyb4rd Those of you already familiar with the Digitalxero's SpawnAlert plugin will notice a lot of that functionality here \\(though hopefully without the crashing and other oddities\\) though the intended use of this plugin starts where that one leaves off. /spawnmaster by itself will give you a short help, the commands so far are fairly simple, but will probably become complex as development moves forward. Search strings are stored per-zone in an INI file. Two search types are currently supported, case-sensitive exact match \\(the type created by calling '/spawnmaster add' with a spawn targetted\\) and a case-insensitive sub-string match (created with \"/spawnmaster add \"search string\", although prefacing the string with a will indicate an exact-match type). Both currently only check against the name EQ displays, although future versions \u00b6 will support for exact matches against Some_Mob_00 and so on. The plugin currently stores the mob's x/y/z location, the system and in-game time of spawn, and SpawnID#, though not all of this information is made available in-game. When a mob dies or depops a system and in-game timestamp are also added. Anything set in the OnSpawnCommand key in the Settings section of the INI fille will be executed as a command when the spawn is first matched so that for example \"/speak ${SpawnMaster.LastMatch} just spawned!\" will give you a nice spawn alert if using the MQ2Speech plugin. You can find the latest version of MQ2 here . Commands \u00b6 /spawnmaster commands on|off - Toggles SpawnMaster plugin on or off add \\\"spawn name\\\" - Add spawn name to watch list (or target if no name given delete \\\"spawn name\\\" - Delete spawn name from watch list (or target if no name given list - Display watch list for zone case [off|on] - Control whether to use exact case matching in any compare. Omit on or off to toggle. uplist - Display any mobs on watch list that are currently up downlist - Display any watched mobs that have died or despawned load - Load spawns from INI","title":"MQ2SpawnMaster"},{"location":"plugins/community-plugins/mq2spawnmaster/#mq2spawnmaster","text":"","title":"MQ2SpawnMaster"},{"location":"plugins/community-plugins/mq2spawnmaster/#description","text":"MQ2SpawnMaster By Cr4zyb4rd Those of you already familiar with the Digitalxero's SpawnAlert plugin will notice a lot of that functionality here \\(though hopefully without the crashing and other oddities\\) though the intended use of this plugin starts where that one leaves off. /spawnmaster by itself will give you a short help, the commands so far are fairly simple, but will probably become complex as development moves forward. Search strings are stored per-zone in an INI file. Two search types are currently supported, case-sensitive exact match \\(the type created by calling '/spawnmaster add' with a spawn targetted\\) and a case-insensitive sub-string match (created with \"/spawnmaster add \"search string\", although prefacing the string with a","title":"Description"},{"location":"plugins/community-plugins/mq2spawnmaster/#will-indicate-an-exact-match-type-both-currently-only-check-against-the-name-eq-displays-although-future-versions","text":"will support for exact matches against Some_Mob_00 and so on. The plugin currently stores the mob's x/y/z location, the system and in-game time of spawn, and SpawnID#, though not all of this information is made available in-game. When a mob dies or depops a system and in-game timestamp are also added. Anything set in the OnSpawnCommand key in the Settings section of the INI fille will be executed as a command when the spawn is first matched so that for example \"/speak ${SpawnMaster.LastMatch} just spawned!\" will give you a nice spawn alert if using the MQ2Speech plugin. You can find the latest version of MQ2 here .","title":"will indicate an exact-match type). Both currently only check against the name EQ displays, although future versions"},{"location":"plugins/community-plugins/mq2spawnmaster/#commands","text":"/spawnmaster commands on|off - Toggles SpawnMaster plugin on or off add \\\"spawn name\\\" - Add spawn name to watch list (or target if no name given delete \\\"spawn name\\\" - Delete spawn name from watch list (or target if no name given list - Display watch list for zone case [off|on] - Control whether to use exact case matching in any compare. Omit on or off to toggle. uplist - Display any mobs on watch list that are currently up downlist - Display any watched mobs that have died or despawned load - Load spawns from INI","title":"Commands"},{"location":"plugins/community-plugins/mq2targets/","text":"MQ2Targets \u00b6 Introduction \u00b6 MQ2Targets is a HUD Display-type spawn tracker with syntax similar to the /where command. Created by DrunkDwarf. Links \u00b6 MQ2Targets source and discussion. Features \u00b6 Search strings are saved per zone Replace \"add\" with \"notify\" and it will popup a message for each spawn matching your search string Can add as many search strings per zone as needed Each HUD spawn matching the search shows by default Name, Level, Class, Distance, an arrow showing relative direction, and a compass heading Use MQ2HUD-type syntax strings to determine HUD display elements to completely customize the HUD display for each spawn Default is 5 spawns show, can modify using \"/watch count #\" HUD will highlight spawn if it's the current target Guild members highlighted in HUD HUD list sorted by distance ascending Commands \u00b6 /watch add|notify target Add the specified target from the watch list. The syntax for target is the same as that for the /where command. Using notify will add a pop-up for each spawn. * /watch remove|delete target|# Remove the specified target or entry # in the list. * /watch sound id # soundfile.mp3 Assign soundfile.mp3 to the id # * /watch sound # target Assign the sound from id # to the target * /watch sound list List sound associations * /watch hud refresh| hudstring Refresh or modify the string to be displayed in the HUD. The following additional indicators can be used in the hudstring : &clr - this is replaced with \">>\" to show the current target, and turns on guild/corpse colors &dst - this is replaced with the distance to target plus \u00b1 for Z-axis indication &arr - this is replaced with an arrow indicating direction to mob * /watch showtarget Toggle showing of the current target in the HUD. * /watch speak Toggle use of speech \\(see source page for additional instructions\\) * /watch show # Change the number of entries to show in the HUD * /watch x|y # Change the leftmost \\(x\\) or topmost \\(y\\) pixel position of the HUD display * /watch increment # Change the spacing between spawns in the HUD to # pixels * /watch togglechat Toggles whether to output to a separate MQ2Targets window or use the MQ2Chat window * /watch toggleway target|# Toggle use of the waypoint indicator for current target or spawn in index # * /watch waypoint y Toggles waypoint overlay. Optional y parameter sets the y pixel position on screen * /watch loadmap Imports all labels from the current map file * /watch showmap Show spawns loaded from current map file * /watch help Displays help and examples Examples \u00b6 /watch add paladin pc range 65 70 Show all Player character paladins between level 65 and 70 in current zone /watch add guild Show everyone in your guild in current zone /watch add damlin lingering npc Show when damlin in CoA pops \\(but not his corpse\\) ''' /watch remove damlin lingering npc Remove damlin from HUD tracking /watch list Lists the current targets being watched for in current zone /watch show 10 Change the HUD display to track the 10 nearest targets /watch x 200 Display the leftmost edge of the HUD list at screen x position 200 /watch y 50 Display the topmost edge of the HUD list at screen y position 50 /watch increment 20 Change the spacing between spawns in the HUD to 20 pixels /watch notify hanvar Pop up message if Hanvar spawns/despawns /watch remove 2 Removes search spawn criteria string #2 according to /watch list /watch hud ({Target.CleanName} \\({Target.Level}\\) \\(\\) )${Target.Distance}&arr Targets are displayed as follows: Cleric01 75CLR \\(NNW\\) 30.23--> Hint: It's probably easier to open MQ2Targets.ini and edit the HUDString key, similar to: HUDString=&clr${Target.CleanName}(${Target.Race}) ${Target.Level}${Target.Class.ShortName} ${Target.Distance}&arr(${Target.HeadingTo}) Known Issues \u00b6 The \"color\" /watch parameters do nothing at this time, still thinking about how I want to implement this Plans \u00b6 Add the /watch color functionality Make HUD list clickable? Add HUDString capability to the popup messages","title":"MQ2Targets"},{"location":"plugins/community-plugins/mq2targets/#mq2targets","text":"","title":"MQ2Targets"},{"location":"plugins/community-plugins/mq2targets/#introduction","text":"MQ2Targets is a HUD Display-type spawn tracker with syntax similar to the /where command. Created by DrunkDwarf.","title":"Introduction"},{"location":"plugins/community-plugins/mq2targets/#links","text":"MQ2Targets source and discussion.","title":"Links"},{"location":"plugins/community-plugins/mq2targets/#features","text":"Search strings are saved per zone Replace \"add\" with \"notify\" and it will popup a message for each spawn matching your search string Can add as many search strings per zone as needed Each HUD spawn matching the search shows by default Name, Level, Class, Distance, an arrow showing relative direction, and a compass heading Use MQ2HUD-type syntax strings to determine HUD display elements to completely customize the HUD display for each spawn Default is 5 spawns show, can modify using \"/watch count #\" HUD will highlight spawn if it's the current target Guild members highlighted in HUD HUD list sorted by distance ascending","title":"Features"},{"location":"plugins/community-plugins/mq2targets/#commands","text":"/watch add|notify target Add the specified target from the watch list. The syntax for target is the same as that for the /where command. Using notify will add a pop-up for each spawn. * /watch remove|delete target|# Remove the specified target or entry # in the list. * /watch sound id # soundfile.mp3 Assign soundfile.mp3 to the id # * /watch sound # target Assign the sound from id # to the target * /watch sound list List sound associations * /watch hud refresh| hudstring Refresh or modify the string to be displayed in the HUD. The following additional indicators can be used in the hudstring : &clr - this is replaced with \">>\" to show the current target, and turns on guild/corpse colors &dst - this is replaced with the distance to target plus \u00b1 for Z-axis indication &arr - this is replaced with an arrow indicating direction to mob * /watch showtarget Toggle showing of the current target in the HUD. * /watch speak Toggle use of speech \\(see source page for additional instructions\\) * /watch show # Change the number of entries to show in the HUD * /watch x|y # Change the leftmost \\(x\\) or topmost \\(y\\) pixel position of the HUD display * /watch increment # Change the spacing between spawns in the HUD to # pixels * /watch togglechat Toggles whether to output to a separate MQ2Targets window or use the MQ2Chat window * /watch toggleway target|# Toggle use of the waypoint indicator for current target or spawn in index # * /watch waypoint y Toggles waypoint overlay. Optional y parameter sets the y pixel position on screen * /watch loadmap Imports all labels from the current map file * /watch showmap Show spawns loaded from current map file * /watch help Displays help and examples","title":"Commands"},{"location":"plugins/community-plugins/mq2targets/#examples","text":"/watch add paladin pc range 65 70 Show all Player character paladins between level 65 and 70 in current zone /watch add guild Show everyone in your guild in current zone /watch add damlin lingering npc Show when damlin in CoA pops \\(but not his corpse\\) ''' /watch remove damlin lingering npc Remove damlin from HUD tracking /watch list Lists the current targets being watched for in current zone /watch show 10 Change the HUD display to track the 10 nearest targets /watch x 200 Display the leftmost edge of the HUD list at screen x position 200 /watch y 50 Display the topmost edge of the HUD list at screen y position 50 /watch increment 20 Change the spacing between spawns in the HUD to 20 pixels /watch notify hanvar Pop up message if Hanvar spawns/despawns /watch remove 2 Removes search spawn criteria string #2 according to /watch list /watch hud ({Target.CleanName} \\({Target.Level}\\) \\(\\) )${Target.Distance}&arr Targets are displayed as follows: Cleric01 75CLR \\(NNW\\) 30.23--> Hint: It's probably easier to open MQ2Targets.ini and edit the HUDString key, similar to: HUDString=&clr${Target.CleanName}(${Target.Race}) ${Target.Level}${Target.Class.ShortName} ${Target.Distance}&arr(${Target.HeadingTo})","title":"Examples"},{"location":"plugins/community-plugins/mq2targets/#known-issues","text":"The \"color\" /watch parameters do nothing at this time, still thinking about how I want to implement this","title":"Known Issues"},{"location":"plugins/community-plugins/mq2targets/#plans","text":"Add the /watch color functionality Make HUD list clickable? Add HUDString capability to the popup messages","title":"Plans"},{"location":"plugins/community-plugins/mq2timestamp/","text":"MQ2Timestamp \u00b6 Description \u00b6 MQ2Timestamp Inserts a timestamp into incoming chat. You can find the latest version of MQ2Clip here . Commands \u00b6 Usage: /timestamp help\\| on \\| off \\| reload \\| default \\| format \\| loc \\| maxlen help - displays usage information on/off - enables/disables timestamps reload - reloads the ini file default - resets your format to default(only changeable via ini) format - sets your timestamp format to loc - sets timestamp location: 0-append, 1-prepend maxlen - sets the maximum length of parsed timestamp. Will toggle on/off with no arguments INI Entries \u00b6 The config section is optional. It lets you overwrite the hard coded defaults. [Config] Default=Format MaxLength=<maximum length of formatted time to be returned UseTimestamps=< greater than 0 is on, 0 or less is off > Default will overwrite the hardcoded default of \" %H:%M:%S \" with Format. MaxLength will trim the timestamp to this value. UseTimestamps, nuff said :p The custom timestamps are stored in server sections by character. \\[Server\\] Character=Loc,Format Server, Character shouldn't require explanation Loc indicates where the timestamp will be added to chat. 0 appends the timestamp and 1 will prepend it. Format is the custom timestamp for that character. Sample MQ2Timestamp.ini \u00b6 [Config] Default=%I:%M:%S:%p> MaxLength=20 UseTimestamps=1 [Eci] Soandso=0,[%H:%M] ____________________________________________________________________ Format reference: Format consists of one or more codes. The codes are preceded by a percent sign \\(%\\) . Characters that do not begin with % are copied unchanged. %a - Abbreviated weekday name %A - Full weekday name %b - Abbreviated month name %B - Full month name %c - Date and time representation appropriate for locale %d - Day of month as decimal number (01 \u2013 31) %H - Hour in 24-hour format (00 \u2013 23) %I - Hour in 12-hour format (01 \u2013 12) %j - Day of year as decimal number (001 \u2013 366) %m - Month as decimal number (01 \u2013 12) %M - Minute as decimal number (00 \u2013 59) %p - Current locale's A.M./P.M. indicator for 12-hour clock %S - Second as decimal number (00 \u2013 59) %U - Week of year as decimal number, with Sunday as first day of week (00 \u2013 53) %w - Weekday as decimal number (0 \u2013 6; Sunday is 0) %W - Week of year as decimal number, with Monday as first day of week (00 \u2013 53) %x - Date representation for current locale %X - Time representation for current locale %y - Year without century, as decimal number (00 \u2013 99) %Y - Year with century, as decimal number %z, %Z - Time-zone name or abbreviation; no characters if time zone is unknown %% - Percent sign Special formating: %#c - Long date and time representation, appropriate for current locale. For example: \"Tuesday, March 14, 1995, 12:41:29\". %#x - Long date representation, appropriate to current locale. For example: \"Tuesday, March 14, 1995\". %#d, %#H, %#I, %#j, %#m, %#M, \\ %#S, %#U, %#w, %#W, %#y, %#Y - Remove leading zeros (if any).","title":"MQ2Timestamp"},{"location":"plugins/community-plugins/mq2timestamp/#mq2timestamp","text":"","title":"MQ2Timestamp"},{"location":"plugins/community-plugins/mq2timestamp/#description","text":"MQ2Timestamp Inserts a timestamp into incoming chat. You can find the latest version of MQ2Clip here .","title":"Description"},{"location":"plugins/community-plugins/mq2timestamp/#commands","text":"Usage: /timestamp help\\| on \\| off \\| reload \\| default \\| format \\| loc \\| maxlen help - displays usage information on/off - enables/disables timestamps reload - reloads the ini file default - resets your format to default(only changeable via ini) format - sets your timestamp format to loc - sets timestamp location: 0-append, 1-prepend maxlen - sets the maximum length of parsed timestamp. Will toggle on/off with no arguments","title":"Commands"},{"location":"plugins/community-plugins/mq2timestamp/#ini-entries","text":"The config section is optional. It lets you overwrite the hard coded defaults. [Config] Default=Format MaxLength=<maximum length of formatted time to be returned UseTimestamps=< greater than 0 is on, 0 or less is off > Default will overwrite the hardcoded default of \" %H:%M:%S \" with Format. MaxLength will trim the timestamp to this value. UseTimestamps, nuff said :p The custom timestamps are stored in server sections by character. \\[Server\\] Character=Loc,Format Server, Character shouldn't require explanation Loc indicates where the timestamp will be added to chat. 0 appends the timestamp and 1 will prepend it. Format is the custom timestamp for that character.","title":"INI Entries"},{"location":"plugins/community-plugins/mq2timestamp/#sample-mq2timestampini","text":"[Config] Default=%I:%M:%S:%p> MaxLength=20 UseTimestamps=1 [Eci] Soandso=0,[%H:%M] ____________________________________________________________________ Format reference: Format consists of one or more codes. The codes are preceded by a percent sign \\(%\\) . Characters that do not begin with % are copied unchanged. %a - Abbreviated weekday name %A - Full weekday name %b - Abbreviated month name %B - Full month name %c - Date and time representation appropriate for locale %d - Day of month as decimal number (01 \u2013 31) %H - Hour in 24-hour format (00 \u2013 23) %I - Hour in 12-hour format (01 \u2013 12) %j - Day of year as decimal number (001 \u2013 366) %m - Month as decimal number (01 \u2013 12) %M - Minute as decimal number (00 \u2013 59) %p - Current locale's A.M./P.M. indicator for 12-hour clock %S - Second as decimal number (00 \u2013 59) %U - Week of year as decimal number, with Sunday as first day of week (00 \u2013 53) %w - Weekday as decimal number (0 \u2013 6; Sunday is 0) %W - Week of year as decimal number, with Monday as first day of week (00 \u2013 53) %x - Date representation for current locale %X - Time representation for current locale %y - Year without century, as decimal number (00 \u2013 99) %Y - Year with century, as decimal number %z, %Z - Time-zone name or abbreviation; no characters if time zone is unknown %% - Percent sign Special formating: %#c - Long date and time representation, appropriate for current locale. For example: \"Tuesday, March 14, 1995, 12:41:29\". %#x - Long date representation, appropriate to current locale. For example: \"Tuesday, March 14, 1995\". %#d, %#H, %#I, %#j, %#m, %#M, \\ %#S, %#U, %#w, %#W, %#y, %#Y - Remove leading zeros (if any).","title":"Sample MQ2Timestamp.ini"},{"location":"plugins/community-plugins/mq2tracking/","text":"MQ2Tracking \u00b6 Description \u00b6 MQ2Tracking, by MacroFiend is a plugin which mimics the functionality of the Tracking skill of Rangers, Bards and Druids. The source to the plugin can be downloaded here . Commands \u00b6 /track help Show command help /track off Stop tracking the current spawn /track target Start tracking the current target /track players all \\| pc \\| group \\| npc What you want to track /track refresh on\\|off Explicitly turns on or off window refresh /track refresh Toggles the window refresh on or off /track refresh # Sets the refresh time in seconds /track filter off\\| Sets or removes custom spawn search parameters \\(same as [/who](../../reference/commands/who.md)\\) /tracknames \\|reset Sets or removes custom naming for spawn entries in the list (see NamingSpawn )","title":"MQ2Tracking"},{"location":"plugins/community-plugins/mq2tracking/#mq2tracking","text":"","title":"MQ2Tracking"},{"location":"plugins/community-plugins/mq2tracking/#description","text":"MQ2Tracking, by MacroFiend is a plugin which mimics the functionality of the Tracking skill of Rangers, Bards and Druids. The source to the plugin can be downloaded here .","title":"Description"},{"location":"plugins/community-plugins/mq2tracking/#commands","text":"/track help Show command help /track off Stop tracking the current spawn /track target Start tracking the current target /track players all \\| pc \\| group \\| npc What you want to track /track refresh on\\|off Explicitly turns on or off window refresh /track refresh Toggles the window refresh on or off /track refresh # Sets the refresh time in seconds /track filter off\\| Sets or removes custom spawn search parameters \\(same as [/who](../../reference/commands/who.md)\\) /tracknames \\|reset Sets or removes custom naming for spawn entries in the list (see NamingSpawn )","title":"Commands"},{"location":"plugins/community-plugins/mq2vendors/","text":"MQ2Vendors \u00b6 Description \u00b6 MQ2Vendors is a plugin that will check a merchant's item list when you open that merchant, and will then notify you if the merchant has any items that you are looking for. If the vendor has an item you are looking for, you will be notified in the MQ chat window, and the merchant's name will be enclosed in >>>> \\<\\<\\<\\< to highlight you to it. Note: You will not be notified if the vendor item is a default item on that vendor (ie. if it does not have a quantity in the merchant window). MQ2Vendors was created by Ceghkmv and can be found here . Commands \u00b6 /vendor add|remove \\< ItemID|ItemName|ItemLink > Add/remove the relevant name/ID to/from the watch list. Note: Names are case sensitive! You can also use EQ links instead of the name, and this is recommended, to ensure you get the correct capitalization. /vendor list List all items in the watch list. /vendor savevendors|nosavevendors This enables or disables saving of vendors' default item list to a local INI file. Top-Level Objects \u00b6 string ${Vendor.Version} Outputs the version number. bool ${Vendor.HasItems} Returns TRUE if the merchant has items you are looking for.","title":"MQ2Vendors"},{"location":"plugins/community-plugins/mq2vendors/#mq2vendors","text":"","title":"MQ2Vendors"},{"location":"plugins/community-plugins/mq2vendors/#description","text":"MQ2Vendors is a plugin that will check a merchant's item list when you open that merchant, and will then notify you if the merchant has any items that you are looking for. If the vendor has an item you are looking for, you will be notified in the MQ chat window, and the merchant's name will be enclosed in >>>> \\<\\<\\<\\< to highlight you to it. Note: You will not be notified if the vendor item is a default item on that vendor (ie. if it does not have a quantity in the merchant window). MQ2Vendors was created by Ceghkmv and can be found here .","title":"Description"},{"location":"plugins/community-plugins/mq2vendors/#commands","text":"/vendor add|remove \\< ItemID|ItemName|ItemLink > Add/remove the relevant name/ID to/from the watch list. Note: Names are case sensitive! You can also use EQ links instead of the name, and this is recommended, to ensure you get the correct capitalization. /vendor list List all items in the watch list. /vendor savevendors|nosavevendors This enables or disables saving of vendors' default item list to a local INI file.","title":"Commands"},{"location":"plugins/community-plugins/mq2vendors/#top-level-objects","text":"string ${Vendor.Version} Outputs the version number. bool ${Vendor.HasItems} Returns TRUE if the merchant has items you are looking for.","title":"Top-Level Objects"},{"location":"plugins/community-plugins/mq2web/","text":"MQ2Web \u00b6 Description \u00b6 MQ2Web Created by ieatacid The two offsets at the top will need to be updated after each patch, more than likely. This adds the \"/web\" command. Follow it with a URL \\(\"[http://](http://)\" is added if you don't include it yourself\\) . It works to open any web page. For instance, \"/web google.com\" opens the google home page. You can find the latest version of MQ2Web here . Commands \u00b6 /web /web target = searches Allakhazam for your target's name if an NPC, Magelo if a PC Shift+click an item link looks up the item on Lucy Ctrl+click an item link looks up the item on EQItems","title":"MQ2MQ2Web"},{"location":"plugins/community-plugins/mq2web/#mq2web","text":"","title":"MQ2Web"},{"location":"plugins/community-plugins/mq2web/#description","text":"MQ2Web Created by ieatacid The two offsets at the top will need to be updated after each patch, more than likely. This adds the \"/web\" command. Follow it with a URL \\(\"[http://](http://)\" is added if you don't include it yourself\\) . It works to open any web page. For instance, \"/web google.com\" opens the google home page. You can find the latest version of MQ2Web here .","title":"Description"},{"location":"plugins/community-plugins/mq2web/#commands","text":"/web /web target = searches Allakhazam for your target's name if an NPC, Magelo if a PC Shift+click an item link looks up the item on Lucy Ctrl+click an item link looks up the item on EQItems","title":"Commands"},{"location":"plugins/community-plugins/mq2xptracker/","text":"MQ2XPTracker \u00b6 Description \u00b6 MQ2XPTraxker \\(by Cr4zyb4rd\\) is a plugin that tracks your XP. Reports are made in the chat window You can find the latest version of MQ2Clip here . Commands \u00b6 /xptracker - Display time tracking was started. /xptracker reset - Reset all events and begin tracking as if plugin was just loaded /xptracker total - Display total gains since tracking start /xptracker quiet - Toggle output of tracking messages /xpevents - list the events/timestamps of the events we've tracked /xpevents [#] - lists the events tracked in the past [#] seconds /xpaverage - lists the average (mean) xp per-kill","title":"MQ2XPTracker"},{"location":"plugins/community-plugins/mq2xptracker/#mq2xptracker","text":"","title":"MQ2XPTracker"},{"location":"plugins/community-plugins/mq2xptracker/#description","text":"MQ2XPTraxker \\(by Cr4zyb4rd\\) is a plugin that tracks your XP. Reports are made in the chat window You can find the latest version of MQ2Clip here .","title":"Description"},{"location":"plugins/community-plugins/mq2xptracker/#commands","text":"/xptracker - Display time tracking was started. /xptracker reset - Reset all events and begin tracking as if plugin was just loaded /xptracker total - Display total gains since tracking start /xptracker quiet - Toggle output of tracking messages /xpevents - list the events/timestamps of the events we've tracked /xpevents [#] - lists the events tracked in the past [#] seconds /xpaverage - lists the average (mean) xp per-kill","title":"Commands"},{"location":"plugins/community-plugins/mq2eqbc/","text":"MQ2EQBC \u00b6 Description \u00b6 MQ2EQBC \\(EQ box chat\\) is a plugin composed of two parts, a server \\(EQBCS\\) and a client \\(MQ2EQBC\\) . The server provides a similar service to an IRC server but is much easier to setup. The client is similar to the MQ2IRC client in that it monitors text that is sent to the EQBC server. The main advantage of MQ2EQBC is that it allows remote commands to be sent directly to a single or all connected clients. This plugin was originally written by Omnictrl, with ascii38 and pms providing maintenance for a period. The plugin and server currently have no active maintainer. The discussion thread regarding this plugin is found in the VIP forums here . The current client source release is located here . The current compiled server application, which also will compile and run on Linux, can be found at the link in this post . For the development history of this plugin see the article here . Features \u00b6 Allows remote commands via box chat much like mastermind does. Allows you to control any connected client anywhere (ie. someone in your raid needs to afk for a while: they connect to your server, you remotely load macros and control their toon as needed until they return). Is mostly compatible with scripts that already support MQ2Irc \\(replace '/i say' with '/bc'\\) . Offers private chat \\(and private chat channels\\) that do not go through EQ servers. Optional dedicated UI window for chat output. Input typed in dedicated UI window defaults to private '/bc' chat much like EQ's chat window defaults to /say. Dedicated UI window supports a configurable keybind for fast private chatting. Commands \u00b6 /bccmd \u00b6 /bccmd connect Connect to server on port using password \\(defaults: 127.0.0.1 2112\\) . Note: Once you connect, it will remember that connection, so next time you just have to type: /bccmd connect /bccmd forceconnect Connect to server on port using password \\(defaults: 127.0.0.1 2112\\) . This differs from connect in that it works while already connected to a server. /bccmd iniconnect Connect to a server by ini key name using information defined in your MQ2EQBC.ini file. Example: ;2100 would be the keyname [2100] Server=10.0.0.1 Port=2100 ;2150 would be the keyname [2150] Server=10.0.0.1 Port=2150 Password=mypassword /bccmd quit Disconnects from the server /bccmd help Show Help /bccmd status Show if connected or not /bccmd reconnect Close the current connection and connect again /bccmd names List everyone that is connected to the server /bccmd colordump Show color codes /bccmd toggle option /bccmd set option \\< on | off > Toggle or set option on or off. Valid options : :* autoconnect Auto connect to server when plugin loads :* control Allow remote control :* compatmode IRC compatibility mode keeps name formatting IRC friendly and echoes outgoing /bct :* reconnect Auto-reconnect on server disconnect or zone change :* window Use dedicated EQBC UI window :* localecho Echoing outgoing commands back if in a channel \\(echo is server-driven\\) :* tellwatch Relay received tells to /bc does not support tell windows :* guildwatch Relay guild chat received to /bc :* groupwatch Relay group chat received to /bc :* fswatch Relay fellowship chat received to /bc :* silentcmd Squelch 'CMD: command ' echo :* savebychar Saving custom UI window settings to CharName sections of the configuration file \\(saves to _Window_ if disabled\\) :* silentinccmd Squelches incoming eqbc command requests :* silentoutmsg Squelches outgoing /bct with compatmode on :* notifycontrol Relays a message to /bc if the control option is disabled when a command request is received :* echoall Echoes outgoing /bca commands if enabled /bccmd set reconnectsecs # Set the number of seconds to wait until reconnecting \\(default 15\\) /bccmd stopreconnect Stop trying to reconnect for now /bccmd channels Set the list of channels to receive tells from. /bccmd version Show plugin version /bc \u00b6 /bc your text here Send \" your text here \" to the server. /bct \u00b6 /bct ToonName your text here Send \" your text here \" to ToonName /bct ToonName //command Send /command to ToonName /bca \u00b6 /bca //command Send /command to all connected clients, excluding the client you issued the command from. /bcaa \u00b6 /bcaa //command Send /command to all connected clients, including the client you issued the command from. /bcfont \u00b6 /bcfont # Sets the font size of the UI window, similar to the /mqfont command /bcmin \u00b6 /bcmin Minimizes the UI window, similar to the /mqmin command /bcclear \u00b6 /bcclear Clears the buffer of the UI window, similar to the /mqclear command Configuration File \u00b6 The EQBC client will create the configuration file MQ2EQBC.ini in your root MQ2 folder. An example of this configuration file is as follows: [Settings] AllowControl=1 AutoConnect=1 AutoReconnect=1 ReconnectRetrySeconds=15 LocalEcho=0 SaveByCharacter=0 SilentCmd=1 TellWatch=1 GuildWatch=1 GroupWatch=1 FSWatch=1 UseWindow=1 Keybind=. [Window] ChatTop=600 ChatBottom=800 ChatLeft=700 ChatRight=1100 Fades=0 Alpha=255 FadeToAlpha=255 Duration=500 Locked=1 Delay=2000 BGType=1 BGTint.red=0 BGTint.green=0 BGTint.blue=0 FontSize=3 UseMyTitle=1 WindowTitle=Custom Title Goes Here With No Quotes [Last Connect] Server=10.0.0.1 Port=2112 [Custom1] Server=10.0.0.1 Port=2115 Password=custompass [Custom2] Server=soe.sony.com [Custom3] Server=eqbc.google.com Port=1337 *If you wish to use a custom window title you must set UseMyTitle to 1 and change the WindowTitle* line before loading the plugin**. Top-Level Objects \u00b6 ${EQBC} \u00b6 Type Member Name Description bool Connected Client connection status string Names List of connected characters string Port OFFLINE if not connected, port if connected string Server hostname or IP of server you connected to string ToonName Character name as seen by EQBC \\(may reflect YouPlayer\\) bool Setting **_**option**_** Option enabled/disabled status. \\(see **/bccmd set** for complete list\\) Examples \u00b6 Sending commands to other toons: /bct ToonName //sit /bct ToonName //stand /bct ToonName //macro ninjalooter /bct ToonName //endmacro Sending commands to channels: /bccmd channels chatchan, commands /bct chatchan hey there guys /bct commands //bct chatchan My zone: $\\{Zone.ShortName} Sending commands to all other connects clients: /bca //target id ${Me.ID} /bca //timed 10 /stick 10 Sending commands to all clients including yourself: /bcaa //makecamp return Using noparse to get MQData with bca & bcaa \\(one day this will be fixed\\) : /noparse /bcaa //bc I am ${Me.PctExp} into ${Me.Level} Taking advantage of escape characters instead of noparse \\(only works with _/bct_ at this time\\) : /bct Mycleric //bc I am level $\\{Me.Level} EQBCS \u00b6 EQBCS is a server that can be run as a console application on windows, or as either a foreground application or daemon on a Unix-like system \\(tested with Linux and FreeBSD\\) . It currently takes the following command line parameters: -p which is the port you want to bind to \\(default is 2112, which is dedicated to the Canadian trio Rush\\) . -i which is the IP address that you want to the server to listen on if there is more than one network interface in the computer \\(default is to listen on all interfaces, which is what you want unless you know otherwise\\) . -l will send all output to rather than to the screen. -d will cause the application to run as a deamon process in the background \\(UNIX only\\) . Examples: C:\\> eqbcs Listens on port 2112 C:\\> eqbcs -p 4224 Listens on port 4224 C:\\> eqbcs -l log.txt Listens on port 2112 and sends all server output to the file log.txt. C:\\> eqbcs ftp Does not work, it does not look up service names to map to port, and the text won't work. Compiling EQBCS \\(Windows\\) \u00b6 '''This guide for compiling EQBCS for Windows is credited to Tinydru from this post Copy the two parts of the eqbsc post in to a single eqbcs.cpp file (you can just use Notepad to do this - just \u00b6 remember to replace the .txt extension with .cpp). Launch Visual Studio 2005 Create a new project. For the project type, select Visual C++ | Win32 and then Win32 Console Application template. Name the project \\(I used eqbcs\\) . Make sure to pay attention as to where it is creating the directory for the project \\(so you know where to grab the app files after you build the solution\\) . Click the OK button after you've given it a name. Click the Next button on the first page of the Win32 Application Wizard On the Applications Settings window: Leave the default Application type as \"Console application\" Uncheck \"Precompiled header\" Check \"Empty project\" Click the Finish button Your empty project should now be open. In the Solution Explorer, right click on the \"Source Files\" folder and select Add -> Existing Item from the list. Navigate to the folder where you saved the eqbcs.cpp file you created in step 1 and double click on it \\(eqbcs.cpp\\) . This will add eqbcs.cpp to the Source Files folder. In the Solution Explorer, double click on the eqbcs.cpp file - this will open the code in the code window. In the code, find \"tempPort = atoi \\(argv\\[1\\]\\) ;\" and replace it with \"tempPort = atoi \\(\\(const char \\*\\) argv 1 );\" \\(this will be on or near line 1983\\) . Thanks much to Bardomatic for fixing this piece of code. From the File menu, select Save All. From the Build menu, select \"Configuration Manager...\" In the Active solution configuration: drop down box, select \"Release\" and then click the Close button. From the Project menu, select eqbcs Properties... (\"eqbcs\" might be diffent if you named the project something else). In the Configuration: drop down at the top of the Property Pages window, select \"Release\" from the list. Open the Configuration Properties node \\(click on the little +\\) and then the Linker node. Now click on \"Input\" (found beneath \"Linker\"). In the right hand window of the Propery Pages window, click on \"Additional Dependencies\". When you click on that, a little box with elipses \\(...\\) will appear on the right side of the field - click on that. The Additional Dependencies window will open. Type wsock32.lib in the text box and then click the OK button. Click the OK button on the Property Pages window. From the File menu, select Save All. From the Build menu, select Build solution. The build *should* succeed. You are done - go get your new eqbcs.exe from the Release folder where you created the solution!! Compiling EQBCS \\(Windows cmd line\\) \u00b6 '''This guide for compiling EQBCS from the Windows cmd line is credited to dont_know_at_all from this post ctrl-esc Run \u00b6 cmd in the cmd.exe window type the following: c:\\Program Files\\Microsoft Visual <add your version/path here>/common7/tools/vsvars32.bash cl eqbcs.cpp that's it. === Compiling EQBCS \\(Linux\\) === '''This guide for compiling EQBCS for Linux is credited to ascii38 from this post g++ -fpermissive eqbcs.cpp -o eqbcs \u00b6 EQBCS as a Windows Service \u00b6 Download the [Windows Resource Kit 2003] \\([http://www.microsoft.com/downloads/details.aspx?FamilyID=9d467a69-57ff-4ae7-96ee-b18c4790cffd&DisplayLang=en](http://www.microsoft.com/downloads/details.aspx?FamilyID=9d467a69-57ff-4ae7-96ee-b18c4790cffd&DisplayLang=en)\\) Run the executable to install the Resource Kit Open up a command prompt and run the following to install a service stub (*default install location used in this example*): '''You may substitute \"EQBC Service\" with whatever name you would like to give to the service for display purposes \"C:\\Program Files\\Windows Resource Kits\\Tools\\instsrv.exe\" \"EQBC Service\" \"C:\\Program Files\\Windows Resource Kits\\Tools\\srvany.exe\" Run regedit to edit the Windows registry, and navigate to the following registry key: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EQBC Service From the Edit menu, select New , select Key , and name the new key Parameters Highlight the Parameters key From the Edit menu, select New , select String Value , and name the new value Application From the Edit menu, select Modify , and type in the full path name and application name of EQBCS, including the drive letter and file extension. You would use the following example if you had the server located in folder MQ2 on your C: drive C:\\MQ2\\eqbcs.exe Now go to Start and Run and type in services.msc From here scroll down to EQBC Service \\(or whatever name you gave the service above\\) , right-click and select Properties On the General tab, change the Startup type to Automatic Click the Start button to start your service Select the Recovery tab, and you have the option of changing the drop-down boxes for First-Failure and so on to Restart the service Select OK and you are finished Problems \u00b6 This application has failed to start because the application configuration is incorrect. Reinstalling this application may fix the problem This is the most common issue with EQBCS failing to run in Windows. Your system is missing runtime libraries. Get both below. 2005 2008 EQBC Interface \u00b6 EQBC Interface is an application developed by ieatacid to allow communication with EQBCS outside of the EverQuest game client. The discussion thread for this application is found in the VIP forums here . The most recent release of this application also allows you to view detailed information about characters connected to your server by selecting their name, which will display their statistics on the right-hand side of EQBC Interface. The interval of how often to poll the selected character is configurable by the user so that this information can be very close to real-time. Jimbob extended the functionality of this program in July 2015. The discussion thread for his fork of the project is found in the VIP forums here .","title":"MQ2EQBC"},{"location":"plugins/community-plugins/mq2eqbc/#mq2eqbc","text":"","title":"MQ2EQBC"},{"location":"plugins/community-plugins/mq2eqbc/#description","text":"MQ2EQBC \\(EQ box chat\\) is a plugin composed of two parts, a server \\(EQBCS\\) and a client \\(MQ2EQBC\\) . The server provides a similar service to an IRC server but is much easier to setup. The client is similar to the MQ2IRC client in that it monitors text that is sent to the EQBC server. The main advantage of MQ2EQBC is that it allows remote commands to be sent directly to a single or all connected clients. This plugin was originally written by Omnictrl, with ascii38 and pms providing maintenance for a period. The plugin and server currently have no active maintainer. The discussion thread regarding this plugin is found in the VIP forums here . The current client source release is located here . The current compiled server application, which also will compile and run on Linux, can be found at the link in this post . For the development history of this plugin see the article here .","title":"Description"},{"location":"plugins/community-plugins/mq2eqbc/#features","text":"Allows remote commands via box chat much like mastermind does. Allows you to control any connected client anywhere (ie. someone in your raid needs to afk for a while: they connect to your server, you remotely load macros and control their toon as needed until they return). Is mostly compatible with scripts that already support MQ2Irc \\(replace '/i say' with '/bc'\\) . Offers private chat \\(and private chat channels\\) that do not go through EQ servers. Optional dedicated UI window for chat output. Input typed in dedicated UI window defaults to private '/bc' chat much like EQ's chat window defaults to /say. Dedicated UI window supports a configurable keybind for fast private chatting.","title":"Features"},{"location":"plugins/community-plugins/mq2eqbc/#commands","text":"","title":"Commands"},{"location":"plugins/community-plugins/mq2eqbc/#bccmd","text":"/bccmd connect Connect to server on port using password \\(defaults: 127.0.0.1 2112\\) . Note: Once you connect, it will remember that connection, so next time you just have to type: /bccmd connect /bccmd forceconnect Connect to server on port using password \\(defaults: 127.0.0.1 2112\\) . This differs from connect in that it works while already connected to a server. /bccmd iniconnect Connect to a server by ini key name using information defined in your MQ2EQBC.ini file. Example: ;2100 would be the keyname [2100] Server=10.0.0.1 Port=2100 ;2150 would be the keyname [2150] Server=10.0.0.1 Port=2150 Password=mypassword /bccmd quit Disconnects from the server /bccmd help Show Help /bccmd status Show if connected or not /bccmd reconnect Close the current connection and connect again /bccmd names List everyone that is connected to the server /bccmd colordump Show color codes /bccmd toggle option /bccmd set option \\< on | off > Toggle or set option on or off. Valid options : :* autoconnect Auto connect to server when plugin loads :* control Allow remote control :* compatmode IRC compatibility mode keeps name formatting IRC friendly and echoes outgoing /bct :* reconnect Auto-reconnect on server disconnect or zone change :* window Use dedicated EQBC UI window :* localecho Echoing outgoing commands back if in a channel \\(echo is server-driven\\) :* tellwatch Relay received tells to /bc does not support tell windows :* guildwatch Relay guild chat received to /bc :* groupwatch Relay group chat received to /bc :* fswatch Relay fellowship chat received to /bc :* silentcmd Squelch 'CMD: command ' echo :* savebychar Saving custom UI window settings to CharName sections of the configuration file \\(saves to _Window_ if disabled\\) :* silentinccmd Squelches incoming eqbc command requests :* silentoutmsg Squelches outgoing /bct with compatmode on :* notifycontrol Relays a message to /bc if the control option is disabled when a command request is received :* echoall Echoes outgoing /bca commands if enabled /bccmd set reconnectsecs # Set the number of seconds to wait until reconnecting \\(default 15\\) /bccmd stopreconnect Stop trying to reconnect for now /bccmd channels Set the list of channels to receive tells from. /bccmd version Show plugin version","title":"/bccmd"},{"location":"plugins/community-plugins/mq2eqbc/#bc","text":"/bc your text here Send \" your text here \" to the server.","title":"/bc"},{"location":"plugins/community-plugins/mq2eqbc/#bct","text":"/bct ToonName your text here Send \" your text here \" to ToonName /bct ToonName //command Send /command to ToonName","title":"/bct"},{"location":"plugins/community-plugins/mq2eqbc/#bca","text":"/bca //command Send /command to all connected clients, excluding the client you issued the command from.","title":"/bca"},{"location":"plugins/community-plugins/mq2eqbc/#bcaa","text":"/bcaa //command Send /command to all connected clients, including the client you issued the command from.","title":"/bcaa"},{"location":"plugins/community-plugins/mq2eqbc/#bcfont","text":"/bcfont # Sets the font size of the UI window, similar to the /mqfont command","title":"/bcfont"},{"location":"plugins/community-plugins/mq2eqbc/#bcmin","text":"/bcmin Minimizes the UI window, similar to the /mqmin command","title":"/bcmin"},{"location":"plugins/community-plugins/mq2eqbc/#bcclear","text":"/bcclear Clears the buffer of the UI window, similar to the /mqclear command","title":"/bcclear"},{"location":"plugins/community-plugins/mq2eqbc/#configuration-file","text":"The EQBC client will create the configuration file MQ2EQBC.ini in your root MQ2 folder. An example of this configuration file is as follows: [Settings] AllowControl=1 AutoConnect=1 AutoReconnect=1 ReconnectRetrySeconds=15 LocalEcho=0 SaveByCharacter=0 SilentCmd=1 TellWatch=1 GuildWatch=1 GroupWatch=1 FSWatch=1 UseWindow=1 Keybind=. [Window] ChatTop=600 ChatBottom=800 ChatLeft=700 ChatRight=1100 Fades=0 Alpha=255 FadeToAlpha=255 Duration=500 Locked=1 Delay=2000 BGType=1 BGTint.red=0 BGTint.green=0 BGTint.blue=0 FontSize=3 UseMyTitle=1 WindowTitle=Custom Title Goes Here With No Quotes [Last Connect] Server=10.0.0.1 Port=2112 [Custom1] Server=10.0.0.1 Port=2115 Password=custompass [Custom2] Server=soe.sony.com [Custom3] Server=eqbc.google.com Port=1337 *If you wish to use a custom window title you must set UseMyTitle to 1 and change the WindowTitle* line before loading the plugin**.","title":"Configuration File"},{"location":"plugins/community-plugins/mq2eqbc/#top-level-objects","text":"","title":"Top-Level Objects"},{"location":"plugins/community-plugins/mq2eqbc/#eqbc","text":"Type Member Name Description bool Connected Client connection status string Names List of connected characters string Port OFFLINE if not connected, port if connected string Server hostname or IP of server you connected to string ToonName Character name as seen by EQBC \\(may reflect YouPlayer\\) bool Setting **_**option**_** Option enabled/disabled status. \\(see **/bccmd set** for complete list\\)","title":"${EQBC}"},{"location":"plugins/community-plugins/mq2eqbc/#examples","text":"Sending commands to other toons: /bct ToonName //sit /bct ToonName //stand /bct ToonName //macro ninjalooter /bct ToonName //endmacro Sending commands to channels: /bccmd channels chatchan, commands /bct chatchan hey there guys /bct commands //bct chatchan My zone: $\\{Zone.ShortName} Sending commands to all other connects clients: /bca //target id ${Me.ID} /bca //timed 10 /stick 10 Sending commands to all clients including yourself: /bcaa //makecamp return Using noparse to get MQData with bca & bcaa \\(one day this will be fixed\\) : /noparse /bcaa //bc I am ${Me.PctExp} into ${Me.Level} Taking advantage of escape characters instead of noparse \\(only works with _/bct_ at this time\\) : /bct Mycleric //bc I am level $\\{Me.Level}","title":"Examples"},{"location":"plugins/community-plugins/mq2eqbc/#eqbcs","text":"EQBCS is a server that can be run as a console application on windows, or as either a foreground application or daemon on a Unix-like system \\(tested with Linux and FreeBSD\\) . It currently takes the following command line parameters: -p which is the port you want to bind to \\(default is 2112, which is dedicated to the Canadian trio Rush\\) . -i which is the IP address that you want to the server to listen on if there is more than one network interface in the computer \\(default is to listen on all interfaces, which is what you want unless you know otherwise\\) . -l will send all output to rather than to the screen. -d will cause the application to run as a deamon process in the background \\(UNIX only\\) . Examples: C:\\> eqbcs Listens on port 2112 C:\\> eqbcs -p 4224 Listens on port 4224 C:\\> eqbcs -l log.txt Listens on port 2112 and sends all server output to the file log.txt. C:\\> eqbcs ftp Does not work, it does not look up service names to map to port, and the text won't work.","title":"EQBCS"},{"location":"plugins/community-plugins/mq2eqbc/#compiling-eqbcs-windows","text":"'''This guide for compiling EQBCS for Windows is credited to Tinydru from this post","title":"Compiling EQBCS \\(Windows\\)"},{"location":"plugins/community-plugins/mq2eqbc/#copy-the-two-parts-of-the-eqbsc-post-in-to-a-single-eqbcscpp-file-you-can-just-use-notepad-to-do-this-just","text":"remember to replace the .txt extension with .cpp). Launch Visual Studio 2005 Create a new project. For the project type, select Visual C++ | Win32 and then Win32 Console Application template. Name the project \\(I used eqbcs\\) . Make sure to pay attention as to where it is creating the directory for the project \\(so you know where to grab the app files after you build the solution\\) . Click the OK button after you've given it a name. Click the Next button on the first page of the Win32 Application Wizard On the Applications Settings window: Leave the default Application type as \"Console application\" Uncheck \"Precompiled header\" Check \"Empty project\" Click the Finish button Your empty project should now be open. In the Solution Explorer, right click on the \"Source Files\" folder and select Add -> Existing Item from the list. Navigate to the folder where you saved the eqbcs.cpp file you created in step 1 and double click on it \\(eqbcs.cpp\\) . This will add eqbcs.cpp to the Source Files folder. In the Solution Explorer, double click on the eqbcs.cpp file - this will open the code in the code window. In the code, find \"tempPort = atoi \\(argv\\[1\\]\\) ;\" and replace it with \"tempPort = atoi \\(\\(const char \\*\\) argv 1 );\" \\(this will be on or near line 1983\\) . Thanks much to Bardomatic for fixing this piece of code. From the File menu, select Save All. From the Build menu, select \"Configuration Manager...\" In the Active solution configuration: drop down box, select \"Release\" and then click the Close button. From the Project menu, select eqbcs Properties... (\"eqbcs\" might be diffent if you named the project something else). In the Configuration: drop down at the top of the Property Pages window, select \"Release\" from the list. Open the Configuration Properties node \\(click on the little +\\) and then the Linker node. Now click on \"Input\" (found beneath \"Linker\"). In the right hand window of the Propery Pages window, click on \"Additional Dependencies\". When you click on that, a little box with elipses \\(...\\) will appear on the right side of the field - click on that. The Additional Dependencies window will open. Type wsock32.lib in the text box and then click the OK button. Click the OK button on the Property Pages window. From the File menu, select Save All. From the Build menu, select Build solution. The build *should* succeed. You are done - go get your new eqbcs.exe from the Release folder where you created the solution!!","title":"Copy the two parts of the eqbsc post in to a single eqbcs.cpp file (you can just use Notepad to do this - just"},{"location":"plugins/community-plugins/mq2eqbc/#compiling-eqbcs-windows-cmd-line","text":"'''This guide for compiling EQBCS from the Windows cmd line is credited to dont_know_at_all from this post","title":"Compiling EQBCS \\(Windows cmd line\\)"},{"location":"plugins/community-plugins/mq2eqbc/#ctrl-esc-run","text":"cmd in the cmd.exe window type the following: c:\\Program Files\\Microsoft Visual <add your version/path here>/common7/tools/vsvars32.bash cl eqbcs.cpp that's it. === Compiling EQBCS \\(Linux\\) === '''This guide for compiling EQBCS for Linux is credited to ascii38 from this post","title":"ctrl-esc Run"},{"location":"plugins/community-plugins/mq2eqbc/#g-fpermissive-eqbcscpp-o-eqbcs","text":"","title":"g++ -fpermissive eqbcs.cpp -o eqbcs"},{"location":"plugins/community-plugins/mq2eqbc/#eqbcs-as-a-windows-service","text":"Download the [Windows Resource Kit 2003] \\([http://www.microsoft.com/downloads/details.aspx?FamilyID=9d467a69-57ff-4ae7-96ee-b18c4790cffd&DisplayLang=en](http://www.microsoft.com/downloads/details.aspx?FamilyID=9d467a69-57ff-4ae7-96ee-b18c4790cffd&DisplayLang=en)\\) Run the executable to install the Resource Kit Open up a command prompt and run the following to install a service stub (*default install location used in this example*): '''You may substitute \"EQBC Service\" with whatever name you would like to give to the service for display purposes \"C:\\Program Files\\Windows Resource Kits\\Tools\\instsrv.exe\" \"EQBC Service\" \"C:\\Program Files\\Windows Resource Kits\\Tools\\srvany.exe\" Run regedit to edit the Windows registry, and navigate to the following registry key: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EQBC Service From the Edit menu, select New , select Key , and name the new key Parameters Highlight the Parameters key From the Edit menu, select New , select String Value , and name the new value Application From the Edit menu, select Modify , and type in the full path name and application name of EQBCS, including the drive letter and file extension. You would use the following example if you had the server located in folder MQ2 on your C: drive C:\\MQ2\\eqbcs.exe Now go to Start and Run and type in services.msc From here scroll down to EQBC Service \\(or whatever name you gave the service above\\) , right-click and select Properties On the General tab, change the Startup type to Automatic Click the Start button to start your service Select the Recovery tab, and you have the option of changing the drop-down boxes for First-Failure and so on to Restart the service Select OK and you are finished","title":"EQBCS as a Windows Service"},{"location":"plugins/community-plugins/mq2eqbc/#problems","text":"This application has failed to start because the application configuration is incorrect. Reinstalling this application may fix the problem This is the most common issue with EQBCS failing to run in Windows. Your system is missing runtime libraries. Get both below. 2005 2008","title":"Problems"},{"location":"plugins/community-plugins/mq2eqbc/#eqbc-interface","text":"EQBC Interface is an application developed by ieatacid to allow communication with EQBCS outside of the EverQuest game client. The discussion thread for this application is found in the VIP forums here . The most recent release of this application also allows you to view detailed information about characters connected to your server by selecting their name, which will display their statistics on the right-hand side of EQBC Interface. The interval of how often to poll the selected character is configurable by the user so that this information can be very close to real-time. Jimbob extended the functionality of this program in July 2015. The discussion thread for his fork of the project is found in the VIP forums here .","title":"EQBC Interface"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/","text":"MQ2EQBC:Revisions \u00b6 __NOTOC__ Guide to Revision Numbering \u00b6 Version numbering currently follows incrementing sequence theory. All future releases are numbered based on date of release. The letter in the revision number indicates who made the contribution. Author: Omnictrl \\(o\\) Contributor: ascii38 \\(a\\) Contributor: Vladus2000 \\(v\\) Contributor: pms \\(p\\) Contributor: ieatacid \\(i\\) Contributor: three-p-o Contributor: MacQ Contributor: Jimbob == MQ2EQBC == Version 12.1 \u00b6 Update by Jimbob I added support for my latest eqbci release, so it will provide more information to the client. Version 12.0 \u00b6 Update by MacQ I modified the LoadINI() section to first load from the Settings section of the INI, then it loads from the SERVER.CHARACTER section. If there is no SERVER.CHARACTER section or one of the variables is not listed in the SERVER.CHARACTER section, then the value of that variable defaults to the Settings section or the defaults originally hard coded in EQBC. With this technique, we have greater flexibility to control variables on either a global or per characters basis. Now you can set certain variables you deem to be more global in the Settings section, or variables you deem to be more character specific set in a SERVER.CHARACTER section, which will override the Settings section. Version 11.0219 \u00b6 Update by three-p-o Update for GetTickCount64 Version 11.0218 \u00b6 Fix for null pointer crash when logging in \\(final pms update\\) Version 10.0513 \u00b6 Death to Diversity. \\(Constant to prevent win7 64bit crashes\\) Version 9.0904 \u00b6 Item links now function in the custom window \\(thanks dkaa, ieatacid\\) Added a new option 'echoall' - /bccmd set echoall on This will echo outgoing '/bca' commands back to you in this format: \\(to all\\) message or command here This defaults to off. Version 9.0822 \u00b6 New Features /bccmd iniconnect -- you can now save regularly used servers to your ini and connect to them by the key name in the event you have your own server, and a few others for your mates. Example, in your ini you could do [Mine] Server=127.0.0.1 Port=9999 [MyServer] Server=10.0.0.10 Port=1234 [Sklug] Server=soe.sony.com Port=1337 [Ngreth] Server=soe.sony.com Port=7331 and then /bccmd iniconnect mine or /bccmd iniconnect myserver and so on... /bccmd forceconnect -- will disconnect you from your current server and attempt to connect to the new one rather than warn you that you are already connected and do nothing. New Settings \\(see the functionality changes about the syntax\\) silentinccmd -- if you trust those you botchat with and do not want to see incoming command requests, enabling this option will squelch all command requests silentoutmsg -- this happens with compatmode off, but if you turn compatmode on \\( >name\\< looks weird!\\) and want to hide the outgoing messages, you may enable this and it will keep the names irc-leet and still squelch the message notifycontrol -- with the allow control option disabled, enabling notifycontrol will output a message to /bc notifying that the command request was not processed due to allow control being off. \\(/bcaa //bc test ...\\) The dedicated UI window now allows for a keybind. Pressing the keybind will set the cursor focus on the bc window (which, for those who do not know, anything you type there defaults to /bc, so you do not need to prefix the msg if you do not want). -The keybind defaults to nothing -It saves to MacroQuest.ini as \"EQBC_Nrm=clear\" when you first load the plugin. You may adjust it in Settings Keybind=key of your EQBC ini file \\(i do it there\\) before loading the plugin. New TLO members string \\({EQBC.Server} - OFFLINE if not connected, the name of the server \\(hostname or ip depending on how you made the connection\\) if connected -- /if \\(\\) {EQBC.Server.Equal 127.0.0.1 }) { // do my private stuff } else { // do other stuff } string ${EQBC.Port} - OFFLINE if not connected, the port number otherwise string \\({EQBC.ToonName} - the name of your character _AS SEEN BY EQBC_ aka /if \\(\\) {EQBC.ToonName.Equal YouPlayer }) { // im bugged or have a ghost, so do my fix routine } bool \\({EQBC.Setting\\[\\[i\\]settingname\\[/i\\]\\]} - returns the TRUE or FALSE based on if a setting is enabled. the form is required, so if you do not supply a \\[i\\]settingname\\[/i\\] it will return FALSE. -- /if \\(\\) {EQBC.Setting tellwatch }) { /echo I have tellwatch enabled } Functionality Changes the syntax of all the settings has changed slightly. sorry for the annoyance but it had to be done... you now adjust the settings either with 'set __ on/off' or 'toggle ___' so previously: /bccmd toggletellwatch now becomes /bccmd toggle tellwatch or /bccmd set tellwatch on or /bccmd set tellwatch off this applies to all setting options. /bccmd set reconnectsecs # <---this is the only one that does not support on/off, and the only that accepts a number as a parameter as seen in the source, valid settings are: autoconnect control compatmode reconnect window reconnectsecs localecho tellwatch guildwatch groupwatch fswatch silentcmd savebychar silentinccmd notifycontrol silentoutmsg Rather than pretend it will be fixed again one day, removed the 'relog' command parameter (and all related functions) as MQ2SwitchChar by ieatacid provides all the functionality needed. when offline, /bcaa will no longer announce the 'you are not connected' error message followed by processing the command locally regardless. Cleanup & Bug Fixes The dedicated UI window will no longer clear previous buffer when zoning in some cases The dedicated UI window will now remain when hovering. The dedicated UI window will no longer set the cursor at the beginning of the line when scrolling through the command history. The dedicated UI window history will no longer scroll through the history out of order in some cases. The dedicated UI window should now properly update the window title when reconnecting to a different server (unless you set UseMyTitle=1) The dedicated UI window should save your title for you instead of requiring a manual entry to the INI Camping out should properly save your window settings \\(probably not CTD or /exit\\) without forcing you to toggle the window on & off to force a save The dedicated UI window will no longer display item links as long strings of item data. They will properly display with their pink clickable names. FOR NOW THE LINKS DO NOT FUNCTION , I have a feeling due to buffer size & MAX_STRING not being big enough in other places, so it may be fixable in the future but no promises. ___watch features no longer output the weird characters in the name. \\(thanks ieatacid for donating this logic\\) fswatch no longer relays your own output \\(\"You tell your fellowship\"\\) Using '/camp server' will now properly disconnect you instead of leaving a ghost toon connected (previously stayed until exit eqgame, or reconnect to char select) --- WTB '#define GAMESTATE_SERVERSELECT -1', pst with price Logging into eqbcs via EQBC Interface with a ridiculously large username will no longer cause the eqbc client to crash from buffer overflows. The welcome to EQBC message now properly displays upon first entry \\(of the session\\) into the world rather than only displaying if you loaded the plugin after you were in game, without a dedicated UI window. Irrelevant Source revision history has been moved from the cpp to this wiki article Converted from tabs back to spaces >\\< Seeing as it has been over a year since anyone else messed with this, switched the version numbering to be based on date of release. Some output messages are less polite Updated help msgs and help parameter to reflect new changes oop-d to hell. Version 1.3.p6 - 20090120 \u00b6 Added '/bcclear' based off the '/mqclear' command a command instead of only a select few commands working a command instead of only a select few commands working Version 1.3.p5 - 20081219 \u00b6 additions to the toggletellwatch idea additions to the toggletellwatch idea Version 1.3.i4 - 20081215 \u00b6 Added support for EQBC Interface by ieatacid Version 1.3.p3 - 20081214 \u00b6 Fix for vc6 by dkaa Version 1.3.p2 - 20081208 \u00b6 '/bcfont' and '/bcmin' are now useable in the UI window >\\< Version 1.3.p1 - 20081207 \u00b6 more INI file settings relating to the UI window more INI file settings relating to the UI window Moved UI data from Settings to Window as it is plentiful now to be optional, always using Window options instead to be optional, always using Window options instead Added '/bccmd togglesavebychar' to allow toggle this setting. Change UseMyTitle to 1 if you wish to use a custom window title instead of server IP You need to create \"WindowTitle=Custom Title\" in Window and/or CharName to use it You do not need to put the title in quotes, and fearless might flame you if you admit to doing it Updated UI window to support '/bca', '/bcaa', and '/bct' command input Version 1.2.p7 - 20081026 \u00b6 Added Fades, Alpha, and FadeToAlpha to Window INI Settings /bcaa will now perform the command even if togglecontrol is disabled Code cleanup/better handling for toggletellwatch Added 'togglesilentcmd', which silences the 'CMD: command ' message Added INI support for silentcmd and tellwatch Version 1.2.p6 - 20080909 \u00b6 to prevent banker and trader spam to prevent banker and trader spam Fixed indenting. All indenting uses tabs now. Slightly changed bca and bcaa function names for identification Version 1.2.a5 - 20080805 \\(Why did I start playing again release\\) \u00b6 Fix for changes to EQUIStructs::_CSIDLWND structure Version 1.2.p4 - 20070712 \u00b6 Added /bccmd toggletellwatch to pass tells received along, credit for string logic to MQ2MasterMind Updated HandleHelpRequest for /bca, /bcaa, and /bccmd toggletellwatch Version 1.2.a3 - 20070617 \\(I'm still not playing release\\) \u00b6 EQBC window will not close when escape key is pressed. Version 1.2.v2 - 20070324 \u00b6 Added better connection timeout handling Version 1.2.v1 - 20070116 \u00b6 block certain messages from appearing, and this was the only way I knew how. block certain messages from appearing, and this was the only way I knew how. is an example of where this is useful is an example of where this is useful Version 1.1.a1 - 20060728 \u00b6 It's up to you to decide if the 'a' is \"ascii\" or \"alpha\" :) It's up to you to decide if the 'a' is \"ascii\" or \"alpha\" :) Channel list saved in INI file and restored when you log in. New command: /bccmd togglelocalecho. When Local Echo is on, commands sent to a channel you are in will be sent back to you \\(as per toomanynames\\) Version 1.0.a17 - 20060715 \u00b6 the channel. the channel. New command: /bccmd channels channel_list Added ability to escape characters will be translated to just Version 1.0.a16 - 20060701 \u00b6 Added patch supplied by Sorcerer for updated Netbots support Version 1.0.a15 - 20060520 \u00b6 In IRC compatibility mode /bct will display msg being sent Version 1.0.a14 - 20060423 \u00b6 Added tell command /bct Version 1.0.o13 - 20050123 \u00b6 Fixed crash bug reported by LrdDread. Version 1.0.o12 - 20051021 \u00b6 In last fix, I forgot to change the char spawn pointer in DoCommand. Fixed now. Version 1.0.o11 - 20051021 \u00b6 Fix for fun bug that set name as the name of the mount when /bccmd connect used after login. Version 1.0.o10 - 20051017 \u00b6 Added code to fix problem with high input \\(ie. 6 Netbots at 125ms\\) causing TCP backups, eventual buffer overruns, and horrid lags on eqbcs. Warning: High amounts of traffic can lag you. ;-P Version 1.0.o9 - 20051014 \u00b6 Added color support +c+ , where c can be one of \"yogbrtbmpwx\" These are the same as the \"\\ac\" codes for WriteChatColor. If the color char is uppercase, then dark version is used. Example: /bc Slow +g+ Successful +x+ . Example: /bc Slow +r+ Failed +x+ , retrying. Added new command to display colors, /bccmd colordump Added \\(untested\\) password ability. Requires recompile of eqbcs with login info redefined, see source comments both here and there. Version 1.0.o8 - 20051009 \u00b6 Chat window locations now save/load by character. Requires eqbcs v1.0.3 or greater Version 1.0.o7 - 20051006 \u00b6 Added CMD Support \\(Ping/Pong implemented\\) Added Window support. With CommandHistory \\(shift up/shift down\\) Added TLO. ${EQBC.Connected} Added beta Netbot Support. Tested, but some things may have stability issues. Let me know. Requires eqbcs v1.0.3 or greater Version 1.0.o6 - 20050926 \u00b6 Added relog command, somewhat experimental. Version 1.0.o5 - 20050926 \u00b6 Handles zoning better. Version 1.0.o4 - 20050926 \u00b6 Added commands: togglecompatmode togglereconnect setreconnectsecs stopreconnect Version 1.0.o3 - 20050926 \u00b6 Now attempts to close socket when plugin is unloaded. Version 1.0.o2 - 20050926 \u00b6 Now recognizes when server is shut down. EQBCS \u00b6 Version 2.0.0 - 20101218 \\(ASCII\\) \u00b6 Runs natively as a service in Windows To install it as a service under Windows, add -c to the command line (e.g. EQBCS2 -l c:\\eqbcs.log -c will install the Windows service and configure it to log to C:\\eqbcs.log). The service will be installed to point to the same executable. EQBCS2 -d will remove the service. Version 1.2.i2 - 20081215 \u00b6 Added support for EQBC Interface by ieatacid Version 1.2.v1 - 20070116 \\(vladus2000 addition\\) \u00b6 Added a 50 second ping. The client does not need to be changed for this as it already accepts a ping message. This should prevent the connection from crapping out. It also should speed up detection of dead users. Version 1.1.a12 - 20060807 \\(ASCII's on crack release\\) \u00b6 Fixed the local echo check Version 1.1.a11 - 20060727 \u00b6 Changed version numbering system. It's up to you to decide if the 'a' is \"ascii\" or \"alpha\" :) Channel list saved in INI file and restored when you log in. to a channel you are in will be sent back to you \\(as per toomanynames\\) to a channel you are in will be sent back to you \\(as per toomanynames\\) Version 1.0.a10 - 20060725 \u00b6 oldest server connection left a channel. oldest server connection left a channel. Version 1.0.a9 - 20060715 \u00b6 Added support for pseudo-channels. A /bct to channel goes to everyone in the channel. New command: /bccmd channels channel_list Added ability to escape characters will be translated to just Version 1.0.a8 - 20060701 \u00b6 Apply patch from Sorcerer for updated Netbots. on non-windows. on non-windows. Version 1.0.a7 - 20060520 \u00b6 Flush input buffer after processing tell to invalid username Version 1.0.a6 - 20060416 \u00b6 Added support for tells. \\(/bct\\) Added command line options -p, -i, -l, -u and -d. -p sets port number to listen on -i IP Address of interface to listen on. Unspecified = ALL -d \\(Unix only\\) Run as daemon -l log to file rather than STDOUT -u \\(UNIX only\\) setuid to named user Version 1.0.o5 - 20051117 \u00b6 Fixed name problem bug reported by DKAA. Version 1.0.o4 - 20051013 \u00b6 Fixed unix version not handling unclean disconnects properly. Version 1.0.o3 - 20051005 \u00b6 Made more clear where to add login password \\(LOGIN\\_START\\_TOKEN\\) . Changed select timeout to non debugging value, doh. Added support for msgall. \\(/bca\\) Added support for mq2netbots. \\(ie. crash, plugin unload\\) \\(ie. crash, plugin unload\\) More cpu friendly. Version 1.0.o2 - 20050926 \u00b6 Made compatible with VC6 Version 1.0.o1 - 20050925 \u00b6 Fixed hang on reading when closing. Now uses select to see if data exists","title":"MQ2EQBC:Revisions"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#mq2eqbcrevisions","text":"__NOTOC__","title":"MQ2EQBC:Revisions"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#guide-to-revision-numbering","text":"Version numbering currently follows incrementing sequence theory. All future releases are numbered based on date of release. The letter in the revision number indicates who made the contribution. Author: Omnictrl \\(o\\) Contributor: ascii38 \\(a\\) Contributor: Vladus2000 \\(v\\) Contributor: pms \\(p\\) Contributor: ieatacid \\(i\\) Contributor: three-p-o Contributor: MacQ Contributor: Jimbob == MQ2EQBC ==","title":"Guide to Revision Numbering"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-121","text":"Update by Jimbob I added support for my latest eqbci release, so it will provide more information to the client.","title":"Version 12.1"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-120","text":"Update by MacQ I modified the LoadINI() section to first load from the Settings section of the INI, then it loads from the SERVER.CHARACTER section. If there is no SERVER.CHARACTER section or one of the variables is not listed in the SERVER.CHARACTER section, then the value of that variable defaults to the Settings section or the defaults originally hard coded in EQBC. With this technique, we have greater flexibility to control variables on either a global or per characters basis. Now you can set certain variables you deem to be more global in the Settings section, or variables you deem to be more character specific set in a SERVER.CHARACTER section, which will override the Settings section.","title":"Version 12.0"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-110219","text":"Update by three-p-o Update for GetTickCount64","title":"Version 11.0219"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-110218","text":"Fix for null pointer crash when logging in \\(final pms update\\)","title":"Version 11.0218"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-100513","text":"Death to Diversity. \\(Constant to prevent win7 64bit crashes\\)","title":"Version 10.0513"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-90904","text":"Item links now function in the custom window \\(thanks dkaa, ieatacid\\) Added a new option 'echoall' - /bccmd set echoall on This will echo outgoing '/bca' commands back to you in this format: \\(to all\\) message or command here This defaults to off.","title":"Version 9.0904"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-90822","text":"New Features /bccmd iniconnect -- you can now save regularly used servers to your ini and connect to them by the key name in the event you have your own server, and a few others for your mates. Example, in your ini you could do [Mine] Server=127.0.0.1 Port=9999 [MyServer] Server=10.0.0.10 Port=1234 [Sklug] Server=soe.sony.com Port=1337 [Ngreth] Server=soe.sony.com Port=7331 and then /bccmd iniconnect mine or /bccmd iniconnect myserver and so on... /bccmd forceconnect -- will disconnect you from your current server and attempt to connect to the new one rather than warn you that you are already connected and do nothing. New Settings \\(see the functionality changes about the syntax\\) silentinccmd -- if you trust those you botchat with and do not want to see incoming command requests, enabling this option will squelch all command requests silentoutmsg -- this happens with compatmode off, but if you turn compatmode on \\( >name\\< looks weird!\\) and want to hide the outgoing messages, you may enable this and it will keep the names irc-leet and still squelch the message notifycontrol -- with the allow control option disabled, enabling notifycontrol will output a message to /bc notifying that the command request was not processed due to allow control being off. \\(/bcaa //bc test ...\\) The dedicated UI window now allows for a keybind. Pressing the keybind will set the cursor focus on the bc window (which, for those who do not know, anything you type there defaults to /bc, so you do not need to prefix the msg if you do not want). -The keybind defaults to nothing -It saves to MacroQuest.ini as \"EQBC_Nrm=clear\" when you first load the plugin. You may adjust it in Settings Keybind=key of your EQBC ini file \\(i do it there\\) before loading the plugin. New TLO members string \\({EQBC.Server} - OFFLINE if not connected, the name of the server \\(hostname or ip depending on how you made the connection\\) if connected -- /if \\(\\) {EQBC.Server.Equal 127.0.0.1 }) { // do my private stuff } else { // do other stuff } string ${EQBC.Port} - OFFLINE if not connected, the port number otherwise string \\({EQBC.ToonName} - the name of your character _AS SEEN BY EQBC_ aka /if \\(\\) {EQBC.ToonName.Equal YouPlayer }) { // im bugged or have a ghost, so do my fix routine } bool \\({EQBC.Setting\\[\\[i\\]settingname\\[/i\\]\\]} - returns the TRUE or FALSE based on if a setting is enabled. the form is required, so if you do not supply a \\[i\\]settingname\\[/i\\] it will return FALSE. -- /if \\(\\) {EQBC.Setting tellwatch }) { /echo I have tellwatch enabled } Functionality Changes the syntax of all the settings has changed slightly. sorry for the annoyance but it had to be done... you now adjust the settings either with 'set __ on/off' or 'toggle ___' so previously: /bccmd toggletellwatch now becomes /bccmd toggle tellwatch or /bccmd set tellwatch on or /bccmd set tellwatch off this applies to all setting options. /bccmd set reconnectsecs # <---this is the only one that does not support on/off, and the only that accepts a number as a parameter as seen in the source, valid settings are: autoconnect control compatmode reconnect window reconnectsecs localecho tellwatch guildwatch groupwatch fswatch silentcmd savebychar silentinccmd notifycontrol silentoutmsg Rather than pretend it will be fixed again one day, removed the 'relog' command parameter (and all related functions) as MQ2SwitchChar by ieatacid provides all the functionality needed. when offline, /bcaa will no longer announce the 'you are not connected' error message followed by processing the command locally regardless. Cleanup & Bug Fixes The dedicated UI window will no longer clear previous buffer when zoning in some cases The dedicated UI window will now remain when hovering. The dedicated UI window will no longer set the cursor at the beginning of the line when scrolling through the command history. The dedicated UI window history will no longer scroll through the history out of order in some cases. The dedicated UI window should now properly update the window title when reconnecting to a different server (unless you set UseMyTitle=1) The dedicated UI window should save your title for you instead of requiring a manual entry to the INI Camping out should properly save your window settings \\(probably not CTD or /exit\\) without forcing you to toggle the window on & off to force a save The dedicated UI window will no longer display item links as long strings of item data. They will properly display with their pink clickable names. FOR NOW THE LINKS DO NOT FUNCTION , I have a feeling due to buffer size & MAX_STRING not being big enough in other places, so it may be fixable in the future but no promises. ___watch features no longer output the weird characters in the name. \\(thanks ieatacid for donating this logic\\) fswatch no longer relays your own output \\(\"You tell your fellowship\"\\) Using '/camp server' will now properly disconnect you instead of leaving a ghost toon connected (previously stayed until exit eqgame, or reconnect to char select) --- WTB '#define GAMESTATE_SERVERSELECT -1', pst with price Logging into eqbcs via EQBC Interface with a ridiculously large username will no longer cause the eqbc client to crash from buffer overflows. The welcome to EQBC message now properly displays upon first entry \\(of the session\\) into the world rather than only displaying if you loaded the plugin after you were in game, without a dedicated UI window. Irrelevant Source revision history has been moved from the cpp to this wiki article Converted from tabs back to spaces >\\< Seeing as it has been over a year since anyone else messed with this, switched the version numbering to be based on date of release. Some output messages are less polite Updated help msgs and help parameter to reflect new changes oop-d to hell.","title":"Version 9.0822"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-13p6-20090120","text":"Added '/bcclear' based off the '/mqclear' command a command instead of only a select few commands working a command instead of only a select few commands working","title":"Version 1.3.p6 - 20090120"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-13p5-20081219","text":"additions to the toggletellwatch idea additions to the toggletellwatch idea","title":"Version 1.3.p5 - 20081219"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-13i4-20081215","text":"Added support for EQBC Interface by ieatacid","title":"Version 1.3.i4 - 20081215"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-13p3-20081214","text":"Fix for vc6 by dkaa","title":"Version 1.3.p3 - 20081214"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-13p2-20081208","text":"'/bcfont' and '/bcmin' are now useable in the UI window >\\<","title":"Version 1.3.p2 - 20081208"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-13p1-20081207","text":"more INI file settings relating to the UI window more INI file settings relating to the UI window Moved UI data from Settings to Window as it is plentiful now to be optional, always using Window options instead to be optional, always using Window options instead Added '/bccmd togglesavebychar' to allow toggle this setting. Change UseMyTitle to 1 if you wish to use a custom window title instead of server IP You need to create \"WindowTitle=Custom Title\" in Window and/or CharName to use it You do not need to put the title in quotes, and fearless might flame you if you admit to doing it Updated UI window to support '/bca', '/bcaa', and '/bct' command input","title":"Version 1.3.p1 - 20081207"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12p7-20081026","text":"Added Fades, Alpha, and FadeToAlpha to Window INI Settings /bcaa will now perform the command even if togglecontrol is disabled Code cleanup/better handling for toggletellwatch Added 'togglesilentcmd', which silences the 'CMD: command ' message Added INI support for silentcmd and tellwatch","title":"Version 1.2.p7 - 20081026"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12p6-20080909","text":"to prevent banker and trader spam to prevent banker and trader spam Fixed indenting. All indenting uses tabs now. Slightly changed bca and bcaa function names for identification","title":"Version 1.2.p6 - 20080909"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12a5-20080805-why-did-i-start-playing-again-release","text":"Fix for changes to EQUIStructs::_CSIDLWND structure","title":"Version 1.2.a5 - 20080805 \\(Why did I start playing again release\\)"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12p4-20070712","text":"Added /bccmd toggletellwatch to pass tells received along, credit for string logic to MQ2MasterMind Updated HandleHelpRequest for /bca, /bcaa, and /bccmd toggletellwatch","title":"Version 1.2.p4 - 20070712"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12a3-20070617-im-still-not-playing-release","text":"EQBC window will not close when escape key is pressed.","title":"Version 1.2.a3 - 20070617 \\(I'm still not playing release\\)"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12v2-20070324","text":"Added better connection timeout handling","title":"Version 1.2.v2 - 20070324"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12v1-20070116","text":"block certain messages from appearing, and this was the only way I knew how. block certain messages from appearing, and this was the only way I knew how. is an example of where this is useful is an example of where this is useful","title":"Version 1.2.v1 - 20070116"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-11a1-20060728","text":"It's up to you to decide if the 'a' is \"ascii\" or \"alpha\" :) It's up to you to decide if the 'a' is \"ascii\" or \"alpha\" :) Channel list saved in INI file and restored when you log in. New command: /bccmd togglelocalecho. When Local Echo is on, commands sent to a channel you are in will be sent back to you \\(as per toomanynames\\)","title":"Version 1.1.a1 - 20060728"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a17-20060715","text":"the channel. the channel. New command: /bccmd channels channel_list Added ability to escape characters will be translated to just","title":"Version 1.0.a17 - 20060715"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a16-20060701","text":"Added patch supplied by Sorcerer for updated Netbots support","title":"Version 1.0.a16 - 20060701"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a15-20060520","text":"In IRC compatibility mode /bct will display msg being sent","title":"Version 1.0.a15 - 20060520"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a14-20060423","text":"Added tell command /bct","title":"Version 1.0.a14 - 20060423"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o13-20050123","text":"Fixed crash bug reported by LrdDread.","title":"Version 1.0.o13 - 20050123"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o12-20051021","text":"In last fix, I forgot to change the char spawn pointer in DoCommand. Fixed now.","title":"Version 1.0.o12 - 20051021"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o11-20051021","text":"Fix for fun bug that set name as the name of the mount when /bccmd connect used after login.","title":"Version 1.0.o11 - 20051021"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o10-20051017","text":"Added code to fix problem with high input \\(ie. 6 Netbots at 125ms\\) causing TCP backups, eventual buffer overruns, and horrid lags on eqbcs. Warning: High amounts of traffic can lag you. ;-P","title":"Version 1.0.o10 - 20051017"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o9-20051014","text":"Added color support +c+ , where c can be one of \"yogbrtbmpwx\" These are the same as the \"\\ac\" codes for WriteChatColor. If the color char is uppercase, then dark version is used. Example: /bc Slow +g+ Successful +x+ . Example: /bc Slow +r+ Failed +x+ , retrying. Added new command to display colors, /bccmd colordump Added \\(untested\\) password ability. Requires recompile of eqbcs with login info redefined, see source comments both here and there.","title":"Version 1.0.o9 - 20051014"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o8-20051009","text":"Chat window locations now save/load by character. Requires eqbcs v1.0.3 or greater","title":"Version 1.0.o8 - 20051009"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o7-20051006","text":"Added CMD Support \\(Ping/Pong implemented\\) Added Window support. With CommandHistory \\(shift up/shift down\\) Added TLO. ${EQBC.Connected} Added beta Netbot Support. Tested, but some things may have stability issues. Let me know. Requires eqbcs v1.0.3 or greater","title":"Version 1.0.o7 - 20051006"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o6-20050926","text":"Added relog command, somewhat experimental.","title":"Version 1.0.o6 - 20050926"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o5-20050926","text":"Handles zoning better.","title":"Version 1.0.o5 - 20050926"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o4-20050926","text":"Added commands: togglecompatmode togglereconnect setreconnectsecs stopreconnect","title":"Version 1.0.o4 - 20050926"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o3-20050926","text":"Now attempts to close socket when plugin is unloaded.","title":"Version 1.0.o3 - 20050926"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o2-20050926","text":"Now recognizes when server is shut down.","title":"Version 1.0.o2 - 20050926"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#eqbcs","text":"","title":"EQBCS"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-200-20101218-ascii","text":"Runs natively as a service in Windows To install it as a service under Windows, add -c to the command line (e.g. EQBCS2 -l c:\\eqbcs.log -c will install the Windows service and configure it to log to C:\\eqbcs.log). The service will be installed to point to the same executable. EQBCS2 -d will remove the service.","title":"Version 2.0.0 - 20101218 \\(ASCII\\)"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12i2-20081215","text":"Added support for EQBC Interface by ieatacid","title":"Version 1.2.i2 - 20081215"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12v1-20070116-vladus2000-addition","text":"Added a 50 second ping. The client does not need to be changed for this as it already accepts a ping message. This should prevent the connection from crapping out. It also should speed up detection of dead users.","title":"Version 1.2.v1 - 20070116 \\(vladus2000 addition\\)"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-11a12-20060807-asciis-on-crack-release","text":"Fixed the local echo check","title":"Version 1.1.a12 - 20060807 \\(ASCII's on crack release\\)"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-11a11-20060727","text":"Changed version numbering system. It's up to you to decide if the 'a' is \"ascii\" or \"alpha\" :) Channel list saved in INI file and restored when you log in. to a channel you are in will be sent back to you \\(as per toomanynames\\) to a channel you are in will be sent back to you \\(as per toomanynames\\)","title":"Version 1.1.a11 - 20060727"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a10-20060725","text":"oldest server connection left a channel. oldest server connection left a channel.","title":"Version 1.0.a10 - 20060725"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a9-20060715","text":"Added support for pseudo-channels. A /bct to channel goes to everyone in the channel. New command: /bccmd channels channel_list Added ability to escape characters will be translated to just","title":"Version 1.0.a9 - 20060715"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a8-20060701","text":"Apply patch from Sorcerer for updated Netbots. on non-windows. on non-windows.","title":"Version 1.0.a8 - 20060701"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a7-20060520","text":"Flush input buffer after processing tell to invalid username","title":"Version 1.0.a7 - 20060520"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a6-20060416","text":"Added support for tells. \\(/bct\\) Added command line options -p, -i, -l, -u and -d. -p sets port number to listen on -i IP Address of interface to listen on. Unspecified = ALL -d \\(Unix only\\) Run as daemon -l log to file rather than STDOUT -u \\(UNIX only\\) setuid to named user","title":"Version 1.0.a6 - 20060416"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o5-20051117","text":"Fixed name problem bug reported by DKAA.","title":"Version 1.0.o5 - 20051117"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o4-20051013","text":"Fixed unix version not handling unclean disconnects properly.","title":"Version 1.0.o4 - 20051013"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o3-20051005","text":"Made more clear where to add login password \\(LOGIN\\_START\\_TOKEN\\) . Changed select timeout to non debugging value, doh. Added support for msgall. \\(/bca\\) Added support for mq2netbots. \\(ie. crash, plugin unload\\) \\(ie. crash, plugin unload\\) More cpu friendly.","title":"Version 1.0.o3 - 20051005"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o2-20050926_1","text":"Made compatible with VC6","title":"Version 1.0.o2 - 20050926"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o1-20050925","text":"Fixed hang on reading when closing. Now uses select to see if data exists","title":"Version 1.0.o1 - 20050925"},{"location":"plugins/community-plugins/mq2moveutils/","text":"MQ2MoveUtils \u00b6 General Details \u00b6 Version 9 of MQ2MoveUtils was a rewrite from the ground up by pms. The original goal behind this rewrite was to cleanup numerous logical errors and reduce the amount of code duplication that existed in previous releases. Once this rewrite was complete and functional, version 9 expanded including more enhancements and more extensive configuration. Numbered by release date, the current of this plugin is 16.0717. This plugin is no longer under active development and no new contributions have been made since 2011 by pms, with only one follow-up contribution in 2014 by Cr4zyb4rd. Others have continued to keep the offsets updated in the discussion thread linked below. Links \u00b6 Link to the latest stable source: [16-Nov-2016 th patch fix by trevyn] \\([https://macroquest.org/phpBB3/download/file.php?id=988](https://macroquest.org/phpBB3/download/file.php?id=988)\\) Link to older sources: MQ2MoveUtils v11.x Source Link to emulator version of the source that works with the December 19, 2008 client: [MoveUtils v11 for EMU by pms] \\([https://macroquest.org/phpBB3/viewtopic.php?p=155710\\#p155710](https://macroquest.org/phpBB3/viewtopic.php?p=155710#p155710)\\) Link to current discussion thread: [MQ2MoveUtils v16.x Thread] \\([https://macroquest.org/phpBB3/viewtopic.php?t=15909](https://macroquest.org/phpBB3/viewtopic.php?t=15909)\\) Development Notes \u00b6 For the development history of this plugin, see the article MQ2MoveUtils 16.x Revision History For the chronicle of the entire MoveUtils plugin including the original development history, see the article MQ2MoveUtils:History Help \u00b6 Frequently Asked Questions Configuration Examples Command Information \u00b6 Main Plugin Commands \u00b6 These parameters can be used from any of the four main plugin commands \\('/stick', '/moveto', '/circle', and '/makecamp'\\) . For example purposes the most popular '/stick' command will be used. * /stick help settings Displays generic help information, and help for the command used The settings optional parameter displays help information for all plugin 'set' and 'toggle' commands * /stick debug Dumps the current values of all plugin variables to a debug INI file * /stick status all ChatWnd output for the status of the issuing command \\(stick in this example\\) The all optional parameter displays status output for all aspects of the plugin * /stick pause lock Pauses all aspects of the plugin The lock optional parameter prevents plugin from automatically unpausing under any circumstance other than user issuing unpause Note: This does not toggle * /stick unpause Resumes all aspects of the plugin Note: This does not toggle * /stick save | load Saves or load your current configuration settings using MQ2MoveUtils.ini * /stick imsafe BreakOnSummon and BreakOnGM have built-in protection disabling the ability to re-issue commands when triggered. This prevents macros from continuing to issue commands in a possibly unsafe situation The imsafe parameter allows command usage to resume * /stick min Minimizes custom user window similar to /mqmin * /stick clear Clears custom user window buffer similar to /mqclear * /stick verbflags Outputs current verbosity flags setting \\(this one displays even if totalsilence is enabled. too bad.\\) === Main Plugin Settings === These setting parameters can be used from any of the four main plugin commands. The following can be used with toggle or set name on | off. * /stick toggle name */stick set name* on</span> | off** name can be one of the following: * mpause | mousepause Pause current command if keyboard \\| mouse movement Resumes after a random amount of delay set with pausemindelay and pausemaxdelay below *Note: You may not* have a pause and corresponding break on at the same time (e.g. no mpause and breakonkb at the same time)** You may have opposing options different though \\(e.g. mousepause on and breakonkb on\\) * breakonkb | breakonmouse Break current command if keyboard \\| mouse movement *Note: You may not* have a pause and corresponding break on at the same time (e.g. no mpause and breakonkb at the same time)** You may have opposing options different though \\(e.g. mousepause on and breakonkb on\\) * autosave Automatically save settings to INI file when a toggle or set command is issued * savebychar Save server._Yourcharacter_ section of INI file for individual character settings * feign Enable Feign Death support, which waits for you to stand up manually before moving * lockpause Plugin will never automatically resume from pause until user issues an unpause * autopause Pause movement if casting spells \\(non-bard\\) , stunned, rooted, sitting, FD, or self targeted \\(non-hold\\) * autopauseoutput If enabled, will display ChatWnd output when autopause is halting movement Note: This bypasses totalsilence and must be configured individually * stucklogic If enabled, stucklogic automatically attempts to get unstuck if running into walls and large objects * trytojump If enabled, stucklogic also tries to jump to help get unstuck * turnhalf If enabled, stucklogic will reset heading and turn the other direction if it has rotated halfway without success * verbosity ChatWnd output for basic command information messages * fullverbosity ChatWnd output for more detailed information messages and output for more actions * totalsilence Silences most ChatWnd output except for critical information or user-requested messages * totalverbosity Enable display of every ChatWnd message in the plugin * hidehelp If enabled, the help output will not be displayed upon command failure \\(e.g. invalid parameters\\) * window If enabled, MoveUtils will output any messages to a user-placed custom UI window dedicated to the plugin * wineq By default, MoveUtils uses actual keypresses to control movement \\(regardless of heading settings\\) WinEQ2 has a bug where background sessions can have their alt keys and certain mouse buttons held down, causing movement to run in weird directions For Lavishsoft users who have not switched over to Innerspace, enabling wineq setting will use old-style emulated movement via ExecuteCmd() * breakontarget Break from stick if target changes \\(default behavior is switch over to sticking to new target\\) * breakonsummon Halts current command and disables ability to use any commands if summoned beyond summondist Note: Once this fires, you must use the imsafe parameter to unlock the plugin * breakongm Halts current command and disables ability to use any commands if visible GM enters the zone Note: Once this fires, you must use the imsafe parameter to unlock the plugin * breakonwarp Breaks from stick if target warps out of breakdist range \\(user set, see below\\) Note: This does not limit your initial stick range. You may /stick from across the zone * pauseonwarp Pauses stick if target warps out of breakdist range until they are back in range \\(user set, see below\\) Note: This does not limit your initial stick range. You may /stick from across the zone * breakongate Breaks from stick if target Gates. message occurs Note: if using stick id or stick hold, it will break based on the held target name * breakonaggro Breaks from moveto command if you are aggro to an NPC Note: This checks the player window for the crossed swords indicator * alwaysdrunk Use drunken by default when circling * alwaysbackwards Run backwards by default when circling * alwaysccw Circle in a counter-clockwise direction by default * nohottfront Allow for stick front to spin to front of the mob without Health of Target's Target Leader AA Note: By default stick front will not stay stuck to the front unless you are on the HoTT window * returnnoaggro Makecamp will auto-return to camp only if not aggro \\(checks crossed swords indicator\\) * returnnotlooting Makecamp will not auto-return to camp if character has an open loot corpse window * returnhavetarget Makecamp will auto-return to camp even if you have a target Note: By default, makecamp does not auto-return if you have any target * realtimeplayer Makecamp player will get realtime updates on player location, allowing for dynamic returns to players By default, makecamp player will return to a players last location when return begins and not get a new update until the return is complete The default behavior is a sort of ghetto MQ2AdvPath whereas enabling realtimeplayer will work more like an autofollow * leash If enabled, leash prevents moving beyond leashlength \\(user set value\\) * usewalk If enabled, plugin will switch to walking when closing in on moveto destination or camp return * strafewalk If enabled, plugin will switch to walking when within strafe range for all stick commands * randomize If enabled, stick behind and !front will use random arc values to position * delaystrafe If enabled, strafe-based movement \\(stick front, !front, behind, pin\\) will use a delay before moving **Note: This helps prevent endless circling when aggro is gained, or spinning when mobs quick-turn to cast spells** **Circling is one of the biggest signs that a player is using MoveUtils so it is recommended you ALWAYS leave this enabled** * autoUW If enabled, stick and moveto will use the uw parameter whenever underwater \\(look up and down at target\\) * usefleeing If enabled, stick front will not attempt to position in the front of a target that is fleeing * usescatter If enabled, camp returns will use scattered return locations instead of default behavior Note: Default behavior attempts to get back within camp radius The following option is unique /stick set heading true | loose | fast Changes plugin heading adjustments to use the specified type true: actual keypressing -- does not work with wineq=on loose: simulated incremental turning -- fast: instantly set heading The following 'set' commands require a numeric value, and can be used from any of the four main plugin commands. \\(stick used for example purposes only\\) * /stick set pulsecheck # Number of pulses used to calculate average movement distance in stucklogic Valid: 1 or higher * /stick set pulseunstuck # Number of pulses successfully moved forward before considered unstuck Valid: 1 or higher * /stick set diststuck #.## Minimum distance needed to move or else considered stuck \\(compares against pulse average\\) Valid: 0.01 or higher * /stick set campmindelay # Minimum delay before auto-returning to camp \\(in ms\\) Valid: 125 or higher * /stick set campmaxdelay # Maximum delay before auto-returning to camp \\(in ms\\) Valid: 125 more than campmindelay * /stick set pausemindelay # Minimum delay before resuming from mpause/mousepause \\(in ms\\) Valid: 125 or higher * /stick set pausemaxdelay # Maximum delay before resuming from mpause/mousepause \\(in ms\\) Valid: 125 more than pausemindelay * /stick set strafemindelay # Minimum delay before stick will strafe to move when delaystrafe is enabled \\(in ms\\) Valid: 125 or higher note: higher values are better. default of 1500 \\(1.5s\\) is recommended * /stick set strafemaxdelay # Maximum delay before stick will strafe to move when delaystrafe is enabled \\(in ms\\) Valid: 125 higher than strafemindelay note: higher values are better. default of 3000 \\(3s\\) is recommended * /stick set ydist #.## Acceptable distance to have \"arrived\" for precisey moveto Valid: 1.0 or higher * /stick set xdist #.## Acceptable distance to have \"arrived\" for precisex moveto Valid: 1.0 or higher * /stick set snapdist #.## Default distance to run past target before turning to snaproll Valid: 1.0 or higher * /stick set summondist #.## Distance character must be summoned in a single pulse for BreakOnSummon to fire Valid: 2.0 or higher * /stick set turnrate #.# Rate at which loose heading turns Valid: 1.0 to 100.0 * /stick set !frontarc #.# Angular distance arc for stick !front Valid: 1.1 to 260.0 * /stick set behindarc #.# Angular distance arc for stick behind Valid: 1.1 to 260.0 * /stick set breakdist #.## Distance to check for breakonwarp Valid: 1.0 or higher * /stick set campradius #.## Default camp radius and radius for active camp Valid: 5.0 or higher * /stick set circleradius #.## Default circle radius Valid: 5.0 or higher * /stick set leashlength #.# Default leash length and length for active leash Valid: greater or equal to camp radius * /stick set bearing #.# Bearing \\(direction from center\\) used for scatter camp Valid: any * /stick set scatsize #.## Radius size for scattering Valid: 1.0 or higher * /stick set scatdist #.## Distance from center of camp to scatter at Valid: 1.0 or higher * /stick set allowmove #.## Loose or True heading allow forward movement when reach this angular distance This is \"anti-orbit\" code to stop circling near close-range destinations Valid: 10.1 or higher * /stick set font # Custom user window font size Valid: 1 to 10 * /stick set verbflags # Current plugin verbosity flags Valid: see verbosity section near bottom of this wiki entry The following settings are command-specific, use the command in the example only * /stick set backupdist #.## Range that stick will walk backwards instead of turning to face target, if useback enabled Valid: 1.0 or higher * /moveto set backupdist #.## Range that moveto will walk backwards instead of turning to face destination, if useback enabled Valid: 1.0 or higher * /moveto set dist #.## Acceptable distance to have \"arrived\" for standard moveto and camp returns Valid: 1.0 or higher * /stick ** **toggle** **\\|** **set** ** alwaysUW ** **on** **\\|** **off** ** If enabled, stick will always adjust looking angle as if uw parameter was typed inline Note: this is not the same as autoUW , which only enables uw when actually underwater * /moveto ** **toggle** **\\|** **set** ** alwaysUW ** **on** **\\|** **off** ** If enabled, moveto will always adjust looking angle as if uw parameter was typed inline Note: this is not the same as autoUW , which only enables uw when actually underwater * /stick ** **toggle** **\\|** **set** ** breakonhit ** **on** **\\|** **off** ** Breaks from stick command if you are attacked by an NPC **Note: This parses chat for hits and misses. If you use the number only hitsmode then it will only parse for misses** * /moveto ** **toggle** **\\|** **set** ** breakonhit ** **on** **\\|** **off** ** Breaks from moveto command if you are attacked by an NPC **Note: This parses chat for hits and misses. If you use the number only hitsmode then it will only parse for misses** * /stick ** **toggle** **\\|** **set** ** useback ** **on** **\\|** **off** ** If enabled, stick will walk backwards to position itself when close to a target instead of turning to face it Note: This requires loose or truehead style heading adjustments, and does not work with fast heading * /moveto ** **toggle** **\\|** **set** ** useback ** **on** **\\|** **off** ** If enabled, moveto will walk backwards to position itself when close to a destination instead of turning to face it Note: This requires loose or truehead style heading adjustments, and does not work with fast heading This includes automatic and user-forced camp returns * /stick ** **toggle** **\\|** **set** ** loose | truehead ** **on** **\\|** **off** ** **/moveto toggle \\| set loose | truehead on \\| off ** **/circle toggle \\| set loose | truehead on \\| off ** Change the heading type for currently active \\(stick \\| moveto \\| circle\\) to this type of heading. If WinEQ is enabled, truehead will fail to switch. Once current command ends, heading type will return to previous. /stick \u00b6 The stick command sticks you to your target, so that if your target moves you will move along with it. There are many different parameters that cause this command to behave in different ways. You can combine any number of these parameters together inline to enable multiple options for the stick. * '''/stick stick with no parameters will stick you to your current target, using max melee range * /stick on | off turns stick on and off with default values on is a nearly-useless parameter and only included to support older macros or stickcmd=on in MQ2Melee to prevent MQ2Melee from doing anything undesired if you use /stick on in your macro, expect to be laughed at whole-heartedly * /stick id \\# sticks to the given spawn id uses id of your current target if no spawn id is given this allows you to continue sticking when your target changes, e.g. casting a heal on someone * /stick # | #% Stick at the specified distance or percentage * /stick -# Reduce current stick distance modifier by # * /stick moveback stick will back up to the value if the target gets closer, e.g. many targets in the rear pushing target too close to the tank * /stick loose stick using turn increments instead of instant heading adjustment * /stick truehead stick using actual keypress heading adjustments does not work if wineq option is enabled * /stick healer Healer sticking does not perform face adjustments to look at the target while in stick range This is good for keeping a healer close & sticking to another group member without having it turn to face the other character constantly as it moves Does not work with any strafe-style sticks \\(pin front !front behind behindonce snaproll\\) * /stick uw | underwater face angle will look up/down at the stick target * /stick hold stick to the current target even if your target changes * /stick behind stick to the rear of the target unless you are on HoTT. will spin in circles if you do not have HoTT and gain aggro \\(to prevent: USE DelayStrafe OPTION !!!\\) * /stick behindonce stick behind the target when first moving into position, only using enforcement after * /stick !front stick to target anywhere but the frontal arc, same considerations as behind apply \\(use DelayStrafe!\\) * /stick pin stick to the side of the target, same consideration as behind apply \\(use DelayStrafe!\\) * /stick front stick to the front arc of the target if you have HoTT and lose aggro you will not spin this will not work by default without HoTT * /stick \\(ANY STICK VALUES\\) always when current target is lost, will wait and then resume sticking using supplied values upon next NPC targeted does not work with stick hold or stick id * /stick snaproll ** **left** **\\|** **right** **\\|** **face** **\\|** **rear** ** runs in a straight line behind your target then turns to face left/right/front of target if optional parameter direction supplied rear is default ''the following inline configuration options are supported for one-time use: **/stick breakontarget | breakongate | breakonwarp | pauseonwarp | randomize | delaystrafe | useback | usefleeing | strafewalk | mindelay # | maxdelay # | backupdist # | breakdist # | snapdist # | !frontarc # | behindarc # </span>** Read the _set name _section for explanation of what these parameters do * /stick mod # | -# modify stick distance by the supplied amount \\(does not turn stick on\\) === /moveto === The moveto command will move you from your current location to a specific location or target. You can combine any number of these parameters together inline to enable multiple options for the moveto. * /moveto loc Y X Z moves to the specified location z is optional must be the first parameter * /moveto yloc Y | xloc X beeline to the Y or X supplied different from precisey/x in that this only considers a single axis must be the first parameter * /moveto id \\# moves to the supplied spawn id, or your current target if no id is given * /moveto off stop moving to the current target/location * /moveto loose moveto using more human-like heading adjustments * /moveto truehead moveto using actual keypress heading adjustments * /moveto \\(id** **\\|** **loc Y X** **\\[Z\\]\\) precisey | precisex moves to loc stopping when within x or y arrival dist values instead of both works with either id or loc * /moveto uw | underwater look angle up and down at destination * /moveto dist # sets value for how close to actual location is considered arrival does not turn moveto on permanently changes the value * /moveto id** _**spawnid**_ **\\|** **loc y x** **\\[z ] mdist # id sets value for how close to actual location is considered arrival allowed inline BEFORE id or AFTER loc y x z or id spawn id parameter permanently changes the value ''the following inline configuration options are supported for one-time use: **/moveto breakonaggro | breakonhit | usewalk | useback | backupdist # | ydist # | xdist #</span>** Read the _set name _section for explanation of what these parameters do /circle \u00b6 The circle command spins you in a circle. If you are like me, looking at this for the first time wondering what the point is, this is mainly for bards to use while circle kiting, but could equally be used for amusement. You can combine any number of these parameters together inline to enable multiple options for the circle. * /circle on ** **\\#** ** begin circling using your current location as the center with default radius if optional # parameter supplied, use # as the radius size must be first parameter * /circle off stop circling * /circle loc Y X begin circling using the specified location as the center must be first parameter * /circle drunken turn to complete the circle at random intervals * /circle clockwise | cw circle in a clockwise direction. \\(default\\) * /circle cw | counterclockwise | reverse circle in a counter-clockwise direction * /circle radius # sets the default size of the circle radius for use with loc y x since on # would have to be first param * /circle backward run backwards instead of forwards === /makecamp === The makecamp command will create a camp spot for you to return to after combat, or to establish boundries for your character to prevent them from moving beyond a certain radius. * /makecamp using makecamp with no parameters will set up a camp at your current location, using default values * /makecamp on ** **\\#** ** set up a camp at current location with default values if optional # parameter supplied, use # as camp radius size must be first parameter * /makecamp off disable current makecamp * /makecamp loc Y X set up a camp at the specified location must be first parameter * /makecamp player ** **name** ** set up a dynamic camp based on a certain pc name if in zone, or targeted pc if optional name not supplied * /makecamp leash toggles leashing to camp radius so character cannot leave boundary * /makecamp leash # sets how far beyond camp radius you can move before leashing \\(LeashLength\\) * /makecamp radius # sets the radius of the camp size does not turn camp on if supplied on its own * /makecamp mindelay # | maxdelay # sets the delay time before auto-returning to camp * /makecamp return forces a return to the camp radius immediately * /makecamp altreturn forces a return to the camp spot you had before your current one, or a camp that is now turned off ''the following inline configuration options are supported for one-time use: **/makecamp returnhavetarget | returnnoaggro | returnnotlooting | realtimeplayer | scatter | bearing # | scatsize # | scatdist #</span>** Read the _set name _section for explanation of what these parameters do === Other Plugin Commands === Less popular commands of MQ2MoveUtils * '''/calcangle Displays lots of basic numerical information related to moving such as Dist values, angular distance, 3D distance, melee range, stick range, speed multipliers This command is useful to help determine what to set plugin options such as arc values or AllowMove, backup dist, etc. * /rootme ** **off** ** roots the player in place, unable to move. this is not any form of actual debuff, just a plugin implementation of locking a character in place supplying the optional off parameter disables the root other commands will not function when rootme is active == Top-Level Objects == ${MoveUtils} \u00b6 Members of this datatype relate to plugin settings and generic information Type Member Return Values Description string Command NONE STICK MOVETO MAKECAMP CIRCLE Displays the currently active command. MAKECAMP returns if a camp is setup but no other command is currently in use bool Stuck TRUE FALSE Displays true if plugin stucklogic has determined you are currently stuck bool Summoned TRUE FALSE Displays true if BreakOnSummon is enabled and has fired due to your character being summoned beyond breakonsummon distance bool StuckLogic TRUE FALSE Displays true if stucklogic is enabled bool Verbosity TRUE FALSE Displays true if verbosity is enabled bool FullVerbosity TRUE FALSE Displays true if fullverbosity is enabled bool TotalSilence TRUE FALSE Displays true if totalsilence is enabled bool Aggro TRUE FALSE Displays true if you are facing your target and your target is facing you bool TryToJump TRUE FALSE Displays true if stucklogic trytojump is enabled int PauseMinDelay 125 or greater Displays the min delay for mousepause and mpause to resume command in ms int PauseMaxDelay 125 or more greater than PauseMinDelay Displays the max delay for mousepause and mpause to resume command in ms int PulseCheck 1 or greater Displays the number of pulses used to average movement rate for stucklogic int PulseUnstuck 1 or greater Displays the number of pulses successfully moved forward after being stuck to be considered unstuck float DistStuck 0.01 or greater Displays the amount of distance needed to have moved \\(compared against pulse average\\) or else considered stuck by stucklogic float Version #.#### Displays the version number of the plugin bool MovePause TRUE FALSE Displays true if mpause \\(PauseKB\\) is enabled bool GM TRUE FALSE Displays true if BreakOnGM fired string To String Same as Command Same as Command === ${Stick} === Members of this datatype relate to the '/stick' command Type Member Return Values Description string Status OFF PAUSED ON Displays ON if any form of stick is active bool Active TRUE FALSE Displays true if any form of stick is active bool Broken TRUE FALSE Returns true if BreakOnHit event has halted stick prematurely float Distance #.## Current distance used by stick bool MoveBehind TRUE FALSE Displays true if stick behind is active bool MoveBack TRUE FALSE Displays true if moveback is active bool Loose TRUE FALSE Displays true if loose sticking is enabled bool Paused TRUE FALSE Displays true if plugin is paused bool Behind TRUE FALSE Displays true if currently behind target \\(regardless of _/stick behind_\\) , false if outside of stick dist or not behind bool Stopped TRUE FALSE Displays true if stick is within stick distance bool Pin TRUE FALSE Displays true if stick pin is active int StickTarget SpawnID Returns spawnid of stick target if stick id/hold used, else spawnid of current target, 0 if no target and id/hold not used string StickTargetName NONE DisplayedName Returns DisplayedName of stick target if stick id/hold used, else current target or NONE if no target and hold/id not used float DistMod - #.## Current stickdist modifier float DistModPercent #.## Current stickdist percent modifier bool Always TRUE FALSE Returns true if /stick always is active string To String Same as Status Same as Status === ${MoveTo} === Members of this datatype relate to the '/moveto' command Type Member Return Values Description bool Moving TRUE FALSE Displays true if moveto or camp return is active bool Stopped TRUE FALSE Displays true if the last moveto command completed successfully bool CampStopped TRUE FALSE Displays true if within moveto distance of makecamp Y X location bool UseWalk TRUE FALSE Returns true if UseWalk is enabled float ArrivalDist 1.00+ Acceptable arrival distance float ArrivalDistY 1.00+ Acceptable arrival distance for precisey float ArrivalDistX 1.00+ Acceptable arrival distance for precisex bool Broken TRUE FALSE Returns true if BreakOnAggro or BreakOnHit event have halted moveto prematurely string To String OFF PAUSED ON Displays ON if a moveto command is active === ${MakeCamp} === Members of this datatype relate to the '/makecamp' command Type Member Return Values Description string Status OFF PAUSED ON Displays status of MakeCamp command. AltCamp returns OFF bool Leash TRUE FALSE Displays true if leash is enabled float AnchorX 0.00 Location of current camp X anchor float AnchorY 0.00 Location of current camp Y anchor float LeashLength Greater than or equal to CampRadius Size of Leash Length float CampRadius 10.0+ Size of camp radius int MinDelay 125 or greater Displays the min delay for auto-returning to camp in ms int MaxDelay 125 or more greater than MinDelay Displays the max delay for auto-returning to camp in ms bool Returning TRUE FALSE Displays true if /makecamp return issued float AltAnchorX 0.00 Location of current altcamp X anchor float AltAnchorY 0.00 Location of current altcamp Y anchor float CampDist 0.00 Distance to camp anchor from your current location. Returns 0.00 if camp is disabled float AltCampDist 0.00 Distance to altcamp anchor from your current location. Returns 0.00 if altcamp not established float AltRadius 10.0+ Size of altcamp radius bool Scatter TRUE FALSE Displays true if camp scattering enabled bool ReturnNoAggro TRUE FALSE Displays true if ReturnNoAggro is enabled bool ReturnNotLooting TRUE FALSE Displays true if ReturnNotLooting is enabled bool ReturnHaveTarget TRUE FALSE Displays true if ReturnHaveTarget is enabled float Bearing 0.00 Bearing \\(heading\\) of camp scattering float ScatDist 1.0+ Distance from anchor to perform scatter float ScatSize 1.0+ Size of scattering radius string To String Same as Status Same as Status === ${Circle} === Members of this datatype relate to the '/circle' command Type Member Return Values Description string Status OFF PAUSED ON Returns ON if circling float CircleY 0.00 Location of circle center Y float CircleX 0.00 Location of circle center X bool Drunken TRUE FALSE Displays true if drunken string Rotation CW CCW Displays CCW if reverse circling string Direction FORWARDS BACKWARDS Movement direction of current circle bool Clockwise TRUE FALSE Displays false if reverse circling bool Backwards TRUE FALSE Displays true if movement direction backwards float Radius 5.00+ Radius size of circle string To String Same as Status Same as Status == Configuration == MQ2MoveUtils saves a configuration file to your root MQ2 folder: MQ2MoveUtils.ini Default INI File \u00b6 [Defaults] AllowMove=32.0 AutoPause=on AutoPauseMsg=on AutoSave=on AutoUW=off BreakKeyboard=on BreakMouse=off BreakOnGM=on BreakOnSummon=off DistSummon=8.00 FeignSupport=off Heading=true HideHelp=off KeyboardPause=off MousePause=off LockPause=off PauseMinDelay=500 PauseMaxDelay=5000 SaveByChar=on TurnRate=14.00 UseWindow=off Verbosity=on FullVerbosity=on TotalSilence=off VerbosityFlags=33554431 WinEQ=off [Stick] AlwaysUW=off AwareNotAggro=off ArcBehind=45.0 ArcNotFront=135.0 BreakOnGate=on BreakOnHit=off BreakOnTarget=off BreakOnWarp=on PauseOnWarp=off DelayStrafe=on DistBackup=10.0 DistBreak=250.0 DistMod=0.0 DistMod%=1.0 DistSnaproll=10.0 RandomArc=off StrafeMinDelay=1500 StrafeMaxDelay=3000 UseBackward=on UseFleeing=on UseWalk=off [MakeCamp] CampRadius=40.00 MinDelay=500 MaxDelay=1500 RealtimePlayer=off ReturnHaveTarget=off ReturnNoAggro=off ReturnNotLooting=off UseLeash=off LeashLength=50.00 UseScatter=off Bearing=0.00 ScatDist=10.00 ScatSize=10.00 [MoveTo] AlwaysUW=off ArrivalDist=10.0 ArrivalDistX=10.0 ArrivalDistY=10.0 BreakOnAggro=off BreakOnHit=off DistBackup=30.0 MoveToMod=0.0 UseBackward=off UseWalk=on [Circle] Backward=off CCW=off Drunken=off RadiusSize=30.0 [StuckLogic] StuckLogic=on DistStuck=0.10 PulseCheck=6 PulseUnstuck=10 TryToJump=off TurnHalf=on [Window] ChatTop=10 ChatBottom=210 ChatLeft=10 ChatRight=410 Fades=0 Alpha=255 FadeToAlpha=255 Duration=500 Locked=0 Delay=2000 BGType=1 BGTint.red=255 BGTint.green=255 BGTint.blue=255 FontSize=2 WindowTitle=MoveUtils [yourserver.yourcharacter] DisregardMe=false AllowMove=32.0 ArcBehind=45.0 ArcNotFront=135.0 AutoSave=on AutoUW=off DistBreak=250.0 BreakOnGate=on BreakOnWarp=on PauseOnWarp=off LockPause=off DistSnaproll=10.0 FeignSupport=off Heading=true LeashLength=50.00 UseLeash=off UseWindow=off Verbosity=on FullVerbosity=on VerbosityFlags=33554431 CampRadius=40.00 RealtimePlayer=off UseScatter=off Bearing=0.00 ScatDist=10.00 ScatSize=10.00 INI options \u00b6 Information on what the actual values can be and represent. Defaults \u00b6 This section is for default plugin settings AllowMove - 10.0+, anti-orbit setting for true/loose heading representing angular distance before moving forward AutoPause= - on or off, pauses command if casting spells, stunned, rooted, sitting, or self targeted AutoPauseMsg= - on or off, displays output when AutoPause halts movement AutoSave= - on or off, automatically save ini file when using 'toggle' or 'set' AutoUW= - on or off, automatically use 'uw' heading adjustments when character is under water BreakKeyboard= - on or off, break command from keyboard press BreakMouse= - on or off, break command from mouselook usage BreakOnGM= - on or off, break current command and prevent command usage if GM enters zone BreakOnSummon= - on or off, halt command and ability to use commands if summoned beyond certain distance DistSummon= - 2.0+, distance moved in a single pulse to trigger breakonsummon \\(if on\\) FeignSupport= - on or off, fd support waits for you to stand up manually before moving, if feigned Heading= = true or loose or fast, type of heading adjustments plugin will use (fast=instant, loose=gradual emulated shift, true=real kb presses) HideHelp= - on or off, never automatically display help output unless requested KeyboardPause= - on or off, pause command for a delay if keyboard press MousePause= - on or off, pause command for a delay if mouselook used LockPause= - on or off, plugin will not automatically unpause under any circumstance unless user unpauses PauseMinDelay= - 125+ \\(in ms\\) , minimum delay before resuming from mpause/mousepause PauseMaxDelay= - 125 above min \\(in ms\\) , maximum delay before resuming from mpause/mousepause SaveByChar= - on or off, save server.Charname section of ini file for individual character settings TurnRate= - 10.0 to 100.0, rate at which loose heading emulates turns UseWindow= - on or off, uses a custom user-placed window for all moveutils output if enabled Verbosity= - on or off, ChatWnd output for basic command info FullVerbosity= - on or off, ChatWnd output for enhanced plugin info TotalSilence= - on or off overrides verb/fullverb , silence ChatWnd output except for critical or user-requested messages VerbosityFlags= - see verbosity section of this wiki WinEQ= - on or off, when enabled moveutils uses feigned movement simulation due to the bug of WinEQ2 holding down alt keys and mouse buttons in background sessions note: if WinEQ is enabled, true heading is NOT possible ==== Stick ==== This section is for settings related to /stick AlwaysUW= - on or off, if enabled stick will always use the 'uw' parameter as if it were typed inline AwareNotAggro= - on or off, detect aggro loss if using stick front ArcBehind= - 5.1 to 259.9, user can configure angular distance arc that \"stick behind\" uses ArcNotFront= - 5.1 to 259.9, user can configure angular distance arc that \"stick !front\" uses BreakOnGate= - on or off, break from stick if \"target Gates.\" message occurs BreakOnHit= - on or off, when enabled stick will halt if user is being attacked BreakOnWarp= - on or off, break from stick if target warps beyond certain distance PauseOnWarp= - on or off, pause stick unless target gets back in range if warps beyond certain distance (break or pause, can't have both) DelayStrafe= - on or off, delay strafing movement when position adjustment required (good for stopping endless circling if aggro is gained) DistBackup= - 1.0+, if you are within this distance when stick turned on, stick will walk backwards rather than spin in a circle to move to target DistBreak= - 1.0+, distance mob moved in a single pulse to trigger breakonwarp \\(if on\\) DistMod= - 0.0+, adjust default/supplied stick distance by this amount DistMod%= - 0.0+ \\(represents a percentage\\) , adjust default/supplied stick distance by this percent DistSnaproll= - 1.0+, distance behind target snaproll will move before stopping and turning to face target RandomArc= - on or off, randomize min/max arc for any strafe-based stick (so you do not always stick to the exact same spot of a mob) StrafeMinDelay= - 125+ \\(in ms\\) , minimum delay before attempting to strafe if delaystrafe enabled StrafeMaxDelay= - 125 above min \\(in ms\\) , maximum delay before attempting to strafe if delaystrafe enabled UseBackward= - on or off, when enabled stick will walk backward rather than turn to face if within DistBackup of target UseFleeing= - on or off, when enabled \"stick front\" will not attempt to position in front of the mob when target begins to flee UseWalk= - on or off, when enabled stick uses walking when close to the target for precise movements and preventing overshooting ==== MakeCamp ==== This section is for settings related to /makecamp CampRadius= - 5.0+, default camp radius size MinDelay= - 125+ \\(in ms\\) , minimum delay before auto-returning to camp MaxDelay= - 125 above min \\(in ms\\) , maximum delay before auto-returning to camp RealtimePlayer= - on or off, when enabled \"makecamp player\" gets realtime location updates of player and adjusts returning on the fly ReturnHaveTarget= - on or off, if on Auto-Return to camp even if you have a target (default behavior is return only if no target) ReturnNoAggro= - on or off, Auto-Return to camp only if not aggro ReturnNotLooting= - on or off, do not Auto-Return to camp if looting a corpse UseLeash= - on or off, do not allow character to move beyond LeashLength LeashLength= - #.# >= camp radius, length of leash UseScatter= - on or off, use specific scatter values instead of random return location Bearing= - #, bearing of scatter ScatDist= - 1.0+, distance from camp center to perform scatter ScatSize= - 1.0+, radius size of scatter area ==== MoveTo ==== This section is for settings related to /moveto AlwaysUW= - on or off, if enabled moveto will always use the 'uw' parameter as if it were typed inline ArrivalDist= - 1.0+, distance considered acceptable to have arrived at destination ArrivalDistX= - 1.0+, distance considered acceptable to have arrived at destination when using precisex ArrivalDistY= - 1.0+, distance considered acceptable to have arrived at destination when using precisey BreakOnAggro= - on or off, when enabled moveto will halt if aggro is gained \\(crossed swords in player window\\) BreakOnHit= - on or off, when enabled moveto will halt if user is being attacked DistBackup= - 1.0+, moveto will walk backwards to location if within this distance rather than spin to face destination first MoveToMod= - 0.0+, modifier applied to moveto arrivaldist UseBackward= - on or off, when enabled moveto will use backward movement if within DistBackup (applies to makecamp returns) UseWalk= - on or off, turn on walk when close to moveto location and camp return spot for precise movement ==== Circle ==== This section is for settings related to /circle Backward= - on or off, always run backwards instead of forwards when circling CCW= - on or off, always run in a ccw circle instead of default clockwise Drunken= - on or off, always use drunken circling RadiusSize= - 5.0+, default radius size of circle ==== StuckLogic ==== This section is for settings related to stucklogic StuckLogic= - on or off, if enabled stucklogic detects and attempts to auto-correct getting stuck while moving DistStuck= - 0.01+, distance needed to have moved or else stuck \\(compared against an average\\) PulseCheck= - 1+, amount of pulses used to calculate moving average PulseUnstuck= - 1+, number of pulses successfully moved forward to be considered unstuck TryToJump= - on or off, attempt to jump to help get unstuck TurnHalf= - on or off, if have turned halfway and failed to get unstuck, reset heading and try other direction instead ==== Window ==== ChatTop= - See EQ XML UI file settings ChatBottom= - See EQ XML UI file settings ChatLeft= - See EQ XML UI file settings ChatRight= - See EQ XML UI file settings Fades= - See EQ XML UI file settings Alpha= - See EQ XML UI file settings FadeToAlpha= - See EQ XML UI file settings Duration= - See EQ XML UI file settings Locked= - See EQ XML UI file settings Delay= - See EQ XML UI file settings BGType= - See EQ XML UI file settings BGTint.red= - See EQ XML UI file settings BGTint.green= - See EQ XML UI file settings BGTint.blue= - See EQ XML UI file settings FontSize= - 1 to 10, default font size for window WindowTitle= - custom user title for the window ==== yourserver.yourcharacter ==== if savebychar is on, this section will be created for every character The settings in this section are some of the above values that could be desired to vary on a char-by-char basis \\(including WINDOW settings\\) with the exception of one value: DisregardMe= true or false, if you want custom character values to load for some characters but this specific character to use the default values instead, set this to true and though a lot of entries will be written to this section, they will be ignored for this specific character === Verbosity === The verbosity system has been revamped to use bit flags for superior control of what messages will be displayed by the plugin. The older system has not been removed - if this is difficult to understand you may still use verbosity , fullverbosity and totalsilence as before. For those familiar with bit flags the flags table is below. If you have never worked with bit flags before, here is a brief summary of how to use the information below. Each subset of messages is assigned a numerical value. By adding the numerical values of the messages you want on together, you are able to customize each message that is shown or not shown. Examples: If you only wanted the plugin to display 'settings' and 'errors', you would look at the value of settings in the table below \\(8192\\) and the value of errors \\(4194304\\) and add them together to get \\(4202496\\) . By setting your verbosity flag to 4202496 \\(using the _set verbflags_ parameter or by saving the value in the INI file\\) the plugin would then filter out everything except messages related to changing settings or error messages. If you only wanted to display 'stick verbosity' messages and nothing else, you would look up the value in the table below \\(32\\) and set your flags to 32 without adding anything to it. If you want to display a large number of messages, you continue to add them all together and use the total. To display 'autopause', 'movepause', 'stick verbosity', 'stick fullverbosity', 'settings' and 'errors', you would add all their values from the below table \\(1 + 2 + 32 + 64 + 8192 + 4194304 = 4202595\\) and use that number for your flags setting \\(/stick set verbflags 4202595\\) Flags Table \u00b6 0 - total plugin silence 1 - autopause 2 - movepause, mousepause, breakonkb 4 - breakonmouse 8 - feign support 16 - hidehelp 32 - stick verbosity 64 - stick full verbosity 128 - moveto verbosity 256 - moveto full verbosity 512 - makecamp verbosity 1024 - makecamp full verbosity 2048 - circle verbosity 4096 - circle full verbosity 8192 - settings 16384 - file input / output 32768 - breakonwarp 65536 - breakonaggro 131072 - breakonhit 262144 - breakonsummon 524288 - breakongm 1048576 - breakongate 2097152 - stick always 4194304 - error messages 8388608 - arc randomization 16777216 - pause / unpause 2720 - prior 'verbosity' setting 11736390 - prior 'fullverbosity' setting 33554431 - all messages enabled Actual Messages \u00b6 Here is a list of exactly what messages are tied to each flag: 1 - autopause AutoPause halting movement... \\(when autopaused if autopause is enabled\\) Movement pausing due to self target... \\(if self targeted during a stick with autopause off\\) 2 - movepause, mousepause, breakonkb Current command ended from manual movement. Resuming previous command from movement pause. 4 - breakonmouse Current command ended from mouse movement. 8 - feign support Not standing as you are currently Feign Death 16 - hidehelp Hidehelp when turned on prevents the help output \\(seen in /stick help\\) from being automatically output if you input a command incorrectly 32 - stick verbosity You are now sticking to TargetName. You are no longer sticking to anything. You will now stick to every valid NPC target supplied. 64 - stick full verbosity Dir \\(ANY\\) Dist \\(10.0\\) Head \\(true\\) ID \\(31337\\) UW MB HEALER 128 - moveto verbosity Moveto off. Arrived at moveto location 256 - moveto full verbosity Moving to loc #, # Dist \\(10\\) Head \\(true\\) 512 - makecamp verbosity MakeCamp actived. Y \\(\\#\\) X \\(\\#\\) Radius \\(\\#\\) Leash \\(\\#\\) LeashLen \\(\\#\\) Min \\(\\#\\) Max \\(\\#\\) MakeCamp returning to within camp radius immediately MakeCamp returning to altcamp immediately. MakeCamp returning to altcamp immediately. Current camp now OFF. MakeCamp player ended due to player leaving/death Outside of leash length, breaking from current command 1024 - makecamp full verbosity Ended '/moveto' or '/makecamp return' because leash is on. 2048 - circle verbosity Circling radius \\(\\#\\) , center \\(\\#, \\#\\) OFF 4096 - circle full verbosity none at this time 8192 - settings Stick modifier changed to Mod \\(\\#\\) Mod% \\(\\# %\\) \\(from /stick mod \\#\\) Stick mod changed Mod \\(\\#\\) ModPercent \\(\\# %\\) \\(from stick inline -\\# or \\#%\\) Moveto distance mod changed to #. \\(from /moveto dist \\#\\) Option turned ON \\(from /command set option on, or /command toggle option\\) Option turned OFF \\(from /command set option off, or /command toggle option\\) Option set to # \\(from /command set option \\#\\) 16384 - file input / output Debug file created. Saved settings to C:\\yourpath\\MQ2MoveUtils.ini \\(from /command save\\) Loaded settings from C:\\yourpath\\MQ2MoveUtils.ini \\(from /command load\\) 32768 - breakonwarp Stick pausing until target back in BreakDist range... Stick ending from target warping out of BreakDist range. 65536 - breakonaggro BreakOnAggro's: Aggro gained during /moveto, Halting command... 131072 - breakonhit BreakOnHit's: Aggro gained during /moveto, Halting command... 262144 - breakonsummon WARNING Command ended from character summoned # distance in a pulse. WARNING Verify you are not being monitored and type /stick imsafe to allow command usage. 524288 - breakongm WARNING Plugin halted from GM Name in zone. GM Name has left the zone or turned invisible. Use /stick imsafe to allow command usage. 1048576 - breakongate Mob gating ended previous command. 2097152 - stick always Stick awaiting next valid NPC target... 4194304 - error messages \\(ERROR\\) /moveto or /circle command used with no parameter. \\(ERROR\\) Plugin was already paused. \\(ERROR\\) Plugin was not paused. \\(ERROR\\) /stick mod \\# supplied incorrectly. \\(ERROR\\) /moveto yloc Y was supplied incorrectly. \\(ERROR\\) /moveto xloc X was supplied incorrectly. \\(ERROR\\) SpawnID must be a positive numerical value. \\(ERROR\\) You cannot use yourself or your mount. \\(ERROR\\) You cannot stick hold to yourself. \\(ERROR\\) Incorrectly used /moveto dist \\# \\(ERROR\\) /makecamp radius was supplied incorrectly. \\(ERROR\\) You do not have an active camp. \\(ERROR\\) You cannot use this command with a player-camp active. \\(ERROR\\) You cannot use this command until you've established an altcamp location. \\(ERROR\\) Invalid player name and do not have a valid player target. \\(ERROR\\) You cannot makecamp yourself. \\(ERROR\\) Use /circle radius \\# to set radius. ERROR: Invalid 'option set' syntax \\( option \\) on\\|off\\|number ERROR: Not a valid command toggle \\( option \\) . ERROR: Not a valid command set option \\( option \\) . Error - Font must be between 1 and 10. ERROR: Invalid 'command set' parameter \\( option \\) \\(ERROR\\) You cannot stick to yourself! You must specify something to stick to! \\(ERROR\\) /moveto loc \\[z ] was supplied incorrectly. \\(ERROR\\) /makecamp loc was supplied incorrectly. \\(ERROR\\) Usage /circle loc other options \\(ERROR\\) Invalid SpawnID and do not have a valid target. \\(ERROR\\) /makecamp mindelay\\|maxdelay \\# was supplied incorrectly. 8388608 - arc randomization Arcs Randomized! Max: # Min: # 16777216 - pause / unpause PAUSED \\(from /command pause\\) RESUMED \\(from /command unpause\\)","title":"MQ2MoveUtils"},{"location":"plugins/community-plugins/mq2moveutils/#mq2moveutils","text":"","title":"MQ2MoveUtils"},{"location":"plugins/community-plugins/mq2moveutils/#general-details","text":"Version 9 of MQ2MoveUtils was a rewrite from the ground up by pms. The original goal behind this rewrite was to cleanup numerous logical errors and reduce the amount of code duplication that existed in previous releases. Once this rewrite was complete and functional, version 9 expanded including more enhancements and more extensive configuration. Numbered by release date, the current of this plugin is 16.0717. This plugin is no longer under active development and no new contributions have been made since 2011 by pms, with only one follow-up contribution in 2014 by Cr4zyb4rd. Others have continued to keep the offsets updated in the discussion thread linked below.","title":"General Details"},{"location":"plugins/community-plugins/mq2moveutils/#links","text":"Link to the latest stable source: [16-Nov-2016 th patch fix by trevyn] \\([https://macroquest.org/phpBB3/download/file.php?id=988](https://macroquest.org/phpBB3/download/file.php?id=988)\\) Link to older sources: MQ2MoveUtils v11.x Source Link to emulator version of the source that works with the December 19, 2008 client: [MoveUtils v11 for EMU by pms] \\([https://macroquest.org/phpBB3/viewtopic.php?p=155710\\#p155710](https://macroquest.org/phpBB3/viewtopic.php?p=155710#p155710)\\) Link to current discussion thread: [MQ2MoveUtils v16.x Thread] \\([https://macroquest.org/phpBB3/viewtopic.php?t=15909](https://macroquest.org/phpBB3/viewtopic.php?t=15909)\\)","title":"Links"},{"location":"plugins/community-plugins/mq2moveutils/#development-notes","text":"For the development history of this plugin, see the article MQ2MoveUtils 16.x Revision History For the chronicle of the entire MoveUtils plugin including the original development history, see the article MQ2MoveUtils:History","title":"Development Notes"},{"location":"plugins/community-plugins/mq2moveutils/#help","text":"Frequently Asked Questions Configuration Examples","title":"Help"},{"location":"plugins/community-plugins/mq2moveutils/#command-information","text":"","title":"Command Information"},{"location":"plugins/community-plugins/mq2moveutils/#main-plugin-commands","text":"These parameters can be used from any of the four main plugin commands \\('/stick', '/moveto', '/circle', and '/makecamp'\\) . For example purposes the most popular '/stick' command will be used. * /stick help settings Displays generic help information, and help for the command used The settings optional parameter displays help information for all plugin 'set' and 'toggle' commands * /stick debug Dumps the current values of all plugin variables to a debug INI file * /stick status all ChatWnd output for the status of the issuing command \\(stick in this example\\) The all optional parameter displays status output for all aspects of the plugin * /stick pause lock Pauses all aspects of the plugin The lock optional parameter prevents plugin from automatically unpausing under any circumstance other than user issuing unpause Note: This does not toggle * /stick unpause Resumes all aspects of the plugin Note: This does not toggle * /stick save | load Saves or load your current configuration settings using MQ2MoveUtils.ini * /stick imsafe BreakOnSummon and BreakOnGM have built-in protection disabling the ability to re-issue commands when triggered. This prevents macros from continuing to issue commands in a possibly unsafe situation The imsafe parameter allows command usage to resume * /stick min Minimizes custom user window similar to /mqmin * /stick clear Clears custom user window buffer similar to /mqclear * /stick verbflags Outputs current verbosity flags setting \\(this one displays even if totalsilence is enabled. too bad.\\) === Main Plugin Settings === These setting parameters can be used from any of the four main plugin commands. The following can be used with toggle or set name on | off. * /stick toggle name */stick set name* on</span> | off** name can be one of the following: * mpause | mousepause Pause current command if keyboard \\| mouse movement Resumes after a random amount of delay set with pausemindelay and pausemaxdelay below *Note: You may not* have a pause and corresponding break on at the same time (e.g. no mpause and breakonkb at the same time)** You may have opposing options different though \\(e.g. mousepause on and breakonkb on\\) * breakonkb | breakonmouse Break current command if keyboard \\| mouse movement *Note: You may not* have a pause and corresponding break on at the same time (e.g. no mpause and breakonkb at the same time)** You may have opposing options different though \\(e.g. mousepause on and breakonkb on\\) * autosave Automatically save settings to INI file when a toggle or set command is issued * savebychar Save server._Yourcharacter_ section of INI file for individual character settings * feign Enable Feign Death support, which waits for you to stand up manually before moving * lockpause Plugin will never automatically resume from pause until user issues an unpause * autopause Pause movement if casting spells \\(non-bard\\) , stunned, rooted, sitting, FD, or self targeted \\(non-hold\\) * autopauseoutput If enabled, will display ChatWnd output when autopause is halting movement Note: This bypasses totalsilence and must be configured individually * stucklogic If enabled, stucklogic automatically attempts to get unstuck if running into walls and large objects * trytojump If enabled, stucklogic also tries to jump to help get unstuck * turnhalf If enabled, stucklogic will reset heading and turn the other direction if it has rotated halfway without success * verbosity ChatWnd output for basic command information messages * fullverbosity ChatWnd output for more detailed information messages and output for more actions * totalsilence Silences most ChatWnd output except for critical information or user-requested messages * totalverbosity Enable display of every ChatWnd message in the plugin * hidehelp If enabled, the help output will not be displayed upon command failure \\(e.g. invalid parameters\\) * window If enabled, MoveUtils will output any messages to a user-placed custom UI window dedicated to the plugin * wineq By default, MoveUtils uses actual keypresses to control movement \\(regardless of heading settings\\) WinEQ2 has a bug where background sessions can have their alt keys and certain mouse buttons held down, causing movement to run in weird directions For Lavishsoft users who have not switched over to Innerspace, enabling wineq setting will use old-style emulated movement via ExecuteCmd() * breakontarget Break from stick if target changes \\(default behavior is switch over to sticking to new target\\) * breakonsummon Halts current command and disables ability to use any commands if summoned beyond summondist Note: Once this fires, you must use the imsafe parameter to unlock the plugin * breakongm Halts current command and disables ability to use any commands if visible GM enters the zone Note: Once this fires, you must use the imsafe parameter to unlock the plugin * breakonwarp Breaks from stick if target warps out of breakdist range \\(user set, see below\\) Note: This does not limit your initial stick range. You may /stick from across the zone * pauseonwarp Pauses stick if target warps out of breakdist range until they are back in range \\(user set, see below\\) Note: This does not limit your initial stick range. You may /stick from across the zone * breakongate Breaks from stick if target Gates. message occurs Note: if using stick id or stick hold, it will break based on the held target name * breakonaggro Breaks from moveto command if you are aggro to an NPC Note: This checks the player window for the crossed swords indicator * alwaysdrunk Use drunken by default when circling * alwaysbackwards Run backwards by default when circling * alwaysccw Circle in a counter-clockwise direction by default * nohottfront Allow for stick front to spin to front of the mob without Health of Target's Target Leader AA Note: By default stick front will not stay stuck to the front unless you are on the HoTT window * returnnoaggro Makecamp will auto-return to camp only if not aggro \\(checks crossed swords indicator\\) * returnnotlooting Makecamp will not auto-return to camp if character has an open loot corpse window * returnhavetarget Makecamp will auto-return to camp even if you have a target Note: By default, makecamp does not auto-return if you have any target * realtimeplayer Makecamp player will get realtime updates on player location, allowing for dynamic returns to players By default, makecamp player will return to a players last location when return begins and not get a new update until the return is complete The default behavior is a sort of ghetto MQ2AdvPath whereas enabling realtimeplayer will work more like an autofollow * leash If enabled, leash prevents moving beyond leashlength \\(user set value\\) * usewalk If enabled, plugin will switch to walking when closing in on moveto destination or camp return * strafewalk If enabled, plugin will switch to walking when within strafe range for all stick commands * randomize If enabled, stick behind and !front will use random arc values to position * delaystrafe If enabled, strafe-based movement \\(stick front, !front, behind, pin\\) will use a delay before moving **Note: This helps prevent endless circling when aggro is gained, or spinning when mobs quick-turn to cast spells** **Circling is one of the biggest signs that a player is using MoveUtils so it is recommended you ALWAYS leave this enabled** * autoUW If enabled, stick and moveto will use the uw parameter whenever underwater \\(look up and down at target\\) * usefleeing If enabled, stick front will not attempt to position in the front of a target that is fleeing * usescatter If enabled, camp returns will use scattered return locations instead of default behavior Note: Default behavior attempts to get back within camp radius The following option is unique /stick set heading true | loose | fast Changes plugin heading adjustments to use the specified type true: actual keypressing -- does not work with wineq=on loose: simulated incremental turning -- fast: instantly set heading The following 'set' commands require a numeric value, and can be used from any of the four main plugin commands. \\(stick used for example purposes only\\) * /stick set pulsecheck # Number of pulses used to calculate average movement distance in stucklogic Valid: 1 or higher * /stick set pulseunstuck # Number of pulses successfully moved forward before considered unstuck Valid: 1 or higher * /stick set diststuck #.## Minimum distance needed to move or else considered stuck \\(compares against pulse average\\) Valid: 0.01 or higher * /stick set campmindelay # Minimum delay before auto-returning to camp \\(in ms\\) Valid: 125 or higher * /stick set campmaxdelay # Maximum delay before auto-returning to camp \\(in ms\\) Valid: 125 more than campmindelay * /stick set pausemindelay # Minimum delay before resuming from mpause/mousepause \\(in ms\\) Valid: 125 or higher * /stick set pausemaxdelay # Maximum delay before resuming from mpause/mousepause \\(in ms\\) Valid: 125 more than pausemindelay * /stick set strafemindelay # Minimum delay before stick will strafe to move when delaystrafe is enabled \\(in ms\\) Valid: 125 or higher note: higher values are better. default of 1500 \\(1.5s\\) is recommended * /stick set strafemaxdelay # Maximum delay before stick will strafe to move when delaystrafe is enabled \\(in ms\\) Valid: 125 higher than strafemindelay note: higher values are better. default of 3000 \\(3s\\) is recommended * /stick set ydist #.## Acceptable distance to have \"arrived\" for precisey moveto Valid: 1.0 or higher * /stick set xdist #.## Acceptable distance to have \"arrived\" for precisex moveto Valid: 1.0 or higher * /stick set snapdist #.## Default distance to run past target before turning to snaproll Valid: 1.0 or higher * /stick set summondist #.## Distance character must be summoned in a single pulse for BreakOnSummon to fire Valid: 2.0 or higher * /stick set turnrate #.# Rate at which loose heading turns Valid: 1.0 to 100.0 * /stick set !frontarc #.# Angular distance arc for stick !front Valid: 1.1 to 260.0 * /stick set behindarc #.# Angular distance arc for stick behind Valid: 1.1 to 260.0 * /stick set breakdist #.## Distance to check for breakonwarp Valid: 1.0 or higher * /stick set campradius #.## Default camp radius and radius for active camp Valid: 5.0 or higher * /stick set circleradius #.## Default circle radius Valid: 5.0 or higher * /stick set leashlength #.# Default leash length and length for active leash Valid: greater or equal to camp radius * /stick set bearing #.# Bearing \\(direction from center\\) used for scatter camp Valid: any * /stick set scatsize #.## Radius size for scattering Valid: 1.0 or higher * /stick set scatdist #.## Distance from center of camp to scatter at Valid: 1.0 or higher * /stick set allowmove #.## Loose or True heading allow forward movement when reach this angular distance This is \"anti-orbit\" code to stop circling near close-range destinations Valid: 10.1 or higher * /stick set font # Custom user window font size Valid: 1 to 10 * /stick set verbflags # Current plugin verbosity flags Valid: see verbosity section near bottom of this wiki entry The following settings are command-specific, use the command in the example only * /stick set backupdist #.## Range that stick will walk backwards instead of turning to face target, if useback enabled Valid: 1.0 or higher * /moveto set backupdist #.## Range that moveto will walk backwards instead of turning to face destination, if useback enabled Valid: 1.0 or higher * /moveto set dist #.## Acceptable distance to have \"arrived\" for standard moveto and camp returns Valid: 1.0 or higher * /stick ** **toggle** **\\|** **set** ** alwaysUW ** **on** **\\|** **off** ** If enabled, stick will always adjust looking angle as if uw parameter was typed inline Note: this is not the same as autoUW , which only enables uw when actually underwater * /moveto ** **toggle** **\\|** **set** ** alwaysUW ** **on** **\\|** **off** ** If enabled, moveto will always adjust looking angle as if uw parameter was typed inline Note: this is not the same as autoUW , which only enables uw when actually underwater * /stick ** **toggle** **\\|** **set** ** breakonhit ** **on** **\\|** **off** ** Breaks from stick command if you are attacked by an NPC **Note: This parses chat for hits and misses. If you use the number only hitsmode then it will only parse for misses** * /moveto ** **toggle** **\\|** **set** ** breakonhit ** **on** **\\|** **off** ** Breaks from moveto command if you are attacked by an NPC **Note: This parses chat for hits and misses. If you use the number only hitsmode then it will only parse for misses** * /stick ** **toggle** **\\|** **set** ** useback ** **on** **\\|** **off** ** If enabled, stick will walk backwards to position itself when close to a target instead of turning to face it Note: This requires loose or truehead style heading adjustments, and does not work with fast heading * /moveto ** **toggle** **\\|** **set** ** useback ** **on** **\\|** **off** ** If enabled, moveto will walk backwards to position itself when close to a destination instead of turning to face it Note: This requires loose or truehead style heading adjustments, and does not work with fast heading This includes automatic and user-forced camp returns * /stick ** **toggle** **\\|** **set** ** loose | truehead ** **on** **\\|** **off** ** **/moveto toggle \\| set loose | truehead on \\| off ** **/circle toggle \\| set loose | truehead on \\| off ** Change the heading type for currently active \\(stick \\| moveto \\| circle\\) to this type of heading. If WinEQ is enabled, truehead will fail to switch. Once current command ends, heading type will return to previous.","title":"Main Plugin Commands"},{"location":"plugins/community-plugins/mq2moveutils/#stick","text":"The stick command sticks you to your target, so that if your target moves you will move along with it. There are many different parameters that cause this command to behave in different ways. You can combine any number of these parameters together inline to enable multiple options for the stick. * '''/stick stick with no parameters will stick you to your current target, using max melee range * /stick on | off turns stick on and off with default values on is a nearly-useless parameter and only included to support older macros or stickcmd=on in MQ2Melee to prevent MQ2Melee from doing anything undesired if you use /stick on in your macro, expect to be laughed at whole-heartedly * /stick id \\# sticks to the given spawn id uses id of your current target if no spawn id is given this allows you to continue sticking when your target changes, e.g. casting a heal on someone * /stick # | #% Stick at the specified distance or percentage * /stick -# Reduce current stick distance modifier by # * /stick moveback stick will back up to the value if the target gets closer, e.g. many targets in the rear pushing target too close to the tank * /stick loose stick using turn increments instead of instant heading adjustment * /stick truehead stick using actual keypress heading adjustments does not work if wineq option is enabled * /stick healer Healer sticking does not perform face adjustments to look at the target while in stick range This is good for keeping a healer close & sticking to another group member without having it turn to face the other character constantly as it moves Does not work with any strafe-style sticks \\(pin front !front behind behindonce snaproll\\) * /stick uw | underwater face angle will look up/down at the stick target * /stick hold stick to the current target even if your target changes * /stick behind stick to the rear of the target unless you are on HoTT. will spin in circles if you do not have HoTT and gain aggro \\(to prevent: USE DelayStrafe OPTION !!!\\) * /stick behindonce stick behind the target when first moving into position, only using enforcement after * /stick !front stick to target anywhere but the frontal arc, same considerations as behind apply \\(use DelayStrafe!\\) * /stick pin stick to the side of the target, same consideration as behind apply \\(use DelayStrafe!\\) * /stick front stick to the front arc of the target if you have HoTT and lose aggro you will not spin this will not work by default without HoTT * /stick \\(ANY STICK VALUES\\) always when current target is lost, will wait and then resume sticking using supplied values upon next NPC targeted does not work with stick hold or stick id * /stick snaproll ** **left** **\\|** **right** **\\|** **face** **\\|** **rear** ** runs in a straight line behind your target then turns to face left/right/front of target if optional parameter direction supplied rear is default ''the following inline configuration options are supported for one-time use: **/stick breakontarget | breakongate | breakonwarp | pauseonwarp | randomize | delaystrafe | useback | usefleeing | strafewalk | mindelay # | maxdelay # | backupdist # | breakdist # | snapdist # | !frontarc # | behindarc # </span>** Read the _set name _section for explanation of what these parameters do * /stick mod # | -# modify stick distance by the supplied amount \\(does not turn stick on\\) === /moveto === The moveto command will move you from your current location to a specific location or target. You can combine any number of these parameters together inline to enable multiple options for the moveto. * /moveto loc Y X Z moves to the specified location z is optional must be the first parameter * /moveto yloc Y | xloc X beeline to the Y or X supplied different from precisey/x in that this only considers a single axis must be the first parameter * /moveto id \\# moves to the supplied spawn id, or your current target if no id is given * /moveto off stop moving to the current target/location * /moveto loose moveto using more human-like heading adjustments * /moveto truehead moveto using actual keypress heading adjustments * /moveto \\(id** **\\|** **loc Y X** **\\[Z\\]\\) precisey | precisex moves to loc stopping when within x or y arrival dist values instead of both works with either id or loc * /moveto uw | underwater look angle up and down at destination * /moveto dist # sets value for how close to actual location is considered arrival does not turn moveto on permanently changes the value * /moveto id** _**spawnid**_ **\\|** **loc y x** **\\[z ] mdist # id sets value for how close to actual location is considered arrival allowed inline BEFORE id or AFTER loc y x z or id spawn id parameter permanently changes the value ''the following inline configuration options are supported for one-time use: **/moveto breakonaggro | breakonhit | usewalk | useback | backupdist # | ydist # | xdist #</span>** Read the _set name _section for explanation of what these parameters do","title":"/stick"},{"location":"plugins/community-plugins/mq2moveutils/#circle","text":"The circle command spins you in a circle. If you are like me, looking at this for the first time wondering what the point is, this is mainly for bards to use while circle kiting, but could equally be used for amusement. You can combine any number of these parameters together inline to enable multiple options for the circle. * /circle on ** **\\#** ** begin circling using your current location as the center with default radius if optional # parameter supplied, use # as the radius size must be first parameter * /circle off stop circling * /circle loc Y X begin circling using the specified location as the center must be first parameter * /circle drunken turn to complete the circle at random intervals * /circle clockwise | cw circle in a clockwise direction. \\(default\\) * /circle cw | counterclockwise | reverse circle in a counter-clockwise direction * /circle radius # sets the default size of the circle radius for use with loc y x since on # would have to be first param * /circle backward run backwards instead of forwards === /makecamp === The makecamp command will create a camp spot for you to return to after combat, or to establish boundries for your character to prevent them from moving beyond a certain radius. * /makecamp using makecamp with no parameters will set up a camp at your current location, using default values * /makecamp on ** **\\#** ** set up a camp at current location with default values if optional # parameter supplied, use # as camp radius size must be first parameter * /makecamp off disable current makecamp * /makecamp loc Y X set up a camp at the specified location must be first parameter * /makecamp player ** **name** ** set up a dynamic camp based on a certain pc name if in zone, or targeted pc if optional name not supplied * /makecamp leash toggles leashing to camp radius so character cannot leave boundary * /makecamp leash # sets how far beyond camp radius you can move before leashing \\(LeashLength\\) * /makecamp radius # sets the radius of the camp size does not turn camp on if supplied on its own * /makecamp mindelay # | maxdelay # sets the delay time before auto-returning to camp * /makecamp return forces a return to the camp radius immediately * /makecamp altreturn forces a return to the camp spot you had before your current one, or a camp that is now turned off ''the following inline configuration options are supported for one-time use: **/makecamp returnhavetarget | returnnoaggro | returnnotlooting | realtimeplayer | scatter | bearing # | scatsize # | scatdist #</span>** Read the _set name _section for explanation of what these parameters do === Other Plugin Commands === Less popular commands of MQ2MoveUtils * '''/calcangle Displays lots of basic numerical information related to moving such as Dist values, angular distance, 3D distance, melee range, stick range, speed multipliers This command is useful to help determine what to set plugin options such as arc values or AllowMove, backup dist, etc. * /rootme ** **off** ** roots the player in place, unable to move. this is not any form of actual debuff, just a plugin implementation of locking a character in place supplying the optional off parameter disables the root other commands will not function when rootme is active == Top-Level Objects ==","title":"/circle"},{"location":"plugins/community-plugins/mq2moveutils/#moveutils","text":"Members of this datatype relate to plugin settings and generic information Type Member Return Values Description string Command NONE STICK MOVETO MAKECAMP CIRCLE Displays the currently active command. MAKECAMP returns if a camp is setup but no other command is currently in use bool Stuck TRUE FALSE Displays true if plugin stucklogic has determined you are currently stuck bool Summoned TRUE FALSE Displays true if BreakOnSummon is enabled and has fired due to your character being summoned beyond breakonsummon distance bool StuckLogic TRUE FALSE Displays true if stucklogic is enabled bool Verbosity TRUE FALSE Displays true if verbosity is enabled bool FullVerbosity TRUE FALSE Displays true if fullverbosity is enabled bool TotalSilence TRUE FALSE Displays true if totalsilence is enabled bool Aggro TRUE FALSE Displays true if you are facing your target and your target is facing you bool TryToJump TRUE FALSE Displays true if stucklogic trytojump is enabled int PauseMinDelay 125 or greater Displays the min delay for mousepause and mpause to resume command in ms int PauseMaxDelay 125 or more greater than PauseMinDelay Displays the max delay for mousepause and mpause to resume command in ms int PulseCheck 1 or greater Displays the number of pulses used to average movement rate for stucklogic int PulseUnstuck 1 or greater Displays the number of pulses successfully moved forward after being stuck to be considered unstuck float DistStuck 0.01 or greater Displays the amount of distance needed to have moved \\(compared against pulse average\\) or else considered stuck by stucklogic float Version #.#### Displays the version number of the plugin bool MovePause TRUE FALSE Displays true if mpause \\(PauseKB\\) is enabled bool GM TRUE FALSE Displays true if BreakOnGM fired string To String Same as Command Same as Command === ${Stick} === Members of this datatype relate to the '/stick' command Type Member Return Values Description string Status OFF PAUSED ON Displays ON if any form of stick is active bool Active TRUE FALSE Displays true if any form of stick is active bool Broken TRUE FALSE Returns true if BreakOnHit event has halted stick prematurely float Distance #.## Current distance used by stick bool MoveBehind TRUE FALSE Displays true if stick behind is active bool MoveBack TRUE FALSE Displays true if moveback is active bool Loose TRUE FALSE Displays true if loose sticking is enabled bool Paused TRUE FALSE Displays true if plugin is paused bool Behind TRUE FALSE Displays true if currently behind target \\(regardless of _/stick behind_\\) , false if outside of stick dist or not behind bool Stopped TRUE FALSE Displays true if stick is within stick distance bool Pin TRUE FALSE Displays true if stick pin is active int StickTarget SpawnID Returns spawnid of stick target if stick id/hold used, else spawnid of current target, 0 if no target and id/hold not used string StickTargetName NONE DisplayedName Returns DisplayedName of stick target if stick id/hold used, else current target or NONE if no target and hold/id not used float DistMod - #.## Current stickdist modifier float DistModPercent #.## Current stickdist percent modifier bool Always TRUE FALSE Returns true if /stick always is active string To String Same as Status Same as Status === ${MoveTo} === Members of this datatype relate to the '/moveto' command Type Member Return Values Description bool Moving TRUE FALSE Displays true if moveto or camp return is active bool Stopped TRUE FALSE Displays true if the last moveto command completed successfully bool CampStopped TRUE FALSE Displays true if within moveto distance of makecamp Y X location bool UseWalk TRUE FALSE Returns true if UseWalk is enabled float ArrivalDist 1.00+ Acceptable arrival distance float ArrivalDistY 1.00+ Acceptable arrival distance for precisey float ArrivalDistX 1.00+ Acceptable arrival distance for precisex bool Broken TRUE FALSE Returns true if BreakOnAggro or BreakOnHit event have halted moveto prematurely string To String OFF PAUSED ON Displays ON if a moveto command is active === ${MakeCamp} === Members of this datatype relate to the '/makecamp' command Type Member Return Values Description string Status OFF PAUSED ON Displays status of MakeCamp command. AltCamp returns OFF bool Leash TRUE FALSE Displays true if leash is enabled float AnchorX 0.00 Location of current camp X anchor float AnchorY 0.00 Location of current camp Y anchor float LeashLength Greater than or equal to CampRadius Size of Leash Length float CampRadius 10.0+ Size of camp radius int MinDelay 125 or greater Displays the min delay for auto-returning to camp in ms int MaxDelay 125 or more greater than MinDelay Displays the max delay for auto-returning to camp in ms bool Returning TRUE FALSE Displays true if /makecamp return issued float AltAnchorX 0.00 Location of current altcamp X anchor float AltAnchorY 0.00 Location of current altcamp Y anchor float CampDist 0.00 Distance to camp anchor from your current location. Returns 0.00 if camp is disabled float AltCampDist 0.00 Distance to altcamp anchor from your current location. Returns 0.00 if altcamp not established float AltRadius 10.0+ Size of altcamp radius bool Scatter TRUE FALSE Displays true if camp scattering enabled bool ReturnNoAggro TRUE FALSE Displays true if ReturnNoAggro is enabled bool ReturnNotLooting TRUE FALSE Displays true if ReturnNotLooting is enabled bool ReturnHaveTarget TRUE FALSE Displays true if ReturnHaveTarget is enabled float Bearing 0.00 Bearing \\(heading\\) of camp scattering float ScatDist 1.0+ Distance from anchor to perform scatter float ScatSize 1.0+ Size of scattering radius string To String Same as Status Same as Status === ${Circle} === Members of this datatype relate to the '/circle' command Type Member Return Values Description string Status OFF PAUSED ON Returns ON if circling float CircleY 0.00 Location of circle center Y float CircleX 0.00 Location of circle center X bool Drunken TRUE FALSE Displays true if drunken string Rotation CW CCW Displays CCW if reverse circling string Direction FORWARDS BACKWARDS Movement direction of current circle bool Clockwise TRUE FALSE Displays false if reverse circling bool Backwards TRUE FALSE Displays true if movement direction backwards float Radius 5.00+ Radius size of circle string To String Same as Status Same as Status == Configuration == MQ2MoveUtils saves a configuration file to your root MQ2 folder: MQ2MoveUtils.ini","title":"${MoveUtils}"},{"location":"plugins/community-plugins/mq2moveutils/#default-ini-file","text":"[Defaults] AllowMove=32.0 AutoPause=on AutoPauseMsg=on AutoSave=on AutoUW=off BreakKeyboard=on BreakMouse=off BreakOnGM=on BreakOnSummon=off DistSummon=8.00 FeignSupport=off Heading=true HideHelp=off KeyboardPause=off MousePause=off LockPause=off PauseMinDelay=500 PauseMaxDelay=5000 SaveByChar=on TurnRate=14.00 UseWindow=off Verbosity=on FullVerbosity=on TotalSilence=off VerbosityFlags=33554431 WinEQ=off [Stick] AlwaysUW=off AwareNotAggro=off ArcBehind=45.0 ArcNotFront=135.0 BreakOnGate=on BreakOnHit=off BreakOnTarget=off BreakOnWarp=on PauseOnWarp=off DelayStrafe=on DistBackup=10.0 DistBreak=250.0 DistMod=0.0 DistMod%=1.0 DistSnaproll=10.0 RandomArc=off StrafeMinDelay=1500 StrafeMaxDelay=3000 UseBackward=on UseFleeing=on UseWalk=off [MakeCamp] CampRadius=40.00 MinDelay=500 MaxDelay=1500 RealtimePlayer=off ReturnHaveTarget=off ReturnNoAggro=off ReturnNotLooting=off UseLeash=off LeashLength=50.00 UseScatter=off Bearing=0.00 ScatDist=10.00 ScatSize=10.00 [MoveTo] AlwaysUW=off ArrivalDist=10.0 ArrivalDistX=10.0 ArrivalDistY=10.0 BreakOnAggro=off BreakOnHit=off DistBackup=30.0 MoveToMod=0.0 UseBackward=off UseWalk=on [Circle] Backward=off CCW=off Drunken=off RadiusSize=30.0 [StuckLogic] StuckLogic=on DistStuck=0.10 PulseCheck=6 PulseUnstuck=10 TryToJump=off TurnHalf=on [Window] ChatTop=10 ChatBottom=210 ChatLeft=10 ChatRight=410 Fades=0 Alpha=255 FadeToAlpha=255 Duration=500 Locked=0 Delay=2000 BGType=1 BGTint.red=255 BGTint.green=255 BGTint.blue=255 FontSize=2 WindowTitle=MoveUtils [yourserver.yourcharacter] DisregardMe=false AllowMove=32.0 ArcBehind=45.0 ArcNotFront=135.0 AutoSave=on AutoUW=off DistBreak=250.0 BreakOnGate=on BreakOnWarp=on PauseOnWarp=off LockPause=off DistSnaproll=10.0 FeignSupport=off Heading=true LeashLength=50.00 UseLeash=off UseWindow=off Verbosity=on FullVerbosity=on VerbosityFlags=33554431 CampRadius=40.00 RealtimePlayer=off UseScatter=off Bearing=0.00 ScatDist=10.00 ScatSize=10.00","title":"Default INI File"},{"location":"plugins/community-plugins/mq2moveutils/#ini-options","text":"Information on what the actual values can be and represent.","title":"INI options"},{"location":"plugins/community-plugins/mq2moveutils/#defaults","text":"This section is for default plugin settings AllowMove - 10.0+, anti-orbit setting for true/loose heading representing angular distance before moving forward AutoPause= - on or off, pauses command if casting spells, stunned, rooted, sitting, or self targeted AutoPauseMsg= - on or off, displays output when AutoPause halts movement AutoSave= - on or off, automatically save ini file when using 'toggle' or 'set' AutoUW= - on or off, automatically use 'uw' heading adjustments when character is under water BreakKeyboard= - on or off, break command from keyboard press BreakMouse= - on or off, break command from mouselook usage BreakOnGM= - on or off, break current command and prevent command usage if GM enters zone BreakOnSummon= - on or off, halt command and ability to use commands if summoned beyond certain distance DistSummon= - 2.0+, distance moved in a single pulse to trigger breakonsummon \\(if on\\) FeignSupport= - on or off, fd support waits for you to stand up manually before moving, if feigned Heading= = true or loose or fast, type of heading adjustments plugin will use (fast=instant, loose=gradual emulated shift, true=real kb presses) HideHelp= - on or off, never automatically display help output unless requested KeyboardPause= - on or off, pause command for a delay if keyboard press MousePause= - on or off, pause command for a delay if mouselook used LockPause= - on or off, plugin will not automatically unpause under any circumstance unless user unpauses PauseMinDelay= - 125+ \\(in ms\\) , minimum delay before resuming from mpause/mousepause PauseMaxDelay= - 125 above min \\(in ms\\) , maximum delay before resuming from mpause/mousepause SaveByChar= - on or off, save server.Charname section of ini file for individual character settings TurnRate= - 10.0 to 100.0, rate at which loose heading emulates turns UseWindow= - on or off, uses a custom user-placed window for all moveutils output if enabled Verbosity= - on or off, ChatWnd output for basic command info FullVerbosity= - on or off, ChatWnd output for enhanced plugin info TotalSilence= - on or off overrides verb/fullverb , silence ChatWnd output except for critical or user-requested messages VerbosityFlags= - see verbosity section of this wiki WinEQ= - on or off, when enabled moveutils uses feigned movement simulation due to the bug of WinEQ2 holding down alt keys and mouse buttons in background sessions note: if WinEQ is enabled, true heading is NOT possible ==== Stick ==== This section is for settings related to /stick AlwaysUW= - on or off, if enabled stick will always use the 'uw' parameter as if it were typed inline AwareNotAggro= - on or off, detect aggro loss if using stick front ArcBehind= - 5.1 to 259.9, user can configure angular distance arc that \"stick behind\" uses ArcNotFront= - 5.1 to 259.9, user can configure angular distance arc that \"stick !front\" uses BreakOnGate= - on or off, break from stick if \"target Gates.\" message occurs BreakOnHit= - on or off, when enabled stick will halt if user is being attacked BreakOnWarp= - on or off, break from stick if target warps beyond certain distance PauseOnWarp= - on or off, pause stick unless target gets back in range if warps beyond certain distance (break or pause, can't have both) DelayStrafe= - on or off, delay strafing movement when position adjustment required (good for stopping endless circling if aggro is gained) DistBackup= - 1.0+, if you are within this distance when stick turned on, stick will walk backwards rather than spin in a circle to move to target DistBreak= - 1.0+, distance mob moved in a single pulse to trigger breakonwarp \\(if on\\) DistMod= - 0.0+, adjust default/supplied stick distance by this amount DistMod%= - 0.0+ \\(represents a percentage\\) , adjust default/supplied stick distance by this percent DistSnaproll= - 1.0+, distance behind target snaproll will move before stopping and turning to face target RandomArc= - on or off, randomize min/max arc for any strafe-based stick (so you do not always stick to the exact same spot of a mob) StrafeMinDelay= - 125+ \\(in ms\\) , minimum delay before attempting to strafe if delaystrafe enabled StrafeMaxDelay= - 125 above min \\(in ms\\) , maximum delay before attempting to strafe if delaystrafe enabled UseBackward= - on or off, when enabled stick will walk backward rather than turn to face if within DistBackup of target UseFleeing= - on or off, when enabled \"stick front\" will not attempt to position in front of the mob when target begins to flee UseWalk= - on or off, when enabled stick uses walking when close to the target for precise movements and preventing overshooting ==== MakeCamp ==== This section is for settings related to /makecamp CampRadius= - 5.0+, default camp radius size MinDelay= - 125+ \\(in ms\\) , minimum delay before auto-returning to camp MaxDelay= - 125 above min \\(in ms\\) , maximum delay before auto-returning to camp RealtimePlayer= - on or off, when enabled \"makecamp player\" gets realtime location updates of player and adjusts returning on the fly ReturnHaveTarget= - on or off, if on Auto-Return to camp even if you have a target (default behavior is return only if no target) ReturnNoAggro= - on or off, Auto-Return to camp only if not aggro ReturnNotLooting= - on or off, do not Auto-Return to camp if looting a corpse UseLeash= - on or off, do not allow character to move beyond LeashLength LeashLength= - #.# >= camp radius, length of leash UseScatter= - on or off, use specific scatter values instead of random return location Bearing= - #, bearing of scatter ScatDist= - 1.0+, distance from camp center to perform scatter ScatSize= - 1.0+, radius size of scatter area ==== MoveTo ==== This section is for settings related to /moveto AlwaysUW= - on or off, if enabled moveto will always use the 'uw' parameter as if it were typed inline ArrivalDist= - 1.0+, distance considered acceptable to have arrived at destination ArrivalDistX= - 1.0+, distance considered acceptable to have arrived at destination when using precisex ArrivalDistY= - 1.0+, distance considered acceptable to have arrived at destination when using precisey BreakOnAggro= - on or off, when enabled moveto will halt if aggro is gained \\(crossed swords in player window\\) BreakOnHit= - on or off, when enabled moveto will halt if user is being attacked DistBackup= - 1.0+, moveto will walk backwards to location if within this distance rather than spin to face destination first MoveToMod= - 0.0+, modifier applied to moveto arrivaldist UseBackward= - on or off, when enabled moveto will use backward movement if within DistBackup (applies to makecamp returns) UseWalk= - on or off, turn on walk when close to moveto location and camp return spot for precise movement ==== Circle ==== This section is for settings related to /circle Backward= - on or off, always run backwards instead of forwards when circling CCW= - on or off, always run in a ccw circle instead of default clockwise Drunken= - on or off, always use drunken circling RadiusSize= - 5.0+, default radius size of circle ==== StuckLogic ==== This section is for settings related to stucklogic StuckLogic= - on or off, if enabled stucklogic detects and attempts to auto-correct getting stuck while moving DistStuck= - 0.01+, distance needed to have moved or else stuck \\(compared against an average\\) PulseCheck= - 1+, amount of pulses used to calculate moving average PulseUnstuck= - 1+, number of pulses successfully moved forward to be considered unstuck TryToJump= - on or off, attempt to jump to help get unstuck TurnHalf= - on or off, if have turned halfway and failed to get unstuck, reset heading and try other direction instead ==== Window ==== ChatTop= - See EQ XML UI file settings ChatBottom= - See EQ XML UI file settings ChatLeft= - See EQ XML UI file settings ChatRight= - See EQ XML UI file settings Fades= - See EQ XML UI file settings Alpha= - See EQ XML UI file settings FadeToAlpha= - See EQ XML UI file settings Duration= - See EQ XML UI file settings Locked= - See EQ XML UI file settings Delay= - See EQ XML UI file settings BGType= - See EQ XML UI file settings BGTint.red= - See EQ XML UI file settings BGTint.green= - See EQ XML UI file settings BGTint.blue= - See EQ XML UI file settings FontSize= - 1 to 10, default font size for window WindowTitle= - custom user title for the window ==== yourserver.yourcharacter ==== if savebychar is on, this section will be created for every character The settings in this section are some of the above values that could be desired to vary on a char-by-char basis \\(including WINDOW settings\\) with the exception of one value: DisregardMe= true or false, if you want custom character values to load for some characters but this specific character to use the default values instead, set this to true and though a lot of entries will be written to this section, they will be ignored for this specific character === Verbosity === The verbosity system has been revamped to use bit flags for superior control of what messages will be displayed by the plugin. The older system has not been removed - if this is difficult to understand you may still use verbosity , fullverbosity and totalsilence as before. For those familiar with bit flags the flags table is below. If you have never worked with bit flags before, here is a brief summary of how to use the information below. Each subset of messages is assigned a numerical value. By adding the numerical values of the messages you want on together, you are able to customize each message that is shown or not shown. Examples: If you only wanted the plugin to display 'settings' and 'errors', you would look at the value of settings in the table below \\(8192\\) and the value of errors \\(4194304\\) and add them together to get \\(4202496\\) . By setting your verbosity flag to 4202496 \\(using the _set verbflags_ parameter or by saving the value in the INI file\\) the plugin would then filter out everything except messages related to changing settings or error messages. If you only wanted to display 'stick verbosity' messages and nothing else, you would look up the value in the table below \\(32\\) and set your flags to 32 without adding anything to it. If you want to display a large number of messages, you continue to add them all together and use the total. To display 'autopause', 'movepause', 'stick verbosity', 'stick fullverbosity', 'settings' and 'errors', you would add all their values from the below table \\(1 + 2 + 32 + 64 + 8192 + 4194304 = 4202595\\) and use that number for your flags setting \\(/stick set verbflags 4202595\\)","title":"Defaults"},{"location":"plugins/community-plugins/mq2moveutils/#flags-table","text":"0 - total plugin silence 1 - autopause 2 - movepause, mousepause, breakonkb 4 - breakonmouse 8 - feign support 16 - hidehelp 32 - stick verbosity 64 - stick full verbosity 128 - moveto verbosity 256 - moveto full verbosity 512 - makecamp verbosity 1024 - makecamp full verbosity 2048 - circle verbosity 4096 - circle full verbosity 8192 - settings 16384 - file input / output 32768 - breakonwarp 65536 - breakonaggro 131072 - breakonhit 262144 - breakonsummon 524288 - breakongm 1048576 - breakongate 2097152 - stick always 4194304 - error messages 8388608 - arc randomization 16777216 - pause / unpause 2720 - prior 'verbosity' setting 11736390 - prior 'fullverbosity' setting 33554431 - all messages enabled","title":"Flags Table"},{"location":"plugins/community-plugins/mq2moveutils/#actual-messages","text":"Here is a list of exactly what messages are tied to each flag: 1 - autopause AutoPause halting movement... \\(when autopaused if autopause is enabled\\) Movement pausing due to self target... \\(if self targeted during a stick with autopause off\\) 2 - movepause, mousepause, breakonkb Current command ended from manual movement. Resuming previous command from movement pause. 4 - breakonmouse Current command ended from mouse movement. 8 - feign support Not standing as you are currently Feign Death 16 - hidehelp Hidehelp when turned on prevents the help output \\(seen in /stick help\\) from being automatically output if you input a command incorrectly 32 - stick verbosity You are now sticking to TargetName. You are no longer sticking to anything. You will now stick to every valid NPC target supplied. 64 - stick full verbosity Dir \\(ANY\\) Dist \\(10.0\\) Head \\(true\\) ID \\(31337\\) UW MB HEALER 128 - moveto verbosity Moveto off. Arrived at moveto location 256 - moveto full verbosity Moving to loc #, # Dist \\(10\\) Head \\(true\\) 512 - makecamp verbosity MakeCamp actived. Y \\(\\#\\) X \\(\\#\\) Radius \\(\\#\\) Leash \\(\\#\\) LeashLen \\(\\#\\) Min \\(\\#\\) Max \\(\\#\\) MakeCamp returning to within camp radius immediately MakeCamp returning to altcamp immediately. MakeCamp returning to altcamp immediately. Current camp now OFF. MakeCamp player ended due to player leaving/death Outside of leash length, breaking from current command 1024 - makecamp full verbosity Ended '/moveto' or '/makecamp return' because leash is on. 2048 - circle verbosity Circling radius \\(\\#\\) , center \\(\\#, \\#\\) OFF 4096 - circle full verbosity none at this time 8192 - settings Stick modifier changed to Mod \\(\\#\\) Mod% \\(\\# %\\) \\(from /stick mod \\#\\) Stick mod changed Mod \\(\\#\\) ModPercent \\(\\# %\\) \\(from stick inline -\\# or \\#%\\) Moveto distance mod changed to #. \\(from /moveto dist \\#\\) Option turned ON \\(from /command set option on, or /command toggle option\\) Option turned OFF \\(from /command set option off, or /command toggle option\\) Option set to # \\(from /command set option \\#\\) 16384 - file input / output Debug file created. Saved settings to C:\\yourpath\\MQ2MoveUtils.ini \\(from /command save\\) Loaded settings from C:\\yourpath\\MQ2MoveUtils.ini \\(from /command load\\) 32768 - breakonwarp Stick pausing until target back in BreakDist range... Stick ending from target warping out of BreakDist range. 65536 - breakonaggro BreakOnAggro's: Aggro gained during /moveto, Halting command... 131072 - breakonhit BreakOnHit's: Aggro gained during /moveto, Halting command... 262144 - breakonsummon WARNING Command ended from character summoned # distance in a pulse. WARNING Verify you are not being monitored and type /stick imsafe to allow command usage. 524288 - breakongm WARNING Plugin halted from GM Name in zone. GM Name has left the zone or turned invisible. Use /stick imsafe to allow command usage. 1048576 - breakongate Mob gating ended previous command. 2097152 - stick always Stick awaiting next valid NPC target... 4194304 - error messages \\(ERROR\\) /moveto or /circle command used with no parameter. \\(ERROR\\) Plugin was already paused. \\(ERROR\\) Plugin was not paused. \\(ERROR\\) /stick mod \\# supplied incorrectly. \\(ERROR\\) /moveto yloc Y was supplied incorrectly. \\(ERROR\\) /moveto xloc X was supplied incorrectly. \\(ERROR\\) SpawnID must be a positive numerical value. \\(ERROR\\) You cannot use yourself or your mount. \\(ERROR\\) You cannot stick hold to yourself. \\(ERROR\\) Incorrectly used /moveto dist \\# \\(ERROR\\) /makecamp radius was supplied incorrectly. \\(ERROR\\) You do not have an active camp. \\(ERROR\\) You cannot use this command with a player-camp active. \\(ERROR\\) You cannot use this command until you've established an altcamp location. \\(ERROR\\) Invalid player name and do not have a valid player target. \\(ERROR\\) You cannot makecamp yourself. \\(ERROR\\) Use /circle radius \\# to set radius. ERROR: Invalid 'option set' syntax \\( option \\) on\\|off\\|number ERROR: Not a valid command toggle \\( option \\) . ERROR: Not a valid command set option \\( option \\) . Error - Font must be between 1 and 10. ERROR: Invalid 'command set' parameter \\( option \\) \\(ERROR\\) You cannot stick to yourself! You must specify something to stick to! \\(ERROR\\) /moveto loc \\[z ] was supplied incorrectly. \\(ERROR\\) /makecamp loc was supplied incorrectly. \\(ERROR\\) Usage /circle loc other options \\(ERROR\\) Invalid SpawnID and do not have a valid target. \\(ERROR\\) /makecamp mindelay\\|maxdelay \\# was supplied incorrectly. 8388608 - arc randomization Arcs Randomized! Max: # Min: # 16777216 - pause / unpause PAUSED \\(from /command pause\\) RESUMED \\(from /command unpause\\)","title":"Actual Messages"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-history/","text":"MQ2MoveUtils:History \u00b6 The tonio era \u00b6 The first version of MQ2MoveUtils was developed by tonio and released May 5, 2004. See: Original MQ2MoveUtils Discussion History The conception of this plugin was inspired by the /circle command, developed by Easar to be included in the earliest versions of MQ2Twist . For all intents and purposes Easar should be considered the inspiration for this entire project. See: Easar's contribution to MQ2Twist / MQ2Twister \\(abandoned\\) tonio did an amazing job enhancing the early versions of this plugin with features including: breaking from mob gate, breaking from mob warp with distance configuration, autopause to prevent casting interrupts, stick behind, stick id, mpause, stick loose, and stick hold Contributors to the enhancement of MQ2MoveUtils after tonio stopped supporting it include: Bombadil \\(_Binds for mpause_\\) , onetimehero \\(_noface option_\\) , Lax, Cr4zyb4rd \\(_TLO's & /stick pin_\\) , and rswiders \\(_/moveto_\\) Quagmire offered full support for the plugin for a brief period in 2005, adding many bug fixes, code cleanup, and features such as: /stick behindonce, walk/run switching, mount checking, and snare checking. See: Quagmire's MoveUtils === The Outlander era === Outlander took over supporting MQ2MoveUtils on July 9, 2005. See: Outlander's MoveUtils Outlander's first big contributions to MQ2MoveUtils were his stuck logic, which started off as an include file , and the /makecamp command, which created a radius that you could use to prevent your character from moving out of range to chase down mobs or potentially gain unwanted aggro. Over time other additions included: stick !front, HoTT awareness, and more TLO's Contributors to the enhancement of MQ2MoveUtils during Outlander's support include: dont_know_at_all \\(_bug fixes_\\) , ieatacid \\(_bug fixes_\\) , somelamedruid \\(_bug fixes_\\) , s0rcier \\(_walk mode_\\) , deadchicken \\(_loose moveto_\\) , bertbert \\(_/followpath_\\) , Ralindal \\(_bug fixes_\\) , and rswiders \\(_many enhancements to /circle_\\) . == Development History == tonio \u00b6 Version 2004.05.06: /stick now breaks when mob gates Version 2004.05.07: /stick pause|unpause added automatic /stick pause on casting /stick will break on a large enough sudden distance increment \\(defaults to 250 units\\) INI file support: A default ini file is created if it doesn't exist. Section Defaults contains global defaults. New sections can be added with character names as titles to override those defaults, for example: AutoPause on/off enables/disables the automatic pause on cast feature \\(regardless of this setting, bards won't pause /stick for casting... it's unneeded, and besides, that'd mean we can't sing while /stick'ing :\\) ). BreakOnWarp on/off enables/disables the automatic break on large distance increment BreakDist sets how large a sudden distance increment is required for a break BreakOnGate on/off enables/disables the monitoring chat for \"targetname Gates.\" feature. Version 2004.05.14: /stick pause changed \\(now normal movement is possible w/o breaking stick while paused\\) /stick hold added \\(stores your current target, so that you follow it even if you lose or change your target later\\) text output added to /stick /circle changed: if no center is given, current loc is taken to be the outside of the circle, not the center (so you start angling immediately, instead of going straight then suddenly turning) Version 2004.05.16: slight bug fix with /stick added /cirlce drunken: use \"drunken\" instead of \"on\" to have /circle update heading less often for a more human-controlled look Version 2004.05.17: coupla bug fixes Version 2004.05.20: /stick behind added, tries to move behind a mob while sticking Version 2004.06.14: /stick moveback added, tries to stay at exactly the stick distance /stick mpause added, causes manual movement to pause stick instead of breaking /stick loose added, checks for distance/angle less often, to give a more human-controlled appearace Added \"Verbosity\" to ini file \\(set to 0 for no messages, 1 for normal messages\\) Added \"Stick\" TLO, of type \"stick\", with members: Status \\(ON, OFF, PAUSED\\) , Active \\(bool\\) , Distance \\(float\\) , MoveBehind \\(bool\\) , MoveBack \\(bool\\) , MovePause \\(bool\\) , Loose \\(bool\\) , and Paused \\(bool\\) Version 2004.06.21: /stick uw added, for underwater /stick'ing, looks up/down to follow target * this option should eventually disappear and become automatic... but as of now, mq isn't correctly reporting underwater status /stick - and /stick % added, to modify stick distance \\(useful when a wrong melee range is reported\\) /stick loose fixed /circle drunken upgraded \\(uses slow turning\\) New version 2004.06.23: bug fix \\(pause/unpause were clearing settings\\) 2004.11.08: \\(Lax\\) Replaced the code shown here with the correct version as supplied by Bombadil. Note that InitializePlugin is called at load time, REGARDLESS of the state of EverQuest. In other words, CEverQuest might not even EXIST at the time of loading. Consequently, this plugin tried to initialize things too early and the bug was exposed by WinEQ 2.0 as a crash. Enjoy. === Quagmire === New version 2005.03.22: by Quagmire Cleaned up initialization slightly /stick behindonce added, moves you behind once then switches to normal stick /stick hold breaks when the target changes \"state\" \\(ie: npc to corpse\\) reduced the rate of calls to MQ2Globals::ExecuteCmd automatically switches walk/run mode when close to the target automatic pausing when sitting, stunned or have yourself targeted when the target is close and directly behind you, will back up instead of spinning and moving forward (helps when you overshoot the target) Updated 2005.03.24: Merged in Cr4zyb4rd's Pin code Switched run/walk state reading to a new memory location Updated 2005.04.20: Attempt to fix an infrequent crash. Updated 2005.05.25: Fixed a null pointer crash when on a mount. Updated 2005.06.05: Added automatic detection of being snared, won't go into walk mode. Stick / Pin won't kick in until you're close to the target. Several cleanups. Updated 2005.06.26: Merged in /MoveTo code === Outlander === * Corrections and additions 2005.07.08 Added Version Number at top of help commands Added /stick id functionality Added break MoveTo functionality so that when you manually move MoveTo is turned off * Corrections and additions 2005.07.14 Added break Circle functionality so that when you manually move Circle is turned off Added MoveStuck logic to MoveTo and Circle commands Adjusted the stuck distance to take into account the SpeedMultiplier currently on the character. Adjusted the the MoveStuck stuckDist to be \u2153 of what it normally is if your under water. * Corrections 2005.07.19 Modified /stick movestuck logic when you are close to mob and are switched to walk mode, this was causing movestuck logic to be executed incorrectly. * Corrections 2005.09.19 Changed IsBardClass function to use GetCharInfo2 \\) instead of the old GetCharInfo\\( function. * Corrections 2005.09.21 Changed movestuck logic for underwater to not kick in till you are not moving at all; pulse average = 0. * Addition 2005.09.26 Added new option: /stick !front This option will keep you not in front of the mob, so off to the side or behind. This option should reduce the amount your toon moves around during a fight with a mob when you are not the target as your will only adjust your position if you you are in the front 180 degrees of the mob, as long as you are in the behind 180 degrees you will not move around just because the mob shifts. * Addition 2005.09.28 Added HoTT check to stick, if sticking to a MOB or PC and you are their target then if you are doing stick !front, behind, or pin you just do a a normal stick until you are not the HoTT target then you go back to what ever option you had before. * Corrections 2005.09.28 Corrected problem with IsBardClass function, thanks BardOMatic and DKAA * Addition 2005.10.22 Added /makecamp functionality Added /stick help, /circle help, /moveto help, and of course /makecamp help Added some commands to all the functions Changed the way some commands are parsed and changed the help command look * Corrections 2005.10.23 /makecamp is now a toggle for on/off with mpause enabled any movement keys would spew a \"no longer sticking to anything\" message this has been fixed. mpause option is now a toggle so if it was on doing /makecamp mpause will turn it off INI load and save were reversed, this is now corrected maxdelay variable being loaded from mindelay INI value, this has been corrected * Corrections 2005.12.13 - based off VZMule's post Structure changes in last patch corrected in this version * Corrections 2005.12.19 - based off somelamedruid's post added stickOn=true; to /stick hold and /stick id command parsers * Additions 2005.12.22 Added OnRemoveSpawn sub to help with crashes as posted by DKAA Added /moveto id functionality as discussed on boards. Updated 2006.02.27 updated 2006.02.28 Updated 2006.03.01 Updated 2006.03.13 Updated 2006.03.16 Updated 2006.04.04 Updated 2006.04.23 Updated 2006.04.24 Updated 2007.05.10 by rswiders \\(added clockwise/counterclockwise circling; added forward and kiting \\(backwards\\) facing circling) Updated 2007.05.18 by deadchicken \\(added loose to /moveto\\) * Additions 2007.5.18 Added loose option to /moveto to be similar to /stick loose and use gFaceAngle instead of directly setting heading. This also just turns without moving if angle is to great to avoid circling moveto location. Fixed some 180deg turns which were += 265 instead of += 256. Updated 2007.08.11 by bertbert \\(added /followpath and /fp commands\\) * 2007.08.11 - Added fp command to go to a person or location in a zone * Missed a return in new TLO StickTarget member * Added TLO object StickTarget * MoveTo, and Stick will stand you up if sitting * Changed a message display routine so it would not give you an incorrect break stick message * Fixed the CTD bug for the third time. * Fixed the CTD bug \\(again\\) * Opened the StickCommand, CircleCommand, MoveToCommand, and MakeCampCommand functions for other plugins for Sorcier * Added StandUp on /stick for A_Druid_00 \\(thanks Sorcier, I just copied your StandUp\\(\\) code!) * Fixed a CTD bug in the command processor for Stick. *Added in Sorcier's run/walk logic * Corrected a bug with /stick if your target was further away than your BreakDist from the MQ2MoveUtils.ini file then /stick would think your target had warped and would not stick. * Added some code to the bottom of the /stick command to account for this issue. * Added save of mPause setting so you can save your preference for mPause. * Changes Reduced Sensitivity on MoveStuck Logic by default from 0.8 to 0.1 * Added Delay to resume movement after manually moving with mpause enabled. While each command has mindelay and maxdelay they all set the same variables so this only needs to be done once. * Added checks to stick, moveto, and circle to not kick in the MoveStuck Logic if you are stunned","title":"MQ2MoveUtils:History"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-history/#mq2moveutilshistory","text":"","title":"MQ2MoveUtils:History"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-history/#the-tonio-era","text":"The first version of MQ2MoveUtils was developed by tonio and released May 5, 2004. See: Original MQ2MoveUtils Discussion History The conception of this plugin was inspired by the /circle command, developed by Easar to be included in the earliest versions of MQ2Twist . For all intents and purposes Easar should be considered the inspiration for this entire project. See: Easar's contribution to MQ2Twist / MQ2Twister \\(abandoned\\) tonio did an amazing job enhancing the early versions of this plugin with features including: breaking from mob gate, breaking from mob warp with distance configuration, autopause to prevent casting interrupts, stick behind, stick id, mpause, stick loose, and stick hold Contributors to the enhancement of MQ2MoveUtils after tonio stopped supporting it include: Bombadil \\(_Binds for mpause_\\) , onetimehero \\(_noface option_\\) , Lax, Cr4zyb4rd \\(_TLO's & /stick pin_\\) , and rswiders \\(_/moveto_\\) Quagmire offered full support for the plugin for a brief period in 2005, adding many bug fixes, code cleanup, and features such as: /stick behindonce, walk/run switching, mount checking, and snare checking. See: Quagmire's MoveUtils === The Outlander era === Outlander took over supporting MQ2MoveUtils on July 9, 2005. See: Outlander's MoveUtils Outlander's first big contributions to MQ2MoveUtils were his stuck logic, which started off as an include file , and the /makecamp command, which created a radius that you could use to prevent your character from moving out of range to chase down mobs or potentially gain unwanted aggro. Over time other additions included: stick !front, HoTT awareness, and more TLO's Contributors to the enhancement of MQ2MoveUtils during Outlander's support include: dont_know_at_all \\(_bug fixes_\\) , ieatacid \\(_bug fixes_\\) , somelamedruid \\(_bug fixes_\\) , s0rcier \\(_walk mode_\\) , deadchicken \\(_loose moveto_\\) , bertbert \\(_/followpath_\\) , Ralindal \\(_bug fixes_\\) , and rswiders \\(_many enhancements to /circle_\\) . == Development History ==","title":"The tonio era"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-history/#tonio","text":"Version 2004.05.06: /stick now breaks when mob gates Version 2004.05.07: /stick pause|unpause added automatic /stick pause on casting /stick will break on a large enough sudden distance increment \\(defaults to 250 units\\) INI file support: A default ini file is created if it doesn't exist. Section Defaults contains global defaults. New sections can be added with character names as titles to override those defaults, for example: AutoPause on/off enables/disables the automatic pause on cast feature \\(regardless of this setting, bards won't pause /stick for casting... it's unneeded, and besides, that'd mean we can't sing while /stick'ing :\\) ). BreakOnWarp on/off enables/disables the automatic break on large distance increment BreakDist sets how large a sudden distance increment is required for a break BreakOnGate on/off enables/disables the monitoring chat for \"targetname Gates.\" feature. Version 2004.05.14: /stick pause changed \\(now normal movement is possible w/o breaking stick while paused\\) /stick hold added \\(stores your current target, so that you follow it even if you lose or change your target later\\) text output added to /stick /circle changed: if no center is given, current loc is taken to be the outside of the circle, not the center (so you start angling immediately, instead of going straight then suddenly turning) Version 2004.05.16: slight bug fix with /stick added /cirlce drunken: use \"drunken\" instead of \"on\" to have /circle update heading less often for a more human-controlled look Version 2004.05.17: coupla bug fixes Version 2004.05.20: /stick behind added, tries to move behind a mob while sticking Version 2004.06.14: /stick moveback added, tries to stay at exactly the stick distance /stick mpause added, causes manual movement to pause stick instead of breaking /stick loose added, checks for distance/angle less often, to give a more human-controlled appearace Added \"Verbosity\" to ini file \\(set to 0 for no messages, 1 for normal messages\\) Added \"Stick\" TLO, of type \"stick\", with members: Status \\(ON, OFF, PAUSED\\) , Active \\(bool\\) , Distance \\(float\\) , MoveBehind \\(bool\\) , MoveBack \\(bool\\) , MovePause \\(bool\\) , Loose \\(bool\\) , and Paused \\(bool\\) Version 2004.06.21: /stick uw added, for underwater /stick'ing, looks up/down to follow target * this option should eventually disappear and become automatic... but as of now, mq isn't correctly reporting underwater status /stick - and /stick % added, to modify stick distance \\(useful when a wrong melee range is reported\\) /stick loose fixed /circle drunken upgraded \\(uses slow turning\\) New version 2004.06.23: bug fix \\(pause/unpause were clearing settings\\) 2004.11.08: \\(Lax\\) Replaced the code shown here with the correct version as supplied by Bombadil. Note that InitializePlugin is called at load time, REGARDLESS of the state of EverQuest. In other words, CEverQuest might not even EXIST at the time of loading. Consequently, this plugin tried to initialize things too early and the bug was exposed by WinEQ 2.0 as a crash. Enjoy. === Quagmire === New version 2005.03.22: by Quagmire Cleaned up initialization slightly /stick behindonce added, moves you behind once then switches to normal stick /stick hold breaks when the target changes \"state\" \\(ie: npc to corpse\\) reduced the rate of calls to MQ2Globals::ExecuteCmd automatically switches walk/run mode when close to the target automatic pausing when sitting, stunned or have yourself targeted when the target is close and directly behind you, will back up instead of spinning and moving forward (helps when you overshoot the target) Updated 2005.03.24: Merged in Cr4zyb4rd's Pin code Switched run/walk state reading to a new memory location Updated 2005.04.20: Attempt to fix an infrequent crash. Updated 2005.05.25: Fixed a null pointer crash when on a mount. Updated 2005.06.05: Added automatic detection of being snared, won't go into walk mode. Stick / Pin won't kick in until you're close to the target. Several cleanups. Updated 2005.06.26: Merged in /MoveTo code === Outlander === * Corrections and additions 2005.07.08 Added Version Number at top of help commands Added /stick id functionality Added break MoveTo functionality so that when you manually move MoveTo is turned off * Corrections and additions 2005.07.14 Added break Circle functionality so that when you manually move Circle is turned off Added MoveStuck logic to MoveTo and Circle commands Adjusted the stuck distance to take into account the SpeedMultiplier currently on the character. Adjusted the the MoveStuck stuckDist to be \u2153 of what it normally is if your under water. * Corrections 2005.07.19 Modified /stick movestuck logic when you are close to mob and are switched to walk mode, this was causing movestuck logic to be executed incorrectly. * Corrections 2005.09.19 Changed IsBardClass function to use GetCharInfo2 \\) instead of the old GetCharInfo\\( function. * Corrections 2005.09.21 Changed movestuck logic for underwater to not kick in till you are not moving at all; pulse average = 0. * Addition 2005.09.26 Added new option: /stick !front This option will keep you not in front of the mob, so off to the side or behind. This option should reduce the amount your toon moves around during a fight with a mob when you are not the target as your will only adjust your position if you you are in the front 180 degrees of the mob, as long as you are in the behind 180 degrees you will not move around just because the mob shifts. * Addition 2005.09.28 Added HoTT check to stick, if sticking to a MOB or PC and you are their target then if you are doing stick !front, behind, or pin you just do a a normal stick until you are not the HoTT target then you go back to what ever option you had before. * Corrections 2005.09.28 Corrected problem with IsBardClass function, thanks BardOMatic and DKAA * Addition 2005.10.22 Added /makecamp functionality Added /stick help, /circle help, /moveto help, and of course /makecamp help Added some commands to all the functions Changed the way some commands are parsed and changed the help command look * Corrections 2005.10.23 /makecamp is now a toggle for on/off with mpause enabled any movement keys would spew a \"no longer sticking to anything\" message this has been fixed. mpause option is now a toggle so if it was on doing /makecamp mpause will turn it off INI load and save were reversed, this is now corrected maxdelay variable being loaded from mindelay INI value, this has been corrected * Corrections 2005.12.13 - based off VZMule's post Structure changes in last patch corrected in this version * Corrections 2005.12.19 - based off somelamedruid's post added stickOn=true; to /stick hold and /stick id command parsers * Additions 2005.12.22 Added OnRemoveSpawn sub to help with crashes as posted by DKAA Added /moveto id functionality as discussed on boards. Updated 2006.02.27 updated 2006.02.28 Updated 2006.03.01 Updated 2006.03.13 Updated 2006.03.16 Updated 2006.04.04 Updated 2006.04.23 Updated 2006.04.24 Updated 2007.05.10 by rswiders \\(added clockwise/counterclockwise circling; added forward and kiting \\(backwards\\) facing circling) Updated 2007.05.18 by deadchicken \\(added loose to /moveto\\) * Additions 2007.5.18 Added loose option to /moveto to be similar to /stick loose and use gFaceAngle instead of directly setting heading. This also just turns without moving if angle is to great to avoid circling moveto location. Fixed some 180deg turns which were += 265 instead of += 256. Updated 2007.08.11 by bertbert \\(added /followpath and /fp commands\\) * 2007.08.11 - Added fp command to go to a person or location in a zone * Missed a return in new TLO StickTarget member * Added TLO object StickTarget * MoveTo, and Stick will stand you up if sitting * Changed a message display routine so it would not give you an incorrect break stick message * Fixed the CTD bug for the third time. * Fixed the CTD bug \\(again\\) * Opened the StickCommand, CircleCommand, MoveToCommand, and MakeCampCommand functions for other plugins for Sorcier * Added StandUp on /stick for A_Druid_00 \\(thanks Sorcier, I just copied your StandUp\\(\\) code!) * Fixed a CTD bug in the command processor for Stick. *Added in Sorcier's run/walk logic * Corrected a bug with /stick if your target was further away than your BreakDist from the MQ2MoveUtils.ini file then /stick would think your target had warped and would not stick. * Added some code to the bottom of the /stick command to account for this issue. * Added save of mPause setting so you can save your preference for mPause. * Changes Reduced Sensitivity on MoveStuck Logic by default from 0.8 to 0.1 * Added Delay to resume movement after manually moving with mpause enabled. While each command has mindelay and maxdelay they all set the same variables so this only needs to be done once. * Added checks to stick, moveto, and circle to not kick in the MoveStuck Logic if you are stunned","title":"tonio"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/","text":"MQ2MoveUtils \\(old\\) \u00b6 Description \u00b6 For updated plugin information see MQ2MoveUtils:v9. The information below applies to the 7.0518 and earlier versions of MQ2MoveUtils. MQ2MoveUtils is a very popular plugin which assists with most aspects of moving around within EQ. It has been worked on by a number of developers over the years \\(tonio, CyberTech, Quagmire and Outlander\\) . For the history of this plugin and development notes please see MQ2MoveUtils:History . The old forum thread for MQ2MoveUtils can be found here , in the VIP forums. Source for the version 7.0 MQ2MoveUtils is available. Features \u00b6 The main features of MQ2MoveUtils are as follows: Stick: This is the main use for this plugin and allows you to \"stick\" a certain distance from your target. It can be set to always stick behind the target, or always in front if you're tanking. MoveTo: Move to a certain point or target. This has some built-in logic that will allow it to move around obstacles. MakeCamp: You can set a spot as a \"camp\", so that you can return to it if you get too far away, or after combat, etc. Circle: Run in a circle. Commands \u00b6 /stick \u00b6 /stick on\\|off Turn stick on and off. The default for /stick is to stick at max melee range. /stick hold Sticks to current target even if you lose/change target /stick [] Stick at units to your target /stick - Subtract the dist used from the current stick distance \\(ie. it will put you units closer to your target\\) /stick % Stick at of max melee range from target. Eg. if max melee range is 20, then /stick 50% will stick you at 10 range /stick behind Sticks you behind your target. *Note: Be careful with this option if you do not have the Health of Target's Target Leadership Ability. If you have HoTT active and you are the Target of your Target, then you will not try to get behind. However if you do not have this ability and you gain aggro, you will spin around very quickly as you try and get behind your target while it continues to face you.* /stick behindonce Get behind the target once then convert to a regular stick /stick pin Sticks you to the side of the target, same considerations as /stick behind apply /stick !front Sticks you anywhere but in front of the target, will only reposition you if you would be in front. Same considerations apply to this as the \"behind\" and \"pin\" options /stick moveback Moveback will back your toon up to the current value, keeping you at a consistant distance from your target /stick loose Uses a time delay so adjustments to your position do not occur as frequently, simulating a more human-like control /stick uw This changes the facing of your toon, and is very useful under water, where you will try and follow the Z coordinate of the spawn you are facing /stick id Allows you to stick to a specific spawn ID /stick mpause By enabling mpause, manually moving your toon will not break stick and will rather put it on hold. When you are done manually moving, the /stick command will once again kick in and you will continue following the same target as before /stick pause\\|unpause Pause and unpause the stick command /stick save\\|load Some settings are stored in the INI file. This allows you to save your current preferences to the INI file, or load the saved preferences this file /stick mindelay When used with /stick this delay is used when mpause is enabled to decide the smallest value to use to resume the /stick command after a manual move /stick maxdelay When used with /stick this delay is used when mpause is enabled to decide the largest value to use to resume the /stick command after a manual move /moveto \u00b6 /moveto loc Y X\\|off Moves you to the specified location, or stops the current /moveto \\(by using \"/moveto off\"\\) /moveto [] Sets the maximum distance from your moveto point that you consider acceptable. This option is here because it's not always possible to move to the exact point that you specify, so the plugin will move you to within units of the moveto point before stopping. Eg. if you use \"/moveto 5\", you will always move to within 5 units from your moveto point /moveto - Subtract from the current moveto distance /moveto mpause By enabling mpause, manually moving your toon will not break moveto and will rather put it on hold. When you are done manually moving, the /moveto command will once again kick in and you will continue moving to your moveto point /moveto pause\\|unpause Pause and unpause the moveto command /moveto ID Spawn ID Moves to the specified Spawn ID or moves to your current target if no Spawn ID is provided /moveto mindelay When used with /moveto this delay is used when mpause is enabled to decide the smallest value to use to resume the /moveto command after a manual move. /moveto maxdelay When used with /moveto this delay is used when mpause is enabled to decide the largest value to use to resume the /moveto command after a manual move. /moveto save\\|load Save or load the moveto settings /makecamp \u00b6 /makecamp on\\|off Turns MakeCamp logic off or turns it on, using your current location as the anchor point /makecamp Turns MakeCamp logic on using the supplied Y,X location as the camp anchor point /makecamp mindelay If outside the MakeCamp radius this is the minimum delay used before returning to a point within the camp radius /makecamp maxdelay If outside the MakeCamp radius this is the maxium delay used before returning to a point within the camp radius /makecamp leash Toggle the leash logic on and off. Leash is the maximum distance away from your camp anchor your toon will be allowed to go using another MQ2MoveUtils command such as /stick /makecamp leash Turns leash logic ON and sets the leash length /makecamp radius Sets the camp radius. This is the maximum distance you can be from the anchor point and still be considered \"in camp\" /makecamp mpause By enabling mpause, manually moving your toon will not break makecamp and will rather put it on hold. When you are done manually moving, the /makecamp command will once again kick /makecamp pause\\|unpause Pause and unpause the MQ2MoveUtils makecamp functionality /makecamp return Returns your toon to the camp immediatly /makecamp save\\|load Save or load the makecamp settings /circle \u00b6 /circle on\\|off Sets the anchor point to your current location, and uses the currently set radius /circle on Sets the anchor point to your current location, and uses the specified /circle Sets Y,X anchor point around which to circle /circle mpause By enabling mpause manually moving your toon will not break the circle but will instead put it on hold, when you get done manually moving the toon the /circle command will once again kick in. /circle pause\\|unpause Pause and unpause the /circle command /circle drunken Does not move in a perfect circle but instead the circle is more human-like /circle mindelay When used with /circle this delay is used when mpause is enabled to decide the smallest value to use to resume the /stick command after a manual move. /circle maxdelay When used with /circle this delay is used when mpause is enabled to decide the largest value to use to resume the /stick command after a manual move. /circle save\\|load Save or load the circle settings from the INI file Top-Level Objects \u00b6 Stick \u00b6 string ${Stick} Same as ${Stick.Status} \\(see below\\) . string ${Stick.Status} Return ON if currently sticking, OFF if not, or PAUSED if it is paused bool ${Stick.Active} Returns TRUE if currently sticking, FALSE if not bool ${Stick.Behind} Returns TRUE if behind target float ${Stick.Distance} The current stick distance bool ${Stick.Loose} Returns TRUE if stick loose is set bool ${Stick.MoveBack} Returns TRUE if stick is set to moveback bool ${Stick.MoveBehind} Returns TRUE if stick is set to move behind the target bool ${Stick.MovePause} Returns TRUE if stick movement is paused due to manual intervention bool ${Stick.Paused} Returns TRUE if stick has been paused with \"/stick pause\" bool ${Stick.Pin} Returns TRUE if /stick pin is being used bool ${Stick.Stopped} Returns TRUE if you are stationary MoveTo \u00b6 string ${MoveTo} Return ON if currently moving to a location, OFF if not, or PAUSED if it is paused bool ${MoveTo.Moving} Returns TRUE if moving to location, FALSE if not bool ${MoveTo.Stopped} Returns TRUE if stopped, FALSE if not MakeCamp \u00b6 string ${MakeCamp} Same as ${MakeCamp.Status} \\(see below\\) . string ${MakeCamp.Status} Return ON if MakeCamp is enabled, OFF if it is not enabled or PAUSED if it is paused float ${MakeCamp.AnchorX} The X Loc of the anchor point float ${MakeCamp.AnchorY} The Y Loc of the anchor point float ${MakeCamp.CampRadius} The current camp radius bool ${MakeCamp.Leash} Returns TRUE if the leash is enabled, FALSE if not float ${MakeCamp.LeashLength} The length of the leash int ${MakeCamp.MaxDelay} The maximum delay before resuming /makecamp functionality after manual intervention int ${MakeCamp.MinDelay} The minimum delay before resuming /makecamp functionality after manual intervention bool ${MakeCamp.Returning} Returns TRUE if returning to camp, FALSE if not INI File \u00b6 A default INI file is created \\(if it doesn't exist\\) when you issue one of the \"save\" commands \\(eg. /stick save, /moveto save, etc\\) . The Defaults section contains global defaults for all users. New sections can be added with character names as titles to override the default values. An example INI file is below, with explanations of the options underneath: [Defaults] AutoPause=on BreakOnWarp=on BreakDist=250.0 BreakOnGate=on Verbosity=1 ManualPause=on MinDelay=500 MaxDelay=5000 CampRadius=0.0 LeashLength=0.0 StuckLogic=on stuckCheck=5 stuckDist=0.1 AutoPause on/off This enables or disables the automatic pause on cast feature. This does not apply to bards, since they can move while singing. BreakOnWarp on/off With BreakOnWarp on, any movement will be terminated if the target moves too far away. See BreakDist to set the distance. BreakDist This sets how far away the target has to be before it will be considered too far away to continue following. BreakOnGate on/off This enables/disables monitoring chat for \" TargetName Gates\". Movement will be terminated if it determines that the target has gated. ManualPause on/off Stores your preference for the mPause functionality built into the various commands. MinDelay and MaxDelay Stores your preference for the resuming after manual move. These values are also used to return to camp at the end of a /stick or /moveto command when using /makecamp. CampRadius This is the default value used for /makecamp radius. LeashLength This is the default value used for /makecamp leash length StuckLogic on/off Enable or disable the logic used to determine if you are stuck behind an object when using /stick or /moveto. stickCheck The number of pulses that are averaged out to come up with the stuckDist comparison number. stuckDist This is the average distance covered during the the last stickCheck pulses to use as a comparison. Eg. if you normally would average .5 distance units covered in a 5 pulse period, then if your average drops down to .1 moved in the last 5 pulses then you are probably stuck and the stuck logic should kick in. Troubleshooting \u00b6 You can see a list of options for each of the commands by typing the command and then \"help\". Eg. /stick help, /moveto help, etc.","title":"MQ2MoveUtils (old)"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#mq2moveutils-old","text":"","title":"MQ2MoveUtils \\(old\\)"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#description","text":"For updated plugin information see MQ2MoveUtils:v9. The information below applies to the 7.0518 and earlier versions of MQ2MoveUtils. MQ2MoveUtils is a very popular plugin which assists with most aspects of moving around within EQ. It has been worked on by a number of developers over the years \\(tonio, CyberTech, Quagmire and Outlander\\) . For the history of this plugin and development notes please see MQ2MoveUtils:History . The old forum thread for MQ2MoveUtils can be found here , in the VIP forums. Source for the version 7.0 MQ2MoveUtils is available.","title":"Description"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#features","text":"The main features of MQ2MoveUtils are as follows: Stick: This is the main use for this plugin and allows you to \"stick\" a certain distance from your target. It can be set to always stick behind the target, or always in front if you're tanking. MoveTo: Move to a certain point or target. This has some built-in logic that will allow it to move around obstacles. MakeCamp: You can set a spot as a \"camp\", so that you can return to it if you get too far away, or after combat, etc. Circle: Run in a circle.","title":"Features"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#commands","text":"","title":"Commands"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#stick","text":"/stick on\\|off Turn stick on and off. The default for /stick is to stick at max melee range. /stick hold Sticks to current target even if you lose/change target /stick [] Stick at units to your target /stick - Subtract the dist used from the current stick distance \\(ie. it will put you units closer to your target\\) /stick % Stick at of max melee range from target. Eg. if max melee range is 20, then /stick 50% will stick you at 10 range /stick behind Sticks you behind your target. *Note: Be careful with this option if you do not have the Health of Target's Target Leadership Ability. If you have HoTT active and you are the Target of your Target, then you will not try to get behind. However if you do not have this ability and you gain aggro, you will spin around very quickly as you try and get behind your target while it continues to face you.* /stick behindonce Get behind the target once then convert to a regular stick /stick pin Sticks you to the side of the target, same considerations as /stick behind apply /stick !front Sticks you anywhere but in front of the target, will only reposition you if you would be in front. Same considerations apply to this as the \"behind\" and \"pin\" options /stick moveback Moveback will back your toon up to the current value, keeping you at a consistant distance from your target /stick loose Uses a time delay so adjustments to your position do not occur as frequently, simulating a more human-like control /stick uw This changes the facing of your toon, and is very useful under water, where you will try and follow the Z coordinate of the spawn you are facing /stick id Allows you to stick to a specific spawn ID /stick mpause By enabling mpause, manually moving your toon will not break stick and will rather put it on hold. When you are done manually moving, the /stick command will once again kick in and you will continue following the same target as before /stick pause\\|unpause Pause and unpause the stick command /stick save\\|load Some settings are stored in the INI file. This allows you to save your current preferences to the INI file, or load the saved preferences this file /stick mindelay When used with /stick this delay is used when mpause is enabled to decide the smallest value to use to resume the /stick command after a manual move /stick maxdelay When used with /stick this delay is used when mpause is enabled to decide the largest value to use to resume the /stick command after a manual move","title":"/stick"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#moveto","text":"/moveto loc Y X\\|off Moves you to the specified location, or stops the current /moveto \\(by using \"/moveto off\"\\) /moveto [] Sets the maximum distance from your moveto point that you consider acceptable. This option is here because it's not always possible to move to the exact point that you specify, so the plugin will move you to within units of the moveto point before stopping. Eg. if you use \"/moveto 5\", you will always move to within 5 units from your moveto point /moveto - Subtract from the current moveto distance /moveto mpause By enabling mpause, manually moving your toon will not break moveto and will rather put it on hold. When you are done manually moving, the /moveto command will once again kick in and you will continue moving to your moveto point /moveto pause\\|unpause Pause and unpause the moveto command /moveto ID Spawn ID Moves to the specified Spawn ID or moves to your current target if no Spawn ID is provided /moveto mindelay When used with /moveto this delay is used when mpause is enabled to decide the smallest value to use to resume the /moveto command after a manual move. /moveto maxdelay When used with /moveto this delay is used when mpause is enabled to decide the largest value to use to resume the /moveto command after a manual move. /moveto save\\|load Save or load the moveto settings","title":"/moveto"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#makecamp","text":"/makecamp on\\|off Turns MakeCamp logic off or turns it on, using your current location as the anchor point /makecamp Turns MakeCamp logic on using the supplied Y,X location as the camp anchor point /makecamp mindelay If outside the MakeCamp radius this is the minimum delay used before returning to a point within the camp radius /makecamp maxdelay If outside the MakeCamp radius this is the maxium delay used before returning to a point within the camp radius /makecamp leash Toggle the leash logic on and off. Leash is the maximum distance away from your camp anchor your toon will be allowed to go using another MQ2MoveUtils command such as /stick /makecamp leash Turns leash logic ON and sets the leash length /makecamp radius Sets the camp radius. This is the maximum distance you can be from the anchor point and still be considered \"in camp\" /makecamp mpause By enabling mpause, manually moving your toon will not break makecamp and will rather put it on hold. When you are done manually moving, the /makecamp command will once again kick /makecamp pause\\|unpause Pause and unpause the MQ2MoveUtils makecamp functionality /makecamp return Returns your toon to the camp immediatly /makecamp save\\|load Save or load the makecamp settings","title":"/makecamp"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#circle","text":"/circle on\\|off Sets the anchor point to your current location, and uses the currently set radius /circle on Sets the anchor point to your current location, and uses the specified /circle Sets Y,X anchor point around which to circle /circle mpause By enabling mpause manually moving your toon will not break the circle but will instead put it on hold, when you get done manually moving the toon the /circle command will once again kick in. /circle pause\\|unpause Pause and unpause the /circle command /circle drunken Does not move in a perfect circle but instead the circle is more human-like /circle mindelay When used with /circle this delay is used when mpause is enabled to decide the smallest value to use to resume the /stick command after a manual move. /circle maxdelay When used with /circle this delay is used when mpause is enabled to decide the largest value to use to resume the /stick command after a manual move. /circle save\\|load Save or load the circle settings from the INI file","title":"/circle"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#top-level-objects","text":"","title":"Top-Level Objects"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#stick_1","text":"string ${Stick} Same as ${Stick.Status} \\(see below\\) . string ${Stick.Status} Return ON if currently sticking, OFF if not, or PAUSED if it is paused bool ${Stick.Active} Returns TRUE if currently sticking, FALSE if not bool ${Stick.Behind} Returns TRUE if behind target float ${Stick.Distance} The current stick distance bool ${Stick.Loose} Returns TRUE if stick loose is set bool ${Stick.MoveBack} Returns TRUE if stick is set to moveback bool ${Stick.MoveBehind} Returns TRUE if stick is set to move behind the target bool ${Stick.MovePause} Returns TRUE if stick movement is paused due to manual intervention bool ${Stick.Paused} Returns TRUE if stick has been paused with \"/stick pause\" bool ${Stick.Pin} Returns TRUE if /stick pin is being used bool ${Stick.Stopped} Returns TRUE if you are stationary","title":"Stick"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#moveto_1","text":"string ${MoveTo} Return ON if currently moving to a location, OFF if not, or PAUSED if it is paused bool ${MoveTo.Moving} Returns TRUE if moving to location, FALSE if not bool ${MoveTo.Stopped} Returns TRUE if stopped, FALSE if not","title":"MoveTo"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#makecamp_1","text":"string ${MakeCamp} Same as ${MakeCamp.Status} \\(see below\\) . string ${MakeCamp.Status} Return ON if MakeCamp is enabled, OFF if it is not enabled or PAUSED if it is paused float ${MakeCamp.AnchorX} The X Loc of the anchor point float ${MakeCamp.AnchorY} The Y Loc of the anchor point float ${MakeCamp.CampRadius} The current camp radius bool ${MakeCamp.Leash} Returns TRUE if the leash is enabled, FALSE if not float ${MakeCamp.LeashLength} The length of the leash int ${MakeCamp.MaxDelay} The maximum delay before resuming /makecamp functionality after manual intervention int ${MakeCamp.MinDelay} The minimum delay before resuming /makecamp functionality after manual intervention bool ${MakeCamp.Returning} Returns TRUE if returning to camp, FALSE if not","title":"MakeCamp"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#ini-file","text":"A default INI file is created \\(if it doesn't exist\\) when you issue one of the \"save\" commands \\(eg. /stick save, /moveto save, etc\\) . The Defaults section contains global defaults for all users. New sections can be added with character names as titles to override the default values. An example INI file is below, with explanations of the options underneath: [Defaults] AutoPause=on BreakOnWarp=on BreakDist=250.0 BreakOnGate=on Verbosity=1 ManualPause=on MinDelay=500 MaxDelay=5000 CampRadius=0.0 LeashLength=0.0 StuckLogic=on stuckCheck=5 stuckDist=0.1 AutoPause on/off This enables or disables the automatic pause on cast feature. This does not apply to bards, since they can move while singing. BreakOnWarp on/off With BreakOnWarp on, any movement will be terminated if the target moves too far away. See BreakDist to set the distance. BreakDist This sets how far away the target has to be before it will be considered too far away to continue following. BreakOnGate on/off This enables/disables monitoring chat for \" TargetName Gates\". Movement will be terminated if it determines that the target has gated. ManualPause on/off Stores your preference for the mPause functionality built into the various commands. MinDelay and MaxDelay Stores your preference for the resuming after manual move. These values are also used to return to camp at the end of a /stick or /moveto command when using /makecamp. CampRadius This is the default value used for /makecamp radius. LeashLength This is the default value used for /makecamp leash length StuckLogic on/off Enable or disable the logic used to determine if you are stuck behind an object when using /stick or /moveto. stickCheck The number of pulses that are averaged out to come up with the stuckDist comparison number. stuckDist This is the average distance covered during the the last stickCheck pulses to use as a comparison. Eg. if you normally would average .5 distance units covered in a 5 pulse period, then if your average drops down to .1 moved in the last 5 pulses then you are probably stuck and the stuck logic should kick in.","title":"INI File"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#troubleshooting","text":"You can see a list of options for each of the commands by typing the command and then \"help\". Eg. /stick help, /moveto help, etc.","title":"Troubleshooting"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/","text":"MQ2MoveUtils:v11 FAQ \u00b6 __NOTOC__ Common Issues \u00b6 Every few seconds your character jerks his heading to one side and then resets \\(\"jitters\"\\) \u00b6 This is caused by stucklogic settings being set incorrectly to the speed of your CPU. You can confirm this is the problem by temporarily disabling stucklogic with /stick set stucklogic off . If the stuttering ends, you will need to tweak your stucklogic settings \\(see the main article\\) . Your character runs into walls or off into illogical directions \u00b6 If you are using WinEQ, you should disable true movement. \\(_/stick set wineq on_\\) If you are not using WinEQ, you may have stucklogic disabled or your stucklogic settings need to be configured properly. Your character spins in circles while jumping up and down \u00b6 You are likely using wineq2 while trying to use true movement. set wineq support on Otherwise, your framerate is really, really bad and you need to adjust your stucklogic settings by a very large amount OR, see the AdvPath comment below Common Issues with MQ2AdvPath and ModBot ala Master Kroak \u00b6 it was \"stuck\" i.e. turning and jumping. That's the plugin trying to get to the point your leader was at when the follow command was actually started.. It doesn't work like this plugin, ie - you get stuck behind a wall, leader moves back and you unstick.. It won't do that if it's last recorded follow point is past the wall... You have to turn off following to get a new follow path. After issuing the /bc follow, with an ini setting of /stick 20 hold uw, the bots will follow, but every 2-3 secs, they \"adjust\" trying to move forward a bit or something, even though their distance is less than 20, and the master isn't even moving. This happens if you have DoSit on and using AdvPath plugin to follow. Your stick setting is not used, and MQ2AdvPath has no setting to change it's follow distance. Not sure why MQ2Advpath is coded this way, but it will force your toon to stand if your distance is over 10 from your leader... The modbot macro is just trying to force your position so it's possible to sit without standing back up every second or so.. I'll increase the delay that's used there, and see if I can make one smooth movement.. P.S. If you WANT to use this plugin and not MQ2AdvPath for following, either unload MQ2AdvPath, or change this line at the top of modbot.mac to FALSE. /declare AdvPlug bool outer TRUE Your character looks straight up or down when underwater \u00b6 This happens from having the autouw feature enabled and sticking from a great distance. StuckLogic sucks underwater \u00b6 Yes, this is true. Do not attempt to stick from large distances while underwater unless you have a clear path. Water swimming motion is not easily measured like walk/run on dry land. You cannot manually break from a stick \u00b6 You use MQ2Melee You will need to enable breakonkb in MoveUtils and also set stickbreak=1 in MQ2Melee You do not use MQ2Melee You will need to enable breakonkb in MoveUtils. You use MQ2Melee and any time you issue a /stick with hotkey or macro, it gets changed \u00b6 This happens from not having 'stickcmd' set to anything in MQ2Melee while still having MQ2Melee set to use a stickrange it will use its own default parameters. You setup a camp but have problems returning to it \u00b6 The most common cause of this is having a target. By default, automatic camp returns require nothing on target. Verify what camp settings you have enabled. Certain features behave different ways, for example ReturnNoAggro will only return to the camp if you do not have aggro. ReturnHaveTarget will allow you to return even if you have a target. ReturnNotLooting will not return if you have an open corpse being looted. /stick front does not work \u00b6 You do not have HoTT data available. You either need the HoTT group leader AA or you need to enable nohottfront \\(_/stick set nohottfront on_\\) Your /face commands are not working \u00b6 You cannot use /face while a MoveUtils command is active. MoveUtils handles facing targets internally based on many different settings. Using /face in your macros that rely on MoveUtils is a bad practice that causes nothing but problems and thus is no longer allowed by the plugin. NONE of your commands are working but you are sure the plugin is loaded and was working for a bit \u00b6 Try \\( _/stick imsafe_ \\) if you have BreakOnSummon or BreakOnGM enabled Try \\( _/stick unpause_ \\) if you have PauseLock enabled Configuration \u00b6 What are the different ways to handle manual keyboard and mouse movement ? \u00b6 Breaking \\(_/stick set \\[breakonkb \\| breakonmouse\\] on_\\) BreakOnKB - if you touch any keyboard movement related key (forward, backward, left, right, strafeleft, straferight, autorun) the current command will end BreakOnMouse - if you use mouselook \\(default is hold right-click\\) , the current command will end Pausing \\(_/stick set \\[mpause \\| mousepause\\] on_\\) mpause - if you touch any keyboard movement key, the current command will pause to let you move and then resume after a configurable delay mousepause - if you use mouselook, the current command will resume after a configurable delay You may only have a Break or a Pause on for a single option, but not both. However, you may have a pause for one option and a break for a different option on. That is: Keyboard can either be breakonkb or mpause, and mouse can either be breakonmouse or mousepause, but you may not have breakonkb AND mpause Thus, you may have breakonkb and mousepause or mpause and breakonmouse. Results: MoveUtils: mpause on - pressing a movement key pauses stick for a defined amount of time (resume timer starts when all movement keys have been let go) breakonkb on - pressing a movement key breaks stick entirely both off - stick will not break from movement key input (i.e. it will fight you to stay locked onto target) MoveUtils with MQ2Melee mpause on - pressing a movement key pauses stick for a defined amount of time (resume timer starts when all movement keys have been let go) breakonkb on - pressing a movement key breaks stick entirely. MQ2Melee then turns it back on instantly if MQ2Melee's attack is on and you are within MQ2Melee's stickrange of the target. both off - stick will not break from movement key input, MQ2Melee's attack key will toggle stick state How do I make the plugin output less or more ChatWnd messages \u00b6 See the Verbosity section at the bottom of the main article. Movement & Heading \u00b6 What is the difference between fast, loose, and true heading? \u00b6 The three types of heading changes are a question of legitimacy versus efficiency. Fast heading instantly changes your heading to the desired location. If you are facing North, target a mob that is South of you, and issued a stick command with fast heading enabled, your character would instantly face the mob and begin running. This works like MQ2's /face command with the fast parameter. Repeated fast turns can be quite noticeable to other players and thus, the other options exist. Loose heading rotates your heading changes using a fixed size turn increment to look more legitimate. You are able to set this increment size between 1 and 100. These numbers represent the actual number of degrees you will turn per pulse, not any sort of scaling system. True heading rotates your heading changes using the same method EQ does if you were to hold down the right or left key. This is comparable to /keypress with right hold as parameters. This is the most legitimate method of turning available. It is also the slowest. Why do I move backwards often? It looks crazy and unnatural. \u00b6 Either your _backupdist' is set way too high \\(10.0 is reasonable, 50.0 is not\\) or you should just disable_useback'' When using loose or true heading, my character orbits around the destination/target rather than arriving smoothly \u00b6 This happens due to bad frame rate and you should tighten up the AllowMove setting. Default is 32.0, you can lower it down to 16.0 or even 8.0 When I dismount, my characters appear to be spinning in circles \u00b6 This is an EQ bug and has nothing to do with MQ2 nor MoveUtils == StuckLogic == What is stucklogic? \u00b6 When a character runs into an object, it will continue running forward because there is no awareness that the object exists. People with stucklogic disabled can often be seen running into walls or rocks or failing to navigate through twists and turns of tight areas \\(smart ones use AdvPath\\) . Stucklogic is an effort to overcome this problem by measuring an average distance moved per pulse based on Y X location. When the average distance declines dramatically, the plugin is able to be aware that forward motion is no longer happening and attempts to correct this. Explain what stucklogic values do \u00b6 TryToJump - will jump every few pulses to attempt scaling over small rocks and stumps \\(very helpful to **food races** such as gnomes that frequently get stuck\\) TurnHalf - if stucklogic has turned half way around \\(256 deg\\) without making any progress, it will reset heading to the starting point and try turning the other direction /stick set pulsecheck # -pulsecheck defaults to 4 -this value is sort of what \"stuckcheck\" was before. -it serves as the size of your pulse history to be used to calculate your average movement distance. the largest you can set this value to is 32 (defined by MAXRINGSIZE). The higher you set this number, the less often stucklogic would misfire (so if you are getting the \"jittery\" problem you will want to increase this value). This also means it will take longer to know that it is stuck, so if you are getting stuck and not responding fast enough, you would do the opposite and lower this value. /stick set pulseunstuck # -pulseunstuck defaults to 5 -this value is new -this is the amount of pulses you have successfully moved forward before hard-forcing stucklogic to be considered unstuck. this serves the purpose in that if you were stuck for 20 pulses, your stuck counter would normally try to move forward for 20 more pulses before considering itself free. there was some handling for this that had some issues so now you can set a value such as this one to force a faster \"im unstuck\" process. -the higher your framerate, the higher you want this value. 5 may not be enough on better computers and you may end up getting restuck again, it will look like what we are calling \"snaking\". If you notice yourself \"snaking\" then this would be the first value to try increasing. /stick set diststuck #.## -diststuck defaults to 0.5 -this is similar to before in that it is the amount of distance you need to have moved versus your average pulse rate in order to not be stuck -this value should properly scale for all speeds of computers. you may want to set it higher or lower, play with it and find what works best (and please let us know!!), but keep in mind setting this value to something tiny such as 0.001 as we did in the old logic should no longer be necessary. deadchicken has determined that mindset was only working because of some incorrect math in the formulas. try to stick with more logical values and then reporting back your results would be appreciated. I am in a boxed room with only a single doorway and stucklogic wont get me out \u00b6 It can eventually with turnhalf off, but it will take hours. Use MQ2AdvPath or a combination of /moveto loc Y X to get out of rooms like this. Stucklogic is helpful but it doesn't create miracles. Stick \u00b6 When I gain aggro, my character spins in circles \u00b6 You do not have access to the HoTT group leader AA while using /stick behind/!front/pin You can correct this by enabling DelayStrafe with a minimum value of at least 1500 before strafing When I lose aggro, my character spins in circles \u00b6 You do not have access to the HoTT group leader AA while using /stick front You can correct this by enabling DelayStrafe with a minimum value of at least 15000 before strafing You can also /stick set nohottfront off and stick front will be disabled if you do not have HoTT data When using MQ2Melee, I have to clear my target to stop sticking because turning off attack does not work \u00b6 You need to create a MQ2Melee attack hotkey and NOT USE the eq attack on/off key. They are not the same thing. My character stays at a fixed range when sticking even though I try to move closer manually \u00b6 This is due to moveback repositioning. Take that parameter out of your stick command. What is a snaproll? \u00b6 Basically if you issue /stick snaproll it will plot the movement location as an X behind the mob. No matter where you are relative to the mob, it will turn to face directly at the X and then run there in a straight line. If you issue /stick snaproll face the X is plotted in front of the mob. /stick snaproll left and it will go to your left aka the mob's right shoulder, and /stick snaproll right and it will go to the mob's left shoulder. This is mainly for hidden rogues to use their opening strike disc without strafing into position to maximize DPS. MakeCamp \u00b6 What is camp scattering and how do you use it? \u00b6 This is a bit complex but when configured properly it is amazing. The idea behind this is that instead of returning to a random location within your camp radius, you can define a specific bearing, distance, and scatter radius from the center of your camp. This way you could configure your characters to return to specified areas all the time. The INI supports values on a character by character basis as well, so you could configure your tank to return to the center, your casters to return behind the tank, and your melee to return to the sides of the tank. MoveTo \u00b6 I am rotating in place when i use /moveto y x z \u00b6 You supplied an unreachable Z axis destination. Either use /moveto y x, or supply an accurate z destination that can be reached Moveto never arrives at a destination, even ignoring z parameter \u00b6 Your arrival distance is set too low. 5.0 is the absolute minimum but 10.0 is recommended. Circle \u00b6 What is this command for? \u00b6 Bard circle kiting. Calc Angle \u00b6 What does any of this mean? \u00b6 Angular Dist - what moveutils uses to determine pin/behind/front/!front, useful for configuring your !frontarc and behindarc settings. Adjust - this is how much adjustment is required in order to be facing your current target. This value relates to the new allowmove setting. Dist - the distance to your target provided by GetDistance \\(what stick and some moveto, campreturns use\\) , useful in configuring your ArrivalDist values Dist3D - the distance to your target provided by GetDistance3D \\(what snaproll, stucklogic and some moveto parameters use\\) , useful in configuring your ArrivalDist values MQ2Melee \u00b6 What changes did you make that are not found in the normal melee wiki \u00b6 stickrange=75 sticknorange=1 stickdelay=whatever stickmode=1 stickcmd=8 !front strikemode=1 strikecmd=snaproll this way you can use normal paramaters for stickmode/stickcmd and then setup a custom strikecmd and use strikemode=1. strikemode=1 only relates to using a custom strike stick parameter and does not integrate with whatever other methods turn strike on and off. sticknorange=0 (default behavior you are used to) sticknorange=1 (no range checking takes place for stick to happen automatically via mq2melee) update on sticknorange: MQ2Melee does not allow for attacking anything greater than 250 range away regardless of any settings, and sticknorange does not overcome that (though maybe it should be possible?). So sticknorange is effectively \"stick at 250 or less\", without checking the stickrange value (which defaults to 75 if you do not set it). stickbreak=1 - allows breakonkb to work with new mq2melee changes","title":"MQ2MoveUtils:v11 FAQ"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#mq2moveutilsv11-faq","text":"__NOTOC__","title":"MQ2MoveUtils:v11 FAQ"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#common-issues","text":"","title":"Common Issues"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#every-few-seconds-your-character-jerks-his-heading-to-one-side-and-then-resets-jitters","text":"This is caused by stucklogic settings being set incorrectly to the speed of your CPU. You can confirm this is the problem by temporarily disabling stucklogic with /stick set stucklogic off . If the stuttering ends, you will need to tweak your stucklogic settings \\(see the main article\\) .","title":"Every few seconds your character jerks his heading to one side and then resets \\(\"jitters\"\\)"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#your-character-runs-into-walls-or-off-into-illogical-directions","text":"If you are using WinEQ, you should disable true movement. \\(_/stick set wineq on_\\) If you are not using WinEQ, you may have stucklogic disabled or your stucklogic settings need to be configured properly.","title":"Your character runs into walls or off into illogical directions"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#your-character-spins-in-circles-while-jumping-up-and-down","text":"You are likely using wineq2 while trying to use true movement. set wineq support on Otherwise, your framerate is really, really bad and you need to adjust your stucklogic settings by a very large amount OR, see the AdvPath comment below","title":"Your character spins in circles while jumping up and down"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#common-issues-with-mq2advpath-and-modbot-ala-master-kroak","text":"it was \"stuck\" i.e. turning and jumping. That's the plugin trying to get to the point your leader was at when the follow command was actually started.. It doesn't work like this plugin, ie - you get stuck behind a wall, leader moves back and you unstick.. It won't do that if it's last recorded follow point is past the wall... You have to turn off following to get a new follow path. After issuing the /bc follow, with an ini setting of /stick 20 hold uw, the bots will follow, but every 2-3 secs, they \"adjust\" trying to move forward a bit or something, even though their distance is less than 20, and the master isn't even moving. This happens if you have DoSit on and using AdvPath plugin to follow. Your stick setting is not used, and MQ2AdvPath has no setting to change it's follow distance. Not sure why MQ2Advpath is coded this way, but it will force your toon to stand if your distance is over 10 from your leader... The modbot macro is just trying to force your position so it's possible to sit without standing back up every second or so.. I'll increase the delay that's used there, and see if I can make one smooth movement.. P.S. If you WANT to use this plugin and not MQ2AdvPath for following, either unload MQ2AdvPath, or change this line at the top of modbot.mac to FALSE. /declare AdvPlug bool outer TRUE","title":"Common Issues with MQ2AdvPath and ModBot ala Master Kroak"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#your-character-looks-straight-up-or-down-when-underwater","text":"This happens from having the autouw feature enabled and sticking from a great distance.","title":"Your character looks straight up or down when underwater"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#stucklogic-sucks-underwater","text":"Yes, this is true. Do not attempt to stick from large distances while underwater unless you have a clear path. Water swimming motion is not easily measured like walk/run on dry land.","title":"StuckLogic sucks underwater"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#you-cannot-manually-break-from-a-stick","text":"You use MQ2Melee You will need to enable breakonkb in MoveUtils and also set stickbreak=1 in MQ2Melee You do not use MQ2Melee You will need to enable breakonkb in MoveUtils.","title":"You cannot manually break from a stick"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#you-use-mq2melee-and-any-time-you-issue-a-stick-with-hotkey-or-macro-it-gets-changed","text":"This happens from not having 'stickcmd' set to anything in MQ2Melee while still having MQ2Melee set to use a stickrange it will use its own default parameters.","title":"You use MQ2Melee and any time you issue a /stick with hotkey or macro, it gets changed"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#you-setup-a-camp-but-have-problems-returning-to-it","text":"The most common cause of this is having a target. By default, automatic camp returns require nothing on target. Verify what camp settings you have enabled. Certain features behave different ways, for example ReturnNoAggro will only return to the camp if you do not have aggro. ReturnHaveTarget will allow you to return even if you have a target. ReturnNotLooting will not return if you have an open corpse being looted.","title":"You setup a camp but have problems returning to it"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#stick-front-does-not-work","text":"You do not have HoTT data available. You either need the HoTT group leader AA or you need to enable nohottfront \\(_/stick set nohottfront on_\\)","title":"/stick front does not work"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#your-face-commands-are-not-working","text":"You cannot use /face while a MoveUtils command is active. MoveUtils handles facing targets internally based on many different settings. Using /face in your macros that rely on MoveUtils is a bad practice that causes nothing but problems and thus is no longer allowed by the plugin.","title":"Your /face commands are not working"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#none-of-your-commands-are-working-but-you-are-sure-the-plugin-is-loaded-and-was-working-for-a-bit","text":"Try \\( _/stick imsafe_ \\) if you have BreakOnSummon or BreakOnGM enabled Try \\( _/stick unpause_ \\) if you have PauseLock enabled","title":"NONE of your commands are working but you are sure the plugin is loaded and was working for a bit"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#configuration","text":"","title":"Configuration"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-are-the-different-ways-to-handle-manual-keyboard-and-mouse-movement","text":"Breaking \\(_/stick set \\[breakonkb \\| breakonmouse\\] on_\\) BreakOnKB - if you touch any keyboard movement related key (forward, backward, left, right, strafeleft, straferight, autorun) the current command will end BreakOnMouse - if you use mouselook \\(default is hold right-click\\) , the current command will end Pausing \\(_/stick set \\[mpause \\| mousepause\\] on_\\) mpause - if you touch any keyboard movement key, the current command will pause to let you move and then resume after a configurable delay mousepause - if you use mouselook, the current command will resume after a configurable delay You may only have a Break or a Pause on for a single option, but not both. However, you may have a pause for one option and a break for a different option on. That is: Keyboard can either be breakonkb or mpause, and mouse can either be breakonmouse or mousepause, but you may not have breakonkb AND mpause Thus, you may have breakonkb and mousepause or mpause and breakonmouse. Results: MoveUtils: mpause on - pressing a movement key pauses stick for a defined amount of time (resume timer starts when all movement keys have been let go) breakonkb on - pressing a movement key breaks stick entirely both off - stick will not break from movement key input (i.e. it will fight you to stay locked onto target) MoveUtils with MQ2Melee mpause on - pressing a movement key pauses stick for a defined amount of time (resume timer starts when all movement keys have been let go) breakonkb on - pressing a movement key breaks stick entirely. MQ2Melee then turns it back on instantly if MQ2Melee's attack is on and you are within MQ2Melee's stickrange of the target. both off - stick will not break from movement key input, MQ2Melee's attack key will toggle stick state","title":"What are the different ways to handle manual keyboard and mouse movement ?"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#how-do-i-make-the-plugin-output-less-or-more-chatwnd-messages","text":"See the Verbosity section at the bottom of the main article.","title":"How do I make the plugin output less or more ChatWnd messages"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#movement-heading","text":"","title":"Movement &amp; Heading"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-is-the-difference-between-fast-loose-and-true-heading","text":"The three types of heading changes are a question of legitimacy versus efficiency. Fast heading instantly changes your heading to the desired location. If you are facing North, target a mob that is South of you, and issued a stick command with fast heading enabled, your character would instantly face the mob and begin running. This works like MQ2's /face command with the fast parameter. Repeated fast turns can be quite noticeable to other players and thus, the other options exist. Loose heading rotates your heading changes using a fixed size turn increment to look more legitimate. You are able to set this increment size between 1 and 100. These numbers represent the actual number of degrees you will turn per pulse, not any sort of scaling system. True heading rotates your heading changes using the same method EQ does if you were to hold down the right or left key. This is comparable to /keypress with right hold as parameters. This is the most legitimate method of turning available. It is also the slowest.","title":"What is the difference between fast, loose, and true heading?"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#why-do-i-move-backwards-often-it-looks-crazy-and-unnatural","text":"Either your _backupdist' is set way too high \\(10.0 is reasonable, 50.0 is not\\) or you should just disable_useback''","title":"Why do I move backwards often? It looks crazy and unnatural."},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#when-using-loose-or-true-heading-my-character-orbits-around-the-destinationtarget-rather-than-arriving-smoothly","text":"This happens due to bad frame rate and you should tighten up the AllowMove setting. Default is 32.0, you can lower it down to 16.0 or even 8.0","title":"When using loose or true heading, my character orbits around the destination/target rather than arriving smoothly"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#when-i-dismount-my-characters-appear-to-be-spinning-in-circles","text":"This is an EQ bug and has nothing to do with MQ2 nor MoveUtils == StuckLogic ==","title":"When I dismount, my characters appear to be spinning in circles"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-is-stucklogic","text":"When a character runs into an object, it will continue running forward because there is no awareness that the object exists. People with stucklogic disabled can often be seen running into walls or rocks or failing to navigate through twists and turns of tight areas \\(smart ones use AdvPath\\) . Stucklogic is an effort to overcome this problem by measuring an average distance moved per pulse based on Y X location. When the average distance declines dramatically, the plugin is able to be aware that forward motion is no longer happening and attempts to correct this.","title":"What is stucklogic?"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#explain-what-stucklogic-values-do","text":"TryToJump - will jump every few pulses to attempt scaling over small rocks and stumps \\(very helpful to **food races** such as gnomes that frequently get stuck\\) TurnHalf - if stucklogic has turned half way around \\(256 deg\\) without making any progress, it will reset heading to the starting point and try turning the other direction /stick set pulsecheck # -pulsecheck defaults to 4 -this value is sort of what \"stuckcheck\" was before. -it serves as the size of your pulse history to be used to calculate your average movement distance. the largest you can set this value to is 32 (defined by MAXRINGSIZE). The higher you set this number, the less often stucklogic would misfire (so if you are getting the \"jittery\" problem you will want to increase this value). This also means it will take longer to know that it is stuck, so if you are getting stuck and not responding fast enough, you would do the opposite and lower this value. /stick set pulseunstuck # -pulseunstuck defaults to 5 -this value is new -this is the amount of pulses you have successfully moved forward before hard-forcing stucklogic to be considered unstuck. this serves the purpose in that if you were stuck for 20 pulses, your stuck counter would normally try to move forward for 20 more pulses before considering itself free. there was some handling for this that had some issues so now you can set a value such as this one to force a faster \"im unstuck\" process. -the higher your framerate, the higher you want this value. 5 may not be enough on better computers and you may end up getting restuck again, it will look like what we are calling \"snaking\". If you notice yourself \"snaking\" then this would be the first value to try increasing. /stick set diststuck #.## -diststuck defaults to 0.5 -this is similar to before in that it is the amount of distance you need to have moved versus your average pulse rate in order to not be stuck -this value should properly scale for all speeds of computers. you may want to set it higher or lower, play with it and find what works best (and please let us know!!), but keep in mind setting this value to something tiny such as 0.001 as we did in the old logic should no longer be necessary. deadchicken has determined that mindset was only working because of some incorrect math in the formulas. try to stick with more logical values and then reporting back your results would be appreciated.","title":"Explain what stucklogic values do"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#i-am-in-a-boxed-room-with-only-a-single-doorway-and-stucklogic-wont-get-me-out","text":"It can eventually with turnhalf off, but it will take hours. Use MQ2AdvPath or a combination of /moveto loc Y X to get out of rooms like this. Stucklogic is helpful but it doesn't create miracles.","title":"I am in a boxed room with only a single doorway and stucklogic wont get me out"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#stick","text":"","title":"Stick"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#when-i-gain-aggro-my-character-spins-in-circles","text":"You do not have access to the HoTT group leader AA while using /stick behind/!front/pin You can correct this by enabling DelayStrafe with a minimum value of at least 1500 before strafing","title":"When I gain aggro, my character spins in circles"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#when-i-lose-aggro-my-character-spins-in-circles","text":"You do not have access to the HoTT group leader AA while using /stick front You can correct this by enabling DelayStrafe with a minimum value of at least 15000 before strafing You can also /stick set nohottfront off and stick front will be disabled if you do not have HoTT data","title":"When I lose aggro, my character spins in circles"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#when-using-mq2melee-i-have-to-clear-my-target-to-stop-sticking-because-turning-off-attack-does-not-work","text":"You need to create a MQ2Melee attack hotkey and NOT USE the eq attack on/off key. They are not the same thing.","title":"When using MQ2Melee, I have to clear my target to stop sticking because turning off attack does not work"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#my-character-stays-at-a-fixed-range-when-sticking-even-though-i-try-to-move-closer-manually","text":"This is due to moveback repositioning. Take that parameter out of your stick command.","title":"My character stays at a fixed range when sticking even though I try to move closer manually"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-is-a-snaproll","text":"Basically if you issue /stick snaproll it will plot the movement location as an X behind the mob. No matter where you are relative to the mob, it will turn to face directly at the X and then run there in a straight line. If you issue /stick snaproll face the X is plotted in front of the mob. /stick snaproll left and it will go to your left aka the mob's right shoulder, and /stick snaproll right and it will go to the mob's left shoulder. This is mainly for hidden rogues to use their opening strike disc without strafing into position to maximize DPS.","title":"What is a snaproll?"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#makecamp","text":"","title":"MakeCamp"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-is-camp-scattering-and-how-do-you-use-it","text":"This is a bit complex but when configured properly it is amazing. The idea behind this is that instead of returning to a random location within your camp radius, you can define a specific bearing, distance, and scatter radius from the center of your camp. This way you could configure your characters to return to specified areas all the time. The INI supports values on a character by character basis as well, so you could configure your tank to return to the center, your casters to return behind the tank, and your melee to return to the sides of the tank.","title":"What is camp scattering and how do you use it?"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#moveto","text":"","title":"MoveTo"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#i-am-rotating-in-place-when-i-use-moveto-y-x-z","text":"You supplied an unreachable Z axis destination. Either use /moveto y x, or supply an accurate z destination that can be reached","title":"I am rotating in place when i use /moveto y x z"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#moveto-never-arrives-at-a-destination-even-ignoring-z-parameter","text":"Your arrival distance is set too low. 5.0 is the absolute minimum but 10.0 is recommended.","title":"Moveto never arrives at a destination, even ignoring z parameter"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#circle","text":"","title":"Circle"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-is-this-command-for","text":"Bard circle kiting.","title":"What is this command for?"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#calc-angle","text":"","title":"Calc Angle"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-does-any-of-this-mean","text":"Angular Dist - what moveutils uses to determine pin/behind/front/!front, useful for configuring your !frontarc and behindarc settings. Adjust - this is how much adjustment is required in order to be facing your current target. This value relates to the new allowmove setting. Dist - the distance to your target provided by GetDistance \\(what stick and some moveto, campreturns use\\) , useful in configuring your ArrivalDist values Dist3D - the distance to your target provided by GetDistance3D \\(what snaproll, stucklogic and some moveto parameters use\\) , useful in configuring your ArrivalDist values","title":"What does any of this mean?"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#mq2melee","text":"","title":"MQ2Melee"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-changes-did-you-make-that-are-not-found-in-the-normal-melee-wiki","text":"stickrange=75 sticknorange=1 stickdelay=whatever stickmode=1 stickcmd=8 !front strikemode=1 strikecmd=snaproll this way you can use normal paramaters for stickmode/stickcmd and then setup a custom strikecmd and use strikemode=1. strikemode=1 only relates to using a custom strike stick parameter and does not integrate with whatever other methods turn strike on and off. sticknorange=0 (default behavior you are used to) sticknorange=1 (no range checking takes place for stick to happen automatically via mq2melee) update on sticknorange: MQ2Melee does not allow for attacking anything greater than 250 range away regardless of any settings, and sticknorange does not overcome that (though maybe it should be possible?). So sticknorange is effectively \"stick at 250 or less\", without checking the stickrange value (which defaults to 75 if you do not set it). stickbreak=1 - allows breakonkb to work with new mq2melee changes","title":"What changes did you make that are not found in the normal melee wiki"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/","text":"MQ2MoveUtils:v11 Revisions \u00b6 __FORCETOC__ MQ2MoveUtils v16.0 Revision History \u00b6 Patch Fix for 16-Nov-2016 \u00b6 Applied changes necessary because of the Nov 16 th 2016 patch. \\(trevyn\\) Made in Notepad only - v16.0717 \u00b6 brainiac loves the D Fixed this bad code, a bug in the source for years that has always been wrong Stable - v14.0416 \u00b6 Added Circle Strafe Ability \\(Cr4zyb4rd\\) /stick strafe \\[left\\|right\\|flip\\|random ] Continuously strafes in one direction regardless of distance to target with no target-of-target check. left|right - direction to strafe flip - strafes in opposite direction of last strafe command random - strafe direction chosen by luck I've found using /stick strafe flip 50 moveback loose lets me bow-kite a snared mob in a pretty tight circle, and I can just hit the same key again if I get too close to a wall or something and need to change direction. The only issue I've had is that mq2melee turns off all stick commands when it flips from melee to ranged mode, but I figured that's a problem better solved there than lying to mq2melee about what we're doing. Stable - v11.0410 \u00b6 Added Flexible sticking /stick set flex on /stick set flexdist #.# between 2.0 and 20.0 Saves to INI under Stick as UseFlex=on/off and DistFlex=#.# inline as /stick whatever useflex flexdist #.# Stable - v11.0323 \u00b6 Fix for brainiac's bullshit. Added ascii's VC6 auto-detection Stable - v11.0319 \u00b6 VC6 people can uncomment this line: //#define OLD_COMPILER_USER StickCommand \\(\"unpause\"\\) called via export will have a potential \"plugin was not paused\" error message auto-squelched. Added BreakOnHit option to Stick \\(thank dkaa\\) /stick set breakonhit on \\<---perm /stick 12 breakonhit \\<---inline saves to ini under Stick as BreakOnHit=on new TLO for this ${Stick.Broken}, which resets upon zone / next stick command usage Stable - v11.0101 \u00b6 ${Stick.Behind} now works when no commands are active. /moveto now has a new parameter mdist , allowing you to change moveto distance on the fly instead of having to issue a set or /moveto dist # command prior to the actual moveto command. I left the old dist as-is to not cause macro conflict. Note: In the case of id , you must use mdist first if you are not supplying the spawn id, i.e. /moveto mdist 100 id NOT /moveto id mdist 100 \\<----fails Dist3D change for snaproll to help when levitated now permanent. Stable - v9.1231 - TLO Cleanup \u00b6 ${MoveTo.Stopped} now reflects if the last /moveto command completed successfully. Previously it measured if you were within your ArrivalDist of the last moveto location used. If you were using this data for that purpose be aware if you move away from your /moveto location it will show as TRUE now. This will reset to false the next time you issue a /moveto command and upon gamestate changes. Fixed the PAUSED status for the following TLO's with no member: ${MoveTo} ${Stick} ${Circle} ${MakeCamp} ${MoveTo.Broken} once again functions as intended. Stable - 9.0907 \u00b6 Bug fixes for 0817 Beta - 9.0817 - non-linear \u00b6 Major Changes The old style of movement has been reintroduced for WinEQ users i.e. those of you with problems of mouselook or strafe keys being left on when you alt-tab to switch sessions. You may switch over by using: /stick set wineq on This saves to the ini under Defaults as WinEQ=on/off The true movement ability no longer makes the plugin offset-dependent. In the event the offset pattern changes and true movement is not established, the plugin should revert to the old style of movement so there would be no downtime or need to downgrade while waiting for an update. Heading settings are no longer command/INI situational. It applies to the plugin across the board. You may still apply inline adjustments for single command use only. To change plugin default headings, use: /stick set heading true /stick set heading loose /stick set heading fast saves to the ini under Defaults Heading and character-specific section All commands now reset to INI \\(user, not plugin\\) defaults after each use. The INI no longer reloads every time you zone. It will only unload and reload defaults if you use the 'load' parameter \\(ie /stick load\\) or if you camp to character select and re-enter world. Loading the INI file will end commands in progress. Command parameters applied inline will no longer overwrite INI defaults. To change INI defaults, use 'set' or 'toggle' to make changes permanent. The ability to use most INI settings inline has been added. This allows you to issue a command with the setting inline to apply it to the current command, and once the command has ended the next command will revert back to the INI defaults. As an example, if your snaproll default distance was 10.0 and you wanted to make your snaproll distance larger for a single mob, you could: /stick snaproll rear snapdist 20.0 ...and this would snaproll 20 distance behind the target. The next snaproll you issued would then revert to using 10.0 Complete list of supported inline additions: /stick breakontarget breakongate breakonwarp pauseonwarp randomize delaystrafe useback usefleeing strafewalk mindelay \\(when used with stick, this applies to delaystrafe\\) maxdelay # \\(when used with stick, this applies to delaystrafe\\) \u00b6 backupdist # breakdist # snapdist # !frontarc # behindarc # /moveto breakonaggro breakonhit usewalk useback backupdist # ydist # xdist # /makecamp returnhavetarget returnnoaggro returnnotlooting realtimeplayer scatter bearing # scatsize # scatdist # /circle -already had all options Changed INI & Settings Information I cleaned up the INI naming scheme a bit along with some additions and removals so take note of the following \\[Defaults\\] BreakSummonDist --> DistSummon new WinEQ removed TrueHeading new Heading \\(true, loose, fast\\) \\[Stick\\] new AlwaysUW BehindArc --> ArcBehind NotFrontArc -> ArcNotFront BreakDist --> DistBreak BackupDist --> DistBackup new BreakOnTarget removed LooseStick SnaprollDist --> DistSnaproll StickDistMod --> DistMod StickDistModPercent --> DistMod% new UseWalk new UseFleeing \\[MakeCamp\\] new RealtimePlayer \\[MoveTo\\] new AlwaysUW new DistBackup removed LooseMoveTo new UseBackward \\[Circle\\] AlwaysBackwards --> Backward AlwaysCounterClockwise --> CCW AlwaysDrunken --> Drunken \\[Character specific\\] same changes as above where applicable added Heading, same as defaults added RealtimePlayer New Features Added a new command \"/rootme\". This command will effectively lock your character in place until you turn it off with \"/rootme off\", preventing you via the keyboard or the plugin or /keypress from moving you forward. I figured this was within the scope of the plugin and may have some uses such as macro-based GM detection, or eqbc command passing for a character that is about to do something problematic. With rootme active, other commands will not work until you turn it off - though a makecamp on may still fight with it so consider this experimental for now. Added BreakOnTarget option to '/stick', which will break from the current stick if your target changes. /stick set breakontarget on, saves to the INI under Stick BreakOnTarget=on/off Added AlwaysUW options to both stick and moveto \\(individually\\) . the current AutoUW option turns on underwater adjustments automatically only when you are underwater \\(as intended\\) . The new 'alwaysuw' setting will instead always perform the stick or moveto as if you had typed 'uw' inline somewhere. /stick set alwaysuw on, /moveto set alwaysuw on, saves to the INI under Stick AlwaysUW=on/off && MoveTo AlwaysUW=on/off Added 'strafewalk' option to stick. This turns on walking when you are close to the target and using a strafe-based stick parameter. For characters with ridiculously high run speed this will help you position more accurately and should assist background sessions with moving slower and not overshooting the destination. /stick set strafewalk on, ini Stick UseWalk=on/off Added 'usefleeing' option to stick for 'stick front'. If the target is fleeing \\(same check as the TLO\\) and under 25% health, stick front will not attempt to strafe and reposition in front of the target. This is still experimental. Added 'useback' to moveto. Just like with stick, if you are close to the moveto destination (which also includes camp returns), this will walk backwards to the destination rather than turning, facing the destination, walking there, and turning again. /moveto set useback on, ini: MoveTo UseBack=on/off Set the distance same way as stick \\(though unlike stick, you probably want a larger value here\\) /moveto set backupdist # \\(1.0 min\\) . moveto and stick save their own distances, not use the same. Added 'realtimeplayer' setting to camp returning. Previous '/makecamp player' behavior set the location of the player, and began moving there. if the player moved during that time, it would walk to the old location first and then begin moving again. realtimeplayer now makes the positions dynamic and will adjust a return on the fly. i made this optional in case anyone used that as some form of ghetto advpath. /makecamp set realtimeplayer on BreakOnGM now displays a timestamp for zone in & zone out times. if you see one blink in and out within a matter of seconds, they went invis and you should not consider yourself safe. Bug Fixes & Cleanup HideHelp now functions as the output message describes instead of in reverse. '/stick front' will no longer take the 'long way' around the mob to get back into position. Rewrote the UI window class to fix several bugs. Stripped the command history & output box from the UI window. The UI window should remain up when you are hovering When triggered, BreakOnGM & BreakOnSummon will prevent future commands from being used and output a message, rather than allow the commands to be accepted but then the plugin does nothing. ReturnHaveTarget, ReturnNoAggro, and ReturnNotLooting will now all perform their checks so that if you have multiple options enabled, one will not prevent the other from taking place. Changed the randomize formula a bit, though it may not have helped any. Setting the behindarc setting will actually take effect. Stucklogic should be less aggressive if a character is walking AutoPause will no longer apply if only makecamp is active and not returning Fixed the stick healer / uw parameter bug '/calcangle' has more data added to the output stick commands should no longer cause the character to run in circles around the target (noticeably taking a while to correct itself) if you turned it on when close to the target and facing certain angles. delaystrafe should now work exactly as intended / problem free, and i suggest using it always, especially for those who do not regularly have HOTT data mousepause & mpause will no longer try to resume when the plugin was paused by the user \\(ie /stick pause\\) if you ditch your stick target while mpause / mousepause is in effect, the plugin will take note instantly instead of waiting the normal delay time and then attempting to resume followed by breaking later pause/breakonkb \\(with true movement\\) should not interfere with your keypresses unless your ubermicro beats the speed of the threading. for mpause if you are using the oldstyle movement it will still behave as it did before (if you hold down two keys and let one go, the timer starts from the first key even though you still have the second key held). a bug with zoning while a pause was active causing keybinds movement to be broken while the plugin was loaded has been fixed \\(rare case\\) Development - 9.0608 - verbosity rewrite, stick healer, breakongm \u00b6 Rewrote the verbosity system to be based off bit flags. This allows the user full control of every message that will or will not be displayed by the plugin. Read this wiki entry for the flags table and details on how it works, and what specific messages are tied to what bit flags. I have converted the old system, so if the new system is a bit confusing, verbosity , fullverbosity , autopauseoutput , and totalsilence still work very close to as before. I have not updated the wiki yet with the new commands, Usage: /stick verbflags - Lists your current verbosity bit flags (useful for knowing what to add/subtract from if you want to make a single change) /stick set verbflags # - Sets your verbosity flags to # (where # is the total sum of whatever flags you added up, check the wiki link) note: if you set # to 0 or a negative number, it is equivalent to totalsilence Numerical flags value saves to the INI under [Defaults] as \"VerbosityFlags\" and to [server.char] section as well. The totalsilence option now applies to everything, and not 'almost everything'. Added a new verbosity toggle so that you do not have to memorize 33554431, and may use */stick toggle totalverbosity* to turn on every message possible. Added a new safety option, BreakOnGM. This works similar to BreakOnSummon. When active, it will scan OnAddSpawn for a GM type zoning in. If a visible GM/Guide does zone in, the plugin will halt any active MoveUtils commands and prevent future MoveUtils command usage until you unlock it \\(same command as BreakOnSummon - _/stick imsafe_\\) . I highly recommend you turn on the verbosity bit flags for this if you are using this feature, as otherwise you may wonder why your commands are not working. Usage: /stick toggle breakongm Saves to the INI under [Defaults] as \"BreakOnGM\" Added a new TLO member ${MoveUtils.GM}, which returns TRUE if the GM detection has fired and the plugin is currently locked. Added a new stick type, /stick healer . **This does not work with any custom angles (pin, front, !front, behind, behindonce, snaproll).** This is useful for those who may wish to stick their healer to another group member to keep them following without having them look like they are sticking. **The main difference of this stick type is that until the character is out of stick range, it will not perform any heading adjustments**. For example, currently if you stick your healer to your tank, every time the tank moves the healer would turn to be facing directly at the tank and it is very noticeable. With /stick healer , you can issue a command such as /stick 100 hold healer and as long as your healer is within 100 range of the tank, it will sit still and not turn at all. Once the tank moves beyond 100 range, the healer would then turn to face it and move until it is within 100 range again. If you keep autopause off, targeting yourself while sticking will now halt your movement until you target something else \\(unless you are using stick id/hold\\) . AutoPause on includes this functionality, but if you have it off and switched from an NPC to yourself with moveback enabled, previously you would try to move away from yourself, backing up forever. This displays a message as well, and is tied to the Autopause verbosity flag. Unducking will now also use /stand instead of hitting the duck key, which in very rare cases would also cause a server desync. WTB /stand as a native EQ mappable key. The fullverbosity message for stick will no longer display the mod output unless you actually have a mod active. The fullverbosity message for stick now will reflect HEALER if /stick healer is used. Issuing /makecamp on/player will no longer automatically stand the user up. Fixed a bug with BreakOnWarp / PauseOnWarp when using very large stick distances. Stable - 9.0526 - UI window \u00b6 Added an optional dedicated UI window for the plugin. Usage \\(may use any of the 4 commands\\) : /stick toggle window - toggles window display /stick set font # - sets window font size (1 to 10) /stick min - minimizes the window (like /mqmin) /stick clear - clears the window (like /mqclear) Development - 9.0524 \u00b6 Added two more fixes to help prevent possible turn keys being left on Moveback will wait until snaproll and other drastic heading changes have completed before kicking in. (thanks above posters) Confirmed the 'moveto spinning' reported by Magoo was due to GetDistance3D not reaching its ArrivalDist. All moveto \\(including 'id'\\) and camp returns once again use GetDistance except the special case of /moveto y x z. If you supply a z parameter that your character cannot reach, you will rotate in place above or below the unreachable z point endlessly. Bottom line: use sanity checking on your z locations if you opt to use this. Don't guesstimate. BehindArc can now be set by the user. /stick set behindarc #, saves to the INI under Stick \"BehindArc\" and the CharName sections. Snaproll distance can now be set by the user. This is the distance behind (or in front/side if you are using custom position) the target where the snap location is plotted. For reference, the default has been 10.0. If you frequently snaproll behind targets near walls and other tight objects with a large snapdist set you may run into problems. Usage: /stick set snapdist #, saves to the INI under Stick \"SnaprollDist\" and the CharName sections. New feature 'pauseonwarp'. Instead of breaking from stick like BreakOnWarp currently does, pauseonwarp will stop movement and pause until the target is once again within BreakDist range. Pause or Break, not both at the same time. saves to INI under Stick \"PauseOnWarp\" and command /stick toggle pauseonwarp. Tightened up breakonsummon formula to work more efficiently BreakSummonDist can now be set in game, not just via INI: /stick set summondist # AutoUW defaults to false instead of true. TurnRate minimum lowered from 12.0 to 1.0. if you want to turn slow, more power to you. Useback has been cleaned up and should work more effectively. delaystrafe should work fully as intended and not fail to strafe in some cases - please report any more problems with this as it may need more testing \\(thanks LrdDread\\) /stick id #, with self targeted, will work as intended \\(thanks dkaa\\) /stick hold, followed by /stick without hold will no longer reset incorrectly. if you were previously using /stick hold and then issuing a second /stick to make changes to active stick parameters while keeping the hold going this will no longer work. AutoPause with loose/true heading will no longer attempt to keep adjusting heading, and will halt turning when active \\(thanks LrdDread\\) Changed ${Stick.MovePause} TLO member to ${MoveUtils.MovePause} as it applies to more than stick. ${Stick.Behind} will now also be accurate from the target's right arc, not just the left. Camp returns use their own floats now, so that TLO members such as ${MoveTo.Stopped} and ${MoveTo.CampStopped} are reflected separately. Changed the fullverbosity output for stick from Head \\(fast/true/loose\\) Water \\(yes/no\\) Hold \\(yes/no\\) to only display what is active i.e.: Head \\(true\\) ID \\(31337\\) Head \\(true\\) ID \\(31337\\) UW Head \\(true\\) UW MB \\(the MB is new, and reflects if MoveBack is enabled\\) /moveto loc y x z - will display the z loc in verbosity if used commands that shouldn't have a reason to stand up will not try to Development - 9.0419 - bug fixes, uw enhancement \u00b6 Ending commands & pausing the plugin should no longer cause the turn keys to be left on. Please let me know if there are still cases where the \"spinning\" happens as I may not have got them all. Fixed an issue with stucklogic attempting to get unstuck when it was not. Stucklogic when underwater should no longer almost always think it is stuck. The current formula may not be tight enough so you may run into cases where stucklogic will not get unstuck while underwater. This will need more tweaking in the future. For now, this prevents the endless spinning when underwater. Stucklogic will no longer try to jump when underwater if TryToJump is enabled. Added a new option AutoUW which will automatically turn on underwater face angle adjustments when fully underwater. This will affect moveto and stick commands when active and the plugin detects you are underwater and you have a target. This is enabled by default. If you frequently use /moveto or /makecamp while underwater and having a target unrelated to your destination, you may want to disable this option. Usage: /stick toggle autouw Saves to the INI as AutoUW under Defaults and server.char sections. The /moveto loc command now accepts an optional Z axis. If you use /moveto loc Y X as before, it will behave as it always did. If you use /moveto loc Y X Z , it will now use the Z axis in a GetDistance3D comparison. \\(See Below\\) Moveto now uses GetDistance3D instead of GetDistance to process being in range of ArrivalDist in some cases. If you currently use a small arrivaldist you may need to increase the size if when arriving at the moveto destination your character keeps attempting to reposition themselves. This only applies to /moveto id or if the Z axis is supplied in the /moveto loc Y X z format. This will not affect precisey, precisex, or camp returns. Moveto now accepts the uw and underwater parameters, which will adjust your face angle based on the height and location of your current target. Note you cannot /moveto id uw , but you can /moveto uw id or */moveto id 12345 uw* Loose/True heading anti-orbit angle value is now able to be configured by the user. It still defaults to 32.0f, so if everything works fine for you there is no need to change it. You may adjust the value with: /stick set allowmove # \\(e.g. /stick set allowmove 64.0 \\) Saves to the INI as AllowMove under Defaults and server.char sections. TurnRate cap has been increased from 24.0 to 100.0, though I wouldn't suggest going that high. the pause parameter, and kb/mouse break/pause will now halt heading adjustments for loose/true heading (previously seen example: typing /stick pause and seeing your heading still finish the rotation afterward) gFaceAngle will now be reset by the plugin if moveto, circle, or stick is active (meaning you cannot use /face during those cases). Hitting turn left/right with breakonkb/mpause will once again allow you to continue turning UseBack defaults to false instead of true Added output for GetDistance and GetDistance3D to the /calcangle command. (Able to see the differences in distance to help set arrivaldist values based on your usage) Development - 9.0412 - Major Release \u00b6 All movement is now tied directly to the variables used by eqgame. This plugin now uses self-finding offsets, though they are no different than the current __RunWalkState type of offset provided in the main compile. This has allowed me to end the over-compensation needed to stop movement and prevent the shooting off into the distance that plagued the original version. In testing, movement is less choppy and more accurate than ever before. As an extra precaution, I also have made the applicable keyboard flags reflect being pressed \\(like MQ2's keybinds do\\) while any movement is active. YOU MAY NEED TO READJUST YOUR STUCKLOGIC SETTINGS Along with this comes a new feature, \"true heading\". This uses the actual turn left and turn right movement keys to perform heading adjustments. This is enabled by default as loose heading was before. If you do not wish to use this, you may /stick toggle alwaystruehead to turn it off for good. By using actual turning, the turnspeed multiplier and heading change increments are now 100% legit. Loose heading logic is still provided for those who want to go quasi-legit with a custom turn increment, and fast heading is the same as before. Note if you disabled loose heading because you want fast heading, you will now also need to disable true heading. When enabled (again, it is on by default) it will apply to stick and moveto both, not separately like loose heading works. Ways to use this: /stick ____ truehead _- usable inline with any other parameters /stick toggle truehead - toggle truehead for current command in process /stick toggle alwaystruehead - toggle using it always Saves to INI as TrueHeading under Defaults . This also saves to the character-specific setting if _savebychar is turned on. Added an optional strafe delay timer to prevent instant strafing when mobs turn for a short period of time such as quick spells, or gaining aggro without HoTT. Consider this, properly configured, a replacement to the old nohott and a fix to an issue reported by LrdDread. Ways to use this: /stick toggle delaystrafe - turns the delay for strafe-based movement \\(pin, !front, front, behind\\) on or off /stick set strafemindelay # - sets the minimum amount of time you wish to delay before strafing \\(in miliseconds\\) . The default is 1500 \\(1.5 seconds\\) . /stick set strafemaxdelay # - sets the maximum amount of time you wish to wait before strafing \\(in miliseconds\\) . The default is 3000 \\(3 seconds\\) . Saves to the INI under Stick as DelayStrafe, and StrafeMinDelay / StrafeMaxDelay. The size of the arc for /stick !front is now configurable by the user. You may use: /stick set !frontarc # - Valid ranges 260.0 to 1.0. The default is 135.0 and if you do not adjust it, it will continue to behave like normal. Saves to the INI as NotFrontArc under Stick . This also saves to the character-specific setting if savebychar is turned on. Implemented optional arc randomization for pin/!front/behind. You may enable this with /stick toggle randomize . My formula is pretty basic so it will not be anything special yet, but its a foundation for improvement in the next release down the road. This saves to the INI as RandomArc under Stick , and if you have fullverbosity enabled then behind/!front will also output their arc values to the chatwnd. Added a command, /calcangle , which dumps the value moveutils uses to determine angular dist (useful if you want to configure your !front arc) or know what the randomization values represent. When rewriting loose heading I had inadvertently disabled a feature of the original MoveUtils. With loose heading enabled: when very close to your target it would walk backwards to stick instead of turning to face the target, moving into stick position, and turning to face the target again. This is now enabled by default . I noticed in some cases it can end up causing your character to move in crazy-eight style patterns, and adjusted the math to correct this. Using moveback in your stick commands overcomes that problem with ease, but if you do not like to use moveback and/or run into that problem often, please report a solid way of recreating it here and then consider turning it off based on your play style. Unlike the old moveutils, I have made this feature optional. Ways to use this: /stick toggle useback - turns the backwards walking on and off /stick set backupdist # - how close to the target you can be to use backward walking. The smaller the better . This defaults to 10.0 like the old moveutils Saves to INI as UseBackward and BackupDist under Stick Snaproll now uses GetDistance3D to prevent certain bugs related to being unable to get in range of a target on large slopes. I have left the old line in place so if you have any issues with snaprolls, you may uncomment the old line and comment out the new one \\(fGetSnapDist around line 4100\\) Snaproll now sets the final heading adjustment before handling control back over to normal stick. AutoPause now has an optional message output, so you can have greater awareness of why your character is suddenly standing still doing nothing. You may enable/disable this with /stick toggle autopauseoutput . If this is enabled, it will not respect totalsilence so you will need to configure this on its own. This saves to the INI as AutoPauseMsg under Defaults . MoveTo now has two new BreakOn options \\(my implementation of a suggestion from dkaa\\) . They are different forms of detecting aggro during a /moveto that will halt the command. This mostly assists macro writers in being able to stop moving to a location and handle the event of getting aggro during the move. Ways to use this: /moveto toggle breakonaggro - this will halt the moveto if you gain aggro \\(crossed-swords indicator\\) /moveto toggle breakonhit - this will halt the moveto if you are swung at \\(both contact or miss\\) , if you want to keep moving until something is actually trying to hit you. I have added support for all three types of hitmodes, though if you use the \"number only\", I am only parsing for misses not the numerics and you are annoying to support . If you wish to use this, you should consider switching to abbreviated or normal. Saves to the INI under BreakOnAggro and BreakOnHit under MoveTo . In the event either of these trigger: A new TLO member, ${MoveTo.Broken} will show as true, so that you may see if the event fired. This will not reset to false until the next time you issue a /moveto command. - An output message will display to the chatwnd \\(if you do not have _totalsilence_ enabled\\) Fixed a problem with the /stick pin formula on one side of the target not positioning correctly. Camp returns and moveto's now resume after pausing the plugin and unpausing with /stick pause|unpause . Mousepause will no longer spam if the pause flips active with only a makecamp setup and attempting to auto-return. Makecamp will no longer try to return while mouselook movement is active. Once the return begins and you attempt to use the mouse though it still will not let you, so if you use mouselook movement often consider turning on mousepause or breakonmouse. BreakOnGate has been switched from OnIncomingChat to a Blech event. Please report if this does not work as intended. Bard detection has switched from string parsing to numeric comparison. It will now only check once every time you type a command \\(to support switching to shrouds with the plugin loaded\\) instead of OnPulse. If you switch to a shroud with stick active, please stab yourself and then you will need to end the command and restart it to detect the class change. ReturnNoTarget has been renamed to ReturnHaveTarget , as the naming incorrectly implied the opposite of what it actually does. The command is also updated: /makecamp toggle returnhavetarget . Loose \\(yes/no\\) output in fullverbosity has been changed to Head \\(true/loose/fast\\) MakeCamp Leash and Delay value output has been slightly modified. Fixed some cases where BreakOnWarp and BreakOnSummon would incorrectly fire \\(mainly due to mpause/mousepause\\) and cleaned up the logic. Removed nohott \\(AwareAggro in the INI\\) as it has been nothing but problematic. Removed the MQ2Melee /mutils output Renamed the keybinds, so you may want to cleanup your MacroQuest.ini after loading this. Nerfed the ability to /stick id # to your mount. Nerfed the ability to /makecamp player to your mount. Major plugin logic overhaul, code cleanup, \"best practices\" and general bug fixes. Stable - 9.0314 \u00b6 Fix for strafe not properly turning off in some cases, most commonly if you got on HoTT \\(thanks rswiders\\) nohott option will no longer process when it is enabled and you actually do have the HoTT LAA active and showing you on HoTT \\(thanks fearless\\) nohott should be less aggressive and less prone to spinning endlessly (relates to both fixes above and LrdDread's post a while back) Bug Fix for BreakOnSummon \\(= != ==\\) Bug Fix for Debug options All MQ2Melee exports are now in the release, there will no longer be 2 separate versions of MoveUtils 9.x to worry about if you are using my changes to MQ2Melee. Misc. code cleanup and dewindefification Stable - 9.0225 - minor \u00b6 Fix for verbosity level output bug that has been present since the change to the way this works in November. Stable - 9.0110 - minor \u00b6 /makecamp Y X and /circle y x are no longer valid inputs. this may break some macros. Added new syntax: /makecamp loc Y X and /circle loc Y X as replacements. Please report if any problems or odd behavior due to this change. TurnHalf is now functional again for stucklogic. Saves to ini or toggled via command line: /stick toggle turnhalf Snaproll left/right math corrected by deadchicken Added ${MoveUtils.Version} TLO member by request Stable - 9.0101 - fixes/TLO \u00b6 Most problems reported should be fixed. Get this version and delete your ini file. Anyone that was using loose heading and had issues they should be corrected now as well, as long as you delete your INI file. Corrected a bug with camp return and moveto. Corrected a bug with makecamp return and altreturn if too close to camp. Camp return scattering should once again function as deadchicken intended. CampRadius now stores to the character section of the INI file. Adjusted the default values for stucklogic a bit \\(not the only reason to delete the ini\\) Returned keypress down, up and down, up, down as not having it causes characters to run off into the abyss in some cases. Added New TLO's: ${MakeCamp.ReturnNoAggro} - bool ${MakeCamp.ReturnNotLooting} - bool ${MakeCamp.ReturnNoTarget} - bool ${MakeCamp.Scatter} - bool ${MakeCamp.Bearing} - float ${MakeCamp.ScatDist} - float ${MakeCamp.ScatSize} - float ${MoveTo.ArrivalDist} - float ${MoveTo.ArrivalDistY} - float ${MoveTo.ArrivalDistX} - float ${MoveTo.UseWalk} - bool ${MoveUtils.PulseCheck} - int ${MoveUtils.PulseUnstuck} - int ${MoveUtils.DistStuck} - float ${MoveUtils.TryToJump} - bool === Beta - 8.1227 - bug fixes === note: this was a bad release, if you are still using it, delete it. Cleaned up loose heading function to not set heading to illegal values Removed the excessive double/float conversions. Circle radius and gLookAngle should be the only double math used anymore. Fix for leash bug reported by Kroak Beta - 8.1224 - tweaks \u00b6 snaproll now has a distance check so if it is close enough to the destination it will not try to roll again a very small amount in place. snaproll moves 10 units away, and this new distance check is 5 units. snaproll will now accept destination as a parameter. Usage: /stick snaproll rear \\(normal behavior and not necessary, you can use _/stick snaproll_ as before\\) /stick snaproll face - front of target /stick snaproll left - snaproll to the target's right shoulder /stick snaproll right - snaproll to the target's left shoulder If enabled... stucklogic will no longer try to jump when levitating stucklogic will no longer try to jump if not moving stucklogic will now work if using strafing stucklogic will now be used whenever stick is active, instead of not if you are within stickdist (except the normal skip conditions: summoned, stunned, snared, rooted) Autopause will now apply to rooted No commands will try to move if rooted Fixed pin/!front/rear errors when snared Changed DoMovement to not press up and down again Beta - 8.1221 - deadchicken stucklogic rewrite \u00b6 Stucklogic has gotten a major overhaul - **It is highly recommended that you delete your old INI and re-set / copy over any values you wish to keep not related to stucklogic**. Stucklogic uses new values for a new formula written by deadchicken. This formula calculates your pulse averages based on a table, with greater accuracy than before. The new values are configured as such: /stick set pulsecheck # pulsecheck defaults to 4 this value is sort of what \"stuckcheck\" was before. it serves as the size of your pulse history to be used to calculate your average movement distance. the largest you can set this value to is 32 \\(defined by MAXRINGSIZE\\) . The higher you set this number, the less often stucklogic would misfire \\(so if you are getting the \"jittery\" problem you will want to increase this value\\) . This also means it will take longer to know that it is stuck, so if you are getting stuck and not responding fast enough, you would do the opposite and lower this value. /stick set pulseunstuck # - pulseunstuck defaults to 5 - this value is new - this is the amount of pulses you have successfully moved forward before hard-forcing stucklogic to be considered unstuck. this serves the purpose in that if you were stuck for 20 pulses, your stuck counter would normally try to move forward for 20 more pulses before considering itself free. there was some handling for this that had some issues so now you can set a value such as this one to force a faster \"im unstuck\" process. - the higher your framerate, the higher you want this value. 5 may not be enough on better computers and you may end up getting restuck again, it will look like what we are calling \"snaking\". If you notice yourself \"snaking\" then this would be the first value to try increasing. /stick set diststuck #.## - diststuck defaults to 0.5 - this is similar to before in that it is the amount of distance you need to have moved versus your average pulse rate in order to not be stuck - this value should properly scale for all speeds of computers. you may want to set it higher or lower, play with it and find what works best (and please let us know!!), but keep in mind setting this value to something tiny such as 0.001 as we did in the old logic should no longer be necessary. deadchicken has determined that mindset was only working because of some incorrect math in the formulas. try to stick with more logical values and then reporting back your results would be appreciated. '''The following needs more testing/information: stucklogic behavior when snared stucklogic behavior underwater stucklogic behavior when mounted \\(all different speeds of mounts\\) ''' Please note the old values and logic behind setting them no longer applies. I've changed their names in the INI so that no one can mistakenly use crappy settings because they did not read any of this. Added jumping support, which will try to jump to overcome obstacles. For as simple as this sounds, this will prevent you from getting stuck on small obstacles the majority of the time. It works awesome, to the point we had to disable it to test a lot of the other aspects of the new formulas. This defaults to true, so if undesired you may disable this with /stick toggle trytojump \\(or set on/off\\) Stucklogic now uses GetDistance3D instead of GetDistance to compare movement between pulses, so changes in z axis should be factored into movement. This should correct the bug with stucklogic firing when walking up and down inclines, but please report if it is working as intended or not. It was working correctly in our testing. Rewrote a lot of the main function to reduce the number of evaluations processed per pulse by 30% (made up figure, it was a large portion) Bards can once again use AutoPause \\(all aspects except casting spells\\) /stick snaproll should now be 100% accurate and no longer overshoot the target due to getting stuck along the way. Thanks deadchicken for his camp scatter math which worked perfectly for this formula too. Please report any cases where it is having problems, but I hope there should be none now. Switching targets mid-stick will no longer trigger stucklogic or breakonwarp. If you target a mob that is out of server-update radius, breakonwarp can still fire once you receive accurate location data for the target. Cross-map targeting stuff is bad, let alone with stick still on . breakdist may now be set in game with /stick set breakdist #.## Added a new feature to MakeCamp courtesy of deadchicken: scattering. This is a bit complex but when configured properly it is amazing. The idea behind this is that instead of returning to a random location within your camp radius, you can define a specific bearing, distance, and scatter radius from the center of your camp. This way you could configure your characters to return to specified areas all the time. The INI supports values on a character by character basis as well, so you could configure your tank to return to the center, your casters to return behind the tank, and your melee to return to the sides of the tank. To configure the values the commands are: /makecamp toggle usescatter Turn on/off scattering /makecamp set bearing #.## - set scatter bearing /makecamp set scatsize #.## - set scatter radius /makecamp set scatdist #.## - set scatter distance Leash length can now be set to >= camp radius, instead of just > AltCamp now retains its own radius size. Added new MakeCamp TLO's relating to the distance from your camp. ${MakeCamp.CampDist} - float - distance from your current camp \\(0.00 if makecamp is off\\) ${MakeCamp.AltCampDist} - float - distance from your altcamp \\(0.00 if altcamp has not been established\\) ${MakeCamp.AltRadius} - float - radius size of your altcamp MoveTo now allows for ArrivalDist to be set as low as 1.0. MoveTo now has the option to turn on walk when closing in on the arrival destination to maximize precision. This defaults to true so if you do not want to use this, then /moveto toggle usewalk . Autosave \\(save to INI when issuing a _set_ or _toggle_ parameter\\) now defaults to true. Added savebychar as optional for the INI. Defaults to true as that was the old behavior. Use */stick toggle savebychar* to disable saving/loading character-specific settings. Added optional INI value YourCharName \"DisregardMe=true\". This allows you to use character-specific settings but ignore them on a specific character and use defaults instead. Manually add this line for the characters you wish to use defaults on, and leave it off \\(or you could put =false, but no need\\) for those you wish to continue using specifics. Fixed a crash bug related to using /stick id 2mooks . The \"id\" parameter now enforces all numerics. strtoul ftw. Fixed a bug with stick 'always' not processing mpause/mousepause/breakonkb/breakonmouse if you had a target when you issued the command, until you had no target and got a new target again. Fixed a small bug with min/max delays requiring 126 instead of 125 difference. Fixed a bug where if you unloaded the plugin mid-command walk would be left on. Fixed a bug with breakonsummon firing the first time you issued a command. Disabled advancedautopause as I'm out of ideas. checkbard has been removed \\(forever\\) . Stripped /followpath from this plugin. Use MQ2AdvPath instead. Other new set / toggles: /circle set circleradius #.## - set radius on the fly /makecamp set leashlength #.## - set leashlength on the fly /makecamp set campradius #.## - set camp radius on the fly /makecamp toggle leash - toggle leash on and off Cleaned up the debug command output. Cleaned up the help command output. Added new help command format to display detailed information on the plugins settings as it has grown large. \\(_/stick help settings_\\) All options that could previously be toggled or previously be set on/off now may be used both ways. So for example autopause, you have the option of doing: /stick toggle autopause /stick set autopause off /stick set autopause on Use the \"help settings\" parameter for more information. === Beta - 8.1205 - deadchicken polar math === Corrected the bugs with BreakOnSummon that would cause occasional misfires in /stick , and consistent misfires with /circle . This feature now works as intended \\(and its very useful in gm-detection detection\\) . deadchicken has generously offered up his polar-math code for camp returns, which is much smoother, more seamless, and far more accurate in generating a return to camp. This also makes /makecamp player work much better. Many thanks to deadchicken for this simple yet elegant contribution to the plugin. Beta - 8.1202 - makecamp cleanup \u00b6 makecamp return delay and mpause/mousepause resume delay are now on separate values. They are now able to be configured independently via commandline or within the INI. Important: The old ini values no longer apply, so if you use non-default settings you need to adjust them again based on the following \\(you can use any command, its not restricted to _/makecamp_\\) To set the delays for camp return /makecamp set campmindelay #.## /makecamp set campmaxdelay #.## - - To set the delays for mpause/mousepause return: /makecamp set pausemindelay #.## /makecamp set pausemaxdelay #.## You will now need to use different INI values for these delays. Defaults \"MinDelay\" and \"MaxDelay\" no longer do anything. For mpause/mousepause: [Defaults] PauseMinDelay=125 PauseMaxDelay=250 For makecamp return times: [MakeCamp] MinDelay=250 MaxDelay=500 The ${MakeCamp.MinDelay} and ${MakeCamp.MaxDelay} members now refer to the campmindelay and campmaxdelay settings only There are new TLO members for the pausemindelay and pausemaxdelay settings: ${MoveUtils.PauseMinDelay} and ${MoveUtils.PauseMaxDelay} This change has allowed for the return of inline min/max delay for makecamp, you can use it as it was before. Examples: /makecamp mindelay 150 maxdelay 500 /makecamp on maxdelay 500 /makecamp on mindelay 150 maxdelay 500 There is now the ability to retain an \"altcamp\" location stored. Right now this is only used for one purpose, being able to return to the altcamp location. This is very barebones at the moment, and works as follows You go to a location and turn on a camp \\(ie /makecamp on\\) You turn off your camp \\(ie /makecamp off\\) The location that was your camp is now the altcamp location. You now have two options to utilize the old camp: At any time, as long as you remain in the same zone, you can /makecamp altreturn . This will return you to the altcamp location, aka the location of your camp that is now off. This works how makecamp return with no camp active tried to work, but without the bugs that existed with it. You move to another location and setup a new camp \\(ie _/makecamp on_\\) . With this new camp active, you can /makecamp altreturn . This will turn OFF your current camp \\(so as not to get stuck trying to stay there\\) and move to the altcamp location. * Note: You cannot altreturn until you've setup a camp at least once in the current zone. * Note: The Altcamp values reset if you die or zone. * Note: You cannot altreturn if currently using a player-camp. There are two new TLO members that keep track of the altcamp location. If they are both == 0.0 then you do not have an altcamp setup. They are ${MakeCamp.AltAnchorX} and ${MakeCamp.AltAnchorY} The \"on\" parameter for /stick may now be used anywhere inline again, since removing that broke popular macros like RH. Please note the on parameter is useless in this version of MoveUtils. In the original version it was able to overcome a bug with breakonwarp \\(which is fixed\\) , so now it does nothing that any other /stick parameter does not do. This is only for retro-support, using it in your macros is bad practice. If you use precisey or precisex as a parameter in your /moveto command, it will now display your YDist or XDist values in the output \\(sorry for the long delay in this request\\) Added an experimental features for those of you bards that are having the \"jittery\" problem when StuckLogic is enabled. Following the suggested quickfix earlier in the thread, if you enable a new option checkbard , your speedmultiplier is divided by two if you are a bard class. This only applies to bards, not everyone with selos. This feature is disabled by default, so if you wish to test it, use \\(_/stick set checkbard on\\|off_ then _/stick save_\\) . This saves to the ini under Defaults \"CheckBard\" Turning this on as a non-bard will not do anything, so turning it on for your bard alt and loading up another character will not affect your non-bard. If this solution works, I could work on detecting if selo's is present and open this to all classes, but I think it would be better to find out what the problem in the stucklogic formula is, and try to fix that instead. If you wish to help, please read a few posts back about the formula and issues. For those of you who wish to return to camp when you are outside of the camp radius, regardless of if you have a target or aggro, there is a new option ReturnNoTarget. The previous new feature ReturnNoAggro will ignore target as well, but only return if you do not have aggro. ReturnNoTarget works with ReturnNoAggro OFF, and will return when you exceed the camp radius, target or not. Thanks to Muley for the suggestion. Usage \\(**/makecamp enforced**\\) : /makecamp set returnnotarget on|off This saves to the INI [MakeCamp] ReturnNoTarget=on Identified a bug with snaproll where it would not stop moving/readjust heading if stucklogic kicked in or if the player moved with mpause/mousepause in the middle of the roll. I've taken steps to correct the issue. If you are close to the target, the problem should be gone unless your snaproll runs you into a wall. If you are far away from the target, there is a chance your roll will still continue on beyond the normal distance \\(due to stucklogic or mousepause/mpause\\) but it will now halt if it travels the same distance beyond the target that you were when you issued the command. The problem would still exist if you snaprolled from 100 units away, got stuck along the way, you will run 100 units beyond the mob before snaprolling. I'm working on a better formula to address this problem. In the meantime, snaproll still works as it did before, just with more checking and correction of heading/movement. Shortrolls should have little to no problem. This feature will be improved in the future. Cleaned up the help command output to reflect new settings that were missing, or settings that no longer applied. A few of the newer ones may still be missing. Beta - 8.1123 - loose enhancement \u00b6 Rewrote loose heading to be calculated and adjusted within this plugin, using a fixed turn increment Note: the maximum rate you turn when holding the right/left keys down is 16.0, and hence the default This turn increment can be configured by the user for any number within 12.0 and 24.0 Lower than 12.0 will cause awkward stuttering Higher than 24.0 is noticeable hax and you may as well use fast heading To configure in game, you may use /stick set turnrate 12.0 If you use a value out of bounds, it will not change the rate To configure in the ini, you may use Defaults \"TurnRate\" section If you use a value out of bounds, it will use the plugin default of 16.0 and resave this value to your ini Adjusted /stick snaproll to use this new math, and improved the calculations to determine when to roll so it should no longer roll early Beta - 8.1119 - minor \u00b6 Removed ${Stick.Aggro} TLO Added ${MoveUtils.Aggro} TLO this TLO now functions any time you have a target instead of only when /stick is active This check is still calculated the same way, it is not \"true\" aggro detection This checks your target's heading relative to your heading via angular distance math. If you are facing your target and your target is facing you, you are aggro. If your target is facing you and you are facing AWAY from your target, the math will show your aggro as false ideally this is still only worth using if you are facing your target \\(which _/stick_ always did\\) and not in any other case * By request, added /stick snaproll \\(thanks Agripa for the name, which is based off flight terminology\\) * This command is designed to be used like /stick behind * This runs in a straight line to the rear arc of the target based on your targets heading, spins in place, and then turn on /stick behind automatically afterwards This uses and enforces loose heading/stick, so it will not snap your heading instantly I have not incorporated this into NoHoTT checking so either use this (by detecting ${MoveUtils.Aggro} is true have your macro issue the command) or nohott but dont try to use both together as they do opposite things * By request, added an option to /makecamp , ReturnNotLooting, which will not return to camp automatically until you no longer have a loot window up \\(or manually issued a _/makecamp return\\) _ This defaults to false so everything behaves as you are familiar with If you wish to use this, it can be set up as follows MakeCamp \"ReturnNotLooting\" on/off in the ini /makecamp set returnnotlooting on\\|off Beta - 8.1116 - minor \u00b6 Fix for /makecamp no parameters Added status parameter which dumps the status of the command used, or status all which dumps complete status of the plugin /moveto status will only display info related to moveto, circle status only to circle, and makecamp status only to makecamp all for every command will dump status for every command as well as all other plugin settings These will display regardless of if you have totalsilence set to on Example: /stick status will output MQ2MoveUtils Current Status Stick: Status(on) Dir(Behind) Dist(10.0) Mod(0.0) Mod%(0.0) Loose(yes) Water(no) MoveBack(yes) Hold(yes) Always(yes) Stick: Holding to ID(1115) Name(Guide Peyote) <---only displays if holding Stick Options: AlwaysLoose(on) BreakOnWarp(on) BreakDist(300.00) BreakOnGate(on) Beta - 8.1111 - moveto enhance / misc \u00b6 By request, added new parameters to /moveto loc , precisey and precisex When used these will move in the general direction of the loc specified and stop moving when it gets in the acceptable arrival distance for that location, disregarding the other This is to be used as a trailing paramater to /moveto loc Using it with /moveto id or the new /moveto yloc/xloc will likely cause problems so don't do it Usage example: /moveto loc -100 -200 precisey - will head towards -100 -200, but stop when it gets within acceptable Y arrival distance even if your loc is -100 -500 - This is not the same as new command */moveto yloc/xloc* in that it does head in the desired direction first until it reaches the \"precise\" desired - The other command below will beeline with no regard to the other coordinate Added two new settings to support the precisey and precisex trailing parameters These also save to the ini under MoveTo as \"ArrivalDistY\" and \"ArrivalDistX\" Usage: /moveto set xdist 10.00 /moveto set ydist 10.00 (default is 10, can use any .2 digit float) Changed INI setting for MoveTo \"ArrivalDistance\" to \"ArrivalDist\" Added /moveto yloc \\# and /moveto xloc \\# which will use your current x \\(yloc\\) /y \\(xloc\\) and beeline for the x \\(xloc\\) or y \\(yloc\\) you requested Included fix for /moveto dist reset problem reported by KFH By request, added a new option for makecamp returning only if not aggro currently if you have a camp setup makecamp will return to camp if you are outside of the camp radius and do not have a target. this is still the default, so if you like this, you don't have to do anything if you wish to change this so that you will return only if you are not aggro, with or without a target, you can enable this using: /makecamp toggle returnnoaggro - this will also save to the ini under \\[MakeCamp\\] \"ReturnNoAggro\" (on/off) Makecamp returning on its own \\(meaning any case other than typing in _/makecamp return_\\) will no longer display the \"Arrived at /moveto location\" message Makecamp returning on its own will no longer display halt/pause messages when using breakonkb/mouse or mpause/mousepause since it continually will retry until camp is turned off using /makecamp return still will display the messages Makecamp returning on its own now respects mpause/mousepause and will not try to fight you for returning to the camp Moved toggle and set parameters to their own function mindelay & maxdelay can no longer be used inline as a parameter since they apply to multiple things and this created some problems. instead they are now adjusted with the set parameter \\(any command\\) the minimum for mindelay is still 125, so if you try to set this lower it will default to the plugin default \\(500\\) the minimum value for maxdelay is still mindelay+125, so if you try to set this lower it will set to current mindelay+125 Usage: /stick set mindelay 125 /circle set maxdelay 250 Updated AutoSave to only save if you adjust a setting with toggle or set instead of every time a command is typed since that makes more sense and is less resource intensive Added rswiders' change for bRunNextCommand = true for the 4 main commands \\(followpath still getting overlooked\\) Lowered default camp radius from 100 to 40 LeashLength can now be set = CampRadius in the ini instead of CampRadius+10 Made a new ResetCamp function to reset camp values similar to EndPreviousCmd for the other 3 commands Entering valid parameters followed by an invalid parameter for /stick, /moveto and /circle will no longer output help and continue trying the command, the command will now fail turning a command off or typing a new command that resets a previous command with loose heading will halt the loose heading from trying to finish turning. same applies when using loose moveto when you have arrived at your destination, it will no longer continue turning once it has arrived \\(previously only noticeable in short moveto's\\) /stick toggle spinme for use with /stick front has been removed. This is now set with */stick toggle nohottfront* and saves to the ini under Stick \"AwareNotAggro\" \\(on/off\\) so you only have to type it once if you wish to use it To stay in line with this change, previous \"AggroAwareness\" \\(on/off\\) in the ini renamed to \"AwareAggro\" (*value for the nohott option on/off*) Adding on to the ability to /stick set stucklogic on/off , you can now set more values. \"stuckcheck #\" and \"stuckdist #\", i.e.: /stick set stuckdist 0.001 /moveto set stuckcheck 8 StuckDist, StuckCheck, and TurnIncrement can no longer be set to zero in the ini or via command. If you want to disable stucklogic use /stick set stucklogic off instead You are now able to disable stucklogic's check for if you are facing exactly halfway away from your destination to start turning back the same way it was turning from This is currently only in the INI but will soon be added to the set parameter StuckLogic \"TurnHalfway\" \\(on/off\\) Beta - 8.1101a - CTD fix \u00b6 fix for ctd more checks added to prevent future ctd (*thanks ieatacid & dkaa for help finding the reason: dont call ExecuteCmd to press keys if not in game*) Beta - 8.1030 - minor bugfix \u00b6 Keybinds will no longer interfere with normal gameplay if a command is not active (*or if stick always is on but you do not have a current npc target*) Beta - 8.1029d - sit/stand bug finally gone \u00b6 Changed all references of GetCharInfo to check pCharSpawn \\(which we determine is valid first\\) Fixed circle 'alwaysccw'/drunk/etc & stick alwaysloose values to not reset after one usage ${Stick.Aggro} TLO now returns TRUE/FALSE regardless of if you use the nohott option *(true is determined if you are within the front arc of the target you are facing )* Changed the method of standing up from ExecuteCmd \\(sit\\_stand\\) key to EzCommand \\(\"/stand\"\\) to play nice with MQ2Melee and not offer an opportunity for this plugin to force you to sit down under any circumstance Determined that /circle and breakonsummon math \\(uses breakonwarp math\\) do not play nice together This only affects /circle so don't use breakonsummon with circle for the time being If you are good with math / angles / etc. \\(I'm not\\) and want to help out look at the notes in the To-Do post Fixed loose stick/moveto fighting you for the heading still if using mpause/mousepause/breakonkb/breakonmouse Fixed mpause resuming the command if you pressed down two keys at the same time, such as move forward and right, but only let go of one of them Mousepause now breaks movement since you have to press+hold the right button before the left button to move unless you've got uber micro... In finding the fix for mpause key releases I came up with a solution for mpause leaving you moving fowards even if the key you pressed was strafe_left for example It should now stop all movement and repress whatever key you pressed so that your movement was not interrupted Beta - 8.1029 - new features / misc \u00b6 Fixed the crash bug related to v2008-10-26 Removed redundant check. thanks goes to ascii and dkaa for help in indentifying it. Fixed another potential crash bug. thanks goes to ieatacid for help in identifying it. Another fix attempt at sit/stand bug Added an option for always loose stick now that it uses deadchicken's improved logic. You can turn this option on with /stick toggle alwaysloose just as moveto's has been set with /moveto toggle alwaysloose in a previous update Updated /moveto toggle loose and /stick toggle loose to toggle loose on and off, since supplying it in the command will always turn it on These are independent, meaning if you use /moveto it will not toggle stick's loose, and if you use /stick it will not toggle moveto's loose Identified that on some newer computers \\(it also might relate to duo/quad core cpu\\) that stucklogic even at 0.1 can cause absurd behavior such as random camera angle jerks. deadchicken has some ideas on rewriting this whole process, but for the time being I discovered that if we allow the value to be set to smaller numbers it will improve. On one of my duo core boxes it was always having problems to the point I had to turn it off. I found with setting the value to 0.05 those problems went away and stucklogic worked better It still has problems with the way the math works, it does not properly attempt to work its way around all angles to break from stuck If it reaches exactly the halfway point \\(facing the exact angle away from your target\\) it will start turning back towards the target. This is most noticeable if you are stuck in a corner or doorway To fix the duo-core/faster cpu issues, the value for stucklogic now may be set up to the hundreths The minimum value you can now use in the ini is: 0.001 Added a new \\(long overdue\\) parameter to stick: /stick front If you lose aggro (or use this command on a non-tank to help control push and the mob aggros someone in the rear), you will be spinning endlessly trying to get to the front of the mob By default, if you have access to Health of Target's Target and you are not the target, you will not try to spin with the mob to stay in its front arc For those who do not want that, or for those characters you desire to be in the front arc that will not be the one's on HoTT, you can bypass this with the following toggle: /stick toggle spinme You will then always stick to the front, no matter what, if using /stick front parameter Made major improvements to the NoHoTT aggro detection The way this works is if you are using any arc enforcement other than /stick front (meaning pin , !front , behind ), and you do not have access to Health of Target's Target data, this feature will detect if you are aggro by checking if the mob's heading is pointed towards you If so, it will slide you slightly to the side, and stop for around 7 seconds, then attempt to continue sliding back into position. If the mob is still facing you, it will assume you are aggro, and repeat the process. If the mob is no longer turning with you, you will resume sticking to your prior arc choice * Using /makecamp off will now halt a makecamp return if its currently happening when you issue the off command * Using /makecamp return will no longer work if you do not currently have a camp or camp-player active * Rewrote all WriteChat output to use a new custom function WriteLine, to support the following request * By request, there is a new option added to verbosity, TotalSilence * This can be turned on using /stick set totalsilence on \\(or _/moveto_, _/circle_, and _/makecamp_\\) * This can be turned off using /stick set totalsilence off \\(or _/moveto_, _/circle_, and _/makecamp_\\) * This option will reduce the output to only major events such as the actual toggle itself (totalsilence on, totalsilence off), the help output only if you type '/command help', breakonsummon firing (since it requires you to type '/command imsafe' in order to resume anything), and a few other drastic errors All other output will be suppressed This option saves to the INI and is disabled by default Turning verbosity or fullverbosity back on will disable totalsilence You are no longer allowed to stick to yourself with certain parameters. Sorry for this nerf You can now set your leash length to >= camp radius in the ini, instead of >= campradius + 10 Generic code cleanup and bug fixes Beta - 8.1026 - minor \u00b6 More changes to 'always' stick parameter. Really trying to clean it up a bit more. Fix for my creating a new sit/stand bug by fixing the old one (*setting standstate while dead = bugged until zone out*) Related to above, death should now break all commands except makecamp (*will resume if you get res, but will break if you exit zone*) /stick with invalid parameters will no longer stick Fix for mpause/breakonkb with 'always' Added 'TotalSilence' option to ini that will not display any output except critical errors, breakonsummon notification \\(_since it halts command usage entirely until you turn it off_\\) , and help output if you manually type /stick help Generic code cleanup and bug fixes Beta - 8.1025 - bugfixes \u00b6 Attempted a fix to the long-standing SIT/STAND bug. Major thanks to frostx for supplying me with a ton of information on how to recreate it. Fixed a bug with distance to target not being reset after a stick command was used and ended. this had behavior of sometimes causing breakonwarp messages to fire if the target was outside of breakdist range when you issued a following command. This only applied to certain parameters \\(_i.e. /stick \\#, /stick behind/pin/!front_\\) , and not with anything that set the distance \\(_/stick, /stick on_\\) . Major thanks to frostx for supplying me with a ton of information on how to recreate this so I could find the cause. That's twice! Fixed a crash bug with \"id\" if used with invalid id. \\(_/moveto_ and _/stick_\\) Added Dist and Loose values to /moveto verbosity output Added more checks to prevent stick \"No Target\" error msg instead of halting command attempt if the command requires a target. You will still see the \"You must specify...\" message as normal, but this fix relates to the \"You are now sticking to NO TARGET ERROR\" message Fixed a bug with strafe being held down sometimes, keeping you sliding sideways when you should have stopped Fixed a bug with /stick parameters always checking events for breakonsummon, mpause/mousepause/breakonkb/breakonmouse when you did not have a target. This will now only make those checks if you have a valid npc target and are currently sticking to it Beta - 8.1024 TLO adds / settings rewrite \u00b6 Removed the following TLO members (*${Circle.Summoned}, ${Stick.Summoned}, ${MoveTo.Summoned}, ${Stick.Stuck}, ${MakeCamp.InUseBy}*) Added a new TLO ${MoveUtils} with the following members: ${MoveUtils.Stuck} - TRUE / FALSE - \\(former stick.stuck\\) ${MoveUtils.Summoned} - TRUE / FALSE \\(former everything.summoned\\) ${MoveUtils.Command} - NONE / STICK / CIRCLE / MOVETO / MAKECAMP this is the replacement for makecamp.inuseby MAKECAMP will only show up if nothing else active if you have makecamp on and stick active, STICK will be the result ${MoveUtils} returns this same information ${MoveUtils.StuckLogic} - TRUE / FALSE \\(if you have stuck logic on or not\\) ${MoveUtils.Verbosity} - TRUE / FALSE \\(if you have verbosity on or not\\) ${MoveUtils.FullVerbosity} - TRUE / FALSE \\(if you have fullverbosity on or not\\) Added new members to ${Circle} TLO for those of you who prefer true / false: ${Circle.Clockwise} - TRUE / FALSE \\(circle.rotation still shows CW/CCW\\) ${Circle.Backwards} - TRUE / FALSE \\(circle.direction still shows FORWARDS/BACKWARDS\\) BreakOnSummon no longer fires if only makecamp is on. it will fire if makecamp is attempting to return to camp though since that turns moveto on, which is checked Added the same fix from the previous posts for turn-walk-off adjustment to mouse pause as well. breakonmouse did not have this problem, only pause In the process of changing the syntax of anything that toggles to be able to be toggled as well as set via on / off. I'll also be adding the ability to set just about anything that should be modifiable using this same foundation. This already is a major change to the syntax of most every toggle I've added so please take note: The help output doesnt reflect any of this yet. Where /command can be \\(/stick, /moveto, /circle, /makecamp\\) //The same as before /command help /command debug /command pause /command unpause /command save /command load /command imsafe //Different: \"set\" - this is just a basic foundation /command set verbosity on|off /command set fullverbosity on|off /command set stucklogic on|off //Different: \"toggle\" - this is used to toggle values /command toggle mpause /command toggle mousepause /command toggle breakonkb /command toggle breakonmouse /command toggle autosave /command toggle feign /command toggle autopause /command toggle advancedautopause <---still doesnt work any better dont bother using really /command toggle stucklogic /command toggle verbosity /command toggle fullverbosity /command toggle nohott /command toggle hidehelp /command toggle breakongate /command toggle breakonwarp /command toggle alwaysdrunk /command toggle alwaysbackwards /command toggle alwaysccw /command toggle alwaysloose <---this only applies to moveto atm /command toggle breakonsummon /command checkifstuck is forever removed. use toggle stucklogic or set stucklogic on\\|off Preserved the values for 'ArrivalDist' and 'MoveToMod' in the ini since they were defaulting back to plugin-default values instead of your own custom settings. Will apply this to most everything else in the near future. Fixed mpause resuming no command if makecamp was active by itself. it should still resume an interrupted return to camp. Beta - 8.1023 - minor \u00b6 Added \"Stuck\" TLO ${Stick.Stuck} - FALSE / TRUE - (true if stucklogic detects you are stuck Added a turn off walking adjustment to BreakOnKB to fix a bug with walk being left on Beta - 8.1019 - cleanup \u00b6 StuckLogic fixed. I loaded a session running old source and one running beta source side by side on 2 screens and it behaves the same way on both. Its sloppy and could use work but it was not functioning at all before so now it functions like its used to. I used the preferred settings posted earlier in the thread so please report any differences on other settings. The TurnIncrement of 10 seems to take forever to unstick in tight areas (hallways, small indoor rooms), so I upped it for myself to much better results around 35.0, you may want to try a higher value here if you use this indoors. outdoors might only need small increments StuckLogic now turns on walk when its stuck also, to help reduce getting unstuck only to get restuck because of a burst of speed in hallways and tight corners /stick loose - now uses deadchicken's /moveto loose improvements this will now spin before moving if the heading to the target is greater than \u00bc a turn this should be much more functional and cut down quite a large amount of the orbiting and getting stuck due to loose sticking after playing with it for a good hour in multiple situations, I can say it looks much more natural than before and could be used viably in situations where the fast facing would not be acceptable. test it out by adding 'loose' anywhere in your normal command line for /stick *Drunken circle still needs to be looked at because circle and stucklogic are having issues when you turn on circle next to a wall, which I don't know why you'd ever do that, but the circle gets stuck running forward indefinately \\(in both versions of the source it looks like\\) so I need to track that down before bringing circle over to the new loose logic* * Added /moveto toggle loose - to turn off loose without moving, since /moveto loose always forces it on Beta - 8.1018 - cleanup \u00b6 Fixed a bug with /stick uw | underwater not working BreakOnSummon now applies to all commands, not just /stick Updated BreakOnSummon to be more assertive. If BreakOnSummon fires, it will prevent any future command usage in case your macro continually reissues a /stick, /circle or /moveto command When this fires this will display a warning message and notify you There is now a new parameter to reset this, /stick imsafe , which will allow command usage once again For macros that may continually trigger BreakOnSummon, but you still want to use it, there are new TLOs: ${Stick.Summoned} ${Circle.Summoned} ${MoveTo.Summoned} - TRUE / FALSE These apply across the board, meaning they all will be true or they all will be false, so use whichever you like. So in theory if you know something is going to fire breakonsummoned but you still want to use it for other cases, you could issue the command, check the state of the TLO and then have your macro issue a /stick imsafe to undo the command halting BreakOnSummon defaults to false now instead of true since its more assertive Fixed a bug with BreakOnWarp where if you have a camp setup and you issued a /stick or /moveto it would report that mob had warped out of range when the mob never really moved to begin with. If you are leashed you should still not be able to go to the mob, just for different reasons Renamed TurnDirection \\(ini setting\\) to TurnIncrement to be more appropriate for what it actually does. Thanks to deadchicken, /moveto loose is improved. There is now an additional check comparing your current heading to the heading you want to go to, and if its larger than a \u00bc turn, you will spin before you begin moving instead of trying to spin while moving. This prevents the endless \"orbiting\" in circles without ever being able to reach your destination LooseMoveTo in the ini \\(always use loose when using _/moveto_\\) now defaults to true because this is really superior now, and you should use this to prevent the fast facing that goes on if its false. It is very noticeable and detectable. Should you still want the fast facing, then you can either set LooseMoveTo to 'off' in the ini, or type /moveto toggle alwaysloose to toggle it off, then issue a /moveto save to save it to your ini as well /moveto toggle alwaysloose is restricted to the /moveto command, and doesnt work if you use /stick or /circle . I plan to keep them command-based in the future as well Starting to add more comments to the source for those of you trying to learn how it works Beta - 8.1015a - breakonsummon \u00b6 Added a new feature, BreakOnSummon This command works like BreakOnWarp except it checks the distance change of your own x / y locations from pulse to pulse, not related to the mob If your own x / y changes too drastically, with this enabled it will halt all commands. This is useful for COH, or mob summon \\(though I guess not if to the mob you are sticking\\) , but more important if you are summoned by those invisible people in short distances where breakonwarp normally wouldn't fire due to what they do, small repeated summons, doesnt matter with the large distance check you want to use for mob-warp checking. this one you can safely set to a small amount and not worry about your stick breaking from mobs warping small distances the default is set to 20 soas not to interfere with summon from mob you are stuck to, but it may need to be set smaller to be effective, or larger if the mobs you fight you get summoned more than 20 range. it seems the max you move onpulse is around 2.0 with runspeed5, but bard or mount may be higher than that Added new INI settings for this Stick 'BreakOnSummon' - on / off Stick 'BreakSummonDist' - distance to consider summoned \\(default 20.0\\) Added toggle: /stick toggle breakonsummon Related to this, I fixed a since-inception bug with breakonwarp that only worked on half of the angles from your mob. the math \\(if sqrt\\(yourdist\\) - sqrt \\(mob dist\\) > breakdist) never worked when the differences were negative. now they do. Beta - 8.1015 - pause logic \u00b6 mpause, if set to ON, will now apply to mouselook as well. you can mouselook or mouselook+left click to move around and it will return based on min/max delay if mpause is set OFF, unlike pressing a key, mouselook will not break your command it will no longer fight with you for the heading. it will allow you to move with the mouse but once you let go of mouselook it will resume the previous command immediately. /stick toggle mousepause this works independently of mpause now. its optional and works identically to mpause for keyboard movement. it saves to the ini as MousePause as well. if turned on, any movement of the mouse while mouselook (turn head with right-click-hold only, or move by right-click-hold plus left-click) will pause the command and return after the min/max delays. if its turned off it will behave like it always did and fight with you for the heading if you try to do anything. to overcome that there is now another option * /stick toggle breakonmouse * this works like mpause=off used to work for keyboard movement * if you move the mouse while a command is active, it will break from the command altogether * you can set this under Defaults 'BreakOnMouse' in the ini * /stick toggle breakonkb * this works like mpause=off used to * mpause=off will not break from your current commands any longer, it will resume immediately as opposed to with a delay, and fight you for the keyboard. you need to set breakonkb or \\(BreakOnKB in the ini\\) the way you like it breakonkb will default to true since this was the old default behavior Pause and break turn each other off, but do not turn the others on. You can have mpause and breakonkb both off, but breakonkb on = mpause off and mpause on = breakonkb off. If you like and use mpause, but decided to try breakonkb, then turned breakonkb off, mpause needs to be turned back on trying to turn both true in the ini will result in breaks being off and pauses being on. ManualPause changed to KeyboardPause in the ini. command still is mpause though. Fixed a bug with /makecamp on \\# /makecamp radius and /makecamp on \\# and /makecamp player and /makecamp y x commands now also enforce leash size update if leash is smaller than camp radius \\(before only /makecamp with no params did this\\) Put the stick dir \\(normal\\) dist \\(\\#\\) mod \\(\\#\\) hold \\(no\\) loose \\(no\\) msg on verbosity instead of fullverbosity Failing to input a command-specific parameter correctly will no longer issue help for the entire plugin, only the command it relates to. Typing '/command help' if HideHelp option is on now assumes you wanted the display and will output the help one time instead of blocking it in this case. Beta - 8.1014 - TLO adds \u00b6 Added New TLOs: ${Stick.DistMod} - value set with /stick mod # or /stick -# ${Stick.DistModPercent} - value set with /stick #% ${Stick.Always} - PAUSED / TRUE / FALSE - \\(true if '/stick \\[parameters\\] always' was activated\\) ${Stick.Aggro} - PAUSED / TRUE / FALSE - \\(true if NoHoTT detects aggro\\) Help output completed, hence the new hidehelp option since it is spamcity INI Revamp - ini file now breaks down into logical sections Defaults Stick Circle MoveTo MakeCamp StuckLogic your-char-name INI file supports many more features. I suggest you backup your current one and delete it, then log in game and /stick save to output a new one. Then edit in your old values from backup and save the file and then /stick load. That way you can see all the new features organized correctly. Loading all values from Defaults will no longer work in this version, but some still remain there. New INI Options Defaults 'HideHelp' - never display spam-filled help syntax Stick 'AwareAggro' - NoHoTT checking on/off Stick 'StickDistMod' - always use specific dist mod Stick 'StickDistModPercent' - always use specific dist mod percent MoveTo 'ArrivalDist' - max dist from moveto loc that is acceptable MoveTo 'LooseMoveTo' - always use loose heading MoveTo 'MoveToMod' - always use specific moveto dist mod Circle 'AlwaysBackwards' - always run backwards Circle 'AlwaysCounterClockwise' - always run in a counter-clockwise circle Circle 'AlwaysDrunken' - always use drunken movement Circle 'RadiusSize' - always use specific radius size New primary command parameters \\(_usable with /stick, /moveto, /makecamp, or /circle_\\) : /stick toggle hidehelp - toggle hidehelp on/off /stick toggle breakongate - toggle on/off /stick toggle breakonwarp - toggle on/off /circle toggle alwaysdrunk - toggle default to drunken /circle toggle alwaysbackwards - toggle default to backwards /circle toggle alwaysccw - toggle default to counterclockwise issue a '/stick save' afterwards to write these changes to ini if desired Experimental new command : '/stick advancedautopause' this will attempt to turn on walk, stop moving, turn to the right to force a position update to prevent casting while moving from getting interrupted. i dont know how well it will work or not, since the current implementation only is good for stopping you from moving if already stationary then casting. *this doesnt work, need a better way to check if casting before the bar pops up* Beta - 8.1013 - minor \u00b6 My attempt to fix the negative stick/movedist halting movement broke the mod applied and forced a very close stick value. Fixed this. You can now set the modifier independently. This will not turn stick on or modify current stick, just change the base value. Before you had to set the mod with: /stick -5 This would subtract 5 from whatever value you used (or mob melee range, which i believe is the intention of this whole thing) every time. It defaulted to 0, but once you set it, you were stuck with negative forever. - Now using */stick mod \\[#\\]*, you can: - reset it to zero (*/stick mod 0*) - or use a positive number (*/stick mod 5* would make */stick 10* function as */stick 15*. This will defeat the purpose of melee range checking but would be good for increasing the number for macros that use too small of number or something along those lines. It is there if you can find a use for it. Added output for modchanges without any verbosity check \\(will move it to Verbosity once its all correct\\) so you can see these actions taking place. FullVerbosity also displays the mod on every use of /stick. Added toggle for Verbosity option Added toggle for FullVerbosity option Beta - 8.1012a - minor \u00b6 Added Circle TLOs \\([string]()\\) - ${Circle} - ON / OFF / PAUSED \\([string]()\\) - ${Circle.Status} - ON / OFF/ PAUSED \\([float](../../../reference/data-types/datatype-float.md)\\) - ${Circle.CircleX} - location of the center X \\([float](../../../reference/data-types/datatype-float.md)\\) - ${Circle.CircleY} - location of the center Y \\([bool](../../../reference/data-types/datatype-bool.md)\\) - ${Circle.Drunken} - TRUE / FALSE \\([string]()\\) - ${Circle.Rotation} - CW / CCW \\([string]()\\) - ${Circle.Direction} - FORWARDS / BACKWARDS Added the ability to change circle radius Before you had to re-issue /circle on \\# to change the radius \\(size\\) of the circle. This would plant the anchor where you were at, forcing you to reset any custom anchor or options. Now you can do this: /circle radius \\# - will keep circling but increase the radius on the fly Removed the ability to do /moveto dist/-dist because it was having conflicts. To set the moveto distance now you need to use: /moveto dist \\# - to set distance /moveto dist -dist - to subtract from currently set distance You can no longer set stick or moveto distance to a value below 0. Negative numbers halted all movement so any attempt to do so will force the distance value to 1. Beta - 8.1012 - makecamp player \u00b6 Fixed two more crash bugs \\(thanks ieatacid\\) Added /makecamp player name Makecamp player works if you supply a valid name of a PC in the zone uses your current target \\(fails if target is not SPAWN\\_PLAYER\\) if you do not supply the name. This will create a dynamic camp based on the location of this player as they move, using the current 'radius' and 'leash' values that you are used to. This works like a ghetto autofollow and actually appears somewhat natural because it uses moveto logic instead of stick logic. This means no fast/loose facing the person, just moving to their general area \\(which is cool\\) . If the camp is based around your puller, that is a bad idea, don't do it. If the person you supply is really far away when you issue the command, it may have trouble getting to them. If the person magically warps/gets summoned way far away, it will likely have problems. Also note this still uses the mindelay and maxdelay values for deciding when to move, so it will look like you are really two/three/four/etc-boxing and moving them if you set the values correctly. The downside to this is that if the character is on the very edge of the leash length and you are taking small steps forward it will take its own small steps forward as well, based on the min/max delays, so that can look weird Beta - 8.1011 - minor \u00b6 attempt a fix at a crash bug related to verbosity output. Went through the whole source and that was the only time the writechat was used incorrectly in that way Please report any occurrences of new \"NULL POINTER ERROR\" message or new \"NO TARGET\" error message (both relate to only the verbose output for /stick) and how to reproduce it The old NULL POINTER message still exists as it always did in original moveutils Beta - 8.1002 - complete rewrite \\(first beta\\) \u00b6 Command Syntax - Many base commands all can be used from every command i.e. /circle load, /stick load, /makecamp load, /moveto load - all will do the same thing * INI File - many more settings supported INI File Verbosity - Changed from 1/0 to on/off. It will auto-correct old files, so you dont need to mess with it. Just a FYI. Output - drastically changed, may break macro events \\(tried to keep the most common ones the same\\) Issuing one command completely ends the other - This does not apply to /makecamp, only /circle, /moveto, and /stick Feign Support - added feign parameter or FeignSupport in the INI. When enabled this will not begin your command if you are FD until you manually stand up * AutoSave - automatically save ini like old save cmd \\(/stick save\\) every time you change a setting New TLOs \\([string]()\\) - ${MakeCamp.InUseBy} - which command is active \\([string]()\\) - ${Stick.StickTargetName} - name of stick target if using /stick id, or /stick hold, otherwise will be target name/NONE * Additional Verbosity - fullverbosity option \\(ini file\\) to output more detailed information. original verbosity still exists and fullverbosity does NOT turn on original stick verbosity messages. you have to set each independently * StuckLogic Toggle - added a toggle for stucklogic, no longer need to reload ini file * AutoPause Toggle - added a toggle for autopause, no longer need to reload ini file * New Stick Parameter 'always' - Usage: /stick [other parameters] always Putting 'always' at the end will not require another /stick after you lose your target \\(i.e. mob dies\\) . This behaves the same way as if you /stick something, then change the target before it dies which uses the same settings as the last time you typed the command. This does not work with stick hold or stick id. This only works with NPC targets \\(not their pets\\) , so changing to other target types like PC, chest, corpse, etc. will not make you run around constantly. This works great if you pass targets with EQBC for example. Using this on your puller or when cross-zone targeting will probably cause you problems. This setting cannot be saved and will reset upon any new command typed by design because of its potential misuse. Don't ask for huge features on this. I can see it being used carelessly so be careful. * Check for aggro if you dont have HoTT - this is experimental and still needs improvement Original - 8.0913 - first moveutils change \u00b6 every 'break' function that used this method to stop moving seems to be failing: MQ2Globals::ExecuteCmd(FindMappableCommand(\"forward\"),0,0); Changed the ExecuteCmds to supply a down then up to stop the issue: MQ2Globals::ExecuteCmd(FindMappableCommand(\"forward\"),1,0); MQ2Globals::ExecuteCmd(FindMappableCommand(\"forward\"),0,0);","title":"MQ2MoveUtils:v11 Revisions"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#mq2moveutilsv11-revisions","text":"__FORCETOC__","title":"MQ2MoveUtils:v11 Revisions"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#mq2moveutils-v160-revision-history","text":"","title":"MQ2MoveUtils v16.0 Revision History"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#patch-fix-for-16-nov-2016","text":"Applied changes necessary because of the Nov 16 th 2016 patch. \\(trevyn\\)","title":"Patch Fix for 16-Nov-2016"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#made-in-notepad-only-v160717","text":"brainiac loves the D Fixed this bad code, a bug in the source for years that has always been wrong","title":"Made in Notepad only - v16.0717"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-v140416","text":"Added Circle Strafe Ability \\(Cr4zyb4rd\\) /stick strafe \\[left\\|right\\|flip\\|random ] Continuously strafes in one direction regardless of distance to target with no target-of-target check. left|right - direction to strafe flip - strafes in opposite direction of last strafe command random - strafe direction chosen by luck I've found using /stick strafe flip 50 moveback loose lets me bow-kite a snared mob in a pretty tight circle, and I can just hit the same key again if I get too close to a wall or something and need to change direction. The only issue I've had is that mq2melee turns off all stick commands when it flips from melee to ranged mode, but I figured that's a problem better solved there than lying to mq2melee about what we're doing.","title":"Stable - v14.0416"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-v110410","text":"Added Flexible sticking /stick set flex on /stick set flexdist #.# between 2.0 and 20.0 Saves to INI under Stick as UseFlex=on/off and DistFlex=#.# inline as /stick whatever useflex flexdist #.#","title":"Stable - v11.0410"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-v110323","text":"Fix for brainiac's bullshit. Added ascii's VC6 auto-detection","title":"Stable - v11.0323"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-v110319","text":"VC6 people can uncomment this line: //#define OLD_COMPILER_USER StickCommand \\(\"unpause\"\\) called via export will have a potential \"plugin was not paused\" error message auto-squelched. Added BreakOnHit option to Stick \\(thank dkaa\\) /stick set breakonhit on \\<---perm /stick 12 breakonhit \\<---inline saves to ini under Stick as BreakOnHit=on new TLO for this ${Stick.Broken}, which resets upon zone / next stick command usage","title":"Stable - v11.0319"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-v110101","text":"${Stick.Behind} now works when no commands are active. /moveto now has a new parameter mdist , allowing you to change moveto distance on the fly instead of having to issue a set or /moveto dist # command prior to the actual moveto command. I left the old dist as-is to not cause macro conflict. Note: In the case of id , you must use mdist first if you are not supplying the spawn id, i.e. /moveto mdist 100 id NOT /moveto id mdist 100 \\<----fails Dist3D change for snaproll to help when levitated now permanent.","title":"Stable - v11.0101"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-v91231-tlo-cleanup","text":"${MoveTo.Stopped} now reflects if the last /moveto command completed successfully. Previously it measured if you were within your ArrivalDist of the last moveto location used. If you were using this data for that purpose be aware if you move away from your /moveto location it will show as TRUE now. This will reset to false the next time you issue a /moveto command and upon gamestate changes. Fixed the PAUSED status for the following TLO's with no member: ${MoveTo} ${Stick} ${Circle} ${MakeCamp} ${MoveTo.Broken} once again functions as intended.","title":"Stable - v9.1231 - TLO Cleanup"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-90907","text":"Bug fixes for 0817","title":"Stable - 9.0907"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-90817-non-linear","text":"Major Changes The old style of movement has been reintroduced for WinEQ users i.e. those of you with problems of mouselook or strafe keys being left on when you alt-tab to switch sessions. You may switch over by using: /stick set wineq on This saves to the ini under Defaults as WinEQ=on/off The true movement ability no longer makes the plugin offset-dependent. In the event the offset pattern changes and true movement is not established, the plugin should revert to the old style of movement so there would be no downtime or need to downgrade while waiting for an update. Heading settings are no longer command/INI situational. It applies to the plugin across the board. You may still apply inline adjustments for single command use only. To change plugin default headings, use: /stick set heading true /stick set heading loose /stick set heading fast saves to the ini under Defaults Heading and character-specific section All commands now reset to INI \\(user, not plugin\\) defaults after each use. The INI no longer reloads every time you zone. It will only unload and reload defaults if you use the 'load' parameter \\(ie /stick load\\) or if you camp to character select and re-enter world. Loading the INI file will end commands in progress. Command parameters applied inline will no longer overwrite INI defaults. To change INI defaults, use 'set' or 'toggle' to make changes permanent. The ability to use most INI settings inline has been added. This allows you to issue a command with the setting inline to apply it to the current command, and once the command has ended the next command will revert back to the INI defaults. As an example, if your snaproll default distance was 10.0 and you wanted to make your snaproll distance larger for a single mob, you could: /stick snaproll rear snapdist 20.0 ...and this would snaproll 20 distance behind the target. The next snaproll you issued would then revert to using 10.0 Complete list of supported inline additions: /stick breakontarget breakongate breakonwarp pauseonwarp randomize delaystrafe useback usefleeing strafewalk mindelay","title":"Beta - 9.0817 - non-linear"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#when-used-with-stick-this-applies-to-delaystrafe-maxdelay-when-used-with-stick-this-applies-to-delaystrafe","text":"backupdist # breakdist # snapdist # !frontarc # behindarc # /moveto breakonaggro breakonhit usewalk useback backupdist # ydist # xdist # /makecamp returnhavetarget returnnoaggro returnnotlooting realtimeplayer scatter bearing # scatsize # scatdist # /circle -already had all options Changed INI & Settings Information I cleaned up the INI naming scheme a bit along with some additions and removals so take note of the following \\[Defaults\\] BreakSummonDist --> DistSummon new WinEQ removed TrueHeading new Heading \\(true, loose, fast\\) \\[Stick\\] new AlwaysUW BehindArc --> ArcBehind NotFrontArc -> ArcNotFront BreakDist --> DistBreak BackupDist --> DistBackup new BreakOnTarget removed LooseStick SnaprollDist --> DistSnaproll StickDistMod --> DistMod StickDistModPercent --> DistMod% new UseWalk new UseFleeing \\[MakeCamp\\] new RealtimePlayer \\[MoveTo\\] new AlwaysUW new DistBackup removed LooseMoveTo new UseBackward \\[Circle\\] AlwaysBackwards --> Backward AlwaysCounterClockwise --> CCW AlwaysDrunken --> Drunken \\[Character specific\\] same changes as above where applicable added Heading, same as defaults added RealtimePlayer New Features Added a new command \"/rootme\". This command will effectively lock your character in place until you turn it off with \"/rootme off\", preventing you via the keyboard or the plugin or /keypress from moving you forward. I figured this was within the scope of the plugin and may have some uses such as macro-based GM detection, or eqbc command passing for a character that is about to do something problematic. With rootme active, other commands will not work until you turn it off - though a makecamp on may still fight with it so consider this experimental for now. Added BreakOnTarget option to '/stick', which will break from the current stick if your target changes. /stick set breakontarget on, saves to the INI under Stick BreakOnTarget=on/off Added AlwaysUW options to both stick and moveto \\(individually\\) . the current AutoUW option turns on underwater adjustments automatically only when you are underwater \\(as intended\\) . The new 'alwaysuw' setting will instead always perform the stick or moveto as if you had typed 'uw' inline somewhere. /stick set alwaysuw on, /moveto set alwaysuw on, saves to the INI under Stick AlwaysUW=on/off && MoveTo AlwaysUW=on/off Added 'strafewalk' option to stick. This turns on walking when you are close to the target and using a strafe-based stick parameter. For characters with ridiculously high run speed this will help you position more accurately and should assist background sessions with moving slower and not overshooting the destination. /stick set strafewalk on, ini Stick UseWalk=on/off Added 'usefleeing' option to stick for 'stick front'. If the target is fleeing \\(same check as the TLO\\) and under 25% health, stick front will not attempt to strafe and reposition in front of the target. This is still experimental. Added 'useback' to moveto. Just like with stick, if you are close to the moveto destination (which also includes camp returns), this will walk backwards to the destination rather than turning, facing the destination, walking there, and turning again. /moveto set useback on, ini: MoveTo UseBack=on/off Set the distance same way as stick \\(though unlike stick, you probably want a larger value here\\) /moveto set backupdist # \\(1.0 min\\) . moveto and stick save their own distances, not use the same. Added 'realtimeplayer' setting to camp returning. Previous '/makecamp player' behavior set the location of the player, and began moving there. if the player moved during that time, it would walk to the old location first and then begin moving again. realtimeplayer now makes the positions dynamic and will adjust a return on the fly. i made this optional in case anyone used that as some form of ghetto advpath. /makecamp set realtimeplayer on BreakOnGM now displays a timestamp for zone in & zone out times. if you see one blink in and out within a matter of seconds, they went invis and you should not consider yourself safe. Bug Fixes & Cleanup HideHelp now functions as the output message describes instead of in reverse. '/stick front' will no longer take the 'long way' around the mob to get back into position. Rewrote the UI window class to fix several bugs. Stripped the command history & output box from the UI window. The UI window should remain up when you are hovering When triggered, BreakOnGM & BreakOnSummon will prevent future commands from being used and output a message, rather than allow the commands to be accepted but then the plugin does nothing. ReturnHaveTarget, ReturnNoAggro, and ReturnNotLooting will now all perform their checks so that if you have multiple options enabled, one will not prevent the other from taking place. Changed the randomize formula a bit, though it may not have helped any. Setting the behindarc setting will actually take effect. Stucklogic should be less aggressive if a character is walking AutoPause will no longer apply if only makecamp is active and not returning Fixed the stick healer / uw parameter bug '/calcangle' has more data added to the output stick commands should no longer cause the character to run in circles around the target (noticeably taking a while to correct itself) if you turned it on when close to the target and facing certain angles. delaystrafe should now work exactly as intended / problem free, and i suggest using it always, especially for those who do not regularly have HOTT data mousepause & mpause will no longer try to resume when the plugin was paused by the user \\(ie /stick pause\\) if you ditch your stick target while mpause / mousepause is in effect, the plugin will take note instantly instead of waiting the normal delay time and then attempting to resume followed by breaking later pause/breakonkb \\(with true movement\\) should not interfere with your keypresses unless your ubermicro beats the speed of the threading. for mpause if you are using the oldstyle movement it will still behave as it did before (if you hold down two keys and let one go, the timer starts from the first key even though you still have the second key held). a bug with zoning while a pause was active causing keybinds movement to be broken while the plugin was loaded has been fixed \\(rare case\\)","title":"\\(when used with stick, this applies to delaystrafe\\) maxdelay # \\(when used with stick, this applies to delaystrafe\\)"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#development-90608-verbosity-rewrite-stick-healer-breakongm","text":"Rewrote the verbosity system to be based off bit flags. This allows the user full control of every message that will or will not be displayed by the plugin. Read this wiki entry for the flags table and details on how it works, and what specific messages are tied to what bit flags. I have converted the old system, so if the new system is a bit confusing, verbosity , fullverbosity , autopauseoutput , and totalsilence still work very close to as before. I have not updated the wiki yet with the new commands, Usage: /stick verbflags - Lists your current verbosity bit flags (useful for knowing what to add/subtract from if you want to make a single change) /stick set verbflags # - Sets your verbosity flags to # (where # is the total sum of whatever flags you added up, check the wiki link) note: if you set # to 0 or a negative number, it is equivalent to totalsilence Numerical flags value saves to the INI under [Defaults] as \"VerbosityFlags\" and to [server.char] section as well. The totalsilence option now applies to everything, and not 'almost everything'. Added a new verbosity toggle so that you do not have to memorize 33554431, and may use */stick toggle totalverbosity* to turn on every message possible. Added a new safety option, BreakOnGM. This works similar to BreakOnSummon. When active, it will scan OnAddSpawn for a GM type zoning in. If a visible GM/Guide does zone in, the plugin will halt any active MoveUtils commands and prevent future MoveUtils command usage until you unlock it \\(same command as BreakOnSummon - _/stick imsafe_\\) . I highly recommend you turn on the verbosity bit flags for this if you are using this feature, as otherwise you may wonder why your commands are not working. Usage: /stick toggle breakongm Saves to the INI under [Defaults] as \"BreakOnGM\" Added a new TLO member ${MoveUtils.GM}, which returns TRUE if the GM detection has fired and the plugin is currently locked. Added a new stick type, /stick healer . **This does not work with any custom angles (pin, front, !front, behind, behindonce, snaproll).** This is useful for those who may wish to stick their healer to another group member to keep them following without having them look like they are sticking. **The main difference of this stick type is that until the character is out of stick range, it will not perform any heading adjustments**. For example, currently if you stick your healer to your tank, every time the tank moves the healer would turn to be facing directly at the tank and it is very noticeable. With /stick healer , you can issue a command such as /stick 100 hold healer and as long as your healer is within 100 range of the tank, it will sit still and not turn at all. Once the tank moves beyond 100 range, the healer would then turn to face it and move until it is within 100 range again. If you keep autopause off, targeting yourself while sticking will now halt your movement until you target something else \\(unless you are using stick id/hold\\) . AutoPause on includes this functionality, but if you have it off and switched from an NPC to yourself with moveback enabled, previously you would try to move away from yourself, backing up forever. This displays a message as well, and is tied to the Autopause verbosity flag. Unducking will now also use /stand instead of hitting the duck key, which in very rare cases would also cause a server desync. WTB /stand as a native EQ mappable key. The fullverbosity message for stick will no longer display the mod output unless you actually have a mod active. The fullverbosity message for stick now will reflect HEALER if /stick healer is used. Issuing /makecamp on/player will no longer automatically stand the user up. Fixed a bug with BreakOnWarp / PauseOnWarp when using very large stick distances.","title":"Development - 9.0608 - verbosity rewrite, stick healer, breakongm"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-90526-ui-window","text":"Added an optional dedicated UI window for the plugin. Usage \\(may use any of the 4 commands\\) : /stick toggle window - toggles window display /stick set font # - sets window font size (1 to 10) /stick min - minimizes the window (like /mqmin) /stick clear - clears the window (like /mqclear)","title":"Stable - 9.0526 - UI window"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#development-90524","text":"Added two more fixes to help prevent possible turn keys being left on Moveback will wait until snaproll and other drastic heading changes have completed before kicking in. (thanks above posters) Confirmed the 'moveto spinning' reported by Magoo was due to GetDistance3D not reaching its ArrivalDist. All moveto \\(including 'id'\\) and camp returns once again use GetDistance except the special case of /moveto y x z. If you supply a z parameter that your character cannot reach, you will rotate in place above or below the unreachable z point endlessly. Bottom line: use sanity checking on your z locations if you opt to use this. Don't guesstimate. BehindArc can now be set by the user. /stick set behindarc #, saves to the INI under Stick \"BehindArc\" and the CharName sections. Snaproll distance can now be set by the user. This is the distance behind (or in front/side if you are using custom position) the target where the snap location is plotted. For reference, the default has been 10.0. If you frequently snaproll behind targets near walls and other tight objects with a large snapdist set you may run into problems. Usage: /stick set snapdist #, saves to the INI under Stick \"SnaprollDist\" and the CharName sections. New feature 'pauseonwarp'. Instead of breaking from stick like BreakOnWarp currently does, pauseonwarp will stop movement and pause until the target is once again within BreakDist range. Pause or Break, not both at the same time. saves to INI under Stick \"PauseOnWarp\" and command /stick toggle pauseonwarp. Tightened up breakonsummon formula to work more efficiently BreakSummonDist can now be set in game, not just via INI: /stick set summondist # AutoUW defaults to false instead of true. TurnRate minimum lowered from 12.0 to 1.0. if you want to turn slow, more power to you. Useback has been cleaned up and should work more effectively. delaystrafe should work fully as intended and not fail to strafe in some cases - please report any more problems with this as it may need more testing \\(thanks LrdDread\\) /stick id #, with self targeted, will work as intended \\(thanks dkaa\\) /stick hold, followed by /stick without hold will no longer reset incorrectly. if you were previously using /stick hold and then issuing a second /stick to make changes to active stick parameters while keeping the hold going this will no longer work. AutoPause with loose/true heading will no longer attempt to keep adjusting heading, and will halt turning when active \\(thanks LrdDread\\) Changed ${Stick.MovePause} TLO member to ${MoveUtils.MovePause} as it applies to more than stick. ${Stick.Behind} will now also be accurate from the target's right arc, not just the left. Camp returns use their own floats now, so that TLO members such as ${MoveTo.Stopped} and ${MoveTo.CampStopped} are reflected separately. Changed the fullverbosity output for stick from Head \\(fast/true/loose\\) Water \\(yes/no\\) Hold \\(yes/no\\) to only display what is active i.e.: Head \\(true\\) ID \\(31337\\) Head \\(true\\) ID \\(31337\\) UW Head \\(true\\) UW MB \\(the MB is new, and reflects if MoveBack is enabled\\) /moveto loc y x z - will display the z loc in verbosity if used commands that shouldn't have a reason to stand up will not try to","title":"Development - 9.0524"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#development-90419-bug-fixes-uw-enhancement","text":"Ending commands & pausing the plugin should no longer cause the turn keys to be left on. Please let me know if there are still cases where the \"spinning\" happens as I may not have got them all. Fixed an issue with stucklogic attempting to get unstuck when it was not. Stucklogic when underwater should no longer almost always think it is stuck. The current formula may not be tight enough so you may run into cases where stucklogic will not get unstuck while underwater. This will need more tweaking in the future. For now, this prevents the endless spinning when underwater. Stucklogic will no longer try to jump when underwater if TryToJump is enabled. Added a new option AutoUW which will automatically turn on underwater face angle adjustments when fully underwater. This will affect moveto and stick commands when active and the plugin detects you are underwater and you have a target. This is enabled by default. If you frequently use /moveto or /makecamp while underwater and having a target unrelated to your destination, you may want to disable this option. Usage: /stick toggle autouw Saves to the INI as AutoUW under Defaults and server.char sections. The /moveto loc command now accepts an optional Z axis. If you use /moveto loc Y X as before, it will behave as it always did. If you use /moveto loc Y X Z , it will now use the Z axis in a GetDistance3D comparison. \\(See Below\\) Moveto now uses GetDistance3D instead of GetDistance to process being in range of ArrivalDist in some cases. If you currently use a small arrivaldist you may need to increase the size if when arriving at the moveto destination your character keeps attempting to reposition themselves. This only applies to /moveto id or if the Z axis is supplied in the /moveto loc Y X z format. This will not affect precisey, precisex, or camp returns. Moveto now accepts the uw and underwater parameters, which will adjust your face angle based on the height and location of your current target. Note you cannot /moveto id uw , but you can /moveto uw id or */moveto id 12345 uw* Loose/True heading anti-orbit angle value is now able to be configured by the user. It still defaults to 32.0f, so if everything works fine for you there is no need to change it. You may adjust the value with: /stick set allowmove # \\(e.g. /stick set allowmove 64.0 \\) Saves to the INI as AllowMove under Defaults and server.char sections. TurnRate cap has been increased from 24.0 to 100.0, though I wouldn't suggest going that high. the pause parameter, and kb/mouse break/pause will now halt heading adjustments for loose/true heading (previously seen example: typing /stick pause and seeing your heading still finish the rotation afterward) gFaceAngle will now be reset by the plugin if moveto, circle, or stick is active (meaning you cannot use /face during those cases). Hitting turn left/right with breakonkb/mpause will once again allow you to continue turning UseBack defaults to false instead of true Added output for GetDistance and GetDistance3D to the /calcangle command. (Able to see the differences in distance to help set arrivaldist values based on your usage)","title":"Development - 9.0419 - bug fixes, uw enhancement"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#development-90412-major-release","text":"All movement is now tied directly to the variables used by eqgame. This plugin now uses self-finding offsets, though they are no different than the current __RunWalkState type of offset provided in the main compile. This has allowed me to end the over-compensation needed to stop movement and prevent the shooting off into the distance that plagued the original version. In testing, movement is less choppy and more accurate than ever before. As an extra precaution, I also have made the applicable keyboard flags reflect being pressed \\(like MQ2's keybinds do\\) while any movement is active. YOU MAY NEED TO READJUST YOUR STUCKLOGIC SETTINGS Along with this comes a new feature, \"true heading\". This uses the actual turn left and turn right movement keys to perform heading adjustments. This is enabled by default as loose heading was before. If you do not wish to use this, you may /stick toggle alwaystruehead to turn it off for good. By using actual turning, the turnspeed multiplier and heading change increments are now 100% legit. Loose heading logic is still provided for those who want to go quasi-legit with a custom turn increment, and fast heading is the same as before. Note if you disabled loose heading because you want fast heading, you will now also need to disable true heading. When enabled (again, it is on by default) it will apply to stick and moveto both, not separately like loose heading works. Ways to use this: /stick ____ truehead _- usable inline with any other parameters /stick toggle truehead - toggle truehead for current command in process /stick toggle alwaystruehead - toggle using it always Saves to INI as TrueHeading under Defaults . This also saves to the character-specific setting if _savebychar is turned on. Added an optional strafe delay timer to prevent instant strafing when mobs turn for a short period of time such as quick spells, or gaining aggro without HoTT. Consider this, properly configured, a replacement to the old nohott and a fix to an issue reported by LrdDread. Ways to use this: /stick toggle delaystrafe - turns the delay for strafe-based movement \\(pin, !front, front, behind\\) on or off /stick set strafemindelay # - sets the minimum amount of time you wish to delay before strafing \\(in miliseconds\\) . The default is 1500 \\(1.5 seconds\\) . /stick set strafemaxdelay # - sets the maximum amount of time you wish to wait before strafing \\(in miliseconds\\) . The default is 3000 \\(3 seconds\\) . Saves to the INI under Stick as DelayStrafe, and StrafeMinDelay / StrafeMaxDelay. The size of the arc for /stick !front is now configurable by the user. You may use: /stick set !frontarc # - Valid ranges 260.0 to 1.0. The default is 135.0 and if you do not adjust it, it will continue to behave like normal. Saves to the INI as NotFrontArc under Stick . This also saves to the character-specific setting if savebychar is turned on. Implemented optional arc randomization for pin/!front/behind. You may enable this with /stick toggle randomize . My formula is pretty basic so it will not be anything special yet, but its a foundation for improvement in the next release down the road. This saves to the INI as RandomArc under Stick , and if you have fullverbosity enabled then behind/!front will also output their arc values to the chatwnd. Added a command, /calcangle , which dumps the value moveutils uses to determine angular dist (useful if you want to configure your !front arc) or know what the randomization values represent. When rewriting loose heading I had inadvertently disabled a feature of the original MoveUtils. With loose heading enabled: when very close to your target it would walk backwards to stick instead of turning to face the target, moving into stick position, and turning to face the target again. This is now enabled by default . I noticed in some cases it can end up causing your character to move in crazy-eight style patterns, and adjusted the math to correct this. Using moveback in your stick commands overcomes that problem with ease, but if you do not like to use moveback and/or run into that problem often, please report a solid way of recreating it here and then consider turning it off based on your play style. Unlike the old moveutils, I have made this feature optional. Ways to use this: /stick toggle useback - turns the backwards walking on and off /stick set backupdist # - how close to the target you can be to use backward walking. The smaller the better . This defaults to 10.0 like the old moveutils Saves to INI as UseBackward and BackupDist under Stick Snaproll now uses GetDistance3D to prevent certain bugs related to being unable to get in range of a target on large slopes. I have left the old line in place so if you have any issues with snaprolls, you may uncomment the old line and comment out the new one \\(fGetSnapDist around line 4100\\) Snaproll now sets the final heading adjustment before handling control back over to normal stick. AutoPause now has an optional message output, so you can have greater awareness of why your character is suddenly standing still doing nothing. You may enable/disable this with /stick toggle autopauseoutput . If this is enabled, it will not respect totalsilence so you will need to configure this on its own. This saves to the INI as AutoPauseMsg under Defaults . MoveTo now has two new BreakOn options \\(my implementation of a suggestion from dkaa\\) . They are different forms of detecting aggro during a /moveto that will halt the command. This mostly assists macro writers in being able to stop moving to a location and handle the event of getting aggro during the move. Ways to use this: /moveto toggle breakonaggro - this will halt the moveto if you gain aggro \\(crossed-swords indicator\\) /moveto toggle breakonhit - this will halt the moveto if you are swung at \\(both contact or miss\\) , if you want to keep moving until something is actually trying to hit you. I have added support for all three types of hitmodes, though if you use the \"number only\", I am only parsing for misses not the numerics and you are annoying to support . If you wish to use this, you should consider switching to abbreviated or normal. Saves to the INI under BreakOnAggro and BreakOnHit under MoveTo . In the event either of these trigger: A new TLO member, ${MoveTo.Broken} will show as true, so that you may see if the event fired. This will not reset to false until the next time you issue a /moveto command. - An output message will display to the chatwnd \\(if you do not have _totalsilence_ enabled\\) Fixed a problem with the /stick pin formula on one side of the target not positioning correctly. Camp returns and moveto's now resume after pausing the plugin and unpausing with /stick pause|unpause . Mousepause will no longer spam if the pause flips active with only a makecamp setup and attempting to auto-return. Makecamp will no longer try to return while mouselook movement is active. Once the return begins and you attempt to use the mouse though it still will not let you, so if you use mouselook movement often consider turning on mousepause or breakonmouse. BreakOnGate has been switched from OnIncomingChat to a Blech event. Please report if this does not work as intended. Bard detection has switched from string parsing to numeric comparison. It will now only check once every time you type a command \\(to support switching to shrouds with the plugin loaded\\) instead of OnPulse. If you switch to a shroud with stick active, please stab yourself and then you will need to end the command and restart it to detect the class change. ReturnNoTarget has been renamed to ReturnHaveTarget , as the naming incorrectly implied the opposite of what it actually does. The command is also updated: /makecamp toggle returnhavetarget . Loose \\(yes/no\\) output in fullverbosity has been changed to Head \\(true/loose/fast\\) MakeCamp Leash and Delay value output has been slightly modified. Fixed some cases where BreakOnWarp and BreakOnSummon would incorrectly fire \\(mainly due to mpause/mousepause\\) and cleaned up the logic. Removed nohott \\(AwareAggro in the INI\\) as it has been nothing but problematic. Removed the MQ2Melee /mutils output Renamed the keybinds, so you may want to cleanup your MacroQuest.ini after loading this. Nerfed the ability to /stick id # to your mount. Nerfed the ability to /makecamp player to your mount. Major plugin logic overhaul, code cleanup, \"best practices\" and general bug fixes.","title":"Development - 9.0412 - Major Release"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-90314","text":"Fix for strafe not properly turning off in some cases, most commonly if you got on HoTT \\(thanks rswiders\\) nohott option will no longer process when it is enabled and you actually do have the HoTT LAA active and showing you on HoTT \\(thanks fearless\\) nohott should be less aggressive and less prone to spinning endlessly (relates to both fixes above and LrdDread's post a while back) Bug Fix for BreakOnSummon \\(= != ==\\) Bug Fix for Debug options All MQ2Melee exports are now in the release, there will no longer be 2 separate versions of MoveUtils 9.x to worry about if you are using my changes to MQ2Melee. Misc. code cleanup and dewindefification","title":"Stable - 9.0314"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-90225-minor","text":"Fix for verbosity level output bug that has been present since the change to the way this works in November.","title":"Stable - 9.0225 - minor"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-90110-minor","text":"/makecamp Y X and /circle y x are no longer valid inputs. this may break some macros. Added new syntax: /makecamp loc Y X and /circle loc Y X as replacements. Please report if any problems or odd behavior due to this change. TurnHalf is now functional again for stucklogic. Saves to ini or toggled via command line: /stick toggle turnhalf Snaproll left/right math corrected by deadchicken Added ${MoveUtils.Version} TLO member by request","title":"Stable - 9.0110 - minor"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-90101-fixestlo","text":"Most problems reported should be fixed. Get this version and delete your ini file. Anyone that was using loose heading and had issues they should be corrected now as well, as long as you delete your INI file. Corrected a bug with camp return and moveto. Corrected a bug with makecamp return and altreturn if too close to camp. Camp return scattering should once again function as deadchicken intended. CampRadius now stores to the character section of the INI file. Adjusted the default values for stucklogic a bit \\(not the only reason to delete the ini\\) Returned keypress down, up and down, up, down as not having it causes characters to run off into the abyss in some cases. Added New TLO's: ${MakeCamp.ReturnNoAggro} - bool ${MakeCamp.ReturnNotLooting} - bool ${MakeCamp.ReturnNoTarget} - bool ${MakeCamp.Scatter} - bool ${MakeCamp.Bearing} - float ${MakeCamp.ScatDist} - float ${MakeCamp.ScatSize} - float ${MoveTo.ArrivalDist} - float ${MoveTo.ArrivalDistY} - float ${MoveTo.ArrivalDistX} - float ${MoveTo.UseWalk} - bool ${MoveUtils.PulseCheck} - int ${MoveUtils.PulseUnstuck} - int ${MoveUtils.DistStuck} - float ${MoveUtils.TryToJump} - bool === Beta - 8.1227 - bug fixes === note: this was a bad release, if you are still using it, delete it. Cleaned up loose heading function to not set heading to illegal values Removed the excessive double/float conversions. Circle radius and gLookAngle should be the only double math used anymore. Fix for leash bug reported by Kroak","title":"Stable - 9.0101 - fixes/TLO"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81224-tweaks","text":"snaproll now has a distance check so if it is close enough to the destination it will not try to roll again a very small amount in place. snaproll moves 10 units away, and this new distance check is 5 units. snaproll will now accept destination as a parameter. Usage: /stick snaproll rear \\(normal behavior and not necessary, you can use _/stick snaproll_ as before\\) /stick snaproll face - front of target /stick snaproll left - snaproll to the target's right shoulder /stick snaproll right - snaproll to the target's left shoulder If enabled... stucklogic will no longer try to jump when levitating stucklogic will no longer try to jump if not moving stucklogic will now work if using strafing stucklogic will now be used whenever stick is active, instead of not if you are within stickdist (except the normal skip conditions: summoned, stunned, snared, rooted) Autopause will now apply to rooted No commands will try to move if rooted Fixed pin/!front/rear errors when snared Changed DoMovement to not press up and down again","title":"Beta - 8.1224 - tweaks"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81221-deadchicken-stucklogic-rewrite","text":"Stucklogic has gotten a major overhaul - **It is highly recommended that you delete your old INI and re-set / copy over any values you wish to keep not related to stucklogic**. Stucklogic uses new values for a new formula written by deadchicken. This formula calculates your pulse averages based on a table, with greater accuracy than before. The new values are configured as such: /stick set pulsecheck # pulsecheck defaults to 4 this value is sort of what \"stuckcheck\" was before. it serves as the size of your pulse history to be used to calculate your average movement distance. the largest you can set this value to is 32 \\(defined by MAXRINGSIZE\\) . The higher you set this number, the less often stucklogic would misfire \\(so if you are getting the \"jittery\" problem you will want to increase this value\\) . This also means it will take longer to know that it is stuck, so if you are getting stuck and not responding fast enough, you would do the opposite and lower this value. /stick set pulseunstuck # - pulseunstuck defaults to 5 - this value is new - this is the amount of pulses you have successfully moved forward before hard-forcing stucklogic to be considered unstuck. this serves the purpose in that if you were stuck for 20 pulses, your stuck counter would normally try to move forward for 20 more pulses before considering itself free. there was some handling for this that had some issues so now you can set a value such as this one to force a faster \"im unstuck\" process. - the higher your framerate, the higher you want this value. 5 may not be enough on better computers and you may end up getting restuck again, it will look like what we are calling \"snaking\". If you notice yourself \"snaking\" then this would be the first value to try increasing. /stick set diststuck #.## - diststuck defaults to 0.5 - this is similar to before in that it is the amount of distance you need to have moved versus your average pulse rate in order to not be stuck - this value should properly scale for all speeds of computers. you may want to set it higher or lower, play with it and find what works best (and please let us know!!), but keep in mind setting this value to something tiny such as 0.001 as we did in the old logic should no longer be necessary. deadchicken has determined that mindset was only working because of some incorrect math in the formulas. try to stick with more logical values and then reporting back your results would be appreciated. '''The following needs more testing/information: stucklogic behavior when snared stucklogic behavior underwater stucklogic behavior when mounted \\(all different speeds of mounts\\) ''' Please note the old values and logic behind setting them no longer applies. I've changed their names in the INI so that no one can mistakenly use crappy settings because they did not read any of this. Added jumping support, which will try to jump to overcome obstacles. For as simple as this sounds, this will prevent you from getting stuck on small obstacles the majority of the time. It works awesome, to the point we had to disable it to test a lot of the other aspects of the new formulas. This defaults to true, so if undesired you may disable this with /stick toggle trytojump \\(or set on/off\\) Stucklogic now uses GetDistance3D instead of GetDistance to compare movement between pulses, so changes in z axis should be factored into movement. This should correct the bug with stucklogic firing when walking up and down inclines, but please report if it is working as intended or not. It was working correctly in our testing. Rewrote a lot of the main function to reduce the number of evaluations processed per pulse by 30% (made up figure, it was a large portion) Bards can once again use AutoPause \\(all aspects except casting spells\\) /stick snaproll should now be 100% accurate and no longer overshoot the target due to getting stuck along the way. Thanks deadchicken for his camp scatter math which worked perfectly for this formula too. Please report any cases where it is having problems, but I hope there should be none now. Switching targets mid-stick will no longer trigger stucklogic or breakonwarp. If you target a mob that is out of server-update radius, breakonwarp can still fire once you receive accurate location data for the target. Cross-map targeting stuff is bad, let alone with stick still on . breakdist may now be set in game with /stick set breakdist #.## Added a new feature to MakeCamp courtesy of deadchicken: scattering. This is a bit complex but when configured properly it is amazing. The idea behind this is that instead of returning to a random location within your camp radius, you can define a specific bearing, distance, and scatter radius from the center of your camp. This way you could configure your characters to return to specified areas all the time. The INI supports values on a character by character basis as well, so you could configure your tank to return to the center, your casters to return behind the tank, and your melee to return to the sides of the tank. To configure the values the commands are: /makecamp toggle usescatter Turn on/off scattering /makecamp set bearing #.## - set scatter bearing /makecamp set scatsize #.## - set scatter radius /makecamp set scatdist #.## - set scatter distance Leash length can now be set to >= camp radius, instead of just > AltCamp now retains its own radius size. Added new MakeCamp TLO's relating to the distance from your camp. ${MakeCamp.CampDist} - float - distance from your current camp \\(0.00 if makecamp is off\\) ${MakeCamp.AltCampDist} - float - distance from your altcamp \\(0.00 if altcamp has not been established\\) ${MakeCamp.AltRadius} - float - radius size of your altcamp MoveTo now allows for ArrivalDist to be set as low as 1.0. MoveTo now has the option to turn on walk when closing in on the arrival destination to maximize precision. This defaults to true so if you do not want to use this, then /moveto toggle usewalk . Autosave \\(save to INI when issuing a _set_ or _toggle_ parameter\\) now defaults to true. Added savebychar as optional for the INI. Defaults to true as that was the old behavior. Use */stick toggle savebychar* to disable saving/loading character-specific settings. Added optional INI value YourCharName \"DisregardMe=true\". This allows you to use character-specific settings but ignore them on a specific character and use defaults instead. Manually add this line for the characters you wish to use defaults on, and leave it off \\(or you could put =false, but no need\\) for those you wish to continue using specifics. Fixed a crash bug related to using /stick id 2mooks . The \"id\" parameter now enforces all numerics. strtoul ftw. Fixed a bug with stick 'always' not processing mpause/mousepause/breakonkb/breakonmouse if you had a target when you issued the command, until you had no target and got a new target again. Fixed a small bug with min/max delays requiring 126 instead of 125 difference. Fixed a bug where if you unloaded the plugin mid-command walk would be left on. Fixed a bug with breakonsummon firing the first time you issued a command. Disabled advancedautopause as I'm out of ideas. checkbard has been removed \\(forever\\) . Stripped /followpath from this plugin. Use MQ2AdvPath instead. Other new set / toggles: /circle set circleradius #.## - set radius on the fly /makecamp set leashlength #.## - set leashlength on the fly /makecamp set campradius #.## - set camp radius on the fly /makecamp toggle leash - toggle leash on and off Cleaned up the debug command output. Cleaned up the help command output. Added new help command format to display detailed information on the plugins settings as it has grown large. \\(_/stick help settings_\\) All options that could previously be toggled or previously be set on/off now may be used both ways. So for example autopause, you have the option of doing: /stick toggle autopause /stick set autopause off /stick set autopause on Use the \"help settings\" parameter for more information. === Beta - 8.1205 - deadchicken polar math === Corrected the bugs with BreakOnSummon that would cause occasional misfires in /stick , and consistent misfires with /circle . This feature now works as intended \\(and its very useful in gm-detection detection\\) . deadchicken has generously offered up his polar-math code for camp returns, which is much smoother, more seamless, and far more accurate in generating a return to camp. This also makes /makecamp player work much better. Many thanks to deadchicken for this simple yet elegant contribution to the plugin.","title":"Beta - 8.1221 - deadchicken stucklogic rewrite"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81202-makecamp-cleanup","text":"makecamp return delay and mpause/mousepause resume delay are now on separate values. They are now able to be configured independently via commandline or within the INI. Important: The old ini values no longer apply, so if you use non-default settings you need to adjust them again based on the following \\(you can use any command, its not restricted to _/makecamp_\\) To set the delays for camp return /makecamp set campmindelay #.## /makecamp set campmaxdelay #.## - - To set the delays for mpause/mousepause return: /makecamp set pausemindelay #.## /makecamp set pausemaxdelay #.## You will now need to use different INI values for these delays. Defaults \"MinDelay\" and \"MaxDelay\" no longer do anything. For mpause/mousepause: [Defaults] PauseMinDelay=125 PauseMaxDelay=250 For makecamp return times: [MakeCamp] MinDelay=250 MaxDelay=500 The ${MakeCamp.MinDelay} and ${MakeCamp.MaxDelay} members now refer to the campmindelay and campmaxdelay settings only There are new TLO members for the pausemindelay and pausemaxdelay settings: ${MoveUtils.PauseMinDelay} and ${MoveUtils.PauseMaxDelay} This change has allowed for the return of inline min/max delay for makecamp, you can use it as it was before. Examples: /makecamp mindelay 150 maxdelay 500 /makecamp on maxdelay 500 /makecamp on mindelay 150 maxdelay 500 There is now the ability to retain an \"altcamp\" location stored. Right now this is only used for one purpose, being able to return to the altcamp location. This is very barebones at the moment, and works as follows You go to a location and turn on a camp \\(ie /makecamp on\\) You turn off your camp \\(ie /makecamp off\\) The location that was your camp is now the altcamp location. You now have two options to utilize the old camp: At any time, as long as you remain in the same zone, you can /makecamp altreturn . This will return you to the altcamp location, aka the location of your camp that is now off. This works how makecamp return with no camp active tried to work, but without the bugs that existed with it. You move to another location and setup a new camp \\(ie _/makecamp on_\\) . With this new camp active, you can /makecamp altreturn . This will turn OFF your current camp \\(so as not to get stuck trying to stay there\\) and move to the altcamp location. * Note: You cannot altreturn until you've setup a camp at least once in the current zone. * Note: The Altcamp values reset if you die or zone. * Note: You cannot altreturn if currently using a player-camp. There are two new TLO members that keep track of the altcamp location. If they are both == 0.0 then you do not have an altcamp setup. They are ${MakeCamp.AltAnchorX} and ${MakeCamp.AltAnchorY} The \"on\" parameter for /stick may now be used anywhere inline again, since removing that broke popular macros like RH. Please note the on parameter is useless in this version of MoveUtils. In the original version it was able to overcome a bug with breakonwarp \\(which is fixed\\) , so now it does nothing that any other /stick parameter does not do. This is only for retro-support, using it in your macros is bad practice. If you use precisey or precisex as a parameter in your /moveto command, it will now display your YDist or XDist values in the output \\(sorry for the long delay in this request\\) Added an experimental features for those of you bards that are having the \"jittery\" problem when StuckLogic is enabled. Following the suggested quickfix earlier in the thread, if you enable a new option checkbard , your speedmultiplier is divided by two if you are a bard class. This only applies to bards, not everyone with selos. This feature is disabled by default, so if you wish to test it, use \\(_/stick set checkbard on\\|off_ then _/stick save_\\) . This saves to the ini under Defaults \"CheckBard\" Turning this on as a non-bard will not do anything, so turning it on for your bard alt and loading up another character will not affect your non-bard. If this solution works, I could work on detecting if selo's is present and open this to all classes, but I think it would be better to find out what the problem in the stucklogic formula is, and try to fix that instead. If you wish to help, please read a few posts back about the formula and issues. For those of you who wish to return to camp when you are outside of the camp radius, regardless of if you have a target or aggro, there is a new option ReturnNoTarget. The previous new feature ReturnNoAggro will ignore target as well, but only return if you do not have aggro. ReturnNoTarget works with ReturnNoAggro OFF, and will return when you exceed the camp radius, target or not. Thanks to Muley for the suggestion. Usage \\(**/makecamp enforced**\\) : /makecamp set returnnotarget on|off This saves to the INI [MakeCamp] ReturnNoTarget=on Identified a bug with snaproll where it would not stop moving/readjust heading if stucklogic kicked in or if the player moved with mpause/mousepause in the middle of the roll. I've taken steps to correct the issue. If you are close to the target, the problem should be gone unless your snaproll runs you into a wall. If you are far away from the target, there is a chance your roll will still continue on beyond the normal distance \\(due to stucklogic or mousepause/mpause\\) but it will now halt if it travels the same distance beyond the target that you were when you issued the command. The problem would still exist if you snaprolled from 100 units away, got stuck along the way, you will run 100 units beyond the mob before snaprolling. I'm working on a better formula to address this problem. In the meantime, snaproll still works as it did before, just with more checking and correction of heading/movement. Shortrolls should have little to no problem. This feature will be improved in the future. Cleaned up the help command output to reflect new settings that were missing, or settings that no longer applied. A few of the newer ones may still be missing.","title":"Beta - 8.1202 - makecamp cleanup"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81123-loose-enhancement","text":"Rewrote loose heading to be calculated and adjusted within this plugin, using a fixed turn increment Note: the maximum rate you turn when holding the right/left keys down is 16.0, and hence the default This turn increment can be configured by the user for any number within 12.0 and 24.0 Lower than 12.0 will cause awkward stuttering Higher than 24.0 is noticeable hax and you may as well use fast heading To configure in game, you may use /stick set turnrate 12.0 If you use a value out of bounds, it will not change the rate To configure in the ini, you may use Defaults \"TurnRate\" section If you use a value out of bounds, it will use the plugin default of 16.0 and resave this value to your ini Adjusted /stick snaproll to use this new math, and improved the calculations to determine when to roll so it should no longer roll early","title":"Beta - 8.1123 - loose enhancement"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81119-minor","text":"Removed ${Stick.Aggro} TLO Added ${MoveUtils.Aggro} TLO this TLO now functions any time you have a target instead of only when /stick is active This check is still calculated the same way, it is not \"true\" aggro detection This checks your target's heading relative to your heading via angular distance math. If you are facing your target and your target is facing you, you are aggro. If your target is facing you and you are facing AWAY from your target, the math will show your aggro as false ideally this is still only worth using if you are facing your target \\(which _/stick_ always did\\) and not in any other case * By request, added /stick snaproll \\(thanks Agripa for the name, which is based off flight terminology\\) * This command is designed to be used like /stick behind * This runs in a straight line to the rear arc of the target based on your targets heading, spins in place, and then turn on /stick behind automatically afterwards This uses and enforces loose heading/stick, so it will not snap your heading instantly I have not incorporated this into NoHoTT checking so either use this (by detecting ${MoveUtils.Aggro} is true have your macro issue the command) or nohott but dont try to use both together as they do opposite things * By request, added an option to /makecamp , ReturnNotLooting, which will not return to camp automatically until you no longer have a loot window up \\(or manually issued a _/makecamp return\\) _ This defaults to false so everything behaves as you are familiar with If you wish to use this, it can be set up as follows MakeCamp \"ReturnNotLooting\" on/off in the ini /makecamp set returnnotlooting on\\|off","title":"Beta - 8.1119 - minor"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81116-minor","text":"Fix for /makecamp no parameters Added status parameter which dumps the status of the command used, or status all which dumps complete status of the plugin /moveto status will only display info related to moveto, circle status only to circle, and makecamp status only to makecamp all for every command will dump status for every command as well as all other plugin settings These will display regardless of if you have totalsilence set to on Example: /stick status will output MQ2MoveUtils Current Status Stick: Status(on) Dir(Behind) Dist(10.0) Mod(0.0) Mod%(0.0) Loose(yes) Water(no) MoveBack(yes) Hold(yes) Always(yes) Stick: Holding to ID(1115) Name(Guide Peyote) <---only displays if holding Stick Options: AlwaysLoose(on) BreakOnWarp(on) BreakDist(300.00) BreakOnGate(on)","title":"Beta - 8.1116 - minor"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81111-moveto-enhance-misc","text":"By request, added new parameters to /moveto loc , precisey and precisex When used these will move in the general direction of the loc specified and stop moving when it gets in the acceptable arrival distance for that location, disregarding the other This is to be used as a trailing paramater to /moveto loc Using it with /moveto id or the new /moveto yloc/xloc will likely cause problems so don't do it Usage example: /moveto loc -100 -200 precisey - will head towards -100 -200, but stop when it gets within acceptable Y arrival distance even if your loc is -100 -500 - This is not the same as new command */moveto yloc/xloc* in that it does head in the desired direction first until it reaches the \"precise\" desired - The other command below will beeline with no regard to the other coordinate Added two new settings to support the precisey and precisex trailing parameters These also save to the ini under MoveTo as \"ArrivalDistY\" and \"ArrivalDistX\" Usage: /moveto set xdist 10.00 /moveto set ydist 10.00 (default is 10, can use any .2 digit float) Changed INI setting for MoveTo \"ArrivalDistance\" to \"ArrivalDist\" Added /moveto yloc \\# and /moveto xloc \\# which will use your current x \\(yloc\\) /y \\(xloc\\) and beeline for the x \\(xloc\\) or y \\(yloc\\) you requested Included fix for /moveto dist reset problem reported by KFH By request, added a new option for makecamp returning only if not aggro currently if you have a camp setup makecamp will return to camp if you are outside of the camp radius and do not have a target. this is still the default, so if you like this, you don't have to do anything if you wish to change this so that you will return only if you are not aggro, with or without a target, you can enable this using: /makecamp toggle returnnoaggro - this will also save to the ini under \\[MakeCamp\\] \"ReturnNoAggro\" (on/off) Makecamp returning on its own \\(meaning any case other than typing in _/makecamp return_\\) will no longer display the \"Arrived at /moveto location\" message Makecamp returning on its own will no longer display halt/pause messages when using breakonkb/mouse or mpause/mousepause since it continually will retry until camp is turned off using /makecamp return still will display the messages Makecamp returning on its own now respects mpause/mousepause and will not try to fight you for returning to the camp Moved toggle and set parameters to their own function mindelay & maxdelay can no longer be used inline as a parameter since they apply to multiple things and this created some problems. instead they are now adjusted with the set parameter \\(any command\\) the minimum for mindelay is still 125, so if you try to set this lower it will default to the plugin default \\(500\\) the minimum value for maxdelay is still mindelay+125, so if you try to set this lower it will set to current mindelay+125 Usage: /stick set mindelay 125 /circle set maxdelay 250 Updated AutoSave to only save if you adjust a setting with toggle or set instead of every time a command is typed since that makes more sense and is less resource intensive Added rswiders' change for bRunNextCommand = true for the 4 main commands \\(followpath still getting overlooked\\) Lowered default camp radius from 100 to 40 LeashLength can now be set = CampRadius in the ini instead of CampRadius+10 Made a new ResetCamp function to reset camp values similar to EndPreviousCmd for the other 3 commands Entering valid parameters followed by an invalid parameter for /stick, /moveto and /circle will no longer output help and continue trying the command, the command will now fail turning a command off or typing a new command that resets a previous command with loose heading will halt the loose heading from trying to finish turning. same applies when using loose moveto when you have arrived at your destination, it will no longer continue turning once it has arrived \\(previously only noticeable in short moveto's\\) /stick toggle spinme for use with /stick front has been removed. This is now set with */stick toggle nohottfront* and saves to the ini under Stick \"AwareNotAggro\" \\(on/off\\) so you only have to type it once if you wish to use it To stay in line with this change, previous \"AggroAwareness\" \\(on/off\\) in the ini renamed to \"AwareAggro\" (*value for the nohott option on/off*) Adding on to the ability to /stick set stucklogic on/off , you can now set more values. \"stuckcheck #\" and \"stuckdist #\", i.e.: /stick set stuckdist 0.001 /moveto set stuckcheck 8 StuckDist, StuckCheck, and TurnIncrement can no longer be set to zero in the ini or via command. If you want to disable stucklogic use /stick set stucklogic off instead You are now able to disable stucklogic's check for if you are facing exactly halfway away from your destination to start turning back the same way it was turning from This is currently only in the INI but will soon be added to the set parameter StuckLogic \"TurnHalfway\" \\(on/off\\)","title":"Beta - 8.1111 - moveto enhance / misc"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81101a-ctd-fix","text":"fix for ctd more checks added to prevent future ctd (*thanks ieatacid & dkaa for help finding the reason: dont call ExecuteCmd to press keys if not in game*)","title":"Beta - 8.1101a - CTD fix"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81030-minor-bugfix","text":"Keybinds will no longer interfere with normal gameplay if a command is not active (*or if stick always is on but you do not have a current npc target*)","title":"Beta - 8.1030 - minor bugfix"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81029d-sitstand-bug-finally-gone","text":"Changed all references of GetCharInfo to check pCharSpawn \\(which we determine is valid first\\) Fixed circle 'alwaysccw'/drunk/etc & stick alwaysloose values to not reset after one usage ${Stick.Aggro} TLO now returns TRUE/FALSE regardless of if you use the nohott option *(true is determined if you are within the front arc of the target you are facing )* Changed the method of standing up from ExecuteCmd \\(sit\\_stand\\) key to EzCommand \\(\"/stand\"\\) to play nice with MQ2Melee and not offer an opportunity for this plugin to force you to sit down under any circumstance Determined that /circle and breakonsummon math \\(uses breakonwarp math\\) do not play nice together This only affects /circle so don't use breakonsummon with circle for the time being If you are good with math / angles / etc. \\(I'm not\\) and want to help out look at the notes in the To-Do post Fixed loose stick/moveto fighting you for the heading still if using mpause/mousepause/breakonkb/breakonmouse Fixed mpause resuming the command if you pressed down two keys at the same time, such as move forward and right, but only let go of one of them Mousepause now breaks movement since you have to press+hold the right button before the left button to move unless you've got uber micro... In finding the fix for mpause key releases I came up with a solution for mpause leaving you moving fowards even if the key you pressed was strafe_left for example It should now stop all movement and repress whatever key you pressed so that your movement was not interrupted","title":"Beta - 8.1029d - sit/stand bug finally gone"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81029-new-features-misc","text":"Fixed the crash bug related to v2008-10-26 Removed redundant check. thanks goes to ascii and dkaa for help in indentifying it. Fixed another potential crash bug. thanks goes to ieatacid for help in identifying it. Another fix attempt at sit/stand bug Added an option for always loose stick now that it uses deadchicken's improved logic. You can turn this option on with /stick toggle alwaysloose just as moveto's has been set with /moveto toggle alwaysloose in a previous update Updated /moveto toggle loose and /stick toggle loose to toggle loose on and off, since supplying it in the command will always turn it on These are independent, meaning if you use /moveto it will not toggle stick's loose, and if you use /stick it will not toggle moveto's loose Identified that on some newer computers \\(it also might relate to duo/quad core cpu\\) that stucklogic even at 0.1 can cause absurd behavior such as random camera angle jerks. deadchicken has some ideas on rewriting this whole process, but for the time being I discovered that if we allow the value to be set to smaller numbers it will improve. On one of my duo core boxes it was always having problems to the point I had to turn it off. I found with setting the value to 0.05 those problems went away and stucklogic worked better It still has problems with the way the math works, it does not properly attempt to work its way around all angles to break from stuck If it reaches exactly the halfway point \\(facing the exact angle away from your target\\) it will start turning back towards the target. This is most noticeable if you are stuck in a corner or doorway To fix the duo-core/faster cpu issues, the value for stucklogic now may be set up to the hundreths The minimum value you can now use in the ini is: 0.001 Added a new \\(long overdue\\) parameter to stick: /stick front If you lose aggro (or use this command on a non-tank to help control push and the mob aggros someone in the rear), you will be spinning endlessly trying to get to the front of the mob By default, if you have access to Health of Target's Target and you are not the target, you will not try to spin with the mob to stay in its front arc For those who do not want that, or for those characters you desire to be in the front arc that will not be the one's on HoTT, you can bypass this with the following toggle: /stick toggle spinme You will then always stick to the front, no matter what, if using /stick front parameter Made major improvements to the NoHoTT aggro detection The way this works is if you are using any arc enforcement other than /stick front (meaning pin , !front , behind ), and you do not have access to Health of Target's Target data, this feature will detect if you are aggro by checking if the mob's heading is pointed towards you If so, it will slide you slightly to the side, and stop for around 7 seconds, then attempt to continue sliding back into position. If the mob is still facing you, it will assume you are aggro, and repeat the process. If the mob is no longer turning with you, you will resume sticking to your prior arc choice * Using /makecamp off will now halt a makecamp return if its currently happening when you issue the off command * Using /makecamp return will no longer work if you do not currently have a camp or camp-player active * Rewrote all WriteChat output to use a new custom function WriteLine, to support the following request * By request, there is a new option added to verbosity, TotalSilence * This can be turned on using /stick set totalsilence on \\(or _/moveto_, _/circle_, and _/makecamp_\\) * This can be turned off using /stick set totalsilence off \\(or _/moveto_, _/circle_, and _/makecamp_\\) * This option will reduce the output to only major events such as the actual toggle itself (totalsilence on, totalsilence off), the help output only if you type '/command help', breakonsummon firing (since it requires you to type '/command imsafe' in order to resume anything), and a few other drastic errors All other output will be suppressed This option saves to the INI and is disabled by default Turning verbosity or fullverbosity back on will disable totalsilence You are no longer allowed to stick to yourself with certain parameters. Sorry for this nerf You can now set your leash length to >= camp radius in the ini, instead of >= campradius + 10 Generic code cleanup and bug fixes","title":"Beta - 8.1029 - new features / misc"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81026-minor","text":"More changes to 'always' stick parameter. Really trying to clean it up a bit more. Fix for my creating a new sit/stand bug by fixing the old one (*setting standstate while dead = bugged until zone out*) Related to above, death should now break all commands except makecamp (*will resume if you get res, but will break if you exit zone*) /stick with invalid parameters will no longer stick Fix for mpause/breakonkb with 'always' Added 'TotalSilence' option to ini that will not display any output except critical errors, breakonsummon notification \\(_since it halts command usage entirely until you turn it off_\\) , and help output if you manually type /stick help Generic code cleanup and bug fixes","title":"Beta - 8.1026 - minor"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81025-bugfixes","text":"Attempted a fix to the long-standing SIT/STAND bug. Major thanks to frostx for supplying me with a ton of information on how to recreate it. Fixed a bug with distance to target not being reset after a stick command was used and ended. this had behavior of sometimes causing breakonwarp messages to fire if the target was outside of breakdist range when you issued a following command. This only applied to certain parameters \\(_i.e. /stick \\#, /stick behind/pin/!front_\\) , and not with anything that set the distance \\(_/stick, /stick on_\\) . Major thanks to frostx for supplying me with a ton of information on how to recreate this so I could find the cause. That's twice! Fixed a crash bug with \"id\" if used with invalid id. \\(_/moveto_ and _/stick_\\) Added Dist and Loose values to /moveto verbosity output Added more checks to prevent stick \"No Target\" error msg instead of halting command attempt if the command requires a target. You will still see the \"You must specify...\" message as normal, but this fix relates to the \"You are now sticking to NO TARGET ERROR\" message Fixed a bug with strafe being held down sometimes, keeping you sliding sideways when you should have stopped Fixed a bug with /stick parameters always checking events for breakonsummon, mpause/mousepause/breakonkb/breakonmouse when you did not have a target. This will now only make those checks if you have a valid npc target and are currently sticking to it","title":"Beta - 8.1025 - bugfixes"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81024-tlo-adds-settings-rewrite","text":"Removed the following TLO members (*${Circle.Summoned}, ${Stick.Summoned}, ${MoveTo.Summoned}, ${Stick.Stuck}, ${MakeCamp.InUseBy}*) Added a new TLO ${MoveUtils} with the following members: ${MoveUtils.Stuck} - TRUE / FALSE - \\(former stick.stuck\\) ${MoveUtils.Summoned} - TRUE / FALSE \\(former everything.summoned\\) ${MoveUtils.Command} - NONE / STICK / CIRCLE / MOVETO / MAKECAMP this is the replacement for makecamp.inuseby MAKECAMP will only show up if nothing else active if you have makecamp on and stick active, STICK will be the result ${MoveUtils} returns this same information ${MoveUtils.StuckLogic} - TRUE / FALSE \\(if you have stuck logic on or not\\) ${MoveUtils.Verbosity} - TRUE / FALSE \\(if you have verbosity on or not\\) ${MoveUtils.FullVerbosity} - TRUE / FALSE \\(if you have fullverbosity on or not\\) Added new members to ${Circle} TLO for those of you who prefer true / false: ${Circle.Clockwise} - TRUE / FALSE \\(circle.rotation still shows CW/CCW\\) ${Circle.Backwards} - TRUE / FALSE \\(circle.direction still shows FORWARDS/BACKWARDS\\) BreakOnSummon no longer fires if only makecamp is on. it will fire if makecamp is attempting to return to camp though since that turns moveto on, which is checked Added the same fix from the previous posts for turn-walk-off adjustment to mouse pause as well. breakonmouse did not have this problem, only pause In the process of changing the syntax of anything that toggles to be able to be toggled as well as set via on / off. I'll also be adding the ability to set just about anything that should be modifiable using this same foundation. This already is a major change to the syntax of most every toggle I've added so please take note: The help output doesnt reflect any of this yet. Where /command can be \\(/stick, /moveto, /circle, /makecamp\\) //The same as before /command help /command debug /command pause /command unpause /command save /command load /command imsafe //Different: \"set\" - this is just a basic foundation /command set verbosity on|off /command set fullverbosity on|off /command set stucklogic on|off //Different: \"toggle\" - this is used to toggle values /command toggle mpause /command toggle mousepause /command toggle breakonkb /command toggle breakonmouse /command toggle autosave /command toggle feign /command toggle autopause /command toggle advancedautopause <---still doesnt work any better dont bother using really /command toggle stucklogic /command toggle verbosity /command toggle fullverbosity /command toggle nohott /command toggle hidehelp /command toggle breakongate /command toggle breakonwarp /command toggle alwaysdrunk /command toggle alwaysbackwards /command toggle alwaysccw /command toggle alwaysloose <---this only applies to moveto atm /command toggle breakonsummon /command checkifstuck is forever removed. use toggle stucklogic or set stucklogic on\\|off Preserved the values for 'ArrivalDist' and 'MoveToMod' in the ini since they were defaulting back to plugin-default values instead of your own custom settings. Will apply this to most everything else in the near future. Fixed mpause resuming no command if makecamp was active by itself. it should still resume an interrupted return to camp.","title":"Beta - 8.1024 TLO adds / settings rewrite"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81023-minor","text":"Added \"Stuck\" TLO ${Stick.Stuck} - FALSE / TRUE - (true if stucklogic detects you are stuck Added a turn off walking adjustment to BreakOnKB to fix a bug with walk being left on","title":"Beta - 8.1023 - minor"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81019-cleanup","text":"StuckLogic fixed. I loaded a session running old source and one running beta source side by side on 2 screens and it behaves the same way on both. Its sloppy and could use work but it was not functioning at all before so now it functions like its used to. I used the preferred settings posted earlier in the thread so please report any differences on other settings. The TurnIncrement of 10 seems to take forever to unstick in tight areas (hallways, small indoor rooms), so I upped it for myself to much better results around 35.0, you may want to try a higher value here if you use this indoors. outdoors might only need small increments StuckLogic now turns on walk when its stuck also, to help reduce getting unstuck only to get restuck because of a burst of speed in hallways and tight corners /stick loose - now uses deadchicken's /moveto loose improvements this will now spin before moving if the heading to the target is greater than \u00bc a turn this should be much more functional and cut down quite a large amount of the orbiting and getting stuck due to loose sticking after playing with it for a good hour in multiple situations, I can say it looks much more natural than before and could be used viably in situations where the fast facing would not be acceptable. test it out by adding 'loose' anywhere in your normal command line for /stick *Drunken circle still needs to be looked at because circle and stucklogic are having issues when you turn on circle next to a wall, which I don't know why you'd ever do that, but the circle gets stuck running forward indefinately \\(in both versions of the source it looks like\\) so I need to track that down before bringing circle over to the new loose logic* * Added /moveto toggle loose - to turn off loose without moving, since /moveto loose always forces it on","title":"Beta - 8.1019 - cleanup"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81018-cleanup","text":"Fixed a bug with /stick uw | underwater not working BreakOnSummon now applies to all commands, not just /stick Updated BreakOnSummon to be more assertive. If BreakOnSummon fires, it will prevent any future command usage in case your macro continually reissues a /stick, /circle or /moveto command When this fires this will display a warning message and notify you There is now a new parameter to reset this, /stick imsafe , which will allow command usage once again For macros that may continually trigger BreakOnSummon, but you still want to use it, there are new TLOs: ${Stick.Summoned} ${Circle.Summoned} ${MoveTo.Summoned} - TRUE / FALSE These apply across the board, meaning they all will be true or they all will be false, so use whichever you like. So in theory if you know something is going to fire breakonsummoned but you still want to use it for other cases, you could issue the command, check the state of the TLO and then have your macro issue a /stick imsafe to undo the command halting BreakOnSummon defaults to false now instead of true since its more assertive Fixed a bug with BreakOnWarp where if you have a camp setup and you issued a /stick or /moveto it would report that mob had warped out of range when the mob never really moved to begin with. If you are leashed you should still not be able to go to the mob, just for different reasons Renamed TurnDirection \\(ini setting\\) to TurnIncrement to be more appropriate for what it actually does. Thanks to deadchicken, /moveto loose is improved. There is now an additional check comparing your current heading to the heading you want to go to, and if its larger than a \u00bc turn, you will spin before you begin moving instead of trying to spin while moving. This prevents the endless \"orbiting\" in circles without ever being able to reach your destination LooseMoveTo in the ini \\(always use loose when using _/moveto_\\) now defaults to true because this is really superior now, and you should use this to prevent the fast facing that goes on if its false. It is very noticeable and detectable. Should you still want the fast facing, then you can either set LooseMoveTo to 'off' in the ini, or type /moveto toggle alwaysloose to toggle it off, then issue a /moveto save to save it to your ini as well /moveto toggle alwaysloose is restricted to the /moveto command, and doesnt work if you use /stick or /circle . I plan to keep them command-based in the future as well Starting to add more comments to the source for those of you trying to learn how it works","title":"Beta - 8.1018 - cleanup"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81015a-breakonsummon","text":"Added a new feature, BreakOnSummon This command works like BreakOnWarp except it checks the distance change of your own x / y locations from pulse to pulse, not related to the mob If your own x / y changes too drastically, with this enabled it will halt all commands. This is useful for COH, or mob summon \\(though I guess not if to the mob you are sticking\\) , but more important if you are summoned by those invisible people in short distances where breakonwarp normally wouldn't fire due to what they do, small repeated summons, doesnt matter with the large distance check you want to use for mob-warp checking. this one you can safely set to a small amount and not worry about your stick breaking from mobs warping small distances the default is set to 20 soas not to interfere with summon from mob you are stuck to, but it may need to be set smaller to be effective, or larger if the mobs you fight you get summoned more than 20 range. it seems the max you move onpulse is around 2.0 with runspeed5, but bard or mount may be higher than that Added new INI settings for this Stick 'BreakOnSummon' - on / off Stick 'BreakSummonDist' - distance to consider summoned \\(default 20.0\\) Added toggle: /stick toggle breakonsummon Related to this, I fixed a since-inception bug with breakonwarp that only worked on half of the angles from your mob. the math \\(if sqrt\\(yourdist\\) - sqrt \\(mob dist\\) > breakdist) never worked when the differences were negative. now they do.","title":"Beta - 8.1015a - breakonsummon"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81015-pause-logic","text":"mpause, if set to ON, will now apply to mouselook as well. you can mouselook or mouselook+left click to move around and it will return based on min/max delay if mpause is set OFF, unlike pressing a key, mouselook will not break your command it will no longer fight with you for the heading. it will allow you to move with the mouse but once you let go of mouselook it will resume the previous command immediately. /stick toggle mousepause this works independently of mpause now. its optional and works identically to mpause for keyboard movement. it saves to the ini as MousePause as well. if turned on, any movement of the mouse while mouselook (turn head with right-click-hold only, or move by right-click-hold plus left-click) will pause the command and return after the min/max delays. if its turned off it will behave like it always did and fight with you for the heading if you try to do anything. to overcome that there is now another option * /stick toggle breakonmouse * this works like mpause=off used to work for keyboard movement * if you move the mouse while a command is active, it will break from the command altogether * you can set this under Defaults 'BreakOnMouse' in the ini * /stick toggle breakonkb * this works like mpause=off used to * mpause=off will not break from your current commands any longer, it will resume immediately as opposed to with a delay, and fight you for the keyboard. you need to set breakonkb or \\(BreakOnKB in the ini\\) the way you like it breakonkb will default to true since this was the old default behavior Pause and break turn each other off, but do not turn the others on. You can have mpause and breakonkb both off, but breakonkb on = mpause off and mpause on = breakonkb off. If you like and use mpause, but decided to try breakonkb, then turned breakonkb off, mpause needs to be turned back on trying to turn both true in the ini will result in breaks being off and pauses being on. ManualPause changed to KeyboardPause in the ini. command still is mpause though. Fixed a bug with /makecamp on \\# /makecamp radius and /makecamp on \\# and /makecamp player and /makecamp y x commands now also enforce leash size update if leash is smaller than camp radius \\(before only /makecamp with no params did this\\) Put the stick dir \\(normal\\) dist \\(\\#\\) mod \\(\\#\\) hold \\(no\\) loose \\(no\\) msg on verbosity instead of fullverbosity Failing to input a command-specific parameter correctly will no longer issue help for the entire plugin, only the command it relates to. Typing '/command help' if HideHelp option is on now assumes you wanted the display and will output the help one time instead of blocking it in this case.","title":"Beta - 8.1015 - pause logic"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81014-tlo-adds","text":"Added New TLOs: ${Stick.DistMod} - value set with /stick mod # or /stick -# ${Stick.DistModPercent} - value set with /stick #% ${Stick.Always} - PAUSED / TRUE / FALSE - \\(true if '/stick \\[parameters\\] always' was activated\\) ${Stick.Aggro} - PAUSED / TRUE / FALSE - \\(true if NoHoTT detects aggro\\) Help output completed, hence the new hidehelp option since it is spamcity INI Revamp - ini file now breaks down into logical sections Defaults Stick Circle MoveTo MakeCamp StuckLogic your-char-name INI file supports many more features. I suggest you backup your current one and delete it, then log in game and /stick save to output a new one. Then edit in your old values from backup and save the file and then /stick load. That way you can see all the new features organized correctly. Loading all values from Defaults will no longer work in this version, but some still remain there. New INI Options Defaults 'HideHelp' - never display spam-filled help syntax Stick 'AwareAggro' - NoHoTT checking on/off Stick 'StickDistMod' - always use specific dist mod Stick 'StickDistModPercent' - always use specific dist mod percent MoveTo 'ArrivalDist' - max dist from moveto loc that is acceptable MoveTo 'LooseMoveTo' - always use loose heading MoveTo 'MoveToMod' - always use specific moveto dist mod Circle 'AlwaysBackwards' - always run backwards Circle 'AlwaysCounterClockwise' - always run in a counter-clockwise circle Circle 'AlwaysDrunken' - always use drunken movement Circle 'RadiusSize' - always use specific radius size New primary command parameters \\(_usable with /stick, /moveto, /makecamp, or /circle_\\) : /stick toggle hidehelp - toggle hidehelp on/off /stick toggle breakongate - toggle on/off /stick toggle breakonwarp - toggle on/off /circle toggle alwaysdrunk - toggle default to drunken /circle toggle alwaysbackwards - toggle default to backwards /circle toggle alwaysccw - toggle default to counterclockwise issue a '/stick save' afterwards to write these changes to ini if desired Experimental new command : '/stick advancedautopause' this will attempt to turn on walk, stop moving, turn to the right to force a position update to prevent casting while moving from getting interrupted. i dont know how well it will work or not, since the current implementation only is good for stopping you from moving if already stationary then casting. *this doesnt work, need a better way to check if casting before the bar pops up*","title":"Beta - 8.1014 - TLO adds"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81013-minor","text":"My attempt to fix the negative stick/movedist halting movement broke the mod applied and forced a very close stick value. Fixed this. You can now set the modifier independently. This will not turn stick on or modify current stick, just change the base value. Before you had to set the mod with: /stick -5 This would subtract 5 from whatever value you used (or mob melee range, which i believe is the intention of this whole thing) every time. It defaulted to 0, but once you set it, you were stuck with negative forever. - Now using */stick mod \\[#\\]*, you can: - reset it to zero (*/stick mod 0*) - or use a positive number (*/stick mod 5* would make */stick 10* function as */stick 15*. This will defeat the purpose of melee range checking but would be good for increasing the number for macros that use too small of number or something along those lines. It is there if you can find a use for it. Added output for modchanges without any verbosity check \\(will move it to Verbosity once its all correct\\) so you can see these actions taking place. FullVerbosity also displays the mod on every use of /stick. Added toggle for Verbosity option Added toggle for FullVerbosity option","title":"Beta - 8.1013 - minor"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81012a-minor","text":"Added Circle TLOs \\([string]()\\) - ${Circle} - ON / OFF / PAUSED \\([string]()\\) - ${Circle.Status} - ON / OFF/ PAUSED \\([float](../../../reference/data-types/datatype-float.md)\\) - ${Circle.CircleX} - location of the center X \\([float](../../../reference/data-types/datatype-float.md)\\) - ${Circle.CircleY} - location of the center Y \\([bool](../../../reference/data-types/datatype-bool.md)\\) - ${Circle.Drunken} - TRUE / FALSE \\([string]()\\) - ${Circle.Rotation} - CW / CCW \\([string]()\\) - ${Circle.Direction} - FORWARDS / BACKWARDS Added the ability to change circle radius Before you had to re-issue /circle on \\# to change the radius \\(size\\) of the circle. This would plant the anchor where you were at, forcing you to reset any custom anchor or options. Now you can do this: /circle radius \\# - will keep circling but increase the radius on the fly Removed the ability to do /moveto dist/-dist because it was having conflicts. To set the moveto distance now you need to use: /moveto dist \\# - to set distance /moveto dist -dist - to subtract from currently set distance You can no longer set stick or moveto distance to a value below 0. Negative numbers halted all movement so any attempt to do so will force the distance value to 1.","title":"Beta - 8.1012a - minor"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81012-makecamp-player","text":"Fixed two more crash bugs \\(thanks ieatacid\\) Added /makecamp player name Makecamp player works if you supply a valid name of a PC in the zone uses your current target \\(fails if target is not SPAWN\\_PLAYER\\) if you do not supply the name. This will create a dynamic camp based on the location of this player as they move, using the current 'radius' and 'leash' values that you are used to. This works like a ghetto autofollow and actually appears somewhat natural because it uses moveto logic instead of stick logic. This means no fast/loose facing the person, just moving to their general area \\(which is cool\\) . If the camp is based around your puller, that is a bad idea, don't do it. If the person you supply is really far away when you issue the command, it may have trouble getting to them. If the person magically warps/gets summoned way far away, it will likely have problems. Also note this still uses the mindelay and maxdelay values for deciding when to move, so it will look like you are really two/three/four/etc-boxing and moving them if you set the values correctly. The downside to this is that if the character is on the very edge of the leash length and you are taking small steps forward it will take its own small steps forward as well, based on the min/max delays, so that can look weird","title":"Beta - 8.1012 - makecamp player"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81011-minor","text":"attempt a fix at a crash bug related to verbosity output. Went through the whole source and that was the only time the writechat was used incorrectly in that way Please report any occurrences of new \"NULL POINTER ERROR\" message or new \"NO TARGET\" error message (both relate to only the verbose output for /stick) and how to reproduce it The old NULL POINTER message still exists as it always did in original moveutils","title":"Beta - 8.1011 - minor"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81002-complete-rewrite-first-beta","text":"Command Syntax - Many base commands all can be used from every command i.e. /circle load, /stick load, /makecamp load, /moveto load - all will do the same thing * INI File - many more settings supported INI File Verbosity - Changed from 1/0 to on/off. It will auto-correct old files, so you dont need to mess with it. Just a FYI. Output - drastically changed, may break macro events \\(tried to keep the most common ones the same\\) Issuing one command completely ends the other - This does not apply to /makecamp, only /circle, /moveto, and /stick Feign Support - added feign parameter or FeignSupport in the INI. When enabled this will not begin your command if you are FD until you manually stand up * AutoSave - automatically save ini like old save cmd \\(/stick save\\) every time you change a setting New TLOs \\([string]()\\) - ${MakeCamp.InUseBy} - which command is active \\([string]()\\) - ${Stick.StickTargetName} - name of stick target if using /stick id, or /stick hold, otherwise will be target name/NONE * Additional Verbosity - fullverbosity option \\(ini file\\) to output more detailed information. original verbosity still exists and fullverbosity does NOT turn on original stick verbosity messages. you have to set each independently * StuckLogic Toggle - added a toggle for stucklogic, no longer need to reload ini file * AutoPause Toggle - added a toggle for autopause, no longer need to reload ini file * New Stick Parameter 'always' - Usage: /stick [other parameters] always Putting 'always' at the end will not require another /stick after you lose your target \\(i.e. mob dies\\) . This behaves the same way as if you /stick something, then change the target before it dies which uses the same settings as the last time you typed the command. This does not work with stick hold or stick id. This only works with NPC targets \\(not their pets\\) , so changing to other target types like PC, chest, corpse, etc. will not make you run around constantly. This works great if you pass targets with EQBC for example. Using this on your puller or when cross-zone targeting will probably cause you problems. This setting cannot be saved and will reset upon any new command typed by design because of its potential misuse. Don't ask for huge features on this. I can see it being used carelessly so be careful. * Check for aggro if you dont have HoTT - this is experimental and still needs improvement","title":"Beta - 8.1002 - complete rewrite \\(first beta\\)"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#original-80913-first-moveutils-change","text":"every 'break' function that used this method to stop moving seems to be failing: MQ2Globals::ExecuteCmd(FindMappableCommand(\"forward\"),0,0); Changed the ExecuteCmds to supply a down then up to stop the issue: MQ2Globals::ExecuteCmd(FindMappableCommand(\"forward\"),1,0); MQ2Globals::ExecuteCmd(FindMappableCommand(\"forward\"),0,0);","title":"Original - 8.0913 - first moveutils change"},{"location":"plugins/community-plugins/mq2twist/","text":"MQ2Twist \u00b6 General Details \u00b6 Description \u00b6 MQ2Twist is a plugin for bards which allows them to \"twist\" a number of songs and/or items together very reliably. It takes care of missed notes and interrupts automatically, and can swap in items to cast too. This plugin was developed by koad, CyberTech, Cr4zyb4rd and Pheph, and can be downloaded from here VIP ACCESS REQUIRED it was last edited by Cr4zyb4rd on Wed Jun 21, 2006. Winnower is the last one to post an updated file but it is user modified and that was on Wed Jul 29, 2015 here , I am unable to find a current stable version. If you happen to find one please update this Wiki. - \\(Description updated by Valendar 6-15-16\\) Development Notes \u00b6 For the development history of this plugin see the article MQ2Twist Revision History Commands \u00b6 /twist # # # # # Twists the songs/items in the order specified \\(up to 10 can be specified\\) . Valid options are 1 thru NUM_SPELL_GEMS \\(EQData.h\\) for song gems, and 21 thru 29 for item clicks. These may be mixed in any order, and repeats are allowable. If a song is specified with a duration longer than standard \\(eg. Selo's Accelerating Chorus\\) , that song will be twisted in based on it's duration. For example, riz+mana+selos would be a 2 song twist with selos pulsed every 2.5 min. /twist once # # # # # Twists in songs once the order given, then reverts back to original twist /twist hold # Pause twisting and sing only the specified song /twist stop/end/off Stop twisting, does not clear the twist queue /twist or /twist start Resume the twist after using /twist hold or /twist stop /twist reset Reset timers for item clicks and long duration songs /twist clear Stop twist and clear song list /twist delay # Specify the delay to be used before starting a new song \\(in 10ths of a second\\) . The minimum is 30, default is 33 /twist adjust # How early to recast long duration songs \\(in ticks\\) /twist reload Reload the INI file to update item clicks /twist slots List the slots/items defined in the INI and their item numbers /twist quiet Toggles songs listing and start/stop messages for one-shot twists /sing Alias for /twist hold /stoptwist Alias for /twist stop Top-Level Objects \u00b6 bool ${Twist} Same as ${Twist.Twisting} \\(see below\\) bool ${Twist.Twisting} Returns TRUE if currently twisting, FALSE if not and NULL if plugin not loaded. int ${Twist.Current} Returns the current gem being sung, -1 for item or 0 if not twisting int ${Twist.Next} Returns the next gem to be sung, -1 for item or 0 if not twisting string ${Twist.List} Returns the twist sequence in a format suitable for /twist. Examples \u00b6 /twist 1 Sing gem 1 forever /twist 1 2 3 Twist gems 1,2, and 3 forever /twist 1 2 3 10 Twist gems 1,2,3, and clicky 10, forever /twist hold 4 Sing gem 4 forever, until another singing-related /twist command is given /sing 4 Same as above /twist set 16 32 120 \"Cassindra's Chorus of Clarity\" AA Set Click_16 to CastTime=32, ReCastTime=120, Name=\"Cassindra's Chorus of Clarity\", Slot=AA ; and save to INI INI File \u00b6 [MQ2Twist] Delay=32 Delay between twists (in 10ths of a second). Lag & System dependant. Adjust=1 This defines how many ticks before the 'normal' recast time to cast a long song. Long songs are defined as songs greater than 3 ticks in length. If set to 1 tick, and a song lasts 10 ticks, the song will be recast at the 8 tick mark, instead of at the 9 tick mark as it normally would. [Click_21] through [Click_29] CastTime=30 Casting Time, -1 to use the normal song delay ReCastTime=0 How often to recast, 0 to twist normally. Name=\"Fife of Battle\" Item name for /itemnotify Slot=neck Slot name for /itemnotify Delay, CastTime and ReCastTime are specified in 10ths of a second \\(so 10 = 1 second\\) The INI file allows you to specify items by name \\(with Name=\\) , or by inventory slot (with Slot=). If both a Name and Slot are defined for an item, the plugin will attempt to swap the item into that slot using the /exchange command. After casting, it will replace the original item. If only Name or Slot are specified, \" /itemnotify Slot rightmouseup\" is used to perform item clicks. item click method \u00b6 MQ2Twist uses /itemnotify slotname rightmouseup to perform item clicks. The INI file allows you to specify items by name (with name=itemname), or by inventory slot (with slot=slotname). If both a name and slot are defined for an item, the plugin will attempt to swap the item into that slot (via the /exchange command) and replace the original item when casting is complete. ```` The example INI file below contains examples of the types of usage.\\ ini file example \u00b6 [MQ2Twist] Delay=31 Quiet=0 ;Shadowsong cloak [Click_21] CastTime=30 ReCastTime=350 Name=Shadowsong Cloak Slot=DISABLED ;girdle of living thorns (current belt will be swapped out) [Click_22] CastTime=0 ReCastTime=11600 Name=Girdle of Living Thorns Slot=waist ;nature's melody [Click_23] CastTime=-1 ReCastTime=135 Name=DISABLED Slot=mainhand ;lute of the flowing waters [Click_24] CastTime=0 ReCastTime=0 Name=Lute of the Flowing Waters Slot=DISABLED ;lute of the flowing waters [Click_25] CastTime=32 ReCastTime=120 Name=Cassindra's Chorus of Clarity Slot=AA [Click_26] ... [Click_30] CastTime=33 ReCastTime=0 Name=DISABLED Slot=DISABLED","title":"MQ2Twist"},{"location":"plugins/community-plugins/mq2twist/#mq2twist","text":"","title":"MQ2Twist"},{"location":"plugins/community-plugins/mq2twist/#general-details","text":"","title":"General Details"},{"location":"plugins/community-plugins/mq2twist/#description","text":"MQ2Twist is a plugin for bards which allows them to \"twist\" a number of songs and/or items together very reliably. It takes care of missed notes and interrupts automatically, and can swap in items to cast too. This plugin was developed by koad, CyberTech, Cr4zyb4rd and Pheph, and can be downloaded from here VIP ACCESS REQUIRED it was last edited by Cr4zyb4rd on Wed Jun 21, 2006. Winnower is the last one to post an updated file but it is user modified and that was on Wed Jul 29, 2015 here , I am unable to find a current stable version. If you happen to find one please update this Wiki. - \\(Description updated by Valendar 6-15-16\\)","title":"Description"},{"location":"plugins/community-plugins/mq2twist/#development-notes","text":"For the development history of this plugin see the article MQ2Twist Revision History","title":"Development Notes"},{"location":"plugins/community-plugins/mq2twist/#commands","text":"/twist # # # # # Twists the songs/items in the order specified \\(up to 10 can be specified\\) . Valid options are 1 thru NUM_SPELL_GEMS \\(EQData.h\\) for song gems, and 21 thru 29 for item clicks. These may be mixed in any order, and repeats are allowable. If a song is specified with a duration longer than standard \\(eg. Selo's Accelerating Chorus\\) , that song will be twisted in based on it's duration. For example, riz+mana+selos would be a 2 song twist with selos pulsed every 2.5 min. /twist once # # # # # Twists in songs once the order given, then reverts back to original twist /twist hold # Pause twisting and sing only the specified song /twist stop/end/off Stop twisting, does not clear the twist queue /twist or /twist start Resume the twist after using /twist hold or /twist stop /twist reset Reset timers for item clicks and long duration songs /twist clear Stop twist and clear song list /twist delay # Specify the delay to be used before starting a new song \\(in 10ths of a second\\) . The minimum is 30, default is 33 /twist adjust # How early to recast long duration songs \\(in ticks\\) /twist reload Reload the INI file to update item clicks /twist slots List the slots/items defined in the INI and their item numbers /twist quiet Toggles songs listing and start/stop messages for one-shot twists /sing Alias for /twist hold /stoptwist Alias for /twist stop","title":"Commands"},{"location":"plugins/community-plugins/mq2twist/#top-level-objects","text":"bool ${Twist} Same as ${Twist.Twisting} \\(see below\\) bool ${Twist.Twisting} Returns TRUE if currently twisting, FALSE if not and NULL if plugin not loaded. int ${Twist.Current} Returns the current gem being sung, -1 for item or 0 if not twisting int ${Twist.Next} Returns the next gem to be sung, -1 for item or 0 if not twisting string ${Twist.List} Returns the twist sequence in a format suitable for /twist.","title":"Top-Level Objects"},{"location":"plugins/community-plugins/mq2twist/#examples","text":"/twist 1 Sing gem 1 forever /twist 1 2 3 Twist gems 1,2, and 3 forever /twist 1 2 3 10 Twist gems 1,2,3, and clicky 10, forever /twist hold 4 Sing gem 4 forever, until another singing-related /twist command is given /sing 4 Same as above /twist set 16 32 120 \"Cassindra's Chorus of Clarity\" AA Set Click_16 to CastTime=32, ReCastTime=120, Name=\"Cassindra's Chorus of Clarity\", Slot=AA ; and save to INI","title":"Examples"},{"location":"plugins/community-plugins/mq2twist/#ini-file","text":"[MQ2Twist] Delay=32 Delay between twists (in 10ths of a second). Lag & System dependant. Adjust=1 This defines how many ticks before the 'normal' recast time to cast a long song. Long songs are defined as songs greater than 3 ticks in length. If set to 1 tick, and a song lasts 10 ticks, the song will be recast at the 8 tick mark, instead of at the 9 tick mark as it normally would. [Click_21] through [Click_29] CastTime=30 Casting Time, -1 to use the normal song delay ReCastTime=0 How often to recast, 0 to twist normally. Name=\"Fife of Battle\" Item name for /itemnotify Slot=neck Slot name for /itemnotify Delay, CastTime and ReCastTime are specified in 10ths of a second \\(so 10 = 1 second\\) The INI file allows you to specify items by name \\(with Name=\\) , or by inventory slot (with Slot=). If both a Name and Slot are defined for an item, the plugin will attempt to swap the item into that slot using the /exchange command. After casting, it will replace the original item. If only Name or Slot are specified, \" /itemnotify Slot rightmouseup\" is used to perform item clicks.","title":"INI File"},{"location":"plugins/community-plugins/mq2twist/#item-click-method","text":"MQ2Twist uses /itemnotify slotname rightmouseup to perform item clicks. The INI file allows you to specify items by name (with name=itemname), or by inventory slot (with slot=slotname). If both a name and slot are defined for an item, the plugin will attempt to swap the item into that slot (via the /exchange command) and replace the original item when casting is complete. ```` The example INI file below contains examples of the types of usage.\\","title":"item click method"},{"location":"plugins/community-plugins/mq2twist/#ini-file-example","text":"[MQ2Twist] Delay=31 Quiet=0 ;Shadowsong cloak [Click_21] CastTime=30 ReCastTime=350 Name=Shadowsong Cloak Slot=DISABLED ;girdle of living thorns (current belt will be swapped out) [Click_22] CastTime=0 ReCastTime=11600 Name=Girdle of Living Thorns Slot=waist ;nature's melody [Click_23] CastTime=-1 ReCastTime=135 Name=DISABLED Slot=mainhand ;lute of the flowing waters [Click_24] CastTime=0 ReCastTime=0 Name=Lute of the Flowing Waters Slot=DISABLED ;lute of the flowing waters [Click_25] CastTime=32 ReCastTime=120 Name=Cassindra's Chorus of Clarity Slot=AA [Click_26] ... [Click_30] CastTime=33 ReCastTime=0 Name=DISABLED Slot=DISABLED","title":"ini file example"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/","text":"MQ2Twist:Revisions \u00b6 __FORCETOC__ MQ2Twist Revision History \u00b6 htw 10-13-09 \u00b6 Added flag in SetGameState() to prevent INI init on zone htw 10-12-09 \u00b6 Corrected item swap in index, added a few more info lines if debug mode is on htw 10-10-09 \u00b6 Corrected max check for items on song rotation htw 09-22-09 \u00b6 See changes below Changed click/aa entries to STL, added class (a couple members for future direction), a few other changes dewey2461 09-19-09 \u00b6 Updated to let you twist AA abilities and define clicky/AA songs from inside the game 12-23-08 \u00b6 Updated array lengths to add more clicky slots MinosDis 05-01-08 \u00b6 Updated to fix /twist once Simkin 12-17-07 \u00b6 Updated for Secrets of Faydwer 10 Songs Support items Secrets of Faydwer 10 Songs 10-05-04 \u00b6 Support \"swap in and click\" items 09-15-04 \u00b6 Support extra spell slot from Omens of War AA 09-01-04 \u00b6 Command: /twist quiet to toggle some of the spam on/off Various code fixes/speedups 08-29-04 \u00b6 Moved LONGSONG_ADJUST into INI file and made /twist adjust command to set it on the fly 08-25-04 \u00b6 Changed output for /twist once to be slightly less misleading Reset click/song timers every time they're called with /twist hold or /twist once; if the user's specifying that song, they obviously want to cast it anyway. Removed the variable MissedNote as close inspection revealed the only place it was checked for was the line that set it. /boggle Minor code tweaks, cleanups, formatting changes, etc Pheph 08-24-04 \u00b6 cleaning up use of MQ2Data Modified it to use only one TLO, as I found it somewhat messy having 4 different ones. All the functionality of the old TLO's are now members of ${Twist} ${Twising} is now ${Twist.Twisting}, or just ${Twist} ${TwistCurrent} is now ${Twist.Current} ${TwistNext} is now ${Twist.Next} ${TwistList} is now ${Twist.List} 08-23-04 \u00b6 Reset_ItemClick_Timers was being called far too often. Now the only time we reset is if a new list of songs are specified. \"/twist ${TwistList}\" is a useful alias if you for some reason want the old behavior. Sing or /twist hold now resets the cast/item timer for that song only, rather than the entire list. Command: /twist reset calls Reset_ItemClick_Timers without interfering with the state of the current twists. 08-22-04 \u00b6 Command: /twist once [songlist] will cycle through the songs entered once, then revert to the old twist, starting with the song that was interrupted. Removed command \"/twist on\", it was making the string compare for \"once\" annoying, and I didn't think it was worth the effort for a redundant command. /twist delay with no argument now returns the delay without resetting it. Values less than 30 now give a warning...maybe they're not bards or have some other reason for using a low value. Cr4zyb4rd 08-19-04 \u00b6 taking over janitorial duties Minor revamp of item notification. Removed ITEMNOTIFY define and kludged in some changes from Virtuoso65 to get casting by item name working. /cast is no longer used. Added INI file support for above change. File now uses distinct entries for item names and slots. *Quotes not required for multi-word item names in INI.* Fixed the MQ2Data value TwistCurrent to display the current song as-advertised, and added a new value TwistNext with the old behavior of showing the next song in the queue. (Useful in scripting) Removed a few DebugSpews that were mega-spamming my debugger output. CastTime of -1 in the INI file now causes the default delay to be used. 06-01-04 \u00b6 Added LONGSONG_ADJUST (default to 1 tick) to help with the timing of recasting long songs, such as selo's. Twisting is now paused when you sit (this would include camping). This fixes problems reported by Chyld989 (twisting across chars) and Kiniktoo (new autostand on cast 'feature' in EQ makes twisting funky) 05-19-04 \u00b6 Added workaround for incorrect duration assumption for durationtype=5 songs, such as Cassindra's Chant of Clarity or Cassindra's Chorus of Clarity. Added check of char state before casting a song. Actually added for 1.05 Checked states and resulting action are: Feigned, or Ducking = /stand Stunned = Delay Dead - Stop twisting. If you're a monk using this to click your epic, you'll want to disable the autostand on feign code =) 05-05-04 \u00b6 Fixed CTD on song unmem or death, while twisting. Oops Removed circle functionality. It's better suited for a plugin like the MQ2MoveUtils plugin by tonio at http://macroquest.sourceforge.net/phpBB2/viewtopic.php?t=6973 05-01-04 \u00b6 Fixed problem with using pchar before state->ingame causing CTD on eq load (thanks MTBR) Fixed vc6 compile error w/ reset_itemclick_timers Replaced various incantations of pChar and pSpawn with GetCharInfo() Fixed /circle behavior w/ unspecified y/x Fixed /circle on when already circling and you want to update loc Added output of parsed circle parameters on start. 04-25-04 \u00b6 Converted to MQ2Data Top Level Objects: bool Twisting (if NULL plugin is not loaded) int TwistCurrent string TwistList Removed $Param synatax for above Added check to make sure item twists specified are defined Fixed error with twist parameter processing Changed twist startup output to be more verbose Command: /twist on added as alias for /twist start INI File is now named per-character (MQ2Twist_Charname.ini) * Be sure to rename existing ini files Modified twist routine to take into account songs with non-0 recast times or longer than 3 tick durations, and only re-cast them after the appropriate delay. This is for songs like Selos 2.5 min duration, etc. * Note that this makes no attempt to recover if the song effect is dispelled, your macro will need to take care of that. Added ability to compile-time change the method used for clicking items. 04-13-04 \u00b6 Changed /circle command to allow calling w/o specifying loc Corrected a problem with multiple consecutive missed notes Added handling of attempting to sing while stunned Command: /twist slots, to list the slot to # associations Command: /twist reload, to reload the ini file on the fly Command: /twist end, /twist off as aliases for /twist stop Command: /sing #, as an alias for /twist hold # Added support for item clickies. Clickies are specified as \"gem\" 10-19. For example, /twist 1 2 10 12 Added INI file support for storing item clicky info and default twist delay. 04-11-04 \u00b6 Integrated the /circle code from Easar, runs in a circle. type /circle for help. CyberTech 03-31-04 \u00b6 w/ code/ideas from Falco72 & Space-boy koad 03-24-04 \u00b6 Original plugin \\([http://macroquest.sourceforge.net/phpBB2/viewtopic.php?t=5962&start=2](http://macroquest.sourceforge.net/phpBB2/viewtopic.php?t=5962&start=2)\\)","title":"MQ2Twist:Revisions"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#mq2twistrevisions","text":"__FORCETOC__","title":"MQ2Twist:Revisions"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#mq2twist-revision-history","text":"","title":"MQ2Twist Revision History"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#htw-10-13-09","text":"Added flag in SetGameState() to prevent INI init on zone","title":"htw 10-13-09"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#htw-10-12-09","text":"Corrected item swap in index, added a few more info lines if debug mode is on","title":"htw 10-12-09"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#htw-10-10-09","text":"Corrected max check for items on song rotation","title":"htw 10-10-09"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#htw-09-22-09","text":"See changes below Changed click/aa entries to STL, added class (a couple members for future direction), a few other changes","title":"htw 09-22-09"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#dewey2461-09-19-09","text":"Updated to let you twist AA abilities and define clicky/AA songs from inside the game","title":"dewey2461 09-19-09"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#12-23-08","text":"Updated array lengths to add more clicky slots","title":"12-23-08"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#minosdis-05-01-08","text":"Updated to fix /twist once","title":"MinosDis 05-01-08"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#simkin-12-17-07","text":"Updated for Secrets of Faydwer 10 Songs Support items Secrets of Faydwer 10 Songs","title":"Simkin 12-17-07"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#10-05-04","text":"Support \"swap in and click\" items","title":"10-05-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#09-15-04","text":"Support extra spell slot from Omens of War AA","title":"09-15-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#09-01-04","text":"Command: /twist quiet to toggle some of the spam on/off Various code fixes/speedups","title":"09-01-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#08-29-04","text":"Moved LONGSONG_ADJUST into INI file and made /twist adjust command to set it on the fly","title":"08-29-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#08-25-04","text":"Changed output for /twist once to be slightly less misleading Reset click/song timers every time they're called with /twist hold or /twist once; if the user's specifying that song, they obviously want to cast it anyway. Removed the variable MissedNote as close inspection revealed the only place it was checked for was the line that set it. /boggle Minor code tweaks, cleanups, formatting changes, etc","title":"08-25-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#pheph-08-24-04","text":"cleaning up use of MQ2Data Modified it to use only one TLO, as I found it somewhat messy having 4 different ones. All the functionality of the old TLO's are now members of ${Twist} ${Twising} is now ${Twist.Twisting}, or just ${Twist} ${TwistCurrent} is now ${Twist.Current} ${TwistNext} is now ${Twist.Next} ${TwistList} is now ${Twist.List}","title":"Pheph 08-24-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#08-23-04","text":"Reset_ItemClick_Timers was being called far too often. Now the only time we reset is if a new list of songs are specified. \"/twist ${TwistList}\" is a useful alias if you for some reason want the old behavior. Sing or /twist hold now resets the cast/item timer for that song only, rather than the entire list. Command: /twist reset calls Reset_ItemClick_Timers without interfering with the state of the current twists.","title":"08-23-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#08-22-04","text":"Command: /twist once [songlist] will cycle through the songs entered once, then revert to the old twist, starting with the song that was interrupted. Removed command \"/twist on\", it was making the string compare for \"once\" annoying, and I didn't think it was worth the effort for a redundant command. /twist delay with no argument now returns the delay without resetting it. Values less than 30 now give a warning...maybe they're not bards or have some other reason for using a low value.","title":"08-22-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#cr4zyb4rd-08-19-04","text":"taking over janitorial duties Minor revamp of item notification. Removed ITEMNOTIFY define and kludged in some changes from Virtuoso65 to get casting by item name working. /cast is no longer used. Added INI file support for above change. File now uses distinct entries for item names and slots. *Quotes not required for multi-word item names in INI.* Fixed the MQ2Data value TwistCurrent to display the current song as-advertised, and added a new value TwistNext with the old behavior of showing the next song in the queue. (Useful in scripting) Removed a few DebugSpews that were mega-spamming my debugger output. CastTime of -1 in the INI file now causes the default delay to be used.","title":"Cr4zyb4rd 08-19-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#06-01-04","text":"Added LONGSONG_ADJUST (default to 1 tick) to help with the timing of recasting long songs, such as selo's. Twisting is now paused when you sit (this would include camping). This fixes problems reported by Chyld989 (twisting across chars) and Kiniktoo (new autostand on cast 'feature' in EQ makes twisting funky)","title":"06-01-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#05-19-04","text":"Added workaround for incorrect duration assumption for durationtype=5 songs, such as Cassindra's Chant of Clarity or Cassindra's Chorus of Clarity. Added check of char state before casting a song. Actually added for 1.05 Checked states and resulting action are: Feigned, or Ducking = /stand Stunned = Delay Dead - Stop twisting. If you're a monk using this to click your epic, you'll want to disable the autostand on feign code =)","title":"05-19-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#05-05-04","text":"Fixed CTD on song unmem or death, while twisting. Oops Removed circle functionality. It's better suited for a plugin like the MQ2MoveUtils plugin by tonio at http://macroquest.sourceforge.net/phpBB2/viewtopic.php?t=6973","title":"05-05-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#05-01-04","text":"Fixed problem with using pchar before state->ingame causing CTD on eq load (thanks MTBR) Fixed vc6 compile error w/ reset_itemclick_timers Replaced various incantations of pChar and pSpawn with GetCharInfo() Fixed /circle behavior w/ unspecified y/x Fixed /circle on when already circling and you want to update loc Added output of parsed circle parameters on start.","title":"05-01-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#04-25-04","text":"Converted to MQ2Data Top Level Objects: bool Twisting (if NULL plugin is not loaded) int TwistCurrent string TwistList Removed $Param synatax for above Added check to make sure item twists specified are defined Fixed error with twist parameter processing Changed twist startup output to be more verbose Command: /twist on added as alias for /twist start INI File is now named per-character (MQ2Twist_Charname.ini) * Be sure to rename existing ini files Modified twist routine to take into account songs with non-0 recast times or longer than 3 tick durations, and only re-cast them after the appropriate delay. This is for songs like Selos 2.5 min duration, etc. * Note that this makes no attempt to recover if the song effect is dispelled, your macro will need to take care of that. Added ability to compile-time change the method used for clicking items.","title":"04-25-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#04-13-04","text":"Changed /circle command to allow calling w/o specifying loc Corrected a problem with multiple consecutive missed notes Added handling of attempting to sing while stunned Command: /twist slots, to list the slot to # associations Command: /twist reload, to reload the ini file on the fly Command: /twist end, /twist off as aliases for /twist stop Command: /sing #, as an alias for /twist hold # Added support for item clickies. Clickies are specified as \"gem\" 10-19. For example, /twist 1 2 10 12 Added INI file support for storing item clicky info and default twist delay.","title":"04-13-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#04-11-04","text":"Integrated the /circle code from Easar, runs in a circle. type /circle for help.","title":"04-11-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#cybertech-03-31-04","text":"w/ code/ideas from Falco72 & Space-boy","title":"CyberTech 03-31-04"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#koad-03-24-04","text":"Original plugin \\([http://macroquest.sourceforge.net/phpBB2/viewtopic.php?t=5962&start=2](http://macroquest.sourceforge.net/phpBB2/viewtopic.php?t=5962&start=2)\\)","title":"koad 03-24-04"},{"location":"plugins/core-plugins/","text":"Core Plugins \u00b6","title":"Core Plugins"},{"location":"plugins/core-plugins/#core-plugins","text":"","title":"Core Plugins"},{"location":"plugins/core-plugins/mq2autologin/","tags":["plugin"],"text":"MQ2AutoLogin \u00b6 Description \u00b6 AutoLogin is a plugin that automatically logs in your characters. It can also switch characters, servers and login new accounts via commandline. It was originally made by ieatacid . Setting up profiles via tray icon \u00b6 Right click on your MacroQuest tray icon Select Profiles->Create New. You'll be asked to enter nine fields: Profile Set: (This creates \"groups\" of profiles, enter any custom name) EQ Path: (Path to eqgame.exe) Login: (EverQuest login) Password: (EverQuest password) Server: (Server short name) Character Name: Class: (Optional) Level: (Optional) Hotkey: (Assign a key or combination of keys to bring this character's window to the front) Upon clicking \"Save\", your profile will be encrypted and saved in MQ2AutoLogin.ini Commands \u00b6 /switchserver <server short name> <character name> Will log out your current character and log in the specified server/character on the same account. /switchchar <name> Will log out your current character and log in the specified character on the same account/server. /loginchar [server:character|profile_server:character|server^login^character^password|server^login^password] Will open a new EverQuest instance and login the specified character. Example: /loginchar vox:bobby /relog [#s|#m] Will log character out, and then log back in after specified time. Default time is in seconds. Example: /relog 5m END and HOME Pressing the \"END\" key at the character select screen will pause autologin, \"HOME\" will unpause. INI \u00b6 MQ2AutoLogin.ini has the following global settings, [Settings] ;The following settings are global. Settings changed for specific characters will override them. NotifyOnServerUp = 1 ;0 is off, 1 is beep, 2 is email via MQ2Gmail KickActiveCharacter = 1 ;0 is off, 1 is on. Will attempt to boot an active player to log in. EndAfterCharSelect = 1 ;0 is off, 1 is on. CharSelectDelay = 3 ;seconds to wait at the character select screen. Default is 3 ConnectRetries = 0 ;How many attempts to connect after a failure UseMQ2Login = 1 ;Uses the default, encrypted method of autologin UseStationNamesInsteadOfSessions = 0 ;Stores your login and pass in plaintext in MQ2AutoLogin.ini, but is compatible with ISBoxer/WinEQ. If you're using UseMQ2Login=1 and have created profiles via the tray icon, there will be additional sections such as [Profiles] and profile names. These should be left alone, as their settings are best changed via the GUI. Alternate login methods \u00b6 There are two alternate login methods: Sessions (compatible with the EverQuest launcher and \"-patchme\" login method) and Station Names (best for WinEQ and ISBoxer) If you'd like to use sessions, set UseMQ2Login=0 , and add sessions to the MQ2AutoLogin.ini in this format, Sessions example INI [Settings] UseMQ2Login = 0 [Session1] StationName = StationNameforSession Password = PasswordforSession Server = ServerforSession Character = Name [Session2] StationName = StationNameforSession Password = PasswordforSession Server = ServerforSession Character = Name If you're using ISBoxer, set UseMQ2Login=0 AND UseStationNamesInsteadOfSessions=1 , and add station names to the MQ2AutoLogin.ini in this format, Station names example INI [Settings] UseMQ2Login = 0 UseStationNamesInsteadOfSessions = 1 [StationName1] Password = PasswordforThisLoginName Server = ServerforThisLoginName Character = CharacterforThisLoginName [StationName2] Password = PasswordforThisLoginName Server = ServerforThisLoginName Character = CharacterforThisLoginName Additional settings from the global section, such as KickActiveCharacter=1 can be added to session or station name sections to affect only that character. List of server short names \u00b6 antonius bertox bristle cazic drinal erollisi firiona luclin phinigel povar ragefire rathe rizlona tunare vox xegony zek test beta Custom server names \u00b6 To add a new server with a custom short name, which is particularly important for emulators, edit your MQ2AutoLogin.ini with the following format: [Servers] shortname = Exact long name (as it appears on login screen) Make sure shortname matches servers internal shortname exactly. You can get this information from logging into the server and running /echo ${EverQuest.Server} For example, here are the most popular macroquest-compatible emu servers as of 8/5/2022: ; Host=login.eqemulator.net [Servers] EZ (Linux) x4 Exp = [] EZ Server - Custom Zones, Vendors, Quests, Items, etc Imperium_EQ = [] Imperium Server - Solo Level/Duo+ Raid PEQTGC = [] PEQ] The Grand Creation - Omens of War Project Lazarus = [] Project Lazarus HiddenForest = [] The Hidden Forest [ www.thehiddenforest.org ] Haven = [] Wayfarers Haven [wayfarershaven.com] CWR = [] Clumsy's World [Velious, Semi-Custom, QoL+] DxBx = [] DreadBox:Re-Dredged BETA E9 Profusion = [] Enine's ProFusion EQTitan = [] EQT ) EQTitan [Legit PoP/LDoN/GoD] The Firiona Vie Project = [] FVP - The Firiona Vie Project (Kunark) IxiQuest = IxiQuest - (ixiquest.com) Classic to Velious + KMRA = Raid Atticts (Fully Custom) [Solo/Group/Raid] The Dark Exile = [] The Dark Exile Showdowrest = [[R] ] Shadowrest Alternate Everquest = [[R] ]Alternate EQ Might = [[R] ] EQ Might ; Host=login.projecteq.net [Servers] Project Lazarus = Project Lazarus MQ2Login Profiles GUI \u00b6 Right click on the MacroQuest tray icon -> Profiles Check marks: A checked character will be loaded when clicking \"Profile->Load All\". Right-clicking a character's name will toggle the checkmark on or off. Loading individual accounts: Left click on a character name and if checked, it will login and load MacroQuest. Left-clicking a loaded character will unload MacroQuest for that character. Batch Files and hotkeys: If you currently use batch files or hotkeys or whatever, those should still be usable if you don't want to click the menu. Example: \\(this example assumes you HAVE profiles created with \"Create New...\" in mq2autologin.ini\\) Batch file can launch your accounts by sending the server_charname to the eqgame client like this: patchme /login:drinal_eqmule And that's really all there is to it... You would of course change the server and Charname to your server and your char \\(drinal and eqmule\\) Encryption: If you make profiles via the tray icon GUI, they are encrypted in your MQ2AutoLogin.ini. Moving your file to another computer or changing computer hardware will invalidate these logins, so please use import/export for backup and moving purposes. Import/Export This helps export and import login profiles, which are otherwise hard to decrypt. Launch Clean Launch single sessions without logging in.","title":"MQ2AutoLogin"},{"location":"plugins/core-plugins/mq2autologin/#mq2autologin","text":"","title":"MQ2AutoLogin"},{"location":"plugins/core-plugins/mq2autologin/#description","text":"AutoLogin is a plugin that automatically logs in your characters. It can also switch characters, servers and login new accounts via commandline. It was originally made by ieatacid .","title":"Description"},{"location":"plugins/core-plugins/mq2autologin/#setting-up-profiles-via-tray-icon","text":"Right click on your MacroQuest tray icon Select Profiles->Create New. You'll be asked to enter nine fields: Profile Set: (This creates \"groups\" of profiles, enter any custom name) EQ Path: (Path to eqgame.exe) Login: (EverQuest login) Password: (EverQuest password) Server: (Server short name) Character Name: Class: (Optional) Level: (Optional) Hotkey: (Assign a key or combination of keys to bring this character's window to the front) Upon clicking \"Save\", your profile will be encrypted and saved in MQ2AutoLogin.ini","title":"Setting up profiles via tray icon"},{"location":"plugins/core-plugins/mq2autologin/#commands","text":"/switchserver <server short name> <character name> Will log out your current character and log in the specified server/character on the same account. /switchchar <name> Will log out your current character and log in the specified character on the same account/server. /loginchar [server:character|profile_server:character|server^login^character^password|server^login^password] Will open a new EverQuest instance and login the specified character. Example: /loginchar vox:bobby /relog [#s|#m] Will log character out, and then log back in after specified time. Default time is in seconds. Example: /relog 5m END and HOME Pressing the \"END\" key at the character select screen will pause autologin, \"HOME\" will unpause.","title":"Commands"},{"location":"plugins/core-plugins/mq2autologin/#ini","text":"MQ2AutoLogin.ini has the following global settings, [Settings] ;The following settings are global. Settings changed for specific characters will override them. NotifyOnServerUp = 1 ;0 is off, 1 is beep, 2 is email via MQ2Gmail KickActiveCharacter = 1 ;0 is off, 1 is on. Will attempt to boot an active player to log in. EndAfterCharSelect = 1 ;0 is off, 1 is on. CharSelectDelay = 3 ;seconds to wait at the character select screen. Default is 3 ConnectRetries = 0 ;How many attempts to connect after a failure UseMQ2Login = 1 ;Uses the default, encrypted method of autologin UseStationNamesInsteadOfSessions = 0 ;Stores your login and pass in plaintext in MQ2AutoLogin.ini, but is compatible with ISBoxer/WinEQ. If you're using UseMQ2Login=1 and have created profiles via the tray icon, there will be additional sections such as [Profiles] and profile names. These should be left alone, as their settings are best changed via the GUI.","title":"INI"},{"location":"plugins/core-plugins/mq2autologin/#alternate-login-methods","text":"There are two alternate login methods: Sessions (compatible with the EverQuest launcher and \"-patchme\" login method) and Station Names (best for WinEQ and ISBoxer) If you'd like to use sessions, set UseMQ2Login=0 , and add sessions to the MQ2AutoLogin.ini in this format, Sessions example INI [Settings] UseMQ2Login = 0 [Session1] StationName = StationNameforSession Password = PasswordforSession Server = ServerforSession Character = Name [Session2] StationName = StationNameforSession Password = PasswordforSession Server = ServerforSession Character = Name If you're using ISBoxer, set UseMQ2Login=0 AND UseStationNamesInsteadOfSessions=1 , and add station names to the MQ2AutoLogin.ini in this format, Station names example INI [Settings] UseMQ2Login = 0 UseStationNamesInsteadOfSessions = 1 [StationName1] Password = PasswordforThisLoginName Server = ServerforThisLoginName Character = CharacterforThisLoginName [StationName2] Password = PasswordforThisLoginName Server = ServerforThisLoginName Character = CharacterforThisLoginName Additional settings from the global section, such as KickActiveCharacter=1 can be added to session or station name sections to affect only that character.","title":"Alternate login methods"},{"location":"plugins/core-plugins/mq2autologin/#list-of-server-short-names","text":"antonius bertox bristle cazic drinal erollisi firiona luclin phinigel povar ragefire rathe rizlona tunare vox xegony zek test beta","title":"List of server short names"},{"location":"plugins/core-plugins/mq2autologin/#custom-server-names","text":"To add a new server with a custom short name, which is particularly important for emulators, edit your MQ2AutoLogin.ini with the following format: [Servers] shortname = Exact long name (as it appears on login screen) Make sure shortname matches servers internal shortname exactly. You can get this information from logging into the server and running /echo ${EverQuest.Server} For example, here are the most popular macroquest-compatible emu servers as of 8/5/2022: ; Host=login.eqemulator.net [Servers] EZ (Linux) x4 Exp = [] EZ Server - Custom Zones, Vendors, Quests, Items, etc Imperium_EQ = [] Imperium Server - Solo Level/Duo+ Raid PEQTGC = [] PEQ] The Grand Creation - Omens of War Project Lazarus = [] Project Lazarus HiddenForest = [] The Hidden Forest [ www.thehiddenforest.org ] Haven = [] Wayfarers Haven [wayfarershaven.com] CWR = [] Clumsy's World [Velious, Semi-Custom, QoL+] DxBx = [] DreadBox:Re-Dredged BETA E9 Profusion = [] Enine's ProFusion EQTitan = [] EQT ) EQTitan [Legit PoP/LDoN/GoD] The Firiona Vie Project = [] FVP - The Firiona Vie Project (Kunark) IxiQuest = IxiQuest - (ixiquest.com) Classic to Velious + KMRA = Raid Atticts (Fully Custom) [Solo/Group/Raid] The Dark Exile = [] The Dark Exile Showdowrest = [[R] ] Shadowrest Alternate Everquest = [[R] ]Alternate EQ Might = [[R] ] EQ Might ; Host=login.projecteq.net [Servers] Project Lazarus = Project Lazarus","title":"Custom server names"},{"location":"plugins/core-plugins/mq2autologin/#mq2login-profiles-gui","text":"Right click on the MacroQuest tray icon -> Profiles Check marks: A checked character will be loaded when clicking \"Profile->Load All\". Right-clicking a character's name will toggle the checkmark on or off. Loading individual accounts: Left click on a character name and if checked, it will login and load MacroQuest. Left-clicking a loaded character will unload MacroQuest for that character. Batch Files and hotkeys: If you currently use batch files or hotkeys or whatever, those should still be usable if you don't want to click the menu. Example: \\(this example assumes you HAVE profiles created with \"Create New...\" in mq2autologin.ini\\) Batch file can launch your accounts by sending the server_charname to the eqgame client like this: patchme /login:drinal_eqmule And that's really all there is to it... You would of course change the server and Charname to your server and your char \\(drinal and eqmule\\) Encryption: If you make profiles via the tray icon GUI, they are encrypted in your MQ2AutoLogin.ini. Moving your file to another computer or changing computer hardware will invalidate these logins, so please use import/export for backup and moving purposes. Import/Export This helps export and import login profiles, which are otherwise hard to decrypt. Launch Clean Launch single sessions without logging in.","title":"MQ2Login Profiles GUI"},{"location":"plugins/core-plugins/mq2chat/","tags":["plugin"],"text":"MQ2Chat \u00b6 Description \u00b6 This plugin directs all of the MQ2 output to your main EQ chat window. Be careful if doing a /report or /petition because MQ2 output will be visible in the /report lines that you send. By default, MQ2 output is set to go to a separate MQ2 window, which is handled by the MQ2ChatWnd plugin.","title":"MQ2Chat"},{"location":"plugins/core-plugins/mq2chat/#mq2chat","text":"","title":"MQ2Chat"},{"location":"plugins/core-plugins/mq2chat/#description","text":"This plugin directs all of the MQ2 output to your main EQ chat window. Be careful if doing a /report or /petition because MQ2 output will be visible in the /report lines that you send. By default, MQ2 output is set to go to a separate MQ2 window, which is handled by the MQ2ChatWnd plugin.","title":"Description"},{"location":"plugins/core-plugins/mq2eqbugfix/","tags":["plugin"],"text":"MQ2EQBugFix \u00b6 Description \u00b6 This plugin is used to correct bugs in EQ.","title":"MQ2EQBugFix"},{"location":"plugins/core-plugins/mq2eqbugfix/#mq2eqbugfix","text":"","title":"MQ2EQBugFix"},{"location":"plugins/core-plugins/mq2eqbugfix/#description","text":"This plugin is used to correct bugs in EQ.","title":"Description"},{"location":"plugins/core-plugins/mq2labels/","tags":["plugin"],"text":"MQ2Labels \u00b6 Description \u00b6 This plugin allows you to use MQ2Data within your EQ UI. It provides a number of EQTypes that can be used exactly as you use the built-in EQTypes. If there is not a suitable EQType for your use, you can use ToolTips to display custom information. MQ EQTypes \u00b6 1000: ${Me.CurrentMana} 1001: ${Me.MaxMana} 1002: ${Me.State} 1003: ${Me.Speed} 1004: ${Me.Heading} 1005: ${Me.X} 1006: ${Me.Y} 1007: ${Me.Z} 1008: ${Me.Dar} 1009: ${Me.Cash} 1010: ${Me.CashBank} 1011: ${Me.Platinum} 1012: ${Me.PlatinumShared} 1013: ${Me.Gold} 1014: ${Me.SilverBank} 1015: ${Me.CopperBank} * 2000: ${Target.Level} 2001: ${Target.Class} 2002: ${Target.Race} 2003: ${Target.Distance} 2004: none 2005: ${Target.State} 2006: ${Target.X} 2007: ${Target.Y} 2008: ${Target.Z} 2009: ${Target.Heading} 2010: ${Target.Speed} 2011: ${Target.ID} * 3000: ${Zone} 3001: none 3002: ${Me.Bound} 3003: ${Time.Time24} 3004: ${Time.Hour} 3005: ${Time.Minute} 3006: ${Time.Second} 3007: ${Time.Date} 3008: ${Time.Year} 3009: ${Time.Month} 3010: ${Time.Day} 3011: \\({If\\[\\) {Spawn gm .ID},TRUE,FALSE]} 3012: ${Me.FreeInventory} Example \u00b6 TargetLevel2000 2true243322140255255 **0**truefalsetruefalse Using Tooltips \u00b6 Tooltips can be used to add any information \\(even information from plugins or macros\\) that doesn't have a built-in EQType. You add the EQType of 9999 and then add the MQ2Data string that gives you your required information within the tags.`9999``${variable}` Example \u00b6 Buff0Duration9999${Me.Buff1.Duration} 2true23315314255255 **255**truefalsefalse Note about ToolTipReference \u00b6 There are certain characters that are used in XML Code that are reserved. If these characters are used in the tooltipreference they will cause errors and the UI will fail to load. The most notable of these characters is the \"\\<\" symbol. The \">\" symbol can still be used for comparisons. So In cases where you would use \"\\<\", rephase the statement to use \">\" instead. The \"&\" character also causes problems. In the case where you use a \"&&\" in your if statements use nested ifs to get around the problem. Example \u00b6 \\({If\\[\\) && \\({Target.Casting},\\) is casting.,]} would become \\({If\\[\\) , \\({If\\[\\) ,${Target.CleanName} is casting.,]},]}","title":"MQ2Labels"},{"location":"plugins/core-plugins/mq2labels/#mq2labels","text":"","title":"MQ2Labels"},{"location":"plugins/core-plugins/mq2labels/#description","text":"This plugin allows you to use MQ2Data within your EQ UI. It provides a number of EQTypes that can be used exactly as you use the built-in EQTypes. If there is not a suitable EQType for your use, you can use ToolTips to display custom information.","title":"Description"},{"location":"plugins/core-plugins/mq2labels/#mq-eqtypes","text":"1000: ${Me.CurrentMana} 1001: ${Me.MaxMana} 1002: ${Me.State} 1003: ${Me.Speed} 1004: ${Me.Heading} 1005: ${Me.X} 1006: ${Me.Y} 1007: ${Me.Z} 1008: ${Me.Dar} 1009: ${Me.Cash} 1010: ${Me.CashBank} 1011: ${Me.Platinum} 1012: ${Me.PlatinumShared} 1013: ${Me.Gold} 1014: ${Me.SilverBank} 1015: ${Me.CopperBank} * 2000: ${Target.Level} 2001: ${Target.Class} 2002: ${Target.Race} 2003: ${Target.Distance} 2004: none 2005: ${Target.State} 2006: ${Target.X} 2007: ${Target.Y} 2008: ${Target.Z} 2009: ${Target.Heading} 2010: ${Target.Speed} 2011: ${Target.ID} * 3000: ${Zone} 3001: none 3002: ${Me.Bound} 3003: ${Time.Time24} 3004: ${Time.Hour} 3005: ${Time.Minute} 3006: ${Time.Second} 3007: ${Time.Date} 3008: ${Time.Year} 3009: ${Time.Month} 3010: ${Time.Day} 3011: \\({If\\[\\) {Spawn gm .ID},TRUE,FALSE]} 3012: ${Me.FreeInventory}","title":"MQ EQTypes"},{"location":"plugins/core-plugins/mq2labels/#example","text":"TargetLevel2000 2true243322140255255 **0**truefalsetruefalse","title":"Example"},{"location":"plugins/core-plugins/mq2labels/#using-tooltips","text":"Tooltips can be used to add any information \\(even information from plugins or macros\\) that doesn't have a built-in EQType. You add the EQType of 9999 and then add the MQ2Data string that gives you your required information within the tags.`9999``${variable}`","title":"Using Tooltips"},{"location":"plugins/core-plugins/mq2labels/#example_1","text":"Buff0Duration9999${Me.Buff1.Duration} 2true23315314255255 **255**truefalsefalse","title":"Example"},{"location":"plugins/core-plugins/mq2labels/#note-about-tooltipreference","text":"There are certain characters that are used in XML Code that are reserved. If these characters are used in the tooltipreference they will cause errors and the UI will fail to load. The most notable of these characters is the \"\\<\" symbol. The \">\" symbol can still be used for comparisons. So In cases where you would use \"\\<\", rephase the statement to use \">\" instead. The \"&\" character also causes problems. In the case where you use a \"&&\" in your if statements use nested ifs to get around the problem.","title":"Note about ToolTipReference"},{"location":"plugins/core-plugins/mq2labels/#example_2","text":"\\({If\\[\\) && \\({Target.Casting},\\) is casting.,]} would become \\({If\\[\\) , \\({If\\[\\) ,${Target.CleanName} is casting.,]},]}","title":"Example"},{"location":"plugins/core-plugins/mq2bzsrch/","tags":["plugin"],"text":"MQ2Bzsrch \u00b6 Description \u00b6 This plugin adds some bazaar searching functionality. Commands \u00b6 /bzsrch params name params can be one of the following: race any|barbarian|dark elf|dwarf|etc class any|bard|beastlord|berserker|etc stat any|armor class|agility|charisma|etc slot any|ammo|arms|back|charm|chest|etc type any|1h slashing|1h blunt|2h blunt|etc price name is the name or partial name of the item you wish to search for Top-Level Objects \u00b6 bazaar Bazaar Data types \u00b6 bazaar bazaaritem Examples \u00b6","title":"MQ2Bzsrch"},{"location":"plugins/core-plugins/mq2bzsrch/#mq2bzsrch","text":"","title":"MQ2Bzsrch"},{"location":"plugins/core-plugins/mq2bzsrch/#description","text":"This plugin adds some bazaar searching functionality.","title":"Description"},{"location":"plugins/core-plugins/mq2bzsrch/#commands","text":"/bzsrch params name params can be one of the following: race any|barbarian|dark elf|dwarf|etc class any|bard|beastlord|berserker|etc stat any|armor class|agility|charisma|etc slot any|ammo|arms|back|charm|chest|etc type any|1h slashing|1h blunt|2h blunt|etc price name is the name or partial name of the item you wish to search for","title":"Commands"},{"location":"plugins/core-plugins/mq2bzsrch/#top-level-objects","text":"bazaar Bazaar","title":"Top-Level Objects"},{"location":"plugins/core-plugins/mq2bzsrch/#data-types","text":"bazaar bazaaritem","title":"Data types"},{"location":"plugins/core-plugins/mq2bzsrch/#examples","text":"","title":"Examples"},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-datatype-bazaar/","tags":["datatype"],"text":"DataType:bazaar \u00b6 Members \u00b6 bool Done Search complete? int Count Number of results bazaaritem Item **\\#** Result info by index \\(1-based\\) To String Same as Done","title":"DataType:bazaar"},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-datatype-bazaar/#datatypebazaar","text":"","title":"DataType:bazaar"},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-datatype-bazaar/#members","text":"bool Done Search complete? int Count Number of results bazaaritem Item **\\#** Result info by index \\(1-based\\) To String Same as Done","title":"Members"},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-datatype-bazaaritem/","tags":["datatype"],"text":"DataType:bazaaritem \u00b6 Members \u00b6 string Name Item name spawn Trader The guy selling it int Price Price the guy is selling it for int Quantity Number of this item this guy has int ItemID The item's ID number int Value Value in the \"Stat column\" \\(last column of the search window, eg. save vs fire, int, wis, etc\\) . NOT the value of the Item. Returns 0 if nothing is there. To String Same as Name","title":"DataType:bazaaritem"},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-datatype-bazaaritem/#datatypebazaaritem","text":"","title":"DataType:bazaaritem"},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-datatype-bazaaritem/#members","text":"string Name Item name spawn Trader The guy selling it int Price Price the guy is selling it for int Quantity Number of this item this guy has int ItemID The item's ID number int Value Value in the \"Stat column\" \\(last column of the search window, eg. save vs fire, int, wis, etc\\) . NOT the value of the Item. Returns 0 if nothing is there. To String Same as Name","title":"Members"},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-tlo-bazaar/","tags":["tlo"],"text":"TLO:Bazaar \u00b6 Description \u00b6 Object containing bazaar search data. Forms \u00b6 bazaar Bazaar Access to Types \u00b6 bazaar bazaar","title":"TLO:Bazaar"},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-tlo-bazaar/#tlobazaar","text":"","title":"TLO:Bazaar"},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-tlo-bazaar/#description","text":"Object containing bazaar search data.","title":"Description"},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-tlo-bazaar/#forms","text":"bazaar Bazaar","title":"Forms"},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-tlo-bazaar/#access-to-types","text":"bazaar bazaar","title":"Access to Types"},{"location":"plugins/core-plugins/mq2chatwnd/","tags":["plugin"],"text":"MQ2ChatWnd \u00b6 Description \u00b6 This plugin adds an additional window to your UI which displays ALL information generated by MQ2. Note: Any information displayed or typed in this window will NOT go into your character log. It is invisible to EverQuest \\(and invisible to /petitions and /reports too\\) . This plugin is setup by default and very much recommended. You can however use the MQ2Chat plugin to force MQ2 information to the main EQ chat window if you wish to ignore this recommendation. Commands \u00b6 /style ! 0xN Set the style bit corresponding to 0xN or unset it if ! is supplied. See EQ documentation for further details about WindowStyle. /mqfont # Sets the font size on this window. Note: This is not the same as the EQ command /chatfontsize; /mqfont reduces the spacing between the lines of text within the window. /mqmin Toggle the minimization of MQ2ChatWnd /mqclear Clears the chat buffer of MQ2ChatWnd /mqchat reset Resets the location and options for the MQ2 Chat window Configuration \u00b6 MQ2ChatWnd stores a configuration file to the root MQ2 folder, MQ2ChatWnd.ini . This file stores the chat window position, color, title, and other settings for every character you create, by default. There are new user-configurable options that have been added: [Settings] AutoScroll=on NoCharSelect=off SaveByChar=on AutoScroll By default set to on , this automatically scrolls to the bottom of the chat window every time a new text line is displayed. If you set this option to off , the chat window will retain your current slider position rather than automatically scroll to the bottom. NoCharSelect By default set to off , this displays the chat window at the character select screen. If you set this option to on , the chat window will only display when you have entered or re-entered the world. SaveByChar By default set to on , this creates a new INI entry for every character that you log in so that each character uses its own window position and settings. If you set this option to off , a single Default section will be created and all characters will use the same window position and settings. Key Binding \u00b6 MQ2 creates a key binding for MQ2ChatWnd by default \\(the . key\\) . This entry is created in a similar manner to the /bind command, and will create an entry in your MacroQuest.ini file under the Key Binds section. The default entry is given the name MQ2CHAT_Nrm , and may be changed by the user prior to starting MQ2, or using the /bind command.","title":"MQ2ChatWnd"},{"location":"plugins/core-plugins/mq2chatwnd/#mq2chatwnd","text":"","title":"MQ2ChatWnd"},{"location":"plugins/core-plugins/mq2chatwnd/#description","text":"This plugin adds an additional window to your UI which displays ALL information generated by MQ2. Note: Any information displayed or typed in this window will NOT go into your character log. It is invisible to EverQuest \\(and invisible to /petitions and /reports too\\) . This plugin is setup by default and very much recommended. You can however use the MQ2Chat plugin to force MQ2 information to the main EQ chat window if you wish to ignore this recommendation.","title":"Description"},{"location":"plugins/core-plugins/mq2chatwnd/#commands","text":"/style ! 0xN Set the style bit corresponding to 0xN or unset it if ! is supplied. See EQ documentation for further details about WindowStyle. /mqfont # Sets the font size on this window. Note: This is not the same as the EQ command /chatfontsize; /mqfont reduces the spacing between the lines of text within the window. /mqmin Toggle the minimization of MQ2ChatWnd /mqclear Clears the chat buffer of MQ2ChatWnd /mqchat reset Resets the location and options for the MQ2 Chat window","title":"Commands"},{"location":"plugins/core-plugins/mq2chatwnd/#configuration","text":"MQ2ChatWnd stores a configuration file to the root MQ2 folder, MQ2ChatWnd.ini . This file stores the chat window position, color, title, and other settings for every character you create, by default. There are new user-configurable options that have been added: [Settings] AutoScroll=on NoCharSelect=off SaveByChar=on AutoScroll By default set to on , this automatically scrolls to the bottom of the chat window every time a new text line is displayed. If you set this option to off , the chat window will retain your current slider position rather than automatically scroll to the bottom. NoCharSelect By default set to off , this displays the chat window at the character select screen. If you set this option to on , the chat window will only display when you have entered or re-entered the world. SaveByChar By default set to on , this creates a new INI entry for every character that you log in so that each character uses its own window position and settings. If you set this option to off , a single Default section will be created and all characters will use the same window position and settings.","title":"Configuration"},{"location":"plugins/core-plugins/mq2chatwnd/#key-binding","text":"MQ2 creates a key binding for MQ2ChatWnd by default \\(the . key\\) . This entry is created in a similar manner to the /bind command, and will create an entry in your MacroQuest.ini file under the Key Binds section. The default entry is given the name MQ2CHAT_Nrm , and may be changed by the user prior to starting MQ2, or using the /bind command.","title":"Key Binding"},{"location":"plugins/core-plugins/mq2chatwnd/mqclear/","tags":["command"],"text":"/mqclear \u00b6 Syntax \u00b6 /mqclear Description \u00b6 Clears the chat buffer in the MQ2ChatWnd.","title":"/mqclear"},{"location":"plugins/core-plugins/mq2chatwnd/mqclear/#mqclear","text":"","title":"/mqclear"},{"location":"plugins/core-plugins/mq2chatwnd/mqclear/#syntax","text":"/mqclear","title":"Syntax"},{"location":"plugins/core-plugins/mq2chatwnd/mqclear/#description","text":"Clears the chat buffer in the MQ2ChatWnd.","title":"Description"},{"location":"plugins/core-plugins/mq2chatwnd/mqfont/","tags":["command"],"text":"/mqfont \u00b6 Syntax \u00b6 /mqfont # Description \u00b6 Changes the size of the font in the MQ2ChatWnd. Notes The font sizes are not the same as EQ's chat window sizes Suggested use: numbers in the range of -3 to 2","title":"/mqfont"},{"location":"plugins/core-plugins/mq2chatwnd/mqfont/#mqfont","text":"","title":"/mqfont"},{"location":"plugins/core-plugins/mq2chatwnd/mqfont/#syntax","text":"/mqfont #","title":"Syntax"},{"location":"plugins/core-plugins/mq2chatwnd/mqfont/#description","text":"Changes the size of the font in the MQ2ChatWnd. Notes The font sizes are not the same as EQ's chat window sizes Suggested use: numbers in the range of -3 to 2","title":"Description"},{"location":"plugins/core-plugins/mq2chatwnd/mqmin/","tags":["command"],"text":"/mqmin \u00b6 Syntax \u00b6 /mqmin Description \u00b6 Minimizes the MQ2ChatWnd.","title":"/mqmin"},{"location":"plugins/core-plugins/mq2chatwnd/mqmin/#mqmin","text":"","title":"/mqmin"},{"location":"plugins/core-plugins/mq2chatwnd/mqmin/#syntax","text":"/mqmin","title":"Syntax"},{"location":"plugins/core-plugins/mq2chatwnd/mqmin/#description","text":"Minimizes the MQ2ChatWnd.","title":"Description"},{"location":"plugins/core-plugins/mq2custombinds/","tags":["plugin"],"text":"MQ2CustomBinds \u00b6 Description \u00b6 This plugin allows you to specify custom commands that are executed when specific key combinations are pressed. You may specify a command for when the key is pressed \\(down\\) , and another for when it is released \\(up\\) . Commands \u00b6 /custombind","title":"MQ2CustomBinds"},{"location":"plugins/core-plugins/mq2custombinds/#mq2custombinds","text":"","title":"MQ2CustomBinds"},{"location":"plugins/core-plugins/mq2custombinds/#description","text":"This plugin allows you to specify custom commands that are executed when specific key combinations are pressed. You may specify a command for when the key is pressed \\(down\\) , and another for when it is released \\(up\\) .","title":"Description"},{"location":"plugins/core-plugins/mq2custombinds/#commands","text":"/custombind","title":"Commands"},{"location":"plugins/core-plugins/mq2custombinds/custombind/","tags":["command"],"text":"/custombind \u00b6 Syntax \u00b6 /custombind list \\| \\[ add\\|delete\\|set\\|clear** _**bindname**_**\\[-down\\|-up ] **_**command**_ ** Description \u00b6 This command is used to add, delete, list or change custom key bindings. See /bind and /dumpbinds . /custombind list Lists all your custom bind names and commands \\(the key combinations must be set using /bind\\) /custombind add bindname Add a new bind called bindname ready for use. /custombind delete bindname Remove the custom bind bindname . /custombind clear name -down\\|-up This will clear a specific command for a custom bind. If -up or -down is not specified it defaults to -down. /custombind set bindname -down\\|-up Will set a specific command for a custom bind. This too defaults to -down if not specified. Example \u00b6 Note MQ's very first bind command is \"RANGED\" so you do not need to do this, it is just listed here as an example. /custombind add mybind /custombind set mybind /ranged /bind mybind n This binds the /ranged command to the n key. Example of using down and up /custombind add echotest /custombind set echotest-down /echo n key is down! /custombind set echotest-up /echo n key is up! /bind echotest n","title":"/custombind"},{"location":"plugins/core-plugins/mq2custombinds/custombind/#custombind","text":"","title":"/custombind"},{"location":"plugins/core-plugins/mq2custombinds/custombind/#syntax","text":"/custombind list \\| \\[ add\\|delete\\|set\\|clear** _**bindname**_**\\[-down\\|-up ] **_**command**_ **","title":"Syntax"},{"location":"plugins/core-plugins/mq2custombinds/custombind/#description","text":"This command is used to add, delete, list or change custom key bindings. See /bind and /dumpbinds . /custombind list Lists all your custom bind names and commands \\(the key combinations must be set using /bind\\) /custombind add bindname Add a new bind called bindname ready for use. /custombind delete bindname Remove the custom bind bindname . /custombind clear name -down\\|-up This will clear a specific command for a custom bind. If -up or -down is not specified it defaults to -down. /custombind set bindname -down\\|-up Will set a specific command for a custom bind. This too defaults to -down if not specified.","title":"Description"},{"location":"plugins/core-plugins/mq2custombinds/custombind/#example","text":"Note MQ's very first bind command is \"RANGED\" so you do not need to do this, it is just listed here as an example. /custombind add mybind /custombind set mybind /ranged /bind mybind n This binds the /ranged command to the n key. Example of using down and up /custombind add echotest /custombind set echotest-down /echo n key is down! /custombind set echotest-up /echo n key is up! /bind echotest n","title":"Example"},{"location":"plugins/core-plugins/mq2hud/","tags":["plugin"],"text":"MQ2HUD \u00b6 Description \u00b6 This plugin provides a Heads Up Display for your EQ window, which can provide a large amount of information in a relatively small amount of space. The HUD acts as a transparent background layer, upon which any information can be displayed. Each element of the HUD gets parsed each time MQ2Data is displayed, so there is no need to reload the HUD after making changes to the .ini file, they are instantly available as soon as you save. The HUD is customized by entries in the MQ2HUD.ini file. The .ini file allows any number of HUDs to be created and saved within. Loading a new HUD from the .ini file can be done with /loadhud . The entry names are not case-sensitive. The default HUD entry is called Elements and can be loaded with the /defaulthud command. You can toggle the display of the HUD by using F11. Commands \u00b6 /hud /loadhud /defaulthud /classhud /zonehud Top-Level Objects \u00b6 string HUD Name of currently loaded HUD INI File Format \u00b6 Entries in the MQ2HUD.ini file are in the following format: [Elements] TYPE,X,Y,RED,GREEN,BLUE,TEXT TYPE can be a combination of the following \\(just add the numbers\\) : 1: Display in non-fullscreen mode 2: Display in fullscreen mode \\(\"F10 mode\"\\) 4: Based on cursor location 8: Display at charselect 16: Only parse if a macro IS running X and Y denote the location of the entry on the screen \\(0,0 is the upper left of your screen\\) RED , GREEN and BLUE are RGB values for the TEXT color \\(255,255,255 is white; 0,0,0 is black\\) TEXT is the MQ2Data you wish to display. As a tip, the If TLO is very useful here. Examples \u00b6 [Elements] TargetInfo=3,5,35,255,255,255,${Target} GMIndicator=3,5,45,0,0,255,${Spawn[gm]} CursorItemName=7,-15,-15,255,255,255,${If[${Cursor.ID},${Cursor},]} ClickMeForFun=6,-25,-25,255,255,255,${If[!${Cursor.ID},click me,]} MacroName=19,5,70,255,255,255,${If[${Bool[${Macro}]}, Current Macro Running - ${Macro},]} In the above HUD, the CursorItemName entry states that it will show the name of your cursor item in all modes. Using 6 as the TYPE will display the cursor in full-screen mode only. /loadhud bard This will load the bard section of the MQ2HUD.ini. Code Segments \u00b6 This section contains code segments to help you customize your HUD. Please be sure to substitute the X, Y cords for the location you'd like to see them on your HUD. //AAXP AAXPText=3,X,Y,255,234,8,AAXP AAXP=3,X,Y,255,234,8,${Me.PctAAExp} //AttackSpeed AttackSpeedText=3,X,Y,255,234,8,AttackSpeed : AttackSpeed=3,X,Y,255,234,8,${Me.AttackSpeed} //Date Datetext=3,X,Y,255,234,8,Todays Date Is Date=3,X,Y,255,234,8,${Time.Date} //Damage Absorb Left DamageShieldText=3,X,Y,255,234,8,Dmg Abs. Left DamageShield=3,X,Y,255,234,8,${Me.Dar} //Vet AA's ThroneText=3,500,402,255,234,8,GL Port - - - - ThroneReadyText=3,610,402,0,255,0,${If[${Me.AltAbilityReady[Throne Of Heroes]},Ready,]} ThroneNotReady=3,610,402,255,0,0,${If[!${Me.AltAbilityReady[Throne Of Heroes]},${Me.AltAbilityTimer[Throne Of Heroes].TimeHMS},]} //what macro is currently running Macro1=3,110,110,0,250,0,${If[${Macro.Name.NotEqual[\"NULL\"]},${Macro.Name},]} Macro2=3,10,110,225,250,225,MACRO RUNNING = //if the macro Raid Druid (Autobot) is currently paused RDPauseInd1=3,10,122,225,250,225,RD PAUSED = RDPauseInd2=3,85,122,225,0,0,${RDPause}","title":"MQ2HUD"},{"location":"plugins/core-plugins/mq2hud/#mq2hud","text":"","title":"MQ2HUD"},{"location":"plugins/core-plugins/mq2hud/#description","text":"This plugin provides a Heads Up Display for your EQ window, which can provide a large amount of information in a relatively small amount of space. The HUD acts as a transparent background layer, upon which any information can be displayed. Each element of the HUD gets parsed each time MQ2Data is displayed, so there is no need to reload the HUD after making changes to the .ini file, they are instantly available as soon as you save. The HUD is customized by entries in the MQ2HUD.ini file. The .ini file allows any number of HUDs to be created and saved within. Loading a new HUD from the .ini file can be done with /loadhud . The entry names are not case-sensitive. The default HUD entry is called Elements and can be loaded with the /defaulthud command. You can toggle the display of the HUD by using F11.","title":"Description"},{"location":"plugins/core-plugins/mq2hud/#commands","text":"/hud /loadhud /defaulthud /classhud /zonehud","title":"Commands"},{"location":"plugins/core-plugins/mq2hud/#top-level-objects","text":"string HUD Name of currently loaded HUD","title":"Top-Level Objects"},{"location":"plugins/core-plugins/mq2hud/#ini-file-format","text":"Entries in the MQ2HUD.ini file are in the following format: [Elements] TYPE,X,Y,RED,GREEN,BLUE,TEXT TYPE can be a combination of the following \\(just add the numbers\\) : 1: Display in non-fullscreen mode 2: Display in fullscreen mode \\(\"F10 mode\"\\) 4: Based on cursor location 8: Display at charselect 16: Only parse if a macro IS running X and Y denote the location of the entry on the screen \\(0,0 is the upper left of your screen\\) RED , GREEN and BLUE are RGB values for the TEXT color \\(255,255,255 is white; 0,0,0 is black\\) TEXT is the MQ2Data you wish to display. As a tip, the If TLO is very useful here.","title":"INI File Format"},{"location":"plugins/core-plugins/mq2hud/#examples","text":"[Elements] TargetInfo=3,5,35,255,255,255,${Target} GMIndicator=3,5,45,0,0,255,${Spawn[gm]} CursorItemName=7,-15,-15,255,255,255,${If[${Cursor.ID},${Cursor},]} ClickMeForFun=6,-25,-25,255,255,255,${If[!${Cursor.ID},click me,]} MacroName=19,5,70,255,255,255,${If[${Bool[${Macro}]}, Current Macro Running - ${Macro},]} In the above HUD, the CursorItemName entry states that it will show the name of your cursor item in all modes. Using 6 as the TYPE will display the cursor in full-screen mode only. /loadhud bard This will load the bard section of the MQ2HUD.ini.","title":"Examples"},{"location":"plugins/core-plugins/mq2hud/#code-segments","text":"This section contains code segments to help you customize your HUD. Please be sure to substitute the X, Y cords for the location you'd like to see them on your HUD. //AAXP AAXPText=3,X,Y,255,234,8,AAXP AAXP=3,X,Y,255,234,8,${Me.PctAAExp} //AttackSpeed AttackSpeedText=3,X,Y,255,234,8,AttackSpeed : AttackSpeed=3,X,Y,255,234,8,${Me.AttackSpeed} //Date Datetext=3,X,Y,255,234,8,Todays Date Is Date=3,X,Y,255,234,8,${Time.Date} //Damage Absorb Left DamageShieldText=3,X,Y,255,234,8,Dmg Abs. Left DamageShield=3,X,Y,255,234,8,${Me.Dar} //Vet AA's ThroneText=3,500,402,255,234,8,GL Port - - - - ThroneReadyText=3,610,402,0,255,0,${If[${Me.AltAbilityReady[Throne Of Heroes]},Ready,]} ThroneNotReady=3,610,402,255,0,0,${If[!${Me.AltAbilityReady[Throne Of Heroes]},${Me.AltAbilityTimer[Throne Of Heroes].TimeHMS},]} //what macro is currently running Macro1=3,110,110,0,250,0,${If[${Macro.Name.NotEqual[\"NULL\"]},${Macro.Name},]} Macro2=3,10,110,225,250,225,MACRO RUNNING = //if the macro Raid Druid (Autobot) is currently paused RDPauseInd1=3,10,122,225,250,225,RD PAUSED = RDPauseInd2=3,85,122,225,0,0,${RDPause}","title":"Code Segments"},{"location":"plugins/core-plugins/mq2hud/classhud/","tags":["command"],"text":"/classhud \u00b6 Syntax \u00b6 /classhud Description \u00b6 Loads the HUD section for your class You must have a _class_ section in MQ2HUD.ini","title":"/classhud"},{"location":"plugins/core-plugins/mq2hud/classhud/#classhud","text":"","title":"/classhud"},{"location":"plugins/core-plugins/mq2hud/classhud/#syntax","text":"/classhud","title":"Syntax"},{"location":"plugins/core-plugins/mq2hud/classhud/#description","text":"Loads the HUD section for your class You must have a _class_ section in MQ2HUD.ini","title":"Description"},{"location":"plugins/core-plugins/mq2hud/defaulthud/","tags":["command"],"text":"/defaulthud \u00b6 Syntax \u00b6 /defaulthud Description \u00b6 Loads the default HUD.","title":"/defaulthud"},{"location":"plugins/core-plugins/mq2hud/defaulthud/#defaulthud","text":"","title":"/defaulthud"},{"location":"plugins/core-plugins/mq2hud/defaulthud/#syntax","text":"/defaulthud","title":"Syntax"},{"location":"plugins/core-plugins/mq2hud/defaulthud/#description","text":"Loads the default HUD.","title":"Description"},{"location":"plugins/core-plugins/mq2hud/hud/","tags":["command"],"text":"/hud \u00b6 Syntax \u00b6 /hud normal \\| underui \\| always Description \u00b6 Defines how the HUD is displayed. Normal Above the EQ UI but will not be displayed if pressing F11. UnderUI Under the EQ UI and will disappear if F11 is pressed. Always The HUD will always be present above the EQ UI and will not disappear when F11 is pressed.","title":"/hud"},{"location":"plugins/core-plugins/mq2hud/hud/#hud","text":"","title":"/hud"},{"location":"plugins/core-plugins/mq2hud/hud/#syntax","text":"/hud normal \\| underui \\| always","title":"Syntax"},{"location":"plugins/core-plugins/mq2hud/hud/#description","text":"Defines how the HUD is displayed. Normal Above the EQ UI but will not be displayed if pressing F11. UnderUI Under the EQ UI and will disappear if F11 is pressed. Always The HUD will always be present above the EQ UI and will not disappear when F11 is pressed.","title":"Description"},{"location":"plugins/core-plugins/mq2hud/loadhud/","tags":["command"],"text":"/loadhud \u00b6 Syntax \u00b6 /loadhud hudname Description \u00b6 Load the specified HUD defined in MQ2HUD.ini","title":"/loadhud"},{"location":"plugins/core-plugins/mq2hud/loadhud/#loadhud","text":"","title":"/loadhud"},{"location":"plugins/core-plugins/mq2hud/loadhud/#syntax","text":"/loadhud hudname","title":"Syntax"},{"location":"plugins/core-plugins/mq2hud/loadhud/#description","text":"Load the specified HUD defined in MQ2HUD.ini","title":"Description"},{"location":"plugins/core-plugins/mq2hud/zonehud/","tags":["command"],"text":"/zonehud \u00b6 Syntax \u00b6 '''/zonehud Description \u00b6 Loads the HUD section for your current zone You must have a _zone_ section in MQ2HUD.ini","title":"/zonehud"},{"location":"plugins/core-plugins/mq2hud/zonehud/#zonehud","text":"","title":"/zonehud"},{"location":"plugins/core-plugins/mq2hud/zonehud/#syntax","text":"'''/zonehud","title":"Syntax"},{"location":"plugins/core-plugins/mq2hud/zonehud/#description","text":"Loads the HUD section for your current zone You must have a _zone_ section in MQ2HUD.ini","title":"Description"},{"location":"plugins/core-plugins/mq2itemdisplay/","tags":["plugin"],"text":"MQ2ItemDisplay \u00b6 Description \u00b6 This plugin shows spell and item data in the item display window. \\(MQ2GearScore has since been merged with MQ2itemdisplay\\) Commands \u00b6 /inote \"Comment\" Add/delete a note to a specific item number. This information will be displayed within the item info window, under all the other information. \u00b6 Top-Level Objects \u00b6 item DisplayItem This references the last item display window that was opened. INI File \u00b6 All the /inote information is stored in the MQ2ItemDisplay.ini file in the following format: [Notes] 0019542=This is found on the Great Saprophyte in EC<nowiki><br></nowiki>Rarity is about 1 in 5 The <br> tag can be used to insert a line break. Sometimes it is easier to edit the file itself rather than type the whole string from within the game \\(also makes copying and pasting easier\\) . The INI file is re-read every time the item display window is opened, so changes take effect immediately. Example \u00b6 In the following example, the line is broken into 4 for readability, in the MQ2ItemDisplay.ini file, it would all be 1 line. 0017910<br>Field.....Round....Large....Wood....16<br>Field.....Round....Medium.Wood...36<br>Field.....Parab.....Large....Wood...46<br>Field.....Round....Small...Wood....56<br>Field.....Round....Large...Bone.....68<br>Field.....Shield....Large...Wood....82<br>Hooked.Round....Large...Wood....102<br>Field.....Wood*...Large...Wood....122<br>Field.....Round....Large..Ceramic.135<br>Field.....Bone*....Large..Wood.....162<br>Silver....Round....Large..Wood.....182<br>Field....Ceramic*.Large..Wood.....202 The info displayed would look like this: Note: Field.....Round....Large....Wood....16 Field.....Round....Medium.Wood...36 Field.....Parab.....Large....Wood...46 Field.....Round....Small...Wood....56 Field.....Round....Large...Bone.....68 Field.....Shield....Large...Wood....82 Hooked.Round....Large...Wood....102 Field.....Wood*...Large...Wood....122 Field.....Round....Large..Ceramic.135 Field.....Bone*....Large..Wood.....162 Silver....Round....Large..Wood.....182 Field....Ceramic*.Large..Wood.....202 See here and here \\(VIP only\\) for some user-contributed ini file entries.","title":"MQ2ItemDisplay"},{"location":"plugins/core-plugins/mq2itemdisplay/#mq2itemdisplay","text":"","title":"MQ2ItemDisplay"},{"location":"plugins/core-plugins/mq2itemdisplay/#description","text":"This plugin shows spell and item data in the item display window. \\(MQ2GearScore has since been merged with MQ2itemdisplay\\)","title":"Description"},{"location":"plugins/core-plugins/mq2itemdisplay/#commands","text":"/inote \"Comment\" Add/delete a note to a specific item number. This information will be displayed within the item info window, under all the other information.","title":"Commands"},{"location":"plugins/core-plugins/mq2itemdisplay/#_1","text":"","title":""},{"location":"plugins/core-plugins/mq2itemdisplay/#top-level-objects","text":"item DisplayItem This references the last item display window that was opened.","title":"Top-Level Objects"},{"location":"plugins/core-plugins/mq2itemdisplay/#ini-file","text":"All the /inote information is stored in the MQ2ItemDisplay.ini file in the following format: [Notes] 0019542=This is found on the Great Saprophyte in EC<nowiki><br></nowiki>Rarity is about 1 in 5 The <br> tag can be used to insert a line break. Sometimes it is easier to edit the file itself rather than type the whole string from within the game \\(also makes copying and pasting easier\\) . The INI file is re-read every time the item display window is opened, so changes take effect immediately.","title":"INI File"},{"location":"plugins/core-plugins/mq2itemdisplay/#example","text":"In the following example, the line is broken into 4 for readability, in the MQ2ItemDisplay.ini file, it would all be 1 line. 0017910<br>Field.....Round....Large....Wood....16<br>Field.....Round....Medium.Wood...36<br>Field.....Parab.....Large....Wood...46<br>Field.....Round....Small...Wood....56<br>Field.....Round....Large...Bone.....68<br>Field.....Shield....Large...Wood....82<br>Hooked.Round....Large...Wood....102<br>Field.....Wood*...Large...Wood....122<br>Field.....Round....Large..Ceramic.135<br>Field.....Bone*....Large..Wood.....162<br>Silver....Round....Large..Wood.....182<br>Field....Ceramic*.Large..Wood.....202 The info displayed would look like this: Note: Field.....Round....Large....Wood....16 Field.....Round....Medium.Wood...36 Field.....Parab.....Large....Wood...46 Field.....Round....Small...Wood....56 Field.....Round....Large...Bone.....68 Field.....Shield....Large...Wood....82 Hooked.Round....Large...Wood....102 Field.....Wood*...Large...Wood....122 Field.....Round....Large..Ceramic.135 Field.....Bone*....Large..Wood.....162 Silver....Round....Large..Wood.....182 Field....Ceramic*.Large..Wood.....202 See here and here \\(VIP only\\) for some user-contributed ini file entries.","title":"Example"},{"location":"plugins/core-plugins/mq2itemdisplay/inote/","tags":["command"],"text":"/inote \u00b6 Syntax \u00b6 /inote add|del # comment text Description \u00b6 This is used to add additional text to the display window for a certain item The item number # must always be present The comment text can contain tags to break the line of text Example \u00b6 /inote add 19542 This is found on the Great Saphrophyte in EC<br>Rarity is about 1 in 5 The text at the end of the additional information in blue on the item display window will be: Note: This is found on the Great Saphrophyte in EC Rarity is about 1 in 5","title":"/inote"},{"location":"plugins/core-plugins/mq2itemdisplay/inote/#inote","text":"","title":"/inote"},{"location":"plugins/core-plugins/mq2itemdisplay/inote/#syntax","text":"/inote add|del # comment text","title":"Syntax"},{"location":"plugins/core-plugins/mq2itemdisplay/inote/#description","text":"This is used to add additional text to the display window for a certain item The item number # must always be present The comment text can contain tags to break the line of text","title":"Description"},{"location":"plugins/core-plugins/mq2itemdisplay/inote/#example","text":"/inote add 19542 This is found on the Great Saphrophyte in EC<br>Rarity is about 1 in 5 The text at the end of the additional information in blue on the item display window will be: Note: This is found on the Great Saphrophyte in EC Rarity is about 1 in 5","title":"Example"},{"location":"plugins/core-plugins/mq2map/","tags":["plugin"],"text":"MQ2Map \u00b6 Description \u00b6 This plugin provides additional functionality to the in game map. Commands \u00b6 /highlight /mapclick /mapfilter /maphide /mapnames /mapshow Top-Level Objects \u00b6 spawn MapSpawn Object that is created when your cursor hovers over a spawn on the map","title":"MQ2Map"},{"location":"plugins/core-plugins/mq2map/#mq2map","text":"","title":"MQ2Map"},{"location":"plugins/core-plugins/mq2map/#description","text":"This plugin provides additional functionality to the in game map.","title":"Description"},{"location":"plugins/core-plugins/mq2map/#commands","text":"/highlight /mapclick /mapfilter /maphide /mapnames /mapshow","title":"Commands"},{"location":"plugins/core-plugins/mq2map/#top-level-objects","text":"spawn MapSpawn Object that is created when your cursor hovers over a spawn on the map","title":"Top-Level Objects"},{"location":"plugins/core-plugins/mq2map/highlight/","tags":["command"],"text":"/highlight \u00b6 Syntax \u00b6 /highlight spawnname color \\# \\# \\# reset Description \u00b6 Temporarily highlights spawnname on the in-game map Color # # # can be used to specify an RGB value for the highlighted spawn \\(s\\) Note: You can use Spawn Search filters in spawnname","title":"/highlight"},{"location":"plugins/core-plugins/mq2map/highlight/#highlight","text":"","title":"/highlight"},{"location":"plugins/core-plugins/mq2map/highlight/#syntax","text":"/highlight spawnname color \\# \\# \\# reset","title":"Syntax"},{"location":"plugins/core-plugins/mq2map/highlight/#description","text":"Temporarily highlights spawnname on the in-game map Color # # # can be used to specify an RGB value for the highlighted spawn \\(s\\) Note: You can use Spawn Search filters in spawnname","title":"Description"},{"location":"plugins/core-plugins/mq2map/mapclick/","tags":["command"],"text":"/mapclick \u00b6 Syntax \u00b6 /mapclick list \\|** _**keycombo**_ **\\| clear command Description \u00b6 Allows you to define custom commands to execute when right-clicking with a certain key combination on the in-game map. List will show you the current mapclicks that have been defined. Keycombo can be one or more of the following \\(multiple keys must be specified with +\\) : ctrl lalt ralt shift The default mapclicks are the following: ctrl /maphide id %i Hides that spawn from the map lalt /highlight id %i Highlights the clicked spawn Example \u00b6 /mapclick lalt+shift /mycommand %i When holding down the left alt, shift and then right-clicking a spawn on the map, \"/mycommand %i\" will be executed.","title":"/mapclick"},{"location":"plugins/core-plugins/mq2map/mapclick/#mapclick","text":"","title":"/mapclick"},{"location":"plugins/core-plugins/mq2map/mapclick/#syntax","text":"/mapclick list \\|** _**keycombo**_ **\\| clear command","title":"Syntax"},{"location":"plugins/core-plugins/mq2map/mapclick/#description","text":"Allows you to define custom commands to execute when right-clicking with a certain key combination on the in-game map. List will show you the current mapclicks that have been defined. Keycombo can be one or more of the following \\(multiple keys must be specified with +\\) : ctrl lalt ralt shift The default mapclicks are the following: ctrl /maphide id %i Hides that spawn from the map lalt /highlight id %i Highlights the clicked spawn","title":"Description"},{"location":"plugins/core-plugins/mq2map/mapclick/#example","text":"/mapclick lalt+shift /mycommand %i When holding down the left alt, shift and then right-clicking a spawn on the map, \"/mycommand %i\" will be executed.","title":"Example"},{"location":"plugins/core-plugins/mq2map/mapfilter/","tags":["command"],"text":"Mapfilter \u00b6 Syntax \u00b6 /mapfilter help| option show\\|hide color R\\# G\\# B\\# Description \u00b6 This controls what appears or does not appear on the in-game map provided by MQ2Map . Help will show all current settings. Option can be one of the following followed by \"show\" or \"hide\". If no show/hide argument is given, it will toggle the setting between show and hide. All Shows/hides all map items that have already been set to \"show\". Aura Show/hide auras. Banner Show/hide guild banner. Campfire Show/hide campfire. CastRadius # Show a cast radius circle around your own spawn on the map. Set to \"hide\" or \"0\" to disable. Chest Show/hide chests. Corpse Master toggle to show/hide all corpses \\(PC and NPC\\) . Custom searchfilter Set a custom filter, which can contain any filtering arguments from the Spawn Search page. Group Whether group members should be listed in another color. Ground Show/hide ground spawns. Merceneary Show/hide mercenaries. Menu Enable or disable the right-click context menu Mount Show/hide mounts. Named Displays only 'named' NPCs, other NPCs are filtered out \\(not perfect\\) . NormalLabels Toggles normal EQ \\(non-MQ2\\) label display. NPC Show/hide all NPCs. NPCConColor Whether the dots on the map should be the same as the NPCs con colors. NPCCorpse Show/hide NPC corpses. Object Show/hide destructible objects \\(as were implemented in Prophecy of Ro expansion\\) , like catapults, tents, practice dummies, etc. PC Show/hide all Player Characters. PCConColor Whether the dots on the map should be the same as the PCs con colors. PCCorpse Show/hide Player corpses. Pet Show/hide pets. SpellRadius # Show another radius circle around your own spawn. Functions the same way as CastRadius . Target Show your target in a different color. TargetLine Draw a line between yourself and your target. TargetMelee Draw a melee range circle around your target. TargetRadius # Draw a radius of # around your target. Using \"hide\" or \"0\" will disable the TargetRadius circle. Timer Show/hide timers. Trigger Show/hide trigger locations. Trap Show/hide traps. Vector Display heading vectors. Untargettable Show/hide untargettable spawns. Any of the above options can have \"color R# G# B#\" added to them, to set the color for that specific option. Omit the R# G# B# values to reset them back to default. Note: The use of custom is a one time event, it is not persistent. Examples \u00b6 This will set a red CastRadius circle around your own spawn on the MQ2 map. /mapfilter castradius color 255 0 0 This will display all NPCs between level 60 and 65 within a radius of 50 /mapfilter custom npc range 60 65 radius 50 This will display all NPCs within a radius of 1000 /mapfilter custom npc radius 1000 This command can also be used at larger ranges by entering a larger number. To restore the settings saved in your ini and remove your custom filters use the command without any parameters. /mapfilter custom Troubleshooting \u00b6 Question: My map is no different than normal and /mapfilter all had no effect, what did I do wrong? Answer: Each individual filter needs to be turned on individually, /mapfilter all show does not toggle all filters to \"show\" as might be expected.","title":"/mapfilter"},{"location":"plugins/core-plugins/mq2map/mapfilter/#mapfilter","text":"","title":"Mapfilter"},{"location":"plugins/core-plugins/mq2map/mapfilter/#syntax","text":"/mapfilter help| option show\\|hide color R\\# G\\# B\\#","title":"Syntax"},{"location":"plugins/core-plugins/mq2map/mapfilter/#description","text":"This controls what appears or does not appear on the in-game map provided by MQ2Map . Help will show all current settings. Option can be one of the following followed by \"show\" or \"hide\". If no show/hide argument is given, it will toggle the setting between show and hide. All Shows/hides all map items that have already been set to \"show\". Aura Show/hide auras. Banner Show/hide guild banner. Campfire Show/hide campfire. CastRadius # Show a cast radius circle around your own spawn on the map. Set to \"hide\" or \"0\" to disable. Chest Show/hide chests. Corpse Master toggle to show/hide all corpses \\(PC and NPC\\) . Custom searchfilter Set a custom filter, which can contain any filtering arguments from the Spawn Search page. Group Whether group members should be listed in another color. Ground Show/hide ground spawns. Merceneary Show/hide mercenaries. Menu Enable or disable the right-click context menu Mount Show/hide mounts. Named Displays only 'named' NPCs, other NPCs are filtered out \\(not perfect\\) . NormalLabels Toggles normal EQ \\(non-MQ2\\) label display. NPC Show/hide all NPCs. NPCConColor Whether the dots on the map should be the same as the NPCs con colors. NPCCorpse Show/hide NPC corpses. Object Show/hide destructible objects \\(as were implemented in Prophecy of Ro expansion\\) , like catapults, tents, practice dummies, etc. PC Show/hide all Player Characters. PCConColor Whether the dots on the map should be the same as the PCs con colors. PCCorpse Show/hide Player corpses. Pet Show/hide pets. SpellRadius # Show another radius circle around your own spawn. Functions the same way as CastRadius . Target Show your target in a different color. TargetLine Draw a line between yourself and your target. TargetMelee Draw a melee range circle around your target. TargetRadius # Draw a radius of # around your target. Using \"hide\" or \"0\" will disable the TargetRadius circle. Timer Show/hide timers. Trigger Show/hide trigger locations. Trap Show/hide traps. Vector Display heading vectors. Untargettable Show/hide untargettable spawns. Any of the above options can have \"color R# G# B#\" added to them, to set the color for that specific option. Omit the R# G# B# values to reset them back to default. Note: The use of custom is a one time event, it is not persistent.","title":"Description"},{"location":"plugins/core-plugins/mq2map/mapfilter/#examples","text":"This will set a red CastRadius circle around your own spawn on the MQ2 map. /mapfilter castradius color 255 0 0 This will display all NPCs between level 60 and 65 within a radius of 50 /mapfilter custom npc range 60 65 radius 50 This will display all NPCs within a radius of 1000 /mapfilter custom npc radius 1000 This command can also be used at larger ranges by entering a larger number. To restore the settings saved in your ini and remove your custom filters use the command without any parameters. /mapfilter custom","title":"Examples"},{"location":"plugins/core-plugins/mq2map/mapfilter/#troubleshooting","text":"Question: My map is no different than normal and /mapfilter all had no effect, what did I do wrong? Answer: Each individual filter needs to be turned on individually, /mapfilter all show does not toggle all filters to \"show\" as might be expected.","title":"Troubleshooting"},{"location":"plugins/core-plugins/mq2map/maphide/","tags":["command"],"text":"/maphide \u00b6 Syntax \u00b6 /maphide spawnname reset Description \u00b6 This will hide spawnname from the map. Hidden spawns are in effect until you reset /maphide, or the mapped spawns are regenerated \\(such as changing certain map filters\\) . Examples \u00b6 Re-generates the spawn list /maphide reset Hides all spawns level 39 and below /maphide npc range 1-39","title":"/maphide"},{"location":"plugins/core-plugins/mq2map/maphide/#maphide","text":"","title":"/maphide"},{"location":"plugins/core-plugins/mq2map/maphide/#syntax","text":"/maphide spawnname reset","title":"Syntax"},{"location":"plugins/core-plugins/mq2map/maphide/#description","text":"This will hide spawnname from the map. Hidden spawns are in effect until you reset /maphide, or the mapped spawns are regenerated \\(such as changing certain map filters\\) .","title":"Description"},{"location":"plugins/core-plugins/mq2map/maphide/#examples","text":"Re-generates the spawn list /maphide reset Hides all spawns level 39 and below /maphide npc range 1-39","title":"Examples"},{"location":"plugins/core-plugins/mq2map/mapnames/","tags":["command"],"text":"/mapnames \u00b6 Syntax \u00b6 /mapnames help target\\|normal** _**options**_ ** Description \u00b6 Sets how spawn names will be displayed on the MQ2 map, for your target or all other spawns. *This command takes a parameter specifying normal/target, and then an optional custom string. With no arguments, /mapnames will display the current settings for target and normal (both are set to %N by default). The plugin will replace the %l %r %c %N options with a piece of information. Each option is case sensitive and exactly one character in length. It is important to note that names are not updated continually (except for your target if the target map filter is on). You may use the following options to customize the display string: {| border=\"1\" cellpadding=\"2\" cellspacing=\"0\" | %n |The default unique \"name\" of the target, like \"a_coyote34\" |- | %N |The cleaned up name of the target, like \"a coyote\" |- | %h* |Current HP percentage |- | %i* |Spawn ID |- | %x* |X coordinate |- | %y* |Y coordinate |- | %z* |Z coordinate |- | %R* |Full race name \\(eg. Dwarf\\) |- | %r* |3-letter race code \\(eg. DWF\\) |- | %C* |Class full name \\(eg. Shaman\\) |- | %c* |3-letter class code \\(eg. SHM\\) |- | %l* |Level |- | %% '' |\"%\" sign |} Note: All other characters will be displayed as normal. Examples \u00b6 /mapnames normal [%l %R %C] %N - %h%% Will display all spawns in the following format: [40 Human Banker] Banker Tawler - 100% [70 Wood Elf Ranger] BillyBob - 100%","title":"/mapnames"},{"location":"plugins/core-plugins/mq2map/mapnames/#mapnames","text":"","title":"/mapnames"},{"location":"plugins/core-plugins/mq2map/mapnames/#syntax","text":"/mapnames help target\\|normal** _**options**_ **","title":"Syntax"},{"location":"plugins/core-plugins/mq2map/mapnames/#description","text":"Sets how spawn names will be displayed on the MQ2 map, for your target or all other spawns. *This command takes a parameter specifying normal/target, and then an optional custom string. With no arguments, /mapnames will display the current settings for target and normal (both are set to %N by default). The plugin will replace the %l %r %c %N options with a piece of information. Each option is case sensitive and exactly one character in length. It is important to note that names are not updated continually (except for your target if the target map filter is on). You may use the following options to customize the display string: {| border=\"1\" cellpadding=\"2\" cellspacing=\"0\" | %n |The default unique \"name\" of the target, like \"a_coyote34\" |- | %N |The cleaned up name of the target, like \"a coyote\" |- | %h* |Current HP percentage |- | %i* |Spawn ID |- | %x* |X coordinate |- | %y* |Y coordinate |- | %z* |Z coordinate |- | %R* |Full race name \\(eg. Dwarf\\) |- | %r* |3-letter race code \\(eg. DWF\\) |- | %C* |Class full name \\(eg. Shaman\\) |- | %c* |3-letter class code \\(eg. SHM\\) |- | %l* |Level |- | %% '' |\"%\" sign |} Note: All other characters will be displayed as normal.","title":"Description"},{"location":"plugins/core-plugins/mq2map/mapnames/#examples","text":"/mapnames normal [%l %R %C] %N - %h%% Will display all spawns in the following format: [40 Human Banker] Banker Tawler - 100% [70 Wood Elf Ranger] BillyBob - 100%","title":"Examples"},{"location":"plugins/core-plugins/mq2map/mapshow/","tags":["command"],"text":"/mapshow \u00b6 Syntax \u00b6 /mapshow spawnname reset Description \u00b6 Explicitly shows spawnname on the map. Only in effect until the mapped spawns are re-generated \\(same as /maphide\\) Examples \u00b6","title":"/mapshow"},{"location":"plugins/core-plugins/mq2map/mapshow/#mapshow","text":"","title":"/mapshow"},{"location":"plugins/core-plugins/mq2map/mapshow/#syntax","text":"/mapshow spawnname reset","title":"Syntax"},{"location":"plugins/core-plugins/mq2map/mapshow/#description","text":"Explicitly shows spawnname on the map. Only in effect until the mapped spawns are re-generated \\(same as /maphide\\)","title":"Description"},{"location":"plugins/core-plugins/mq2map/mapshow/#examples","text":"","title":"Examples"},{"location":"plugins/developing/","text":"Developing Plugins \u00b6 Warning This content is outdated or incomplete.","title":"Developing Plugins"},{"location":"plugins/developing/#developing-plugins","text":"Warning This content is outdated or incomplete.","title":"Developing Plugins"},{"location":"plugins/discontinued/","text":"Discontinued / Unsupported \u00b6","title":"Discontinued / Unsupported"},{"location":"plugins/discontinued/#discontinued-unsupported","text":"","title":"Discontinued / Unsupported"},{"location":"plugins/discontinued/mq2web/","tags":["plugin"],"text":"MQ2Web \u00b6 Warning This plugin is deprecated in live clients. The web browser component was removed from EverQuest. Description \u00b6 Created by ieatacid The two offsets at the top will need to be updated after each patch, more than likely. This adds the /web command. Follow it with a URL (\"http://\" is added if you don't include it yourself). It works to open any web page. For instance, \"/web google.com\" opens the google home page. You can find the latest version of MQ2Web here . Commands \u00b6 /web /web target = searches Allakhazam for your target's name if an NPC, Magelo if a PC Shift+click an item link looks up the item on Lucy Ctrl+click an item link looks up the item on EQItems","title":"MQ2Web"},{"location":"plugins/discontinued/mq2web/#mq2web","text":"Warning This plugin is deprecated in live clients. The web browser component was removed from EverQuest.","title":"MQ2Web"},{"location":"plugins/discontinued/mq2web/#description","text":"Created by ieatacid The two offsets at the top will need to be updated after each patch, more than likely. This adds the /web command. Follow it with a URL (\"http://\" is added if you don't include it yourself). It works to open any web page. For instance, \"/web google.com\" opens the google home page. You can find the latest version of MQ2Web here .","title":"Description"},{"location":"plugins/discontinued/mq2web/#commands","text":"/web /web target = searches Allakhazam for your target's name if an NPC, Magelo if a PC Shift+click an item link looks up the item on Lucy Ctrl+click an item link looks up the item on EQItems","title":"Commands"},{"location":"plugins/discontinued/mq2eqim/","tags":["plugin"],"text":"MQ2EQIM \u00b6 Description \u00b6 Keeps your list of buddies (per character) and the last time they were seen online or on EQIM (by any character). Your friends list is automatically added as buddies. Notifies you when someone on your EQIM buddy list logs in or out. Note: Since changing the EQ chat system to the Universal Chat System, this plugin \\(and Sony's official EQIM\\) no longer works. Top-Level Objects \u00b6 buddy Buddy **name** Info on buddy with this name buddy Buddy **\\#** Buddy with this index number in the system Data types \u00b6 buddy buddy","title":"MQ2EQIM"},{"location":"plugins/discontinued/mq2eqim/#mq2eqim","text":"","title":"MQ2EQIM"},{"location":"plugins/discontinued/mq2eqim/#description","text":"Keeps your list of buddies (per character) and the last time they were seen online or on EQIM (by any character). Your friends list is automatically added as buddies. Notifies you when someone on your EQIM buddy list logs in or out. Note: Since changing the EQ chat system to the Universal Chat System, this plugin \\(and Sony's official EQIM\\) no longer works.","title":"Description"},{"location":"plugins/discontinued/mq2eqim/#top-level-objects","text":"buddy Buddy **name** Info on buddy with this name buddy Buddy **\\#** Buddy with this index number in the system","title":"Top-Level Objects"},{"location":"plugins/discontinued/mq2eqim/#data-types","text":"buddy buddy","title":"Data types"},{"location":"plugins/discontinued/mq2eqim/mq2eqim-datatype-buddy/","tags":["datatype"],"text":"MQ2EQIM:DataType:buddy \u00b6 Members \u00b6 int Buddies Size of the buddy index \\(will not necessarily be equal to the number of buddies, but n in Buddy\\[n\\] will never exceed this number\\) string Name Buddy's name \\(may be fennin.Name or just Name, depending on how you added them\\) string Status \"Removed from list\", \"Offline\", \"EQIM\", \"EQIM \\(AFK\\) \", \"Unknown Status \\(4\\) \", \"Playing\", \"Playing \\(AFK\\) \" int StatusID Numeric representation of the above \\(0,1,2,3,4,5,6\\) time LastSeen Last time this buddy was on/seen To String Same as Name","title":"MQ2EQIM:DataType:buddy"},{"location":"plugins/discontinued/mq2eqim/mq2eqim-datatype-buddy/#mq2eqimdatatypebuddy","text":"","title":"MQ2EQIM:DataType:buddy"},{"location":"plugins/discontinued/mq2eqim/mq2eqim-datatype-buddy/#members","text":"int Buddies Size of the buddy index \\(will not necessarily be equal to the number of buddies, but n in Buddy\\[n\\] will never exceed this number\\) string Name Buddy's name \\(may be fennin.Name or just Name, depending on how you added them\\) string Status \"Removed from list\", \"Offline\", \"EQIM\", \"EQIM \\(AFK\\) \", \"Unknown Status \\(4\\) \", \"Playing\", \"Playing \\(AFK\\) \" int StatusID Numeric representation of the above \\(0,1,2,3,4,5,6\\) time LastSeen Last time this buddy was on/seen To String Same as Name","title":"Members"},{"location":"plugins/discontinued/mq2fps/","tags":["plugin"],"text":"MQ2FPS \u00b6 Warning This plugin is deprecated and no longer available for MacroQuest. Framelimiting functionality is now part of main. Description \u00b6 MQ2FPS \\(VIP only\\) is a plugin that changes the frames per second of the Everquest screen when it is in focus and when it is in the background. Commands /fps /render /maxfps /fps on\\|off /fps x\\|y /fps mode absolute\\|calculate On/Off enables or disables the FPS display. Use x and y to control the location of the FPS display on the screen. With mode you can change the FPS limiter mode to the one specified \\(absolute or calculate\\) or toggle between the two if no mode is specified. **/render bg\\|fg |~#** \u00b6 This sets the foreground or background rendering rate \\(ie. how many frames will be drawn\\) . Setting the rendering rate does not slow down the game at all. The client still responds to the mouse and keyboard the same, the UI is still drawn, but the world itself is not drawn as often. With # , MQ2FPS will drawn 1 out of # frames. The use of ~# will cause MQ2FPS to draw #-1 out of # frames. Example /render bg 3 Draws 1 out of 3 frames /render bg ~3 Draws 2 out of 3 frames /maxfps bg \\| fg \\# Sets the foreground or background framerate. Example /maxfps fg 30 Sets foreground framerate to 30 FPS /maxfps bg 5 Sets background framerate to 5 FPS Top-Level Objects \u00b6 fps FPS Data types \u00b6 fps fps Examples \u00b6 /maxfps fg 25 /maxfps bg 25 /fps on /fps mode absolute /fps 10,25 /render fg 1 /render bg 75 Sample INI File \u00b6 ForegroundMaxFPS=25 BackgroundMaxFPS=25 Indicator=1 Mode=1 IndicatorX=10 IndicatorY=25 [Rendering] FGRate=1 ReverseFGRate=0 BGRate=75 ReverseBGRate=0","title":"MQ2FPS"},{"location":"plugins/discontinued/mq2fps/#mq2fps","text":"Warning This plugin is deprecated and no longer available for MacroQuest. Framelimiting functionality is now part of main.","title":"MQ2FPS"},{"location":"plugins/discontinued/mq2fps/#description","text":"MQ2FPS \\(VIP only\\) is a plugin that changes the frames per second of the Everquest screen when it is in focus and when it is in the background. Commands /fps /render /maxfps /fps on\\|off /fps x\\|y /fps mode absolute\\|calculate On/Off enables or disables the FPS display. Use x and y to control the location of the FPS display on the screen. With mode you can change the FPS limiter mode to the one specified \\(absolute or calculate\\) or toggle between the two if no mode is specified. **/render bg\\|fg","title":"Description"},{"location":"plugins/discontinued/mq2fps/#_1","text":"This sets the foreground or background rendering rate \\(ie. how many frames will be drawn\\) . Setting the rendering rate does not slow down the game at all. The client still responds to the mouse and keyboard the same, the UI is still drawn, but the world itself is not drawn as often. With # , MQ2FPS will drawn 1 out of # frames. The use of ~# will cause MQ2FPS to draw #-1 out of # frames. Example /render bg 3 Draws 1 out of 3 frames /render bg ~3 Draws 2 out of 3 frames /maxfps bg \\| fg \\# Sets the foreground or background framerate. Example /maxfps fg 30 Sets foreground framerate to 30 FPS /maxfps bg 5 Sets background framerate to 5 FPS","title":"|~#**"},{"location":"plugins/discontinued/mq2fps/#top-level-objects","text":"fps FPS","title":"Top-Level Objects"},{"location":"plugins/discontinued/mq2fps/#data-types","text":"fps fps","title":"Data types"},{"location":"plugins/discontinued/mq2fps/#examples","text":"/maxfps fg 25 /maxfps bg 25 /fps on /fps mode absolute /fps 10,25 /render fg 1 /render bg 75","title":"Examples"},{"location":"plugins/discontinued/mq2fps/#sample-ini-file","text":"ForegroundMaxFPS=25 BackgroundMaxFPS=25 Indicator=1 Mode=1 IndicatorX=10 IndicatorY=25 [Rendering] FGRate=1 ReverseFGRate=0 BGRate=75 ReverseBGRate=0","title":"Sample INI File"},{"location":"plugins/discontinued/mq2fps/datatype-fps/","tags":["datatype"],"text":"DataType:fps \u00b6 Description \u00b6 Members \u00b6 Type Member Description float FPS Current frames per second int MaxFPS Current max frames per second bool Foreground Is this session in the foreground? string To String Same as FPS","title":"DataType:FPS"},{"location":"plugins/discontinued/mq2fps/datatype-fps/#datatypefps","text":"","title":"DataType:fps"},{"location":"plugins/discontinued/mq2fps/datatype-fps/#description","text":"","title":"Description"},{"location":"plugins/discontinued/mq2fps/datatype-fps/#members","text":"Type Member Description float FPS Current frames per second int MaxFPS Current max frames per second bool Foreground Is this session in the foreground? string To String Same as FPS","title":"Members"},{"location":"plugins/discontinued/mq2fps/tlo-fps/","tags":["tlo"],"text":"TLO:FPS \u00b6 Description \u00b6 This TLO contains information about the number of Frames Per Second that the EQ client is rendering. Forms \u00b6 fps FPS Access to Types \u00b6 fps fps","title":"TLO:FPS"},{"location":"plugins/discontinued/mq2fps/tlo-fps/#tlofps","text":"","title":"TLO:FPS"},{"location":"plugins/discontinued/mq2fps/tlo-fps/#description","text":"This TLO contains information about the number of Frames Per Second that the EQ client is rendering.","title":"Description"},{"location":"plugins/discontinued/mq2fps/tlo-fps/#forms","text":"fps FPS","title":"Forms"},{"location":"plugins/discontinued/mq2fps/tlo-fps/#access-to-types","text":"fps fps","title":"Access to Types"},{"location":"plugins/discontinued/mq2irc/","tags":["plugin"],"text":"MQ2IRC \u00b6 Description \u00b6 MQ2IRC is the plugin which provides the ability to connect to an IRC server from within EQ. This is most commonly used as a method to exchange information between bots without going through the EQ servers. It's faster as well as safer. Commands \u00b6 /i /iconnect /istatus Top-Level Objects \u00b6 irc Irc Data Types \u00b6 irc irc INI File \u00b6 The MQ2IRC.ini creates a new section for every server that it connects to, and keeps your settings for future use. It also stores the last server connected to and its settings so that you may use /iconnect to reconnect to that server quickly.","title":"MQ2IRC"},{"location":"plugins/discontinued/mq2irc/#mq2irc","text":"","title":"MQ2IRC"},{"location":"plugins/discontinued/mq2irc/#description","text":"MQ2IRC is the plugin which provides the ability to connect to an IRC server from within EQ. This is most commonly used as a method to exchange information between bots without going through the EQ servers. It's faster as well as safer.","title":"Description"},{"location":"plugins/discontinued/mq2irc/#commands","text":"/i /iconnect /istatus","title":"Commands"},{"location":"plugins/discontinued/mq2irc/#top-level-objects","text":"irc Irc","title":"Top-Level Objects"},{"location":"plugins/discontinued/mq2irc/#data-types","text":"irc irc","title":"Data Types"},{"location":"plugins/discontinued/mq2irc/#ini-file","text":"The MQ2IRC.ini creates a new section for every server that it connects to, and keeps your settings for future use. It also stores the last server connected to and its settings so that you may use /iconnect to reconnect to that server quickly.","title":"INI File"},{"location":"plugins/discontinued/mq2irc/mq2irc-datatype-irc/","tags":["datatype"],"text":"MQ2IRC:DataType:irc \u00b6 Members \u00b6 string Server IRC server name string Channel Current channel name string Nick Current nickname int Port IRC server port To String Same as Connected","title":"MQ2IRC:DataType:irc"},{"location":"plugins/discontinued/mq2irc/mq2irc-datatype-irc/#mq2ircdatatypeirc","text":"","title":"MQ2IRC:DataType:irc"},{"location":"plugins/discontinued/mq2irc/mq2irc-datatype-irc/#members","text":"string Server IRC server name string Channel Current channel name string Nick Current nickname int Port IRC server port To String Same as Connected","title":"Members"},{"location":"plugins/discontinued/mq2irc/tlo-irc/","tags":["tlo"],"text":"TLO:Irc \u00b6 Description \u00b6 Object which access all IRC-related information. Forms \u00b6 irc Irc Access to Types \u00b6 irc irc Examples \u00b6 /if (${Irc.Connected}) { /echo I'm connected }","title":"TLO:Irc"},{"location":"plugins/discontinued/mq2irc/tlo-irc/#tloirc","text":"","title":"TLO:Irc"},{"location":"plugins/discontinued/mq2irc/tlo-irc/#description","text":"Object which access all IRC-related information.","title":"Description"},{"location":"plugins/discontinued/mq2irc/tlo-irc/#forms","text":"irc Irc","title":"Forms"},{"location":"plugins/discontinued/mq2irc/tlo-irc/#access-to-types","text":"irc irc","title":"Access to Types"},{"location":"plugins/discontinued/mq2irc/tlo-irc/#examples","text":"/if (${Irc.Connected}) { /echo I'm connected }","title":"Examples"},{"location":"plugins/discontinued/mq2irc/commands/","text":"Commands \u00b6","title":"Commands"},{"location":"plugins/discontinued/mq2irc/commands/#commands","text":"","title":"Commands"},{"location":"plugins/discontinued/mq2irc/commands/i/","tags":["command"],"text":"/i \u00b6 Syntax \u00b6 /i help|nick name |join #channel |part **_**\\#channel**_** |whois nickname |msg nickname **_**text _ |say **_**text _ |raw **_**command _**|quit|names|x** Description \u00b6 This is the main IRC slash command and controls most things related to IRC communication. All the commands below must be entered after you have connected with /iconnect . help: Show a list of commands that can be issued after /i. nick: Change your nick to name . join: Join the channel #channel . The channel must have a # in front of it. part: Leave #channel . If no channel is given, it will leave the last-joined channel. whois: Display information available on nickname . msg: Send a directed message of \" text \" to nickname . This is the IRC equivalent of a tell. say: Speak \" text \" in the current channel. This text will be visible to everyone in the channel. raw: Send command to the server. This is useful for other IRC commands that are not available with /i (eg. \"/i raw list\" to list all channels on the server). quit: Leave the server \\(same as the IRC command /quit\\) . names: List all nicknames on the current channel. x: Not sure .","title":"/i"},{"location":"plugins/discontinued/mq2irc/commands/i/#i","text":"","title":"/i"},{"location":"plugins/discontinued/mq2irc/commands/i/#syntax","text":"/i help|nick name |join #channel |part **_**\\#channel**_** |whois nickname |msg nickname **_**text _ |say **_**text _ |raw **_**command _**|quit|names|x**","title":"Syntax"},{"location":"plugins/discontinued/mq2irc/commands/i/#description","text":"This is the main IRC slash command and controls most things related to IRC communication. All the commands below must be entered after you have connected with /iconnect . help: Show a list of commands that can be issued after /i. nick: Change your nick to name . join: Join the channel #channel . The channel must have a # in front of it. part: Leave #channel . If no channel is given, it will leave the last-joined channel. whois: Display information available on nickname . msg: Send a directed message of \" text \" to nickname . This is the IRC equivalent of a tell. say: Speak \" text \" in the current channel. This text will be visible to everyone in the channel. raw: Send command to the server. This is useful for other IRC commands that are not available with /i (eg. \"/i raw list\" to list all channels on the server). quit: Leave the server \\(same as the IRC command /quit\\) . names: List all nicknames on the current channel. x: Not sure .","title":"Description"},{"location":"plugins/discontinued/mq2irc/commands/iconnect/","tags":["command"],"text":"/iconnect \u00b6 Syntax \u00b6 /iconnect server port channel nick Description \u00b6 This will allow you to connect to an IRC server. The MQ2IRC plugin stores all previously connected servers in the MQ2IRC.ini file, so you need not specify any options as it will connect to the last server you connected to. Omitting any of the other options will use defaults from the INI file.","title":"/iconnect"},{"location":"plugins/discontinued/mq2irc/commands/iconnect/#iconnect","text":"","title":"/iconnect"},{"location":"plugins/discontinued/mq2irc/commands/iconnect/#syntax","text":"/iconnect server port channel nick","title":"Syntax"},{"location":"plugins/discontinued/mq2irc/commands/iconnect/#description","text":"This will allow you to connect to an IRC server. The MQ2IRC plugin stores all previously connected servers in the MQ2IRC.ini file, so you need not specify any options as it will connect to the last server you connected to. Omitting any of the other options will use defaults from the INI file.","title":"Description"},{"location":"plugins/discontinued/mq2irc/commands/istatus/","tags":["command"],"text":"/istatus \u00b6 Syntax \u00b6 /istatus Description \u00b6 Displays MQ2IRC status It shows if you are ONLINE \\(ie. connected to a server\\) or OFFLINE If ONLINE it shows the server and port connected to, as well as the channel \\(s\\) you've joined and your nickname.","title":"/istatus"},{"location":"plugins/discontinued/mq2irc/commands/istatus/#istatus","text":"","title":"/istatus"},{"location":"plugins/discontinued/mq2irc/commands/istatus/#syntax","text":"/istatus","title":"Syntax"},{"location":"plugins/discontinued/mq2irc/commands/istatus/#description","text":"Displays MQ2IRC status It shows if you are ONLINE \\(ie. connected to a server\\) or OFFLINE If ONLINE it shows the server and port connected to, as well as the channel \\(s\\) you've joined and your nickname.","title":"Description"},{"location":"plugins/discontinued/mq2telnet/","tags":["plugin"],"text":"MQ2Telnet \u00b6 Description \u00b6 This plugin adds a telnet server, which can be used to access your EQ session remotely. INI File \u00b6 By default, the telnet server is disabled. If you want to use it, you will need to edit the mq2telnet.ini file and do the following: Define a port number that the server will run on: Port=6669 Add some users and passwords under the Users section: [Users] wassup=ubahmanualguy It is recommended that you change the Welcome message. The following setting will limit the connection to just one user. Setting it to 0 and defining usernames and passwords will allow multiple users to connect. LocalOnly=1 Using the Telnet server \u00b6 Use a real telnet client to connect \\(Putty works well\\) . After entering your username and password, you will be presented with your Welcome message. From now, and commands you enter in the telnet session will work the same as typing them into your EQ console. Any chat output will be sent to your telnet session. To disconnect from the server, just close your telnet client. The plugin will notice when the connection is no longer active and will clean up. Commands \u00b6 /telnet","title":"MQ2Telnet"},{"location":"plugins/discontinued/mq2telnet/#mq2telnet","text":"","title":"MQ2Telnet"},{"location":"plugins/discontinued/mq2telnet/#description","text":"This plugin adds a telnet server, which can be used to access your EQ session remotely.","title":"Description"},{"location":"plugins/discontinued/mq2telnet/#ini-file","text":"By default, the telnet server is disabled. If you want to use it, you will need to edit the mq2telnet.ini file and do the following: Define a port number that the server will run on: Port=6669 Add some users and passwords under the Users section: [Users] wassup=ubahmanualguy It is recommended that you change the Welcome message. The following setting will limit the connection to just one user. Setting it to 0 and defining usernames and passwords will allow multiple users to connect. LocalOnly=1","title":"INI File"},{"location":"plugins/discontinued/mq2telnet/#using-the-telnet-server","text":"Use a real telnet client to connect \\(Putty works well\\) . After entering your username and password, you will be presented with your Welcome message. From now, and commands you enter in the telnet session will work the same as typing them into your EQ console. Any chat output will be sent to your telnet session. To disconnect from the server, just close your telnet client. The plugin will notice when the connection is no longer active and will clean up.","title":"Using the Telnet server"},{"location":"plugins/discontinued/mq2telnet/#commands","text":"/telnet","title":"Commands"},{"location":"plugins/discontinued/mq2telnet/telnet/","tags":["command"],"text":"/telnet \u00b6 Syntax \u00b6 /telnet Description \u00b6 Part of the MQ2Telnet plugin, this command lists all the remote IP addresses that are connected to your telnet server.","title":"/telnet"},{"location":"plugins/discontinued/mq2telnet/telnet/#telnet","text":"","title":"/telnet"},{"location":"plugins/discontinued/mq2telnet/telnet/#syntax","text":"/telnet","title":"Syntax"},{"location":"plugins/discontinued/mq2telnet/telnet/#description","text":"Part of the MQ2Telnet plugin, this command lists all the remote IP addresses that are connected to your telnet server.","title":"Description"},{"location":"reference/","text":"MacroQuest Reference \u00b6 The reference section contains descriptions of the various commands, datatypes, tlos, etc that are available to macroquest content authors. See the sections in the sidebar to navigate to the appropriate content.","title":"MacroQuest Reference"},{"location":"reference/#macroquest-reference","text":"The reference section contains descriptions of the various commands, datatypes, tlos, etc that are available to macroquest content authors. See the sections in the sidebar to navigate to the appropriate content.","title":"MacroQuest Reference"},{"location":"reference/commands/","text":"Slash Commands \u00b6 Base \u00b6 /aa /doortarget /mqtarget /setwintitle /alert /dosocial /itemnotify /multiline /shiftkey /alias /drop /items /nomodkey /skills /altkey /dumpbinds /itemtarget /noparse /spew /banklist /echo /keepkeys /notify /squelch /beep /eqtarget /keypress /plugin /substitute /bind /exec /loadcfg /popup /target /caption /face /loadspells /range /timed /captioncolor /filter /location /removebuff /unload /cast /foreground /loginname /removelev /updateitems /charinfo /help /look /removepetbuff /where /click /hotbutton /memspell /reloadui /who /combine /hud /mouseto /screenmode /whofilter /ctrlkey /identify /mqfont /sellitem /whotarget /custombind /ini /mqlog /setautorun /windows /destroy /invoke /mqpause /setprio /windowstate /docommand /doors Macroing/Flow Control \u00b6 /break /delay /if /seterror /call /deletevar /listmacros /varcalc /cleanup /doevents /macro /vardata /clearerrors /endmacro /next /varset /continue /for /return /while /declare /goto From Plugins \u00b6 MQ2HUD MQ2ItemDisplay MQ2Map /hud /inote /highlight /defaulthud /mapclick /loadhud /mapfilter /classhud /maphide /zonehud /mapnames /mapshow","title":"Slash Commands"},{"location":"reference/commands/#slash-commands","text":"","title":"Slash Commands"},{"location":"reference/commands/#base","text":"/aa /doortarget /mqtarget /setwintitle /alert /dosocial /itemnotify /multiline /shiftkey /alias /drop /items /nomodkey /skills /altkey /dumpbinds /itemtarget /noparse /spew /banklist /echo /keepkeys /notify /squelch /beep /eqtarget /keypress /plugin /substitute /bind /exec /loadcfg /popup /target /caption /face /loadspells /range /timed /captioncolor /filter /location /removebuff /unload /cast /foreground /loginname /removelev /updateitems /charinfo /help /look /removepetbuff /where /click /hotbutton /memspell /reloadui /who /combine /hud /mouseto /screenmode /whofilter /ctrlkey /identify /mqfont /sellitem /whotarget /custombind /ini /mqlog /setautorun /windows /destroy /invoke /mqpause /setprio /windowstate /docommand /doors","title":"Base"},{"location":"reference/commands/#macroingflow-control","text":"/break /delay /if /seterror /call /deletevar /listmacros /varcalc /cleanup /doevents /macro /vardata /clearerrors /endmacro /next /varset /continue /for /return /while /declare /goto","title":"Macroing/Flow Control"},{"location":"reference/commands/#from-plugins","text":"MQ2HUD MQ2ItemDisplay MQ2Map /hud /inote /highlight /defaulthud /mapclick /loadhud /mapfilter /classhud /maphide /zonehud /mapnames /mapshow","title":"From Plugins"},{"location":"reference/commands/aa/","tags":["command"],"text":"/aa \u00b6 Syntax \u00b6 /aa [list (all | timers)] info** _**abilityname**_** [act abilityname ] Description \u00b6 Used to retrieve information on AA Abilities, or to activate an AA ability. Examples \u00b6 /aa list all Lists all AA abilities available to you (doesn't mean you have them) in format [ID : name] /aa list timers Lists just the AA you have that have timers /aa info abilityname Gives information about a particular AA ability /aa act abilityname Works like \"/alt act ##\", but takes the name instead of ## (note: You will notice a fraction of a second delay using this method vs. the /alt act ## method).","title":"/aa"},{"location":"reference/commands/aa/#aa","text":"","title":"/aa"},{"location":"reference/commands/aa/#syntax","text":"/aa [list (all | timers)] info** _**abilityname**_** [act abilityname ]","title":"Syntax"},{"location":"reference/commands/aa/#description","text":"Used to retrieve information on AA Abilities, or to activate an AA ability.","title":"Description"},{"location":"reference/commands/aa/#examples","text":"/aa list all Lists all AA abilities available to you (doesn't mean you have them) in format [ID : name] /aa list timers Lists just the AA you have that have timers /aa info abilityname Gives information about a particular AA ability /aa act abilityname Works like \"/alt act ##\", but takes the name instead of ## (note: You will notice a fraction of a second delay using this method vs. the /alt act ## method).","title":"Examples"},{"location":"reference/commands/advloot/","tags":["command"],"text":"/advloot \u00b6 Syntax \u00b6 /advloot [personal/shared] \\#(index) or \"item name\" window commands [option command] Window Commands Descritpion giveto Gives item to that character IE \"/advloot share 1 giveto billybob\" leave Leaves the item on the corpse (Note: to unlock the corpse from timer, ALL items related to that corpse must be looted or left on it) Description \u00b6 Used for sending commands to the AdvLoot window (some require you to be the master looter) Examples \u00b6 Command Description /advloot shared 1 leave If you are the Master Looter this will cause item 1 on the share loot list to be left on the corpse /advloot shared \"spiderling silk\" leave If you are the Master Looter this will cause the first \"spiderling silk\" it finds in the shared list to be left on the corpse... /advloot shared 3 ag That will select AG on the shared loot list for item 3 /advloot shared 1 giveto player 1 If you are the Master Looter this will take the item 1 from the Shared list and give it to player","title":"/advloot"},{"location":"reference/commands/advloot/#advloot","text":"","title":"/advloot"},{"location":"reference/commands/advloot/#syntax","text":"/advloot [personal/shared] \\#(index) or \"item name\" window commands [option command] Window Commands Descritpion giveto Gives item to that character IE \"/advloot share 1 giveto billybob\" leave Leaves the item on the corpse (Note: to unlock the corpse from timer, ALL items related to that corpse must be looted or left on it)","title":"Syntax"},{"location":"reference/commands/advloot/#description","text":"Used for sending commands to the AdvLoot window (some require you to be the master looter)","title":"Description"},{"location":"reference/commands/advloot/#examples","text":"Command Description /advloot shared 1 leave If you are the Master Looter this will cause item 1 on the share loot list to be left on the corpse /advloot shared \"spiderling silk\" leave If you are the Master Looter this will cause the first \"spiderling silk\" it finds in the shared list to be left on the corpse... /advloot shared 3 ag That will select AG on the shared loot list for item 3 /advloot shared 1 giveto player 1 If you are the Master Looter this will take the item 1 from the Shared list and give it to player","title":"Examples"},{"location":"reference/commands/alert/","tags":["command"],"text":"/alert \u00b6 Syntax \u00b6 /alert [ add | remove ] # pc\\|npc\\|corpse\\|any radius \\# range** _**lowerlevel upperlevel**_** \"spawnname\" [clear|list #] Description \u00b6 Used to manipulate alert lists which \"watch\" for spawns. Examples \u00b6 /alert add 1 \"spawnname\" Adds spawn name to alert list 1 /alert clear 1 Clears all members from alert list 1 /alert list 1 Lists all members of alert list 1 /alert add 1 npc radius 300 \"spawnname\" Sets alert(1) to TRUE if \"spawnname\" is within radius of 300 from your location /alert add 2 npc range 30 200 \"spawnname\" Sets alert(2) to TRUE if any \"spawnname\" are within 30 to 200 range from your location /alert remove 1 id spawnID Removes the entry in alert list 1 for spawnID","title":"/alert"},{"location":"reference/commands/alert/#alert","text":"","title":"/alert"},{"location":"reference/commands/alert/#syntax","text":"/alert [ add | remove ] # pc\\|npc\\|corpse\\|any radius \\# range** _**lowerlevel upperlevel**_** \"spawnname\" [clear|list #]","title":"Syntax"},{"location":"reference/commands/alert/#description","text":"Used to manipulate alert lists which \"watch\" for spawns.","title":"Description"},{"location":"reference/commands/alert/#examples","text":"/alert add 1 \"spawnname\" Adds spawn name to alert list 1 /alert clear 1 Clears all members from alert list 1 /alert list 1 Lists all members of alert list 1 /alert add 1 npc radius 300 \"spawnname\" Sets alert(1) to TRUE if \"spawnname\" is within radius of 300 from your location /alert add 2 npc range 30 200 \"spawnname\" Sets alert(2) to TRUE if any \"spawnname\" are within 30 to 200 range from your location /alert remove 1 id spawnID Removes the entry in alert list 1 for spawnID","title":"Examples"},{"location":"reference/commands/alias/","tags":["command"],"text":"/alias \u00b6 Syntax \u00b6 /alias [list | reload | ** _**aliasname _ delete] [name command] Description \u00b6 Useful for creating shorter versions of a command. Examples \u00b6 /alias list Lists all aliases /alias reload Reloads all aliases /alias /hp /echo My health is ${Me.PctHPs} Typing /hp in the EQ chat box will display: My health is % in the MQ2 chat window /alias aliasname delete '' Deletes aliasname from MacroQuest.ini","title":"/alias"},{"location":"reference/commands/alias/#alias","text":"","title":"/alias"},{"location":"reference/commands/alias/#syntax","text":"/alias [list | reload | ** _**aliasname _ delete] [name command]","title":"Syntax"},{"location":"reference/commands/alias/#description","text":"Useful for creating shorter versions of a command.","title":"Description"},{"location":"reference/commands/alias/#examples","text":"/alias list Lists all aliases /alias reload Reloads all aliases /alias /hp /echo My health is ${Me.PctHPs} Typing /hp in the EQ chat box will display: My health is % in the MQ2 chat window /alias aliasname delete '' Deletes aliasname from MacroQuest.ini","title":"Examples"},{"location":"reference/commands/altkey/","tags":["command"],"text":"/altkey \u00b6 Syntax \u00b6 /altkey command Description \u00b6 Execute command while telling the window manager that the alt key is pressed. Can also be used together with /ctrlkey , /shiftkey , or both as in: /ctrlkey /altkey /shiftkey command","title":"/altkey"},{"location":"reference/commands/altkey/#altkey","text":"","title":"/altkey"},{"location":"reference/commands/altkey/#syntax","text":"/altkey command","title":"Syntax"},{"location":"reference/commands/altkey/#description","text":"Execute command while telling the window manager that the alt key is pressed. Can also be used together with /ctrlkey , /shiftkey , or both as in: /ctrlkey /altkey /shiftkey command","title":"Description"},{"location":"reference/commands/banklist/","tags":["command"],"text":"/banklist \u00b6 Syntax \u00b6 /banklist Description \u00b6 Displays an inventory of the currently logged in character in this format: Bankslot#:Typeofcontainer -ContainerSlot1:Item -Containerslot2:Item -etc","title":"/banklist"},{"location":"reference/commands/banklist/#banklist","text":"","title":"/banklist"},{"location":"reference/commands/banklist/#syntax","text":"/banklist","title":"Syntax"},{"location":"reference/commands/banklist/#description","text":"Displays an inventory of the currently logged in character in this format: Bankslot#:Typeofcontainer -ContainerSlot1:Item -Containerslot2:Item -etc","title":"Description"},{"location":"reference/commands/beep/","tags":["command"],"text":"/beep \u00b6 Syntax \u00b6 /beep [ filename ] Description \u00b6 Invokes a system beep (beep from the built-in PC speaker). Adding filename will play a .wav file located in your Everquest directory. This function uses the In-game sound so while a normal /beep will sound if you have EQ muted, this will not. If you prefer you can play the sounds in the Everquest \"sounds\" directory by using something like /beep sounds/ filename","title":"/beep"},{"location":"reference/commands/beep/#beep","text":"","title":"/beep"},{"location":"reference/commands/beep/#syntax","text":"/beep [ filename ]","title":"Syntax"},{"location":"reference/commands/beep/#description","text":"Invokes a system beep (beep from the built-in PC speaker). Adding filename will play a .wav file located in your Everquest directory. This function uses the In-game sound so while a normal /beep will sound if you have EQ muted, this will not. If you prefer you can play the sounds in the Everquest \"sounds\" directory by using something like /beep sounds/ filename","title":"Description"},{"location":"reference/commands/beepontells/","tags":["command"],"text":"/beepontells \u00b6 Syntax \u00b6 /beepontells Description \u00b6 Is a toggle, can be set in MacroQuest.ini BeepOnTells=1 in the [MacroQuest] section. well... thats what it does, u get a tell... it beeps..","title":"/beepontells"},{"location":"reference/commands/beepontells/#beepontells","text":"","title":"/beepontells"},{"location":"reference/commands/beepontells/#syntax","text":"/beepontells","title":"Syntax"},{"location":"reference/commands/beepontells/#description","text":"Is a toggle, can be set in MacroQuest.ini BeepOnTells=1 in the [MacroQuest] section. well... thats what it does, u get a tell... it beeps..","title":"Description"},{"location":"reference/commands/bind/","tags":["command"],"text":"/bind \u00b6 Syntax \u00b6 /bind [list | eqlist] | ~ name [ keycombo | clear] Description \u00b6 Bind a key combination to a specific key. /bind list Lists all MQ2 binds /bind eqlist Lists all EverQuest binds /bind name keycombo Binds name to the normal key combination keycombo /bind ~name keycombo Binds name to the alternate key combination keycombo /bind name clear Clears the key combination from name /bind ~name clear Clears the alternate key combination from name Note: keycombo can be any combination of \"alt\", \"shift\" and \"ctrl\" plus a key. Examples \u00b6 /bind forward e Binds the forward command to key e /bind ~forward up Binds the forward command to alternate key uparrow /bind forward clear Clears the key used for the forward command Note: Changing EQ binds will not immediately update the display in the options window. Change the bind list selection in the options window to see the updated keys.","title":"/bind"},{"location":"reference/commands/bind/#bind","text":"","title":"/bind"},{"location":"reference/commands/bind/#syntax","text":"/bind [list | eqlist] | ~ name [ keycombo | clear]","title":"Syntax"},{"location":"reference/commands/bind/#description","text":"Bind a key combination to a specific key. /bind list Lists all MQ2 binds /bind eqlist Lists all EverQuest binds /bind name keycombo Binds name to the normal key combination keycombo /bind ~name keycombo Binds name to the alternate key combination keycombo /bind name clear Clears the key combination from name /bind ~name clear Clears the alternate key combination from name Note: keycombo can be any combination of \"alt\", \"shift\" and \"ctrl\" plus a key.","title":"Description"},{"location":"reference/commands/bind/#examples","text":"/bind forward e Binds the forward command to key e /bind ~forward up Binds the forward command to alternate key uparrow /bind forward clear Clears the key used for the forward command Note: Changing EQ binds will not immediately update the display in the options window. Change the bind list selection in the options window to see the updated keys.","title":"Examples"},{"location":"reference/commands/break/","tags":["command"],"text":"/break \u00b6 Syntax \u00b6 /break Description \u00b6 End a /for or /while loop immediately. Example \u00b6 /for varname 1 to 5 /if ({$varname} == 3) /break /echo ${varname} /next varname Will output: 1 2","title":"/break"},{"location":"reference/commands/break/#break","text":"","title":"/break"},{"location":"reference/commands/break/#syntax","text":"/break","title":"Syntax"},{"location":"reference/commands/break/#description","text":"End a /for or /while loop immediately.","title":"Description"},{"location":"reference/commands/break/#example","text":"/for varname 1 to 5 /if ({$varname} == 3) /break /echo ${varname} /next varname Will output: 1 2","title":"Example"},{"location":"reference/commands/call/","tags":["command"],"text":"/call \u00b6 Syntax \u00b6 /call subroutine [Param0... Param\\# ] Description \u00b6 Calls subroutine (defined later in the macro by \"Sub subroutine \"). ( See Subroutines for detailed information ) Examples \u00b6 **** /call MySub Executes the MySub subroutine /call MySub var1 var2 var3 Executes the MySub and passes it parameters var1, var, var3 /call MySub ${var1} ${var2} Executes the MySub subroutine and passes it variables var1, var2 as parameters","title":"/call"},{"location":"reference/commands/call/#call","text":"","title":"/call"},{"location":"reference/commands/call/#syntax","text":"/call subroutine [Param0... Param\\# ]","title":"Syntax"},{"location":"reference/commands/call/#description","text":"Calls subroutine (defined later in the macro by \"Sub subroutine \"). ( See Subroutines for detailed information )","title":"Description"},{"location":"reference/commands/call/#examples","text":"**** /call MySub Executes the MySub subroutine /call MySub var1 var2 var3 Executes the MySub and passes it parameters var1, var, var3 /call MySub ${var1} ${var2} Executes the MySub subroutine and passes it variables var1, var2 as parameters","title":"Examples"},{"location":"reference/commands/caption/","tags":["command"],"text":"/caption \u00b6 Syntax \u00b6 /caption list | type value | update # | MQCaptions [ on | off ] Description \u00b6 Sets the custom captions from in-game. Using this command will also change the ini settings for the particular level. EQ itself constantly updates the name of every spawn in the zone, even though only a small portion of those are displayed. Using /caption allows you to modify how many spawn captions updated. The default setting for /caption update is 35. Player1 through Player4 in MacroQuest.ini are directly related to which /shownames level you use. Player1 is linked to /shownames 1 Player2 is linked to /shownames 2 Player3 is linked to /shownames 3 Player4 is linked to /shownames 4 Examples \u00b6 Player1=${If[${NamingSpawn.Trader},Trader,]}${If[${NamingSpawn.Invis},(${NamingSpawn.DisplayName}) Use \"\\n\" to add a new line when setting captions To use the default (EQ settings) clear the specific setting(Player1-Player4) in the ini using: /caption Player1 You can also configure Player1 - Player4 from the EQ client using: /caption Player# configsettings *Sets the number of nearest spawns for MQ2 to update the name of each pass to 20. By default, this is 35. *: /caption update 20 *When using MQCaption if no parameter is given, the default parameter is off Look at the Macroquest.ini file in the zip file under [Captions] for examples of configuring Player1-Player4.","title":"/caption"},{"location":"reference/commands/caption/#caption","text":"","title":"/caption"},{"location":"reference/commands/caption/#syntax","text":"/caption list | type value | update # | MQCaptions [ on | off ]","title":"Syntax"},{"location":"reference/commands/caption/#description","text":"Sets the custom captions from in-game. Using this command will also change the ini settings for the particular level. EQ itself constantly updates the name of every spawn in the zone, even though only a small portion of those are displayed. Using /caption allows you to modify how many spawn captions updated. The default setting for /caption update is 35. Player1 through Player4 in MacroQuest.ini are directly related to which /shownames level you use. Player1 is linked to /shownames 1 Player2 is linked to /shownames 2 Player3 is linked to /shownames 3 Player4 is linked to /shownames 4","title":"Description"},{"location":"reference/commands/caption/#examples","text":"Player1=${If[${NamingSpawn.Trader},Trader,]}${If[${NamingSpawn.Invis},(${NamingSpawn.DisplayName}) Use \"\\n\" to add a new line when setting captions To use the default (EQ settings) clear the specific setting(Player1-Player4) in the ini using: /caption Player1 You can also configure Player1 - Player4 from the EQ client using: /caption Player# configsettings *Sets the number of nearest spawns for MQ2 to update the name of each pass to 20. By default, this is 35. *: /caption update 20 *When using MQCaption if no parameter is given, the default parameter is off Look at the Macroquest.ini file in the zip file under [Captions] for examples of configuring Player1-Player4.","title":"Examples"},{"location":"reference/commands/captioncolor/","tags":["command"],"text":"/captioncolor \u00b6 Syntax \u00b6 /captioncolor [list |\"name'' off \\| on \\| \\# \\# \\# ] Description \u00b6 Allows you to change the color of the captions that appear above the heads of PCs and NPCs, based on various factors. Note: raid class colors can only be set through the raid options window. Settings \u00b6 Below are the default settings for each of the possible Caption Colors: Color Type Default Setting Description PC OFF Default color for PCs PCCon OFF Color PCs by con color PCPVPTeam OFF Color PCs by PVP Team color PCRaid OFF Default color for all raid members PCClass OFF Color PCs by class (raid settings) PCGroup OFF Default color for group members PCTrader ON Default color for PC traders: 255 127 0 NPC OFF Default color for all NPCs NPCCon ON Color NPCs by con color NPCClass OFF Color NPCs by class (raid settings) NPCMerchant ON Default color for NPC merchants: 255 127 0 NPCBanker ON Default color for NPC banker: 200 0 255 NPCAssist ON Default color for the main assist NPC: 255 255 0 NPCMark ON Default color for marked NPCs: 255 255 0 PetNPC OFF Default color for all pets with NPC owners PetPC OFF Default color for all pets with PC owners PetClass OFF Color pets by class Corpse OFF Default color for corpses CorpseClass OFF Color corpses by class Examples \u00b6 /captioncolor list /captioncolor pcclass on /captioncolor pctrader on /captioncolor pctrader 255 128 0","title":"/captioncolor"},{"location":"reference/commands/captioncolor/#captioncolor","text":"","title":"/captioncolor"},{"location":"reference/commands/captioncolor/#syntax","text":"/captioncolor [list |\"name'' off \\| on \\| \\# \\# \\# ]","title":"Syntax"},{"location":"reference/commands/captioncolor/#description","text":"Allows you to change the color of the captions that appear above the heads of PCs and NPCs, based on various factors. Note: raid class colors can only be set through the raid options window.","title":"Description"},{"location":"reference/commands/captioncolor/#settings","text":"Below are the default settings for each of the possible Caption Colors: Color Type Default Setting Description PC OFF Default color for PCs PCCon OFF Color PCs by con color PCPVPTeam OFF Color PCs by PVP Team color PCRaid OFF Default color for all raid members PCClass OFF Color PCs by class (raid settings) PCGroup OFF Default color for group members PCTrader ON Default color for PC traders: 255 127 0 NPC OFF Default color for all NPCs NPCCon ON Color NPCs by con color NPCClass OFF Color NPCs by class (raid settings) NPCMerchant ON Default color for NPC merchants: 255 127 0 NPCBanker ON Default color for NPC banker: 200 0 255 NPCAssist ON Default color for the main assist NPC: 255 255 0 NPCMark ON Default color for marked NPCs: 255 255 0 PetNPC OFF Default color for all pets with NPC owners PetPC OFF Default color for all pets with PC owners PetClass OFF Color pets by class Corpse OFF Default color for corpses CorpseClass OFF Color corpses by class","title":"Settings"},{"location":"reference/commands/captioncolor/#examples","text":"/captioncolor list /captioncolor pcclass on /captioncolor pctrader on /captioncolor pctrader 255 128 0","title":"Examples"},{"location":"reference/commands/cast/","tags":["command"],"text":"/cast \u00b6 Syntax \u00b6 /cast [ spellname | # | item itemname | list ] Description \u00b6 Will cast the specified spellname or spell gem, or perform a right-click of an item that has a right click spell. While /cast does emulate a right-click, it cannot be used to open containers Examples \u00b6 /cast \"Complete Healing\" /cast 1 /cast item \"mana robe\" /cast list","title":"/cast"},{"location":"reference/commands/cast/#cast","text":"","title":"/cast"},{"location":"reference/commands/cast/#syntax","text":"/cast [ spellname | # | item itemname | list ]","title":"Syntax"},{"location":"reference/commands/cast/#description","text":"Will cast the specified spellname or spell gem, or perform a right-click of an item that has a right click spell. While /cast does emulate a right-click, it cannot be used to open containers","title":"Description"},{"location":"reference/commands/cast/#examples","text":"/cast \"Complete Healing\" /cast 1 /cast item \"mana robe\" /cast list","title":"Examples"},{"location":"reference/commands/cecho/","tags":["command"],"text":"/cecho \u00b6 Syntax \u00b6 /cecho text Description \u00b6 Echoes the provided text verbatim. Escape codes are not supported.","title":"/cecho"},{"location":"reference/commands/cecho/#cecho","text":"","title":"/cecho"},{"location":"reference/commands/cecho/#syntax","text":"/cecho text","title":"Syntax"},{"location":"reference/commands/cecho/#description","text":"Echoes the provided text verbatim. Escape codes are not supported.","title":"Description"},{"location":"reference/commands/charinfo/","tags":["command"],"text":"/charinfo \u00b6 Syntax \u00b6 /charinfo Description \u00b6 Returns your current bind zone and location. Note: This is a normal EverQuest command that is detoured by MacroQuest2 to display additional information. Examples \u00b6 The EverQuest /charinfo will return your bind zone and [secondary bind or Origin location] in the main chat window. You are currently bound in: The Bazaar, The Field of Bone Inconsistency \u00b6 SOE uses the Y, X, Z convention for their location data instead of X, Y, Z used by MQ2. If you would like the bind data to display correctly (in SOE terms) you may perform the modification to MQ2Commands.cpp found here: /charinfo thread","title":"/charinfo"},{"location":"reference/commands/charinfo/#charinfo","text":"","title":"/charinfo"},{"location":"reference/commands/charinfo/#syntax","text":"/charinfo","title":"Syntax"},{"location":"reference/commands/charinfo/#description","text":"Returns your current bind zone and location. Note: This is a normal EverQuest command that is detoured by MacroQuest2 to display additional information.","title":"Description"},{"location":"reference/commands/charinfo/#examples","text":"The EverQuest /charinfo will return your bind zone and [secondary bind or Origin location] in the main chat window. You are currently bound in: The Bazaar, The Field of Bone","title":"Examples"},{"location":"reference/commands/charinfo/#inconsistency","text":"SOE uses the Y, X, Z convention for their location data instead of X, Y, Z used by MQ2. If you would like the bind data to display correctly (in SOE terms) you may perform the modification to MQ2Commands.cpp found here: /charinfo thread","title":"Inconsistency"},{"location":"reference/commands/cleanup/","tags":["command"],"text":"/cleanup \u00b6 Syntax \u00b6 /cleanup Description \u00b6 Closes all open windows and then opens inventory window.","title":"/cleanup"},{"location":"reference/commands/cleanup/#cleanup","text":"","title":"/cleanup"},{"location":"reference/commands/cleanup/#syntax","text":"/cleanup","title":"Syntax"},{"location":"reference/commands/cleanup/#description","text":"Closes all open windows and then opens inventory window.","title":"Description"},{"location":"reference/commands/clearerrors/","tags":["command"],"text":"/clearerrors \u00b6 Syntax \u00b6 /clearerrors Description \u00b6 Clears each of the last errors in the macroquest type: ${MacroQuest.Error} ${MacroQuest.MQ2DataError} ${MacroQuest.SyntaxError}","title":"/clearerrors"},{"location":"reference/commands/clearerrors/#clearerrors","text":"","title":"/clearerrors"},{"location":"reference/commands/clearerrors/#syntax","text":"/clearerrors","title":"Syntax"},{"location":"reference/commands/clearerrors/#description","text":"Clears each of the last errors in the macroquest type: ${MacroQuest.Error} ${MacroQuest.MQ2DataError} ${MacroQuest.SyntaxError}","title":"Description"},{"location":"reference/commands/click/","tags":["command"],"text":"/click \u00b6 Syntax \u00b6 /click [ left | right ] [ center | target | switch ] Description \u00b6 Clicks the left or right mouse button at your target or the location specified. Examples \u00b6 Example Description /click left Performs a left mouse click at the current mouse position /click right target Right-clicks your target /shiftkey /click right target Loot everything on a targeted corpse /click left switch If you have a /doortarget will left click it","title":"/click"},{"location":"reference/commands/click/#click","text":"","title":"/click"},{"location":"reference/commands/click/#syntax","text":"/click [ left | right ] [ center | target | switch ]","title":"Syntax"},{"location":"reference/commands/click/#description","text":"Clicks the left or right mouse button at your target or the location specified.","title":"Description"},{"location":"reference/commands/click/#examples","text":"Example Description /click left Performs a left mouse click at the current mouse position /click right target Right-clicks your target /shiftkey /click right target Loot everything on a targeted corpse /click left switch If you have a /doortarget will left click it","title":"Examples"},{"location":"reference/commands/combine/","tags":["command"],"text":"/combine \u00b6 Syntax \u00b6 /combine pack# Description \u00b6 Activates the Combine button of pack# Examples \u00b6 /combine pack8","title":"/combine"},{"location":"reference/commands/combine/#combine","text":"","title":"/combine"},{"location":"reference/commands/combine/#syntax","text":"/combine pack#","title":"Syntax"},{"location":"reference/commands/combine/#description","text":"Activates the Combine button of pack#","title":"Description"},{"location":"reference/commands/combine/#examples","text":"/combine pack8","title":"Examples"},{"location":"reference/commands/continue/","tags":["command"],"text":"/continue \u00b6 Syntax \u00b6 /continue Description \u00b6 When in a /for or /while loop try the next iteration. Example \u00b6 /for varname 1 to 5 /if ({$varname} == 3) /continue /echo ${varname} /next varname /declare varname int 0 /while (${varname} < 5) { /varcalc varname ${varname}+1 /if ({$varname} == 3) /continue /echo ${varname} } Each loop will output: 1 2 4 5","title":"/continue"},{"location":"reference/commands/continue/#continue","text":"","title":"/continue"},{"location":"reference/commands/continue/#syntax","text":"/continue","title":"Syntax"},{"location":"reference/commands/continue/#description","text":"When in a /for or /while loop try the next iteration.","title":"Description"},{"location":"reference/commands/continue/#example","text":"/for varname 1 to 5 /if ({$varname} == 3) /continue /echo ${varname} /next varname /declare varname int 0 /while (${varname} < 5) { /varcalc varname ${varname}+1 /if ({$varname} == 3) /continue /echo ${varname} } Each loop will output: 1 2 4 5","title":"Example"},{"location":"reference/commands/ctrlkey/","tags":["command"],"text":"/ctrlkey \u00b6 Syntax \u00b6 /ctrlkey command Description \u00b6 Execute command while telling the window manager that the ctrl key is pressed. Can also be used together with /altkey , /shiftkey , or both in this format: /ctrlkey /altkey /shiftkey /command Examples \u00b6 /ctrlkey /itemnotify pack1 leftmouseup","title":"/ctrlkey"},{"location":"reference/commands/ctrlkey/#ctrlkey","text":"","title":"/ctrlkey"},{"location":"reference/commands/ctrlkey/#syntax","text":"/ctrlkey command","title":"Syntax"},{"location":"reference/commands/ctrlkey/#description","text":"Execute command while telling the window manager that the ctrl key is pressed. Can also be used together with /altkey , /shiftkey , or both in this format: /ctrlkey /altkey /shiftkey /command","title":"Description"},{"location":"reference/commands/ctrlkey/#examples","text":"/ctrlkey /itemnotify pack1 leftmouseup","title":"Examples"},{"location":"reference/commands/declare/","tags":["command"],"text":"/declare \u00b6 Syntax \u00b6 /declare varname | varname[array extents] type local\\|global\\|outer [ defaultvalue ] Description \u00b6 This creates a variable or array of a particular type with a particular scope, and a default value if desired. The parameters must be given in order, but any after varname may be skipped to use the defaults. Notes The default type is string The default scope is local The default value is nothing (empty string, or 0) These variables can be of any type that exist in MQ2DataVars. The variable will then have access to the members of that type.","title":"/declare"},{"location":"reference/commands/declare/#declare","text":"","title":"/declare"},{"location":"reference/commands/declare/#syntax","text":"/declare varname | varname[array extents] type local\\|global\\|outer [ defaultvalue ]","title":"Syntax"},{"location":"reference/commands/declare/#description","text":"This creates a variable or array of a particular type with a particular scope, and a default value if desired. The parameters must be given in order, but any after varname may be skipped to use the defaults. Notes The default type is string The default scope is local The default value is nothing (empty string, or 0) These variables can be of any type that exist in MQ2DataVars. The variable will then have access to the members of that type.","title":"Description"},{"location":"reference/commands/delay/","tags":["command"],"text":"/delay \u00b6 Syntax \u00b6 /delay #[s|m] [ condition ] Description \u00b6 Fully pauses the macro for the amount of time specified, or until condition is met. Time can be specified in 10ths of a second (a number by itself) or in seconds \\(number followed by an \"s\"\\) or minutes (number followed by \"m\"). Examples \u00b6 Simple examples: /delay 7 Delays the macro for 7 tenths of a second /delay 2s Delays the macro for 2 seconds /delay 3m Delays the macro for 3 minutes Example using MQ2Data: /delay ${Math.Rand[10]}s Delays the macro for a random amount of seconds in the range of 0 to 10 /delay ${Math.Calc[${Math.Rand[10]}+5]}s Delays the macro for a random amount of seconds in the range of 5 to 15 The below example will hold down the forward key and will execute \"/keypress forward\" (press forward once) when ${Spawn[1234].Distance} \\< ${Spawn[1234].MaxMeleeTo} evaluates to TRUE or after 1 second passes. /keypress forward hold /delay 1s ${Spawn[1234].Distance}<${Spawn[1234].MaxMeleeTo} /keypress forward","title":"/delay"},{"location":"reference/commands/delay/#delay","text":"","title":"/delay"},{"location":"reference/commands/delay/#syntax","text":"/delay #[s|m] [ condition ]","title":"Syntax"},{"location":"reference/commands/delay/#description","text":"Fully pauses the macro for the amount of time specified, or until condition is met. Time can be specified in 10ths of a second (a number by itself) or in seconds \\(number followed by an \"s\"\\) or minutes (number followed by \"m\").","title":"Description"},{"location":"reference/commands/delay/#examples","text":"Simple examples: /delay 7 Delays the macro for 7 tenths of a second /delay 2s Delays the macro for 2 seconds /delay 3m Delays the macro for 3 minutes Example using MQ2Data: /delay ${Math.Rand[10]}s Delays the macro for a random amount of seconds in the range of 0 to 10 /delay ${Math.Calc[${Math.Rand[10]}+5]}s Delays the macro for a random amount of seconds in the range of 5 to 15 The below example will hold down the forward key and will execute \"/keypress forward\" (press forward once) when ${Spawn[1234].Distance} \\< ${Spawn[1234].MaxMeleeTo} evaluates to TRUE or after 1 second passes. /keypress forward hold /delay 1s ${Spawn[1234].Distance}<${Spawn[1234].MaxMeleeTo} /keypress forward","title":"Examples"},{"location":"reference/commands/deletevar/","tags":["command"],"text":"/deletevar \u00b6 Syntax \u00b6 /deletevar varname [*|global] Description \u00b6 Deletes the variable varname. Using * global will delete all global variables.","title":"/deletevar"},{"location":"reference/commands/deletevar/#deletevar","text":"","title":"/deletevar"},{"location":"reference/commands/deletevar/#syntax","text":"/deletevar varname [*|global]","title":"Syntax"},{"location":"reference/commands/deletevar/#description","text":"Deletes the variable varname. Using * global will delete all global variables.","title":"Description"},{"location":"reference/commands/destroy/","tags":["command"],"text":"/destroy \u00b6 Syntax \u00b6 /destroy Description \u00b6 Destroys whatever you have on your cursor with no confirmation, even if you have \"Destroy Confirmation\" enabled in your EQ options . Use with care. Examples \u00b6 /if ( ${Cursor.Name.Find[rusty]} ) /destroy","title":"/destroy"},{"location":"reference/commands/destroy/#destroy","text":"","title":"/destroy"},{"location":"reference/commands/destroy/#syntax","text":"/destroy","title":"Syntax"},{"location":"reference/commands/destroy/#description","text":"Destroys whatever you have on your cursor with no confirmation, even if you have \"Destroy Confirmation\" enabled in your EQ options . Use with care.","title":"Description"},{"location":"reference/commands/destroy/#examples","text":"/if ( ${Cursor.Name.Find[rusty]} ) /destroy","title":"Examples"},{"location":"reference/commands/docommand/","tags":["command"],"text":"/docommand \u00b6 Syntax \u00b6 /docommand command Description \u00b6 Executes command , parsing MQ2Data first. This is useful for executing commands using MQ2Data that do not parse immediately, as well as executing a command stored in a variable. Examples \u00b6 A simple example that echoes \"sitting\" if sitting, and \"not sitting\" if not /docommand ${If[${Me.Sitting},/echo sitting,/echo not sitting]} A simple example that activates AA 177 if you have a target, and echoes \"no target\" if not. /docommand ${If[${Target.ID},/alt activate 177,/echo No Target]}","title":"/docommand"},{"location":"reference/commands/docommand/#docommand","text":"","title":"/docommand"},{"location":"reference/commands/docommand/#syntax","text":"/docommand command","title":"Syntax"},{"location":"reference/commands/docommand/#description","text":"Executes command , parsing MQ2Data first. This is useful for executing commands using MQ2Data that do not parse immediately, as well as executing a command stored in a variable.","title":"Description"},{"location":"reference/commands/docommand/#examples","text":"A simple example that echoes \"sitting\" if sitting, and \"not sitting\" if not /docommand ${If[${Me.Sitting},/echo sitting,/echo not sitting]} A simple example that activates AA 177 if you have a target, and echoes \"no target\" if not. /docommand ${If[${Target.ID},/alt activate 177,/echo No Target]}","title":"Examples"},{"location":"reference/commands/doevents/","tags":["command"],"text":"/doevents \u00b6 Syntax \u00b6 /doevents [ flush ] [ specificevent ] Description \u00b6 Runs the first event of any type in the queue, flushes all queued events, or runs/flushes just the specificevent event. Examples \u00b6 /doevents This will run all queued events /doevents chat This will run only the chat event(s) /doevents flush Clears all events in the queue without running them /doevents SpellFizzle Run SpellFizzle event(s) /doevents flush SpellFizzle Clears SpellFizzle events in the queue","title":"/doevents"},{"location":"reference/commands/doevents/#doevents","text":"","title":"/doevents"},{"location":"reference/commands/doevents/#syntax","text":"/doevents [ flush ] [ specificevent ]","title":"Syntax"},{"location":"reference/commands/doevents/#description","text":"Runs the first event of any type in the queue, flushes all queued events, or runs/flushes just the specificevent event.","title":"Description"},{"location":"reference/commands/doevents/#examples","text":"/doevents This will run all queued events /doevents chat This will run only the chat event(s) /doevents flush Clears all events in the queue without running them /doevents SpellFizzle Run SpellFizzle event(s) /doevents flush SpellFizzle Clears SpellFizzle events in the queue","title":"Examples"},{"location":"reference/commands/doors/","tags":["command"],"text":"/doors \u00b6 Syntax \u00b6 /doors [ \"filter\" ] Description \u00b6 Lists all doors in the zone, or those that match filter .","title":"/doors"},{"location":"reference/commands/doors/#doors","text":"","title":"/doors"},{"location":"reference/commands/doors/#syntax","text":"/doors [ \"filter\" ]","title":"Syntax"},{"location":"reference/commands/doors/#description","text":"Lists all doors in the zone, or those that match filter .","title":"Description"},{"location":"reference/commands/doortarget/","tags":["command"],"text":"/doortarget \u00b6 Syntax \u00b6 /doortarget [id # | filter] Description \u00b6 \"Targets\" a door or Switch for further manipulation (eg. /face door). The targeting of doors, switches will not show up in the target window. This is because the EQ servers started monitoring for targeting that is not possible through the normal client, however current MQ will show indication of your /doortarget Examples \u00b6 Example Description /doortarget Will target closest door/switch /doortarget id 27 If you are in PoK will target the portal stone to Rathemtn","title":"/doortarget"},{"location":"reference/commands/doortarget/#doortarget","text":"","title":"/doortarget"},{"location":"reference/commands/doortarget/#syntax","text":"/doortarget [id # | filter]","title":"Syntax"},{"location":"reference/commands/doortarget/#description","text":"\"Targets\" a door or Switch for further manipulation (eg. /face door). The targeting of doors, switches will not show up in the target window. This is because the EQ servers started monitoring for targeting that is not possible through the normal client, however current MQ will show indication of your /doortarget","title":"Description"},{"location":"reference/commands/doortarget/#examples","text":"Example Description /doortarget Will target closest door/switch /doortarget id 27 If you are in PoK will target the portal stone to Rathemtn","title":"Examples"},{"location":"reference/commands/dosocial/","tags":["command"],"text":"/dosocial \u00b6 Syntax \u00b6 /dosocial [list | \"social name\"] Description \u00b6 This command allows you to list all your current socials, by name and number, or activate them by name. It is useful in that you could activate a social by name as long as it is in your social window without having to change hotbar pages, or call a social by name from a macro. Examples \u00b6 list parameter \u00b6 /dosocial list output for a newly-created character Socials: (page,number) name (1, 1) Afk 1:/afk (1, 2) Anon 1:/anon (1, 3) Split 1: /autosplit (1, 4) Bug 1: /bug ...and so on /dosocial list for custom multi-line socials same stuff as above example (2, 7) MyMacro 1: /macro MyMacro 2: /echo I have activated MyMacro.mac via a social button calling a social by name \u00b6 /dosocial \"MyMacro\" Typing the command in this way would execute Line 1 and 2 of the above example MyMacro social button.","title":"/dosocial"},{"location":"reference/commands/dosocial/#dosocial","text":"","title":"/dosocial"},{"location":"reference/commands/dosocial/#syntax","text":"/dosocial [list | \"social name\"]","title":"Syntax"},{"location":"reference/commands/dosocial/#description","text":"This command allows you to list all your current socials, by name and number, or activate them by name. It is useful in that you could activate a social by name as long as it is in your social window without having to change hotbar pages, or call a social by name from a macro.","title":"Description"},{"location":"reference/commands/dosocial/#examples","text":"","title":"Examples"},{"location":"reference/commands/dosocial/#list-parameter","text":"/dosocial list output for a newly-created character Socials: (page,number) name (1, 1) Afk 1:/afk (1, 2) Anon 1:/anon (1, 3) Split 1: /autosplit (1, 4) Bug 1: /bug ...and so on /dosocial list for custom multi-line socials same stuff as above example (2, 7) MyMacro 1: /macro MyMacro 2: /echo I have activated MyMacro.mac via a social button","title":"list parameter"},{"location":"reference/commands/dosocial/#calling-a-social-by-name","text":"/dosocial \"MyMacro\" Typing the command in this way would execute Line 1 and 2 of the above example MyMacro social button.","title":"calling a social by name"},{"location":"reference/commands/drop/","tags":["command"],"text":"/drop \u00b6 Syntax \u00b6 /drop Description \u00b6 Drops the item currently on the cursor.","title":"/drop"},{"location":"reference/commands/drop/#drop","text":"","title":"/drop"},{"location":"reference/commands/drop/#syntax","text":"/drop","title":"Syntax"},{"location":"reference/commands/drop/#description","text":"Drops the item currently on the cursor.","title":"Description"},{"location":"reference/commands/dumpbinds/","tags":["command"],"text":"/dumpbinds \u00b6 Syntax \u00b6 /dumpbinds name Description \u00b6 Dumps all current binds to Configs_name_.cfg","title":"/dumpbinds"},{"location":"reference/commands/dumpbinds/#dumpbinds","text":"","title":"/dumpbinds"},{"location":"reference/commands/dumpbinds/#syntax","text":"/dumpbinds name","title":"Syntax"},{"location":"reference/commands/dumpbinds/#description","text":"Dumps all current binds to Configs_name_.cfg","title":"Description"},{"location":"reference/commands/echo/","tags":["command"],"text":"/echo \u00b6 Syntax \u00b6 /echo text Description \u00b6 Echoes the specified text (or variables) to the MQ Console window. Examples \u00b6 Colorized usage /echo \\amThis is a \\attest\\ax \\n\\agAll done, let's show a backslash: \\ar\\\\ [MQ2] '''This is a test All done, let's show a red backslash: \\''' Default usage /echo My current health percent is ${Me.PctHPs} [MQ2] My current health percent is 100 Color Codes \u00b6 \\ab = black \\a-b = black (dark) \\ag = green \\a-g = green (dark) \\am = magenta \\a-m = magenta (dark) \\ao = orange \\a-o = orange (dark) \\ap = purple \\a-p = purple (dark) \\ar = red \\a-r = red (dark) \\at = cyan \\a-t = cyan (dark) \\au = blue \\a-u = blue (dark) \\aw = white \\a-w = white (dark) \\ay = yellow \\a-y = yellow (dark) \\ax = previous color (if no previous \\a? this would be the default mq2 color) Special Codes \u00b6 \\n = newline \\d = down? same as newline (LamahHerder knows not why)","title":"/echo"},{"location":"reference/commands/echo/#echo","text":"","title":"/echo"},{"location":"reference/commands/echo/#syntax","text":"/echo text","title":"Syntax"},{"location":"reference/commands/echo/#description","text":"Echoes the specified text (or variables) to the MQ Console window.","title":"Description"},{"location":"reference/commands/echo/#examples","text":"Colorized usage /echo \\amThis is a \\attest\\ax \\n\\agAll done, let's show a backslash: \\ar\\\\ [MQ2] '''This is a test All done, let's show a red backslash: \\''' Default usage /echo My current health percent is ${Me.PctHPs} [MQ2] My current health percent is 100","title":"Examples"},{"location":"reference/commands/echo/#color-codes","text":"\\ab = black \\a-b = black (dark) \\ag = green \\a-g = green (dark) \\am = magenta \\a-m = magenta (dark) \\ao = orange \\a-o = orange (dark) \\ap = purple \\a-p = purple (dark) \\ar = red \\a-r = red (dark) \\at = cyan \\a-t = cyan (dark) \\au = blue \\a-u = blue (dark) \\aw = white \\a-w = white (dark) \\ay = yellow \\a-y = yellow (dark) \\ax = previous color (if no previous \\a? this would be the default mq2 color)","title":"Color Codes"},{"location":"reference/commands/echo/#special-codes","text":"\\n = newline \\d = down? same as newline (LamahHerder knows not why)","title":"Special Codes"},{"location":"reference/commands/endmacro/","tags":["command"],"text":"/endmacro \u00b6 Syntax \u00b6 /endmacro Description \u00b6 Stops the current macro.","title":"/endmacro"},{"location":"reference/commands/endmacro/#endmacro","text":"","title":"/endmacro"},{"location":"reference/commands/endmacro/#syntax","text":"/endmacro","title":"Syntax"},{"location":"reference/commands/endmacro/#description","text":"Stops the current macro.","title":"Description"},{"location":"reference/commands/eqtarget/","tags":["command"],"text":"/eqtarget \u00b6 This command gives you access to the normal eq target without any of the MQ overloads. (It will function identically to how /target worked prior to loading MQ).","title":"/eqtarget"},{"location":"reference/commands/eqtarget/#eqtarget","text":"This command gives you access to the normal eq target without any of the MQ overloads. (It will function identically to how /target worked prior to loading MQ).","title":"/eqtarget"},{"location":"reference/commands/exec/","tags":["command"],"text":"/exec \u00b6 Syntax \u00b6 /exec command [\"parameters\" | bg] [bg] Description \u00b6 Executes the specified command as if from the command line. If parameters are passed in, it will execute those parameters. If \"bg\" is passed as either the second or third parameter, it will execute the program in the background, otherwise it executes in the foreground. The Application Paths section in the MacroQuest.ini file allows you to specify aliases for applications, but it's not necessary for usage. Ini Example \u00b6 MacroQuest.ini [Application Paths] vscode = \"C:\\Users\\YourName\\AppData\\Local\\Programs\\Microsoft VS Code\\bin\\code.cmd\" Examples \u00b6 Shutdown the computer: /exec shutdown /s Force shutdown the computer: /exec shutdown \"/s /f\" Open Notepad in the background: /exec notepad bg Open your MacroQuest.ini file in Visual Studio Code when using the above ini: /exec vscode \"${MacroQuest.Path[mqini]}\" Or the same thing if vscode is just in your path, with no ini: /exec code \"${MacroQuest.Path[mqini]}\"","title":"/exec"},{"location":"reference/commands/exec/#exec","text":"","title":"/exec"},{"location":"reference/commands/exec/#syntax","text":"/exec command [\"parameters\" | bg] [bg]","title":"Syntax"},{"location":"reference/commands/exec/#description","text":"Executes the specified command as if from the command line. If parameters are passed in, it will execute those parameters. If \"bg\" is passed as either the second or third parameter, it will execute the program in the background, otherwise it executes in the foreground. The Application Paths section in the MacroQuest.ini file allows you to specify aliases for applications, but it's not necessary for usage.","title":"Description"},{"location":"reference/commands/exec/#ini-example","text":"MacroQuest.ini [Application Paths] vscode = \"C:\\Users\\YourName\\AppData\\Local\\Programs\\Microsoft VS Code\\bin\\code.cmd\"","title":"Ini Example"},{"location":"reference/commands/exec/#examples","text":"Shutdown the computer: /exec shutdown /s Force shutdown the computer: /exec shutdown \"/s /f\" Open Notepad in the background: /exec notepad bg Open your MacroQuest.ini file in Visual Studio Code when using the above ini: /exec vscode \"${MacroQuest.Path[mqini]}\" Or the same thing if vscode is just in your path, with no ini: /exec code \"${MacroQuest.Path[mqini]}\"","title":"Examples"},{"location":"reference/commands/face/","tags":["command"],"text":"/face \u00b6 Syntax \u00b6 /face [predict] fast nolook away [ alert # | loc y,x,z | heading angle | item | door | id # | name ] Description \u00b6 Turns your character to face a target, door, item or location at comparable speeds to pressing the left, right, lookup, and lookdown keys. Some of the options are listed below. Option Description predict Returns an estimated distance/location, unless the target is stationary fast Faces you instantly nolook Faces your target without changing your vertical viewing angle (looking up/date at the target) away Turn you in the opposite direction of your target name Considered a Spawn Search Info Using /face without a target will do nothing. | Examples \u00b6 Example Description /face Turns you to face and look at your selected target /face nolook Faces your target without changing your vertical view angle /face fast Immediately turns your character to face and look at your target /face fast predict Immediately turns your character to face and look at your target's estimated position /face fast nolook Immediately turns your character to face your target without changing your vertical view angle /face item Faces and looks at the item following an /itemtarget /face fast item Immediately faces and looks at the item following an /itemtarget /face loc y,x,z Faces the given loc ( note : no spaces in 'y,x,z' portion)","title":"/face"},{"location":"reference/commands/face/#face","text":"","title":"/face"},{"location":"reference/commands/face/#syntax","text":"/face [predict] fast nolook away [ alert # | loc y,x,z | heading angle | item | door | id # | name ]","title":"Syntax"},{"location":"reference/commands/face/#description","text":"Turns your character to face a target, door, item or location at comparable speeds to pressing the left, right, lookup, and lookdown keys. Some of the options are listed below. Option Description predict Returns an estimated distance/location, unless the target is stationary fast Faces you instantly nolook Faces your target without changing your vertical viewing angle (looking up/date at the target) away Turn you in the opposite direction of your target name Considered a Spawn Search Info Using /face without a target will do nothing. |","title":"Description"},{"location":"reference/commands/face/#examples","text":"Example Description /face Turns you to face and look at your selected target /face nolook Faces your target without changing your vertical view angle /face fast Immediately turns your character to face and look at your target /face fast predict Immediately turns your character to face and look at your target's estimated position /face fast nolook Immediately turns your character to face your target without changing your vertical view angle /face item Faces and looks at the item following an /itemtarget /face fast item Immediately faces and looks at the item following an /itemtarget /face loc y,x,z Faces the given loc ( note : no spaces in 'y,x,z' portion)","title":"Examples"},{"location":"reference/commands/filter/","tags":["command"],"text":"/filter \u00b6 Syntax \u00b6 /filter [ macros all|enhanced|none ] skills all\\|increase\\|none target \\| money \\| food \\| encumber \\| debug** _**on**_**\\|**_**off**_ ** name \\[ add\\|remove** _**text**_ ** ] zrange \\# [ mq on | off ] ''' Description \u00b6 Filtering of names is now improved! Will filter out some common messages that can be annoying to see Command Description /filter /filter on its own will open the chat filter section of the EQ options window /filter macros all enhanced none all will filter all macro messages, except for macro end enhanced is currently not in use, and does nothing none turns the filtering off /filter Skills all/increase/none all will filter all skill related messages increase filters out skill increases only None turns the filtering off /filter target / money / food / encumber / debug on/off target filter out target lost messages money filter loot messages about money food filters hungry messages encumber filters out encumberance messages debug on/off Turns on debug filters or not /filter zrange # Related to the zrange used when using /itemtarget, this could use futher exploring and testing. /filter mq on/off Filters out any plugin or macro messages, so if you want a quiet mq2 chat window this is for you /filter name Sets up custom filters, see examples below. Filters added through this, among others the custom name filters, will not appear in the EQ log when you use the EQ command /log on|off Also be aware the more lose you make your filter the more messages will be filtered for example if you filter on A rat, when conning A rat, the con message will also be filtered. Examples \u00b6 /filter name add Joe This will add a filter that ignores all lines that start with \"Joe\" /filter name add *Joe This will add a filter that ignores all lines that have \"Joe\" anywhere in them","title":"/filter"},{"location":"reference/commands/filter/#filter","text":"","title":"/filter"},{"location":"reference/commands/filter/#syntax","text":"/filter [ macros all|enhanced|none ] skills all\\|increase\\|none target \\| money \\| food \\| encumber \\| debug** _**on**_**\\|**_**off**_ ** name \\[ add\\|remove** _**text**_ ** ] zrange \\# [ mq on | off ] '''","title":"Syntax"},{"location":"reference/commands/filter/#description","text":"Filtering of names is now improved! Will filter out some common messages that can be annoying to see Command Description /filter /filter on its own will open the chat filter section of the EQ options window /filter macros all enhanced none all will filter all macro messages, except for macro end enhanced is currently not in use, and does nothing none turns the filtering off /filter Skills all/increase/none all will filter all skill related messages increase filters out skill increases only None turns the filtering off /filter target / money / food / encumber / debug on/off target filter out target lost messages money filter loot messages about money food filters hungry messages encumber filters out encumberance messages debug on/off Turns on debug filters or not /filter zrange # Related to the zrange used when using /itemtarget, this could use futher exploring and testing. /filter mq on/off Filters out any plugin or macro messages, so if you want a quiet mq2 chat window this is for you /filter name Sets up custom filters, see examples below. Filters added through this, among others the custom name filters, will not appear in the EQ log when you use the EQ command /log on|off Also be aware the more lose you make your filter the more messages will be filtered for example if you filter on A rat, when conning A rat, the con message will also be filtered.","title":"Description"},{"location":"reference/commands/filter/#examples","text":"/filter name add Joe This will add a filter that ignores all lines that start with \"Joe\" /filter name add *Joe This will add a filter that ignores all lines that have \"Joe\" anywhere in them","title":"Examples"},{"location":"reference/commands/flashontells/","tags":["command"],"text":"/flashontells \u00b6 Syntax \u00b6 /flashontells [on|off] Description \u00b6 You can use it to turn flashing of the eq window on or off when you recieve a tell. On/Off enables or disables using just \"/flashontells\" will toggle the setting Or just set it in MacroQuest.ini to FlashOnTells=1 in the [MacroQuest] section. NOTE: You have to have tell windows enabled in options for this to work.","title":"/flashontells"},{"location":"reference/commands/flashontells/#flashontells","text":"","title":"/flashontells"},{"location":"reference/commands/flashontells/#syntax","text":"/flashontells [on|off]","title":"Syntax"},{"location":"reference/commands/flashontells/#description","text":"You can use it to turn flashing of the eq window on or off when you recieve a tell. On/Off enables or disables using just \"/flashontells\" will toggle the setting Or just set it in MacroQuest.ini to FlashOnTells=1 in the [MacroQuest] section. NOTE: You have to have tell windows enabled in options for this to work.","title":"Description"},{"location":"reference/commands/for/","tags":["command"],"text":"/for \u00b6 Syntax \u00b6 /for varname initial-value to|downto final-value [step interval ] /next varname Description \u00b6 This runs all commands between the /for line and the /next line, after which it increments/decrements the varname number (#1) by step number \\(\\#3\\) (default is 1) before running through the commands again. It will keep doing this until the varname number equals #2. You can end a /for loop immediately with /break or try the next iteration with /continue. Examples \u00b6 Simplest /declare varname int local /for varname 1 to 5 /echo ${varname} /next varname | Will output: | 1 | 2 | 3 | 4 | 5 Using /continue /declare varname int local /for varname 1 to 5 /if ({$varname} == 3) /continue /echo ${varname} /next varname | Will output: | 1 | 2 | 4 | 5 Using /break /declare varname int local /for varname 1 to 5 /if (${varname} == 3) /break /echo ${varname} /next varname | Will output: | 1 | 2 With a pre-defined ending variable /declare foo int local 5 /declare varname int local /for varname 1 ${foo} /echo ${varname} /next varname | Will output: | 1 | 2 | 3 | 4 | 5","title":"/for"},{"location":"reference/commands/for/#for","text":"","title":"/for"},{"location":"reference/commands/for/#syntax","text":"/for varname initial-value to|downto final-value [step interval ] /next varname","title":"Syntax"},{"location":"reference/commands/for/#description","text":"This runs all commands between the /for line and the /next line, after which it increments/decrements the varname number (#1) by step number \\(\\#3\\) (default is 1) before running through the commands again. It will keep doing this until the varname number equals #2. You can end a /for loop immediately with /break or try the next iteration with /continue.","title":"Description"},{"location":"reference/commands/for/#examples","text":"Simplest /declare varname int local /for varname 1 to 5 /echo ${varname} /next varname | Will output: | 1 | 2 | 3 | 4 | 5 Using /continue /declare varname int local /for varname 1 to 5 /if ({$varname} == 3) /continue /echo ${varname} /next varname | Will output: | 1 | 2 | 4 | 5 Using /break /declare varname int local /for varname 1 to 5 /if (${varname} == 3) /break /echo ${varname} /next varname | Will output: | 1 | 2 With a pre-defined ending variable /declare foo int local 5 /declare varname int local /for varname 1 ${foo} /echo ${varname} /next varname | Will output: | 1 | 2 | 3 | 4 | 5","title":"Examples"},{"location":"reference/commands/foreground/","tags":["command"],"text":"/foreground \u00b6 Syntax \u00b6 '''/foreground Description \u00b6 Puts EQ in the foreground Examples \u00b6 /bct //foreground","title":"/foreground"},{"location":"reference/commands/foreground/#foreground","text":"","title":"/foreground"},{"location":"reference/commands/foreground/#syntax","text":"'''/foreground","title":"Syntax"},{"location":"reference/commands/foreground/#description","text":"Puts EQ in the foreground","title":"Description"},{"location":"reference/commands/foreground/#examples","text":"/bct //foreground","title":"Examples"},{"location":"reference/commands/goto/","tags":["command"],"text":"/goto \u00b6 Syntax \u00b6 /goto :labelname Description \u00b6 This moves the macro execution to the location of :labelname in the macro. Example \u00b6 :MyLabel /if ( ${Me.Moving} ) /goto :MyLabel /echo I am no longer moving!","title":"/goto"},{"location":"reference/commands/goto/#goto","text":"","title":"/goto"},{"location":"reference/commands/goto/#syntax","text":"/goto :labelname","title":"Syntax"},{"location":"reference/commands/goto/#description","text":"This moves the macro execution to the location of :labelname in the macro.","title":"Description"},{"location":"reference/commands/goto/#example","text":":MyLabel /if ( ${Me.Moving} ) /goto :MyLabel /echo I am no longer moving!","title":"Example"},{"location":"reference/commands/help/","tags":["command"],"text":"/help \u00b6 Syntax \u00b6 /help macro Description \u00b6 Lists all MQ2 commands available to the client.","title":"/help"},{"location":"reference/commands/help/#help","text":"","title":"/help"},{"location":"reference/commands/help/#syntax","text":"/help macro","title":"Syntax"},{"location":"reference/commands/help/#description","text":"Lists all MQ2 commands available to the client.","title":"Description"},{"location":"reference/commands/hotbutton/","tags":["command"],"text":"/hotbutton \u00b6 Syntax \u00b6 /hotbutton [ Name ] color\\# [ Line#:Cursor#:/YourCommand YourText ] Description \u00b6 Extends the built in /hotbutton command with multiple lines support Examples \u00b6 Example Description /hotbutton TheName 14 1:0:/echo hi Where 14 1:0: in this case means use color 14, then place /echo hi on LINE 1 and NO Cursor Attachment. /hotbutton TheName 14 1:/echo hi Where 14 1: in this case means use color 14, then place /echo hi on LINE 1. /hotbutton TheName 1:0:/echo hi Where 1:0: in this case means place /echo hi on LINE 1 and NO Cursor Attachment. /hotbutton TheName 1:/echo hi Where 1: in this case means place /echo hi on LINE 1. /hotbutton TheName 0:/echo hi Where 0: in this case means NO Cursor Attachment. /hotbutton TheName 14 /echo hi just calls the eq function like before. /hotbutton TheName /echo hi just calls the eq function like before.","title":"/hotbutton"},{"location":"reference/commands/hotbutton/#hotbutton","text":"","title":"/hotbutton"},{"location":"reference/commands/hotbutton/#syntax","text":"/hotbutton [ Name ] color\\# [ Line#:Cursor#:/YourCommand YourText ]","title":"Syntax"},{"location":"reference/commands/hotbutton/#description","text":"Extends the built in /hotbutton command with multiple lines support","title":"Description"},{"location":"reference/commands/hotbutton/#examples","text":"Example Description /hotbutton TheName 14 1:0:/echo hi Where 14 1:0: in this case means use color 14, then place /echo hi on LINE 1 and NO Cursor Attachment. /hotbutton TheName 14 1:/echo hi Where 14 1: in this case means use color 14, then place /echo hi on LINE 1. /hotbutton TheName 1:0:/echo hi Where 1:0: in this case means place /echo hi on LINE 1 and NO Cursor Attachment. /hotbutton TheName 1:/echo hi Where 1: in this case means place /echo hi on LINE 1. /hotbutton TheName 0:/echo hi Where 0: in this case means NO Cursor Attachment. /hotbutton TheName 14 /echo hi just calls the eq function like before. /hotbutton TheName /echo hi just calls the eq function like before.","title":"Examples"},{"location":"reference/commands/identify/","tags":["command"],"text":"/identify \u00b6 Syntax \u00b6 /identify Description \u00b6 Displays further information about the item on the cursor, similar to the spell Identify and item lore displayed by MQ2 in the item stats UI window.","title":"/identify"},{"location":"reference/commands/identify/#identify","text":"","title":"/identify"},{"location":"reference/commands/identify/#syntax","text":"/identify","title":"Syntax"},{"location":"reference/commands/identify/#description","text":"Displays further information about the item on the cursor, similar to the spell Identify and item lore displayed by MQ2 in the item stats UI window.","title":"Description"},{"location":"reference/commands/if/","tags":["command"],"text":"/if \u00b6 Syntax \u00b6 /if ( formula ) { commands } [ else /if (**_**formula**_**) { ] ... } Description \u00b6 This will run all commands between the braces ( {} ) if formula evaluates to something other than 0. Formulas are numeric operations ONLY. You must use MQ2Data string comparison to turn strings comparisons into numeric operations (eg. Using .Equal or .NotEqual). You may use && and || freely within formula , which will be evaluated down to a single term before proceeding. Multiple commands may be included within the braces. There is no need to use ${Math.Calc[]} in /if statements, since the formula is automatically converted into numeric operations. Else and else /if can be used to further refine how/which commands are run. This will not work on some older versions of MQ2 (IE Jan 25, 2004) You will get a \"Failed to parse /if command\" Examples \u00b6 /if (${Target.ID}) { /call Cast \"Complete Healing\" gem1 } /if (${Target.ID}) { /echo I have a target } else { /echo No target } /if (${Target.CleanName.Equal[Banker Denton]}) { /echo Banker targeted } else /if (${Target.CleanName.Equal[Ward Toft]}) { /echo Ward targeted } else { /echo Banker or Ward not targeted } Return to Slash Commands","title":"/if"},{"location":"reference/commands/if/#if","text":"","title":"/if"},{"location":"reference/commands/if/#syntax","text":"/if ( formula ) { commands } [ else /if (**_**formula**_**) { ] ... }","title":"Syntax"},{"location":"reference/commands/if/#description","text":"This will run all commands between the braces ( {} ) if formula evaluates to something other than 0. Formulas are numeric operations ONLY. You must use MQ2Data string comparison to turn strings comparisons into numeric operations (eg. Using .Equal or .NotEqual). You may use && and || freely within formula , which will be evaluated down to a single term before proceeding. Multiple commands may be included within the braces. There is no need to use ${Math.Calc[]} in /if statements, since the formula is automatically converted into numeric operations. Else and else /if can be used to further refine how/which commands are run. This will not work on some older versions of MQ2 (IE Jan 25, 2004) You will get a \"Failed to parse /if command\"","title":"Description"},{"location":"reference/commands/if/#examples","text":"/if (${Target.ID}) { /call Cast \"Complete Healing\" gem1 } /if (${Target.ID}) { /echo I have a target } else { /echo No target } /if (${Target.CleanName.Equal[Banker Denton]}) { /echo Banker targeted } else /if (${Target.CleanName.Equal[Ward Toft]}) { /echo Ward targeted } else { /echo Banker or Ward not targeted } Return to Slash Commands","title":"Examples"},{"location":"reference/commands/ini/","tags":["command"],"text":"/ini \u00b6 Syntax \u00b6 /ini \"filename\" \"keyname\" \"valuename\" \"value\" Description \u00b6 This is used to write data to an ini file. Currently there is no way to delete an ini file entry. Example \u00b6 Stuff.ini contains the following data: [MySection] ; This is a comment Key1=123 Key2=This is cool! Key3=Wheeee... 15 After running the following command: /ini \"stuff.ini\" \"Section2\" \"ANewKey\" \"Some Data!\" Stuff.ini will contain the following: [MySection] ; This is a comment Key1=123 Key2=This is cool! Key3=Wheeee... 15 [Section2] ANewKey=Some Data!","title":"/ini"},{"location":"reference/commands/ini/#ini","text":"","title":"/ini"},{"location":"reference/commands/ini/#syntax","text":"/ini \"filename\" \"keyname\" \"valuename\" \"value\"","title":"Syntax"},{"location":"reference/commands/ini/#description","text":"This is used to write data to an ini file. Currently there is no way to delete an ini file entry.","title":"Description"},{"location":"reference/commands/ini/#example","text":"Stuff.ini contains the following data: [MySection] ; This is a comment Key1=123 Key2=This is cool! Key3=Wheeee... 15 After running the following command: /ini \"stuff.ini\" \"Section2\" \"ANewKey\" \"Some Data!\" Stuff.ini will contain the following: [MySection] ; This is a comment Key1=123 Key2=This is cool! Key3=Wheeee... 15 [Section2] ANewKey=Some Data!","title":"Example"},{"location":"reference/commands/invoke/","tags":["command"],"text":"/invoke \u00b6 Syntax \u00b6 /invoke ${TLO.[XXX].Action} Description \u00b6 This will invoke the action portion of some of the new TLO additions. This has the potential to shorten macros and make them more powerful. The current methods that are available for use and testing are: For the Task TLO: .Select For the Spawn[]. TLO: .DoTarget .DoFace .DoAssist .LeftClick .RightClick For the Me. TLO: .Stand .Sit .Dismount .StopCast For the Me.Buff TLO Member: .Remove For the Switch TLO: .Toggle For the Ground TLO: .Grab For the Window TLO: .LeftMouseDown .LeftMouseUp .LeftMouseHeld .LeftMouseHeldUp .RightMouseDown .RightMouseUp .RightMouseHeld .RightMouseHeldUp .Select Examples \u00b6 /invoke ${Spawn[eqmule].DoTarget} if spawn \"eqmule\" is found, will target /invoke ${Me.Buff[Cred].Remove} If a buff with the partial name \"Cred\" is found it will remove it Return to Slash Commands","title":"/invoke"},{"location":"reference/commands/invoke/#invoke","text":"","title":"/invoke"},{"location":"reference/commands/invoke/#syntax","text":"/invoke ${TLO.[XXX].Action}","title":"Syntax"},{"location":"reference/commands/invoke/#description","text":"This will invoke the action portion of some of the new TLO additions. This has the potential to shorten macros and make them more powerful. The current methods that are available for use and testing are: For the Task TLO: .Select For the Spawn[]. TLO: .DoTarget .DoFace .DoAssist .LeftClick .RightClick For the Me. TLO: .Stand .Sit .Dismount .StopCast For the Me.Buff TLO Member: .Remove For the Switch TLO: .Toggle For the Ground TLO: .Grab For the Window TLO: .LeftMouseDown .LeftMouseUp .LeftMouseHeld .LeftMouseHeldUp .RightMouseDown .RightMouseUp .RightMouseHeld .RightMouseHeldUp .Select","title":"Description"},{"location":"reference/commands/invoke/#examples","text":"/invoke ${Spawn[eqmule].DoTarget} if spawn \"eqmule\" is found, will target /invoke ${Me.Buff[Cred].Remove} If a buff with the partial name \"Cred\" is found it will remove it Return to Slash Commands","title":"Examples"},{"location":"reference/commands/itemnotify/","tags":["command"],"text":"/itemnotify \u00b6 Syntax \u00b6 /itemnotify slotname|#||itemname ''notification '' /itemnotify in bagslot slot# notification Description \u00b6 Similar to the /click function, but does not involve the use of the mouse. Slotname can be any one of the equipment Slot Names . Bagslot can be pack1-pack8 or bank1-bank16. **Sharedbank1, sharedbank2 and trade1-trade8 are not yet implemented in /itemnotify.** Notification can be any one of the following: leftmouseup Puts the item on the cursor, or returns it to slotname if its already on the cursor (same as left clicking an inventory item). leftmouseheld Clicks and holds slotname . Used for making hotkeys. rightmouseup Casts the item, or opens the container. This is the same as right clicking an inventory slot. rightmouseheld Opens up the item display window. Examples \u00b6 Exchange the item in slot1 of pack8 with the item in your main hand: /itemnotify in pack8 1 leftmouseup /itemnotify mainhand leftmouseup /itemnotify in pack8 1 leftmouseup Right-click your Shrunken Goblin Skull Earring: /itemnotify \"Shrunken Goblin Skull Earring\" rightmouseup","title":"/itemnotify"},{"location":"reference/commands/itemnotify/#itemnotify","text":"","title":"/itemnotify"},{"location":"reference/commands/itemnotify/#syntax","text":"/itemnotify slotname|#||itemname ''notification '' /itemnotify in bagslot slot# notification","title":"Syntax"},{"location":"reference/commands/itemnotify/#description","text":"Similar to the /click function, but does not involve the use of the mouse. Slotname can be any one of the equipment Slot Names . Bagslot can be pack1-pack8 or bank1-bank16. **Sharedbank1, sharedbank2 and trade1-trade8 are not yet implemented in /itemnotify.** Notification can be any one of the following: leftmouseup Puts the item on the cursor, or returns it to slotname if its already on the cursor (same as left clicking an inventory item). leftmouseheld Clicks and holds slotname . Used for making hotkeys. rightmouseup Casts the item, or opens the container. This is the same as right clicking an inventory slot. rightmouseheld Opens up the item display window.","title":"Description"},{"location":"reference/commands/itemnotify/#examples","text":"Exchange the item in slot1 of pack8 with the item in your main hand: /itemnotify in pack8 1 leftmouseup /itemnotify mainhand leftmouseup /itemnotify in pack8 1 leftmouseup Right-click your Shrunken Goblin Skull Earring: /itemnotify \"Shrunken Goblin Skull Earring\" rightmouseup","title":"Examples"},{"location":"reference/commands/items/","tags":["command"],"text":"/items \u00b6 Syntax \u00b6 /items [ filter ] Description \u00b6 Lists all ground spawns and environmental containers in the zone that match filter All items will be listed if no filter is supplied","title":"/items"},{"location":"reference/commands/items/#items","text":"","title":"/items"},{"location":"reference/commands/items/#syntax","text":"/items [ filter ]","title":"Syntax"},{"location":"reference/commands/items/#description","text":"Lists all ground spawns and environmental containers in the zone that match filter All items will be listed if no filter is supplied","title":"Description"},{"location":"reference/commands/itemtarget/","tags":["command"],"text":"/itemtarget \u00b6 Syntax \u00b6 /itemtarget \" itemname \" Description \u00b6 \"Targets\" a ground spawn or environmental container. The item targeted will not show up in the target window.","title":"/itemtarget"},{"location":"reference/commands/itemtarget/#itemtarget","text":"","title":"/itemtarget"},{"location":"reference/commands/itemtarget/#syntax","text":"/itemtarget \" itemname \"","title":"Syntax"},{"location":"reference/commands/itemtarget/#description","text":"\"Targets\" a ground spawn or environmental container. The item targeted will not show up in the target window.","title":"Description"},{"location":"reference/commands/keepkeys/","tags":["command"],"text":"/keepkeys \u00b6 Syntax \u00b6 /keepkeys [off|on] Description \u00b6 Keeps keys that were pressed with /keypress , in their current state when a macro ends. /keepkeys with no arguments displays the current on/off state.","title":"/keepkeys"},{"location":"reference/commands/keepkeys/#keepkeys","text":"","title":"/keepkeys"},{"location":"reference/commands/keepkeys/#syntax","text":"/keepkeys [off|on]","title":"Syntax"},{"location":"reference/commands/keepkeys/#description","text":"Keeps keys that were pressed with /keypress , in their current state when a macro ends. /keepkeys with no arguments displays the current on/off state.","title":"Description"},{"location":"reference/commands/keypress/","tags":["command"],"text":"/keypress \u00b6 Syntax \u00b6 /keypress name [hold] note: /keypress usage outside of a macro is not recommended nor consistent Description \u00b6 Press the key name . This is used strictly for keys that are mapped by the EQ client, however /keypress will work with EQ binds as well as MQ2 binds (see /bind ). /keypress does not actually press the key, it merely emulates the key being pressed, so it will not interfere with typing. Examples \u00b6 Virtual Keyboard \u00b6 Example of pressing a virtual keyboard keycombo /keypress shift+b Send the keypress shift+b /keypress h Send the keypress of the letter h (default EQUI-Keybind this will hail) /keypress i Send the keypress of the letter i (default EQUI-Keybind this will open inventory) EQUI-Keybindings \u00b6 Example using EQUI-Keybindings keypress with in game keybindings (like in options window) /keypress jump Taps the key mapped as the jump key /keypress forward hold Holds down the mapped forward key /keypress forward Releases the mapped forward key after /keypress forward hold /keypress OPEN_INV_BAGS Opens all bags /keypress HAIL Do the Hail command /keypress NETSTAT Toggle the NETSTAT indicator (green ping thingy top left) Send keypress to window \u00b6 Will type \"x\" into the active chat window /keypress x chat Will type \"x\" into the active chat window Virtual Keyboard Layout \u00b6 Esc F1 F2 F3 F4 F5 F6 F7 F8 F9 F10 F11 F12 Prnt_Scrn Scroll_Lock ` 1 2 3 4 5 6 7 8 9 0 - = Backspace Insert Home Tab Q W E R T Y U I O P [ ] \\ Delete End Caps_Lock A S D F G H J K L ; ' Enter Shift Z X C V B N M , . / Right_Shift Up Num_1 Ctrl Alt Space Right_Alt Right_Ctrl Left Down Right Num_0 Num_Del EQUI Keybindings List \u00b6 Note these are LamahHerders keybindings so what they are set as defaultEQ is different... sowy EQ Binds -------------- [AUTORUN] Nrm:R Alt:clear [JUMP] Nrm:Space Alt:clear [FORWARD] Nrm:E Alt:Up [BACK] Nrm:D Alt:Down [RIGHT] Nrm:F Alt:Right [LEFT] Nrm:S Alt:Left [STRAFE_LEFT] Nrm:clear Alt:clear [STRAFE_RIGHT] Nrm:clear Alt:clear [MOUSELOOK] Nrm:F12 Alt:clear [MOUSELOOK_ENGAGE] Nrm:clear Alt:clear [AUTOPRIM] Nrm:Q Alt:clear [CONSIDER] Nrm:A Alt:clear [DUCK] Nrm:C Alt:clear [HAIL] Nrm:H Alt:clear [INVENTORY] Nrm:I Alt:clear [TELL] Nrm:clear Alt:clear [USE] Nrm:U Alt:clear [PITCHUP] Nrm:Num_9 Alt:Page_Up [PITCHDOWN] Nrm:Num_3 Alt:Page_Down [CENTERVIEW] Nrm:Num_5 Alt:Home [ZOOMIN] Nrm:Num_7 Alt:Insert [ZOOMOUT] Nrm:Num_1 Alt:Delete [TOGGLECAM] Nrm:F9 Alt:clear [FULLSCREEN] Nrm:F10 Alt:clear [TARGETME] Nrm:F1 Alt:clear [PARTY1] Nrm:F2 Alt:clear [PARTY2] Nrm:F3 Alt:clear [PARTY3] Nrm:F4 Alt:clear [PARTY4] Nrm:F5 Alt:clear [PARTY5] Nrm:F6 Alt:clear [TARGETPC] Nrm:F7 Alt:clear [CYCLEPCTARGETS] Nrm:clear Alt:clear [TARGETNPC] Nrm:F8 Alt:clear [CYCLENPCTARGETS] Nrm:Tab Alt:clear [TARGETCORPSE] Nrm:clear Alt:clear [CYCLECORPSETARGETS] Nrm:clear Alt:clear [NETSTAT] Nrm:F11 Alt:clear [HOT1_1] Nrm:1 Alt:clear [HOT1_2] Nrm:2 Alt:clear [HOT1_3] Nrm:3 Alt:clear [HOT1_4] Nrm:4 Alt:clear [HOT1_5] Nrm:5 Alt:clear [HOT1_6] Nrm:6 Alt:clear [HOT1_7] Nrm:7 Alt:clear [HOT1_8] Nrm:8 Alt:clear [HOT1_9] Nrm:9 Alt:clear [HOT1_10] Nrm:0 Alt:clear [HOT1_11] Nrm:- Alt:clear [HOT1_12] Nrm:= Alt:clear [HOT2_1] Nrm:clear Alt:clear [HOT2_2] Nrm:clear Alt:clear [HOT2_3] Nrm:clear Alt:clear [HOT2_4] Nrm:clear Alt:clear [HOT2_5] Nrm:clear Alt:clear [HOT2_6] Nrm:clear Alt:clear [HOT2_7] Nrm:clear Alt:clear [HOT2_8] Nrm:clear Alt:clear [HOT2_9] Nrm:clear Alt:clear [HOT2_10] Nrm:clear Alt:clear [HOT2_11] Nrm:clear Alt:clear [HOT2_12] Nrm:clear Alt:clear [HOT3_1] Nrm:clear Alt:clear [HOT3_2] Nrm:clear Alt:clear [HOT3_3] Nrm:clear Alt:clear [HOT3_4] Nrm:clear Alt:clear [HOT3_5] Nrm:clear Alt:clear [HOT3_6] Nrm:clear Alt:clear [HOT3_7] Nrm:clear Alt:clear [HOT3_8] Nrm:clear Alt:clear [HOT3_9] Nrm:clear Alt:clear [HOT3_10] Nrm:clear Alt:clear [HOT3_11] Nrm:clear Alt:clear [HOT3_12] Nrm:clear Alt:clear [HOT4_1] Nrm:clear Alt:clear [HOT4_2] Nrm:clear Alt:clear [HOT4_3] Nrm:clear Alt:clear [HOT4_4] Nrm:clear Alt:clear [HOT4_5] Nrm:clear Alt:clear [HOT4_6] Nrm:clear Alt:clear [HOT4_7] Nrm:clear Alt:clear [HOT4_8] Nrm:clear Alt:clear [HOT4_9] Nrm:clear Alt:clear [HOT4_10] Nrm:clear Alt:clear [HOT4_11] Nrm:clear Alt:clear [HOT4_12] Nrm:clear Alt:clear [HOT5_1] Nrm:clear Alt:clear [HOT5_2] Nrm:clear Alt:clear [HOT5_3] Nrm:clear Alt:clear [HOT5_4] Nrm:clear Alt:clear [HOT5_5] Nrm:clear Alt:clear [HOT5_6] Nrm:clear Alt:clear [HOT5_7] Nrm:clear Alt:clear [HOT5_8] Nrm:clear Alt:clear [HOT5_9] Nrm:clear Alt:clear [HOT5_10] Nrm:clear Alt:clear [HOT5_11] Nrm:clear Alt:clear [HOT5_12] Nrm:clear Alt:clear [HOT6_1] Nrm:clear Alt:clear [HOT6_2] Nrm:clear Alt:clear [HOT6_3] Nrm:clear Alt:clear [HOT6_4] Nrm:clear Alt:clear [HOT6_5] Nrm:clear Alt:clear [HOT6_6] Nrm:clear Alt:clear [HOT6_7] Nrm:clear Alt:clear [HOT6_8] Nrm:clear Alt:clear [HOT6_9] Nrm:clear Alt:clear [HOT6_10] Nrm:clear Alt:clear [HOT6_11] Nrm:clear Alt:clear [HOT6_12] Nrm:clear Alt:clear [HOT7_1] Nrm:clear Alt:clear [HOT7_2] Nrm:clear Alt:clear [HOT7_3] Nrm:clear Alt:clear [HOT7_4] Nrm:clear Alt:clear [HOT7_5] Nrm:clear Alt:clear [HOT7_6] Nrm:clear Alt:clear [HOT7_7] Nrm:clear Alt:clear [HOT7_8] Nrm:clear Alt:clear [HOT7_9] Nrm:clear Alt:clear [HOT7_10] Nrm:clear Alt:clear [HOT7_11] Nrm:clear Alt:clear [HOT7_12] Nrm:clear Alt:clear [HOT8_1] Nrm:clear Alt:clear [HOT8_2] Nrm:clear Alt:clear [HOT8_3] Nrm:clear Alt:clear [HOT8_4] Nrm:clear Alt:clear [HOT8_5] Nrm:clear Alt:clear [HOT8_6] Nrm:clear Alt:clear [HOT8_7] Nrm:clear Alt:clear [HOT8_8] Nrm:clear Alt:clear [HOT8_9] Nrm:clear Alt:clear [HOT8_10] Nrm:clear Alt:clear [HOT8_11] Nrm:clear Alt:clear [HOT8_12] Nrm:clear Alt:clear [HOT9_1] Nrm:clear Alt:clear [HOT9_2] Nrm:clear Alt:clear [HOT9_3] Nrm:clear Alt:clear [HOT9_4] Nrm:clear Alt:clear [HOT9_5] Nrm:clear Alt:clear [HOT9_6] Nrm:clear Alt:clear [HOT9_7] Nrm:clear Alt:clear [HOT9_8] Nrm:clear Alt:clear [HOT9_9] Nrm:clear Alt:clear [HOT9_10] Nrm:clear Alt:clear [HOT9_11] Nrm:clear Alt:clear [HOT9_12] Nrm:clear Alt:clear [HOT10_1] Nrm:clear Alt:clear [HOT10_2] Nrm:clear Alt:clear [HOT10_3] Nrm:clear Alt:clear [HOT10_4] Nrm:clear Alt:clear [HOT10_5] Nrm:clear Alt:clear [HOT10_6] Nrm:clear Alt:clear [HOT10_7] Nrm:clear Alt:clear [HOT10_8] Nrm:clear Alt:clear [HOT10_9] Nrm:clear Alt:clear [HOT10_10] Nrm:clear Alt:clear [HOT10_11] Nrm:clear Alt:clear [HOT10_12] Nrm:clear Alt:clear [HOTPAGE1_1] Nrm:shift+1 Alt:clear [HOTPAGE1_2] Nrm:shift+2 Alt:clear [HOTPAGE1_3] Nrm:shift+3 Alt:clear [HOTPAGE1_4] Nrm:shift+4 Alt:clear [HOTPAGE1_5] Nrm:shift+5 Alt:clear [HOTPAGE1_6] Nrm:shift+6 Alt:clear [HOTPAGE1_7] Nrm:shift+7 Alt:clear [HOTPAGE1_8] Nrm:shift+8 Alt:clear [HOTPAGE1_9] Nrm:shift+9 Alt:clear [HOTPAGE1_10] Nrm:shift+0 Alt:clear [HOTPAGE2_1] Nrm:clear Alt:clear [HOTPAGE2_2] Nrm:clear Alt:clear [HOTPAGE2_3] Nrm:clear Alt:clear [HOTPAGE2_4] Nrm:clear Alt:clear [HOTPAGE2_5] Nrm:clear Alt:clear [HOTPAGE2_6] Nrm:clear Alt:clear [HOTPAGE2_7] Nrm:clear Alt:clear [HOTPAGE2_8] Nrm:clear Alt:clear [HOTPAGE2_9] Nrm:clear Alt:clear [HOTPAGE2_10] Nrm:clear Alt:clear [HOTPAGE3_1] Nrm:clear Alt:clear [HOTPAGE3_2] Nrm:clear Alt:clear [HOTPAGE3_3] Nrm:clear Alt:clear [HOTPAGE3_4] Nrm:clear Alt:clear [HOTPAGE3_5] Nrm:clear Alt:clear [HOTPAGE3_6] Nrm:clear Alt:clear [HOTPAGE3_7] Nrm:clear Alt:clear [HOTPAGE3_8] Nrm:clear Alt:clear [HOTPAGE3_9] Nrm:clear Alt:clear [HOTPAGE3_10] Nrm:clear Alt:clear [HOTPAGE4_1] Nrm:clear Alt:clear [HOTPAGE4_2] Nrm:clear Alt:clear [HOTPAGE4_3] Nrm:clear Alt:clear [HOTPAGE4_4] Nrm:clear Alt:clear [HOTPAGE4_5] Nrm:clear Alt:clear [HOTPAGE4_6] Nrm:clear Alt:clear [HOTPAGE4_7] Nrm:clear Alt:clear [HOTPAGE4_8] Nrm:clear Alt:clear [HOTPAGE4_9] Nrm:clear Alt:clear [HOTPAGE4_10] Nrm:clear Alt:clear [HOTPAGE5_1] Nrm:clear Alt:clear [HOTPAGE5_2] Nrm:clear Alt:clear [HOTPAGE5_3] Nrm:clear Alt:clear [HOTPAGE5_4] Nrm:clear Alt:clear [HOTPAGE5_5] Nrm:clear Alt:clear [HOTPAGE5_6] Nrm:clear Alt:clear [HOTPAGE5_7] Nrm:clear Alt:clear [HOTPAGE5_8] Nrm:clear Alt:clear [HOTPAGE5_9] Nrm:clear Alt:clear [HOTPAGE5_10] Nrm:clear Alt:clear [HOTPAGE6_1] Nrm:clear Alt:clear [HOTPAGE6_2] Nrm:clear Alt:clear [HOTPAGE6_3] Nrm:clear Alt:clear [HOTPAGE6_4] Nrm:clear Alt:clear [HOTPAGE6_5] Nrm:clear Alt:clear [HOTPAGE6_6] Nrm:clear Alt:clear [HOTPAGE6_7] Nrm:clear Alt:clear [HOTPAGE6_8] Nrm:clear Alt:clear [HOTPAGE6_9] Nrm:clear Alt:clear [HOTPAGE6_10] Nrm:clear Alt:clear [HOTPAGE7_1] Nrm:clear Alt:clear [HOTPAGE7_2] Nrm:clear Alt:clear [HOTPAGE7_3] Nrm:clear Alt:clear [HOTPAGE7_4] Nrm:clear Alt:clear [HOTPAGE7_5] Nrm:clear Alt:clear [HOTPAGE7_6] Nrm:clear Alt:clear [HOTPAGE7_7] Nrm:clear Alt:clear [HOTPAGE7_8] Nrm:clear Alt:clear [HOTPAGE7_9] Nrm:clear Alt:clear [HOTPAGE7_10] Nrm:clear Alt:clear [HOTPAGE8_1] Nrm:clear Alt:clear [HOTPAGE8_2] Nrm:clear Alt:clear [HOTPAGE8_3] Nrm:clear Alt:clear [HOTPAGE8_4] Nrm:clear Alt:clear [HOTPAGE8_5] Nrm:clear Alt:clear [HOTPAGE8_6] Nrm:clear Alt:clear [HOTPAGE8_7] Nrm:clear Alt:clear [HOTPAGE8_8] Nrm:clear Alt:clear [HOTPAGE8_9] Nrm:clear Alt:clear [HOTPAGE8_10] Nrm:clear Alt:clear [HOTPAGE9_1] Nrm:clear Alt:clear [HOTPAGE9_2] Nrm:clear Alt:clear [HOTPAGE9_3] Nrm:clear Alt:clear [HOTPAGE9_4] Nrm:clear Alt:clear [HOTPAGE9_5] Nrm:clear Alt:clear [HOTPAGE9_6] Nrm:clear Alt:clear [HOTPAGE9_7] Nrm:clear Alt:clear [HOTPAGE9_8] Nrm:clear Alt:clear [HOTPAGE9_9] Nrm:clear Alt:clear [HOTPAGE9_10] Nrm:clear Alt:clear [HOTPAGE10_1] Nrm:clear Alt:clear [HOTPAGE10_2] Nrm:clear Alt:clear [HOTPAGE10_3] Nrm:clear Alt:clear [HOTPAGE10_4] Nrm:clear Alt:clear [HOTPAGE10_5] Nrm:clear Alt:clear [HOTPAGE10_6] Nrm:clear Alt:clear [HOTPAGE10_7] Nrm:clear Alt:clear [HOTPAGE10_8] Nrm:clear Alt:clear [HOTPAGE10_9] Nrm:clear Alt:clear [HOTPAGE10_10] Nrm:clear Alt:clear [CAST1] Nrm:alt+1 Alt:clear [CAST2] Nrm:alt+2 Alt:clear [CAST3] Nrm:alt+3 Alt:clear [CAST4] Nrm:alt+4 Alt:clear [CAST5] Nrm:alt+5 Alt:clear [CAST6] Nrm:alt+6 Alt:clear [CAST7] Nrm:alt+7 Alt:clear [CAST8] Nrm:alt+8 Alt:clear [CAST9] Nrm:alt+9 Alt:clear [CAST10] Nrm:alt+0 Alt:clear [CAST11] Nrm:alt+- Alt:clear [CAST12] Nrm:alt+= Alt:clear [REPLY] Nrm:T Alt:clear [CYCLEREPLY] Nrm:Tab Alt:clear [CYCLEREPLY_BACK] Nrm:shift+Tab Alt:clear [BACKDROP] Nrm:clear Alt:clear [TOGGLETARGET] Nrm:clear Alt:clear [SPELLBOOK] Nrm:ctrl+B Alt:clear [ABILITIES] Nrm:ctrl+A Alt:clear [COMBAT] Nrm:ctrl+C Alt:clear [SOCIALS] Nrm:ctrl+O Alt:clear [MAIN] Nrm:ctrl+M Alt:clear [WHO] Nrm:ctrl+W Alt:clear [INVITE_FOLLOW] Nrm:ctrl+I Alt:clear [DISBAND] Nrm:ctrl+D Alt:clear [CAMP] Nrm:ctrl+X Alt:clear [SIT_STAND] Nrm:ctrl+S Alt:clear [RUN_WALK] Nrm:ctrl+R Alt:clear [CLIP_IN] Nrm:shift+- Alt:clear [CLIP_OUT] Nrm:shift+= Alt:clear [VOICE_ON] Nrm:Num_Plus Alt:clear [SCREENCAP] Nrm:Num_Minus Alt:clear [HISTORY_UP] Nrm:shift+Num_8 Alt:shift+Up [HISTORY_DOWN] Nrm:shift+Num_2 Alt:shift+Down [PAGEUP] Nrm:shift+Num_9 Alt:shift+Page_Up [PAGEDOWN] Nrm:shift+Num_3 Alt:shift+Page_Down [CMDMODE_SAY] Nrm:clear Alt:clear [CMDMODE_EMOTE] Nrm:shift+; Alt:clear [LOCK_WINDOWS] Nrm:clear Alt:clear [TOGGLE_PLAYERWIN] Nrm:alt+Y Alt:clear [TOGGLE_PARTYWIN] Nrm:alt+P Alt:clear [TOGGLE_TARGETWIN] Nrm:alt+T Alt:clear [TOGGLE_SPELLSWIN] Nrm:alt+S Alt:clear [TOGGLE_BUFFWIN] Nrm:alt+B Alt:clear [TOGGLE_HOTBOX1WIN] Nrm:alt+H Alt:clear [TOGGLE_HOTBOX2WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX3WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX4WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX5WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX6WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX7WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX8WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX9WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX10WIN] Nrm:clear Alt:clear [TOGGLE_CHATWIN] Nrm:clear Alt:clear [TOGGLE_MAILWIN] Nrm:ctrl+E Alt:clear [TOGGLE_MAILCOMPWIN] Nrm:ctrl+N Alt:clear [TOGGLE_MAINMENUWIN] Nrm:alt+M Alt:clear [TOGGLE_ALTADVWIN] Nrm:V Alt:clear [TOGGLE_BAZAARWIN] Nrm:alt+I Alt:clear [RTARGET] Nrm:ctrl+T Alt:clear [TOGGLE_FRIENDSWIN] Nrm:alt+F Alt:clear [TOGGLE_PETINFOWIN] Nrm:alt+F1 Alt:clear [TOGGLE_OPTIONSWIN] Nrm:alt+O Alt:clear [TOGGLE_HELPWIN] Nrm:clear Alt:clear [TOGGLE_SELECTORWIN] Nrm:alt+W Alt:clear [TOGGLE_VIDEOMODEWIN] Nrm:clear Alt:clear [TOGGLE_BAZAARSEARCHWIN] Nrm:alt+A Alt:clear [TOGGLE_COMPASSWIN] Nrm:alt+D Alt:clear [TOGGLE_RAIDWIN] Nrm:alt+R Alt:clear [TOGGLE_MUSICPLAYERWIN] Nrm:alt+K Alt:clear [FORWARD_CAM] Nrm:alt+Num_8 Alt:alt+Up [BACK_CAM] Nrm:alt+Num_2 Alt:alt+Down [RIGHT_CAM] Nrm:alt+Num_6 Alt:alt+Right [LEFT_CAM] Nrm:alt+Num_4 Alt:alt+Left [PITCHUP_CAM] Nrm:alt+Num_9 Alt:alt+Page_Up [PITCHDOWN_CAM] Nrm:alt+Num_3 Alt:alt+Page_Down [TOGGLE_JOURNAL] Nrm:alt+J Alt:clear [TOGGLE_SDBUFFWIN] Nrm:alt+E Alt:clear [RELEASE_MOUSE_CURSOR] Nrm:shift+alt+R Alt:clear [TOGGLE_STORYWIN] Nrm:alt+N Alt:clear [TOGGLE_MAPWIN] Nrm:Backspace Alt:M [TOGGLE_GUILDMGMTWIN] Nrm:alt+G Alt:clear [TOGGLE_FELLOWSHIPWIN] Nrm:shift+ctrl+F Alt:clear [TOGGLE_LFGROUPWIN] Nrm:clear Alt:clear [TOGGLE_LFGUILDWIN] Nrm:clear Alt:clear [TOGGLETWOTARGETS] Nrm:clear Alt:clear [TOGGLE_CONTEXTMENUS] Nrm:clear Alt:clear [FIRST_PERSON_CAMERA] Nrm:clear Alt:clear [OVERHEAD_CAMERA] Nrm:clear Alt:clear [CHASE_CAMERA] Nrm:clear Alt:clear [USER1_CAMERA] Nrm:clear Alt:clear [USER2_CAMERA] Nrm:clear Alt:clear [TETHER_CAMERA] Nrm:clear Alt:clear [TOGGLE_ADVREQUESTWIN] Nrm:alt+V Alt:clear [CLOSE_TOP_WINDOW] Nrm:Esc Alt:clear [CLEAR_TARGET] Nrm:Esc Alt:clear [CMD_TOGGLE_FIND_WINDOW] Nrm:ctrl+F Alt:clear [TOGGLE_LEADERSHIPWIN] Nrm:clear Alt:clear [TOGGLE_TRIBUTEBENEFITWIN] Nrm:alt+U Alt:clear [CMD_OPENING_ATTACK1] Nrm:ctrl+1 Alt:clear [CMD_OPENING_ATTACK2] Nrm:ctrl+2 Alt:clear [CMD_OPENING_ATTACK3] Nrm:ctrl+3 Alt:clear [CMD_OPENING_ATTACK4] Nrm:ctrl+4 Alt:clear [CMD_OPENING_ATTACK5] Nrm:ctrl+5 Alt:clear [CMD_OPENING_ATTACK6] Nrm:ctrl+6 Alt:clear [CMD_OPENING_ATTACK7] Nrm:ctrl+7 Alt:clear [CMD_OPENING_ATTACK8] Nrm:ctrl+8 Alt:clear [CMD_TOGGLE_COMBAT_ABILITY_WIN] Nrm:alt+C Alt:clear [CMD_TOGGLE_DYNAMIC_ZONE_WIN] Nrm:alt+Z Alt:clear [CMD_TOGGLE_PVP_LEADERBOARD] Nrm:ctrl+P Alt:clear [CMD_TOGGLETASKWIN] Nrm:alt+Q Alt:clear [CMD_TOGGLE_TICKET_WND] Nrm:P Alt:clear [CMD_STOP_CAST] Nrm:shift+S Alt:clear [CMD_TOGGLEVOICEWIN] Nrm:clear Alt:clear [CMD_TOGGLE_TITLE_WND] Nrm:shift+T Alt:clear [POTION_SLOT_1] Nrm:clear Alt:clear [POTION_SLOT_2] Nrm:clear Alt:clear [POTION_SLOT_3] Nrm:clear Alt:clear [POTION_SLOT_4] Nrm:clear Alt:clear [TOGGLE_POTION_BELT] Nrm:shift+P Alt:clear [TOGGLE_BANDOLIER] Nrm:B Alt:clear [OPEN_INV_BAGS] Nrm:clear Alt:clear [CLOSE_INV_BAGS] Nrm:clear Alt:clear [TOGGLE_INV_BAGS] Nrm:shift+B Alt:clear [TOGGLE_SKILLS_WND] Nrm:clear Alt:clear [OPEN_ETN_HELP] Nrm:clear Alt:clear [CMD_TOGGLE_BLOCKEDBUFFWIN] Nrm:clear Alt:clear [CMD_TOGGLE_AUDIO_TRIGGER_WINDOW] Nrm:clear Alt:clear [CMD_CLIPBOARD_PASTE] Nrm:ctrl+V Alt:clear [CMD_OPEN_EQPLAYERS] Nrm:clear Alt:clear [CMD_TOGGLE_AURAWND] Nrm:shift+A Alt:clear [CMD_TOGGLE_BLOCKEDPETBUFFWIN] Nrm:clear Alt:clear [CMD_TOGGLE_REWARD_SELECTION_WIN] Nrm:clear Alt:clear [CMD_TOGGLE_CLAIM_WIN] Nrm:shift+C Alt:clear [CMD_TOGGLE_VOICE_BAR] Nrm:clear Alt:clear [CMD_TOGGLE_AS_LIST] Nrm:clear Alt:clear [CMD_PUSH_TO_TALK] Nrm:ctrl+Tab Alt:clear [CMD_PUSH_TO_TALK_SAY] Nrm:clear Alt:clear [CMD_PUSH_TO_TALK_GROUP] Nrm:clear Alt:clear [CMD_PUSH_TO_TALK_RAID] Nrm:clear Alt:clear [CMD_PUSH_TO_TALK_GUILD] Nrm:clear Alt:clear [CMD_MERCENARIES] Nrm:clear Alt:clear [CMD_MARKETPLACE] Nrm:clear Alt:clear [CMD_WELCOMESCREEN] Nrm:clear Alt:clear [CMD_EXTENDED_TARGET_WINDOW] Nrm:ctrl+alt+T Alt:clear [CMD_ACHIEVEMENT_WINDOW] Nrm:clear Alt:clear [TARGET_XTARGET_1] Nrm:clear Alt:clear [TARGET_XTARGET_2] Nrm:clear Alt:clear [TARGET_XTARGET_3] Nrm:clear Alt:clear [TARGET_XTARGET_4] Nrm:clear Alt:clear [TARGET_XTARGET_5] Nrm:clear Alt:clear [TARGET_XTARGET_6] Nrm:clear Alt:clear [TARGET_XTARGET_7] Nrm:clear Alt:clear [TARGET_XTARGET_8] Nrm:clear Alt:clear [TARGET_XTARGET_9] Nrm:clear Alt:clear [TARGET_XTARGET_10] Nrm:clear Alt:clear [TARGET_XTARGET_11] Nrm:clear Alt:clear [TARGET_XTARGET_12] Nrm:clear Alt:clear [TARGET_XTARGET_13] Nrm:clear Alt:clear [TARGET_XTARGET_14] Nrm:clear Alt:clear [TARGET_XTARGET_15] Nrm:clear Alt:clear [TARGET_XTARGET_16] Nrm:clear Alt:clear [TARGET_XTARGET_17] Nrm:clear Alt:clear [TARGET_XTARGET_18] Nrm:clear Alt:clear [TARGET_XTARGET_19] Nrm:clear Alt:clear [TARGET_XTARGET_20] Nrm:clear Alt:clear [ADD_XTARGET] Nrm:clear Alt:clear [REMOVE_XTARGET] Nrm:clear Alt:clear [CYCLE_XTARGET] Nrm:clear Alt:clear [REMOVE_XTARGET_BY_SLOT] Nrm:clear Alt:clear [CMD_REAL_ESTATE_ITEMS_WINDOW] Nrm:shift+I Alt:clear [CMD_REAL_ESTATE_MANAGE_WINDOW] Nrm:clear Alt:clear [CMD_REAL_ESTATE_TROPHIES_WINDOW] Nrm:clear Alt:clear [CMD_REAL_ESTATE_PLOT_SEARCH_WINDOW] Nrm:clear Alt:clear [CMD_REAL_ESTATE_HELP_WINDOW] Nrm:clear Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_TOGGLE_MODE] Nrm:shift+Z Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_SET_MODE_COLLISION] Nrm:clear Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_SET_MODE_WALL] Nrm:clear Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_SET_MODE_CURSOR] Nrm:clear Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_SET_MODE_FREE] Nrm:clear Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_RESET_ITEM_MOUSE_X_ROTATION] Nrm:shift+Q Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_RESET_ITEM_MOUSE_Y_ROTATION] Nrm:shift+W Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_RESET_ITEM_WHEEL_ROTATION] Nrm:shift+E Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_RESET_ITEM_SIZE] Nrm:shift+R Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_ROTATE_ITEM_MOUSE_X_ROTATION_90_DEGREES] Nrm:shift+D Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_ROTATE_ITEM_MOUSE_Y_ROTATION_90_DEGREES] Nrm:shift+F Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_ROTATE_ITEM_WHEEL_ROTATION_90_DEGREES] Nrm:shift+G Alt:clear [CMD_REAL_ESTATE_LEAVE] Nrm:clear Alt:clear [CMD_VOTE_RESULTS] Nrm:shift+V Alt:clear [CMD_TOGGLE_TCG] Nrm:clear Alt:clear [CMD_MOVE_DOWN] Nrm:D Alt:clear [CMD_STOP_ACTION] Nrm:clear Alt:clear [POTION_SLOT_5] Nrm:clear Alt:clear [CMD_TOGGLE_ALARM] Nrm:clear Alt:clear [CMD_TOGGLE_BANK_BAGS] Nrm:clear Alt:clear [TOGGLE_ZONE_GUIDE_WINDOW] Nrm:clear Alt:clear [TOGGLE_ZONE_PATH_WINDOW] Nrm:clear Alt:clear [CMD_MARKETPLACE_SILVER] Nrm:clear Alt:clear [CMD_MARKETPLACE_GOLD] Nrm:clear Alt:clear [CMD_HISTORIC_ALERTS] Nrm:shift+H Alt:clear [CMD_SOCIAL_SHARE] Nrm:shift+ctrl+S Alt:clear [CMD_TOGGLE_AGGRO] Nrm:clear Alt:clear [CMD_LOCK_AGGRO] Nrm:clear Alt:clear [CMD_TOGGLE_BARTER_SEARCH] Nrm:clear Alt:clear [CMD_OPEN_URL] Nrm:clear Alt:clear [CMD_TOGGLE_TARGETOFTARGETWIN] Nrm:ctrl+U Alt:clear [CMD_RAID_DELEGATE_MAIN_ASSIST] Nrm:clear Alt:clear [CMD_INSPECT_BUFFS] Nrm:clear Alt:clear [CMD_GROUP_DELEGATE_MARK_NPC] Nrm:clear Alt:clear [CMD_RAID_DELEGATE_MARK_NPC] Nrm:clear Alt:clear [CMD_GROUP_MARK_NPC_1] Nrm:clear Alt:clear [CMD_GROUP_MARK_NPC_2] Nrm:clear Alt:clear [CMD_GROUP_MARK_NPC_3] Nrm:clear Alt:clear [CMD_RAID_MARK_NPC_1] Nrm:clear Alt:clear [CMD_RAID_MARK_NPC_2] Nrm:clear Alt:clear [CMD_RAID_MARK_NPC_3] Nrm:clear Alt:clear [CMD_FIND_PC_GROUP_RAID] Nrm:clear Alt:clear [CMD_TOGGLE_KEYRINGS] Nrm:clear Alt:clear [CMD_GROUP_DELEGATE_MASTER_LOOTER] Nrm:clear Alt:clear [CMD_RAID_DELEGATE_MASTER_LOOTER] Nrm:clear Alt:clear [CMD_TOGGLE_ADVANCED_LOOT_WIN] Nrm:clear Alt:clear [CMD_TOGGLE_PICKZONE_WIN] Nrm:clear Alt:clear [CMD_TOGGLE_TASK_OVERLAY_WIN] Nrm:clear Alt:clear [TOGGLE_FPS] Nrm:F Alt:clear [TOGGLE_AVATAR] Nrm:Z Alt:clear [TOGGLE_PETITION] Nrm:G Alt:clear [TOGGLE_MEMINFO] Nrm:clear Alt:clear [FLY_UP] Nrm:clear Alt:clear [FLY_DOWN] Nrm:clear Alt:clear [ADD_ROUTE] Nrm:clear Alt:clear [LAY_PPOINT] Nrm:clear Alt:clear [LAY_LINK] Nrm:clear Alt:clear [CONFIRM_YES] Nrm:clear Alt:clear [CONFIRM_NO] Nrm:clear Alt:clear [TARGET_PREV_NPC] Nrm:clear Alt:clear [TARGET_NEXT_NPC] Nrm:clear Alt:clear [ROTATE_STATS] Nrm:ctrl+alt+F Alt:clear [TOGGLE_NPC_TUNE] Nrm:alt+X Alt:clear [TOGGLEQAMARKER] Nrm:clear Alt:clear -------------- End EQ Binds","title":"/keypress"},{"location":"reference/commands/keypress/#keypress","text":"","title":"/keypress"},{"location":"reference/commands/keypress/#syntax","text":"/keypress name [hold] note: /keypress usage outside of a macro is not recommended nor consistent","title":"Syntax"},{"location":"reference/commands/keypress/#description","text":"Press the key name . This is used strictly for keys that are mapped by the EQ client, however /keypress will work with EQ binds as well as MQ2 binds (see /bind ). /keypress does not actually press the key, it merely emulates the key being pressed, so it will not interfere with typing.","title":"Description"},{"location":"reference/commands/keypress/#examples","text":"","title":"Examples"},{"location":"reference/commands/keypress/#virtual-keyboard","text":"Example of pressing a virtual keyboard keycombo /keypress shift+b Send the keypress shift+b /keypress h Send the keypress of the letter h (default EQUI-Keybind this will hail) /keypress i Send the keypress of the letter i (default EQUI-Keybind this will open inventory)","title":"Virtual Keyboard"},{"location":"reference/commands/keypress/#equi-keybindings","text":"Example using EQUI-Keybindings keypress with in game keybindings (like in options window) /keypress jump Taps the key mapped as the jump key /keypress forward hold Holds down the mapped forward key /keypress forward Releases the mapped forward key after /keypress forward hold /keypress OPEN_INV_BAGS Opens all bags /keypress HAIL Do the Hail command /keypress NETSTAT Toggle the NETSTAT indicator (green ping thingy top left)","title":"EQUI-Keybindings"},{"location":"reference/commands/keypress/#send-keypress-to-window","text":"Will type \"x\" into the active chat window /keypress x chat Will type \"x\" into the active chat window","title":"Send keypress to window"},{"location":"reference/commands/keypress/#virtual-keyboard-layout","text":"Esc F1 F2 F3 F4 F5 F6 F7 F8 F9 F10 F11 F12 Prnt_Scrn Scroll_Lock ` 1 2 3 4 5 6 7 8 9 0 - = Backspace Insert Home Tab Q W E R T Y U I O P [ ] \\ Delete End Caps_Lock A S D F G H J K L ; ' Enter Shift Z X C V B N M , . / Right_Shift Up Num_1 Ctrl Alt Space Right_Alt Right_Ctrl Left Down Right Num_0 Num_Del","title":"Virtual Keyboard Layout"},{"location":"reference/commands/keypress/#equi-keybindings-list","text":"Note these are LamahHerders keybindings so what they are set as defaultEQ is different... sowy EQ Binds -------------- [AUTORUN] Nrm:R Alt:clear [JUMP] Nrm:Space Alt:clear [FORWARD] Nrm:E Alt:Up [BACK] Nrm:D Alt:Down [RIGHT] Nrm:F Alt:Right [LEFT] Nrm:S Alt:Left [STRAFE_LEFT] Nrm:clear Alt:clear [STRAFE_RIGHT] Nrm:clear Alt:clear [MOUSELOOK] Nrm:F12 Alt:clear [MOUSELOOK_ENGAGE] Nrm:clear Alt:clear [AUTOPRIM] Nrm:Q Alt:clear [CONSIDER] Nrm:A Alt:clear [DUCK] Nrm:C Alt:clear [HAIL] Nrm:H Alt:clear [INVENTORY] Nrm:I Alt:clear [TELL] Nrm:clear Alt:clear [USE] Nrm:U Alt:clear [PITCHUP] Nrm:Num_9 Alt:Page_Up [PITCHDOWN] Nrm:Num_3 Alt:Page_Down [CENTERVIEW] Nrm:Num_5 Alt:Home [ZOOMIN] Nrm:Num_7 Alt:Insert [ZOOMOUT] Nrm:Num_1 Alt:Delete [TOGGLECAM] Nrm:F9 Alt:clear [FULLSCREEN] Nrm:F10 Alt:clear [TARGETME] Nrm:F1 Alt:clear [PARTY1] Nrm:F2 Alt:clear [PARTY2] Nrm:F3 Alt:clear [PARTY3] Nrm:F4 Alt:clear [PARTY4] Nrm:F5 Alt:clear [PARTY5] Nrm:F6 Alt:clear [TARGETPC] Nrm:F7 Alt:clear [CYCLEPCTARGETS] Nrm:clear Alt:clear [TARGETNPC] Nrm:F8 Alt:clear [CYCLENPCTARGETS] Nrm:Tab Alt:clear [TARGETCORPSE] Nrm:clear Alt:clear [CYCLECORPSETARGETS] Nrm:clear Alt:clear [NETSTAT] Nrm:F11 Alt:clear [HOT1_1] Nrm:1 Alt:clear [HOT1_2] Nrm:2 Alt:clear [HOT1_3] Nrm:3 Alt:clear [HOT1_4] Nrm:4 Alt:clear [HOT1_5] Nrm:5 Alt:clear [HOT1_6] Nrm:6 Alt:clear [HOT1_7] Nrm:7 Alt:clear [HOT1_8] Nrm:8 Alt:clear [HOT1_9] Nrm:9 Alt:clear [HOT1_10] Nrm:0 Alt:clear [HOT1_11] Nrm:- Alt:clear [HOT1_12] Nrm:= Alt:clear [HOT2_1] Nrm:clear Alt:clear [HOT2_2] Nrm:clear Alt:clear [HOT2_3] Nrm:clear Alt:clear [HOT2_4] Nrm:clear Alt:clear [HOT2_5] Nrm:clear Alt:clear [HOT2_6] Nrm:clear Alt:clear [HOT2_7] Nrm:clear Alt:clear [HOT2_8] Nrm:clear Alt:clear [HOT2_9] Nrm:clear Alt:clear [HOT2_10] Nrm:clear Alt:clear [HOT2_11] Nrm:clear Alt:clear [HOT2_12] Nrm:clear Alt:clear [HOT3_1] Nrm:clear Alt:clear [HOT3_2] Nrm:clear Alt:clear [HOT3_3] Nrm:clear Alt:clear [HOT3_4] Nrm:clear Alt:clear [HOT3_5] Nrm:clear Alt:clear [HOT3_6] Nrm:clear Alt:clear [HOT3_7] Nrm:clear Alt:clear [HOT3_8] Nrm:clear Alt:clear [HOT3_9] Nrm:clear Alt:clear [HOT3_10] Nrm:clear Alt:clear [HOT3_11] Nrm:clear Alt:clear [HOT3_12] Nrm:clear Alt:clear [HOT4_1] Nrm:clear Alt:clear [HOT4_2] Nrm:clear Alt:clear [HOT4_3] Nrm:clear Alt:clear [HOT4_4] Nrm:clear Alt:clear [HOT4_5] Nrm:clear Alt:clear [HOT4_6] Nrm:clear Alt:clear [HOT4_7] Nrm:clear Alt:clear [HOT4_8] Nrm:clear Alt:clear [HOT4_9] Nrm:clear Alt:clear [HOT4_10] Nrm:clear Alt:clear [HOT4_11] Nrm:clear Alt:clear [HOT4_12] Nrm:clear Alt:clear [HOT5_1] Nrm:clear Alt:clear [HOT5_2] Nrm:clear Alt:clear [HOT5_3] Nrm:clear Alt:clear [HOT5_4] Nrm:clear Alt:clear [HOT5_5] Nrm:clear Alt:clear [HOT5_6] Nrm:clear Alt:clear [HOT5_7] Nrm:clear Alt:clear [HOT5_8] Nrm:clear Alt:clear [HOT5_9] Nrm:clear Alt:clear [HOT5_10] Nrm:clear Alt:clear [HOT5_11] Nrm:clear Alt:clear [HOT5_12] Nrm:clear Alt:clear [HOT6_1] Nrm:clear Alt:clear [HOT6_2] Nrm:clear Alt:clear [HOT6_3] Nrm:clear Alt:clear [HOT6_4] Nrm:clear Alt:clear [HOT6_5] Nrm:clear Alt:clear [HOT6_6] Nrm:clear Alt:clear [HOT6_7] Nrm:clear Alt:clear [HOT6_8] Nrm:clear Alt:clear [HOT6_9] Nrm:clear Alt:clear [HOT6_10] Nrm:clear Alt:clear [HOT6_11] Nrm:clear Alt:clear [HOT6_12] Nrm:clear Alt:clear [HOT7_1] Nrm:clear Alt:clear [HOT7_2] Nrm:clear Alt:clear [HOT7_3] Nrm:clear Alt:clear [HOT7_4] Nrm:clear Alt:clear [HOT7_5] Nrm:clear Alt:clear [HOT7_6] Nrm:clear Alt:clear [HOT7_7] Nrm:clear Alt:clear [HOT7_8] Nrm:clear Alt:clear [HOT7_9] Nrm:clear Alt:clear [HOT7_10] Nrm:clear Alt:clear [HOT7_11] Nrm:clear Alt:clear [HOT7_12] Nrm:clear Alt:clear [HOT8_1] Nrm:clear Alt:clear [HOT8_2] Nrm:clear Alt:clear [HOT8_3] Nrm:clear Alt:clear [HOT8_4] Nrm:clear Alt:clear [HOT8_5] Nrm:clear Alt:clear [HOT8_6] Nrm:clear Alt:clear [HOT8_7] Nrm:clear Alt:clear [HOT8_8] Nrm:clear Alt:clear [HOT8_9] Nrm:clear Alt:clear [HOT8_10] Nrm:clear Alt:clear [HOT8_11] Nrm:clear Alt:clear [HOT8_12] Nrm:clear Alt:clear [HOT9_1] Nrm:clear Alt:clear [HOT9_2] Nrm:clear Alt:clear [HOT9_3] Nrm:clear Alt:clear [HOT9_4] Nrm:clear Alt:clear [HOT9_5] Nrm:clear Alt:clear [HOT9_6] Nrm:clear Alt:clear [HOT9_7] Nrm:clear Alt:clear [HOT9_8] Nrm:clear Alt:clear [HOT9_9] Nrm:clear Alt:clear [HOT9_10] Nrm:clear Alt:clear [HOT9_11] Nrm:clear Alt:clear [HOT9_12] Nrm:clear Alt:clear [HOT10_1] Nrm:clear Alt:clear [HOT10_2] Nrm:clear Alt:clear [HOT10_3] Nrm:clear Alt:clear [HOT10_4] Nrm:clear Alt:clear [HOT10_5] Nrm:clear Alt:clear [HOT10_6] Nrm:clear Alt:clear [HOT10_7] Nrm:clear Alt:clear [HOT10_8] Nrm:clear Alt:clear [HOT10_9] Nrm:clear Alt:clear [HOT10_10] Nrm:clear Alt:clear [HOT10_11] Nrm:clear Alt:clear [HOT10_12] Nrm:clear Alt:clear [HOTPAGE1_1] Nrm:shift+1 Alt:clear [HOTPAGE1_2] Nrm:shift+2 Alt:clear [HOTPAGE1_3] Nrm:shift+3 Alt:clear [HOTPAGE1_4] Nrm:shift+4 Alt:clear [HOTPAGE1_5] Nrm:shift+5 Alt:clear [HOTPAGE1_6] Nrm:shift+6 Alt:clear [HOTPAGE1_7] Nrm:shift+7 Alt:clear [HOTPAGE1_8] Nrm:shift+8 Alt:clear [HOTPAGE1_9] Nrm:shift+9 Alt:clear [HOTPAGE1_10] Nrm:shift+0 Alt:clear [HOTPAGE2_1] Nrm:clear Alt:clear [HOTPAGE2_2] Nrm:clear Alt:clear [HOTPAGE2_3] Nrm:clear Alt:clear [HOTPAGE2_4] Nrm:clear Alt:clear [HOTPAGE2_5] Nrm:clear Alt:clear [HOTPAGE2_6] Nrm:clear Alt:clear [HOTPAGE2_7] Nrm:clear Alt:clear [HOTPAGE2_8] Nrm:clear Alt:clear [HOTPAGE2_9] Nrm:clear Alt:clear [HOTPAGE2_10] Nrm:clear Alt:clear [HOTPAGE3_1] Nrm:clear Alt:clear [HOTPAGE3_2] Nrm:clear Alt:clear [HOTPAGE3_3] Nrm:clear Alt:clear [HOTPAGE3_4] Nrm:clear Alt:clear [HOTPAGE3_5] Nrm:clear Alt:clear [HOTPAGE3_6] Nrm:clear Alt:clear [HOTPAGE3_7] Nrm:clear Alt:clear [HOTPAGE3_8] Nrm:clear Alt:clear [HOTPAGE3_9] Nrm:clear Alt:clear [HOTPAGE3_10] Nrm:clear Alt:clear [HOTPAGE4_1] Nrm:clear Alt:clear [HOTPAGE4_2] Nrm:clear Alt:clear [HOTPAGE4_3] Nrm:clear Alt:clear [HOTPAGE4_4] Nrm:clear Alt:clear [HOTPAGE4_5] Nrm:clear Alt:clear [HOTPAGE4_6] Nrm:clear Alt:clear [HOTPAGE4_7] Nrm:clear Alt:clear [HOTPAGE4_8] Nrm:clear Alt:clear [HOTPAGE4_9] Nrm:clear Alt:clear [HOTPAGE4_10] Nrm:clear Alt:clear [HOTPAGE5_1] Nrm:clear Alt:clear [HOTPAGE5_2] Nrm:clear Alt:clear [HOTPAGE5_3] Nrm:clear Alt:clear [HOTPAGE5_4] Nrm:clear Alt:clear [HOTPAGE5_5] Nrm:clear Alt:clear [HOTPAGE5_6] Nrm:clear Alt:clear [HOTPAGE5_7] Nrm:clear Alt:clear [HOTPAGE5_8] Nrm:clear Alt:clear [HOTPAGE5_9] Nrm:clear Alt:clear [HOTPAGE5_10] Nrm:clear Alt:clear [HOTPAGE6_1] Nrm:clear Alt:clear [HOTPAGE6_2] Nrm:clear Alt:clear [HOTPAGE6_3] Nrm:clear Alt:clear [HOTPAGE6_4] Nrm:clear Alt:clear [HOTPAGE6_5] Nrm:clear Alt:clear [HOTPAGE6_6] Nrm:clear Alt:clear [HOTPAGE6_7] Nrm:clear Alt:clear [HOTPAGE6_8] Nrm:clear Alt:clear [HOTPAGE6_9] Nrm:clear Alt:clear [HOTPAGE6_10] Nrm:clear Alt:clear [HOTPAGE7_1] Nrm:clear Alt:clear [HOTPAGE7_2] Nrm:clear Alt:clear [HOTPAGE7_3] Nrm:clear Alt:clear [HOTPAGE7_4] Nrm:clear Alt:clear [HOTPAGE7_5] Nrm:clear Alt:clear [HOTPAGE7_6] Nrm:clear Alt:clear [HOTPAGE7_7] Nrm:clear Alt:clear [HOTPAGE7_8] Nrm:clear Alt:clear [HOTPAGE7_9] Nrm:clear Alt:clear [HOTPAGE7_10] Nrm:clear Alt:clear [HOTPAGE8_1] Nrm:clear Alt:clear [HOTPAGE8_2] Nrm:clear Alt:clear [HOTPAGE8_3] Nrm:clear Alt:clear [HOTPAGE8_4] Nrm:clear Alt:clear [HOTPAGE8_5] Nrm:clear Alt:clear [HOTPAGE8_6] Nrm:clear Alt:clear [HOTPAGE8_7] Nrm:clear Alt:clear [HOTPAGE8_8] Nrm:clear Alt:clear [HOTPAGE8_9] Nrm:clear Alt:clear [HOTPAGE8_10] Nrm:clear Alt:clear [HOTPAGE9_1] Nrm:clear Alt:clear [HOTPAGE9_2] Nrm:clear Alt:clear [HOTPAGE9_3] Nrm:clear Alt:clear [HOTPAGE9_4] Nrm:clear Alt:clear [HOTPAGE9_5] Nrm:clear Alt:clear [HOTPAGE9_6] Nrm:clear Alt:clear [HOTPAGE9_7] Nrm:clear Alt:clear [HOTPAGE9_8] Nrm:clear Alt:clear [HOTPAGE9_9] Nrm:clear Alt:clear [HOTPAGE9_10] Nrm:clear Alt:clear [HOTPAGE10_1] Nrm:clear Alt:clear [HOTPAGE10_2] Nrm:clear Alt:clear [HOTPAGE10_3] Nrm:clear Alt:clear [HOTPAGE10_4] Nrm:clear Alt:clear [HOTPAGE10_5] Nrm:clear Alt:clear [HOTPAGE10_6] Nrm:clear Alt:clear [HOTPAGE10_7] Nrm:clear Alt:clear [HOTPAGE10_8] Nrm:clear Alt:clear [HOTPAGE10_9] Nrm:clear Alt:clear [HOTPAGE10_10] Nrm:clear Alt:clear [CAST1] Nrm:alt+1 Alt:clear [CAST2] Nrm:alt+2 Alt:clear [CAST3] Nrm:alt+3 Alt:clear [CAST4] Nrm:alt+4 Alt:clear [CAST5] Nrm:alt+5 Alt:clear [CAST6] Nrm:alt+6 Alt:clear [CAST7] Nrm:alt+7 Alt:clear [CAST8] Nrm:alt+8 Alt:clear [CAST9] Nrm:alt+9 Alt:clear [CAST10] Nrm:alt+0 Alt:clear [CAST11] Nrm:alt+- Alt:clear [CAST12] Nrm:alt+= Alt:clear [REPLY] Nrm:T Alt:clear [CYCLEREPLY] Nrm:Tab Alt:clear [CYCLEREPLY_BACK] Nrm:shift+Tab Alt:clear [BACKDROP] Nrm:clear Alt:clear [TOGGLETARGET] Nrm:clear Alt:clear [SPELLBOOK] Nrm:ctrl+B Alt:clear [ABILITIES] Nrm:ctrl+A Alt:clear [COMBAT] Nrm:ctrl+C Alt:clear [SOCIALS] Nrm:ctrl+O Alt:clear [MAIN] Nrm:ctrl+M Alt:clear [WHO] Nrm:ctrl+W Alt:clear [INVITE_FOLLOW] Nrm:ctrl+I Alt:clear [DISBAND] Nrm:ctrl+D Alt:clear [CAMP] Nrm:ctrl+X Alt:clear [SIT_STAND] Nrm:ctrl+S Alt:clear [RUN_WALK] Nrm:ctrl+R Alt:clear [CLIP_IN] Nrm:shift+- Alt:clear [CLIP_OUT] Nrm:shift+= Alt:clear [VOICE_ON] Nrm:Num_Plus Alt:clear [SCREENCAP] Nrm:Num_Minus Alt:clear [HISTORY_UP] Nrm:shift+Num_8 Alt:shift+Up [HISTORY_DOWN] Nrm:shift+Num_2 Alt:shift+Down [PAGEUP] Nrm:shift+Num_9 Alt:shift+Page_Up [PAGEDOWN] Nrm:shift+Num_3 Alt:shift+Page_Down [CMDMODE_SAY] Nrm:clear Alt:clear [CMDMODE_EMOTE] Nrm:shift+; Alt:clear [LOCK_WINDOWS] Nrm:clear Alt:clear [TOGGLE_PLAYERWIN] Nrm:alt+Y Alt:clear [TOGGLE_PARTYWIN] Nrm:alt+P Alt:clear [TOGGLE_TARGETWIN] Nrm:alt+T Alt:clear [TOGGLE_SPELLSWIN] Nrm:alt+S Alt:clear [TOGGLE_BUFFWIN] Nrm:alt+B Alt:clear [TOGGLE_HOTBOX1WIN] Nrm:alt+H Alt:clear [TOGGLE_HOTBOX2WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX3WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX4WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX5WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX6WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX7WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX8WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX9WIN] Nrm:clear Alt:clear [TOGGLE_HOTBOX10WIN] Nrm:clear Alt:clear [TOGGLE_CHATWIN] Nrm:clear Alt:clear [TOGGLE_MAILWIN] Nrm:ctrl+E Alt:clear [TOGGLE_MAILCOMPWIN] Nrm:ctrl+N Alt:clear [TOGGLE_MAINMENUWIN] Nrm:alt+M Alt:clear [TOGGLE_ALTADVWIN] Nrm:V Alt:clear [TOGGLE_BAZAARWIN] Nrm:alt+I Alt:clear [RTARGET] Nrm:ctrl+T Alt:clear [TOGGLE_FRIENDSWIN] Nrm:alt+F Alt:clear [TOGGLE_PETINFOWIN] Nrm:alt+F1 Alt:clear [TOGGLE_OPTIONSWIN] Nrm:alt+O Alt:clear [TOGGLE_HELPWIN] Nrm:clear Alt:clear [TOGGLE_SELECTORWIN] Nrm:alt+W Alt:clear [TOGGLE_VIDEOMODEWIN] Nrm:clear Alt:clear [TOGGLE_BAZAARSEARCHWIN] Nrm:alt+A Alt:clear [TOGGLE_COMPASSWIN] Nrm:alt+D Alt:clear [TOGGLE_RAIDWIN] Nrm:alt+R Alt:clear [TOGGLE_MUSICPLAYERWIN] Nrm:alt+K Alt:clear [FORWARD_CAM] Nrm:alt+Num_8 Alt:alt+Up [BACK_CAM] Nrm:alt+Num_2 Alt:alt+Down [RIGHT_CAM] Nrm:alt+Num_6 Alt:alt+Right [LEFT_CAM] Nrm:alt+Num_4 Alt:alt+Left [PITCHUP_CAM] Nrm:alt+Num_9 Alt:alt+Page_Up [PITCHDOWN_CAM] Nrm:alt+Num_3 Alt:alt+Page_Down [TOGGLE_JOURNAL] Nrm:alt+J Alt:clear [TOGGLE_SDBUFFWIN] Nrm:alt+E Alt:clear [RELEASE_MOUSE_CURSOR] Nrm:shift+alt+R Alt:clear [TOGGLE_STORYWIN] Nrm:alt+N Alt:clear [TOGGLE_MAPWIN] Nrm:Backspace Alt:M [TOGGLE_GUILDMGMTWIN] Nrm:alt+G Alt:clear [TOGGLE_FELLOWSHIPWIN] Nrm:shift+ctrl+F Alt:clear [TOGGLE_LFGROUPWIN] Nrm:clear Alt:clear [TOGGLE_LFGUILDWIN] Nrm:clear Alt:clear [TOGGLETWOTARGETS] Nrm:clear Alt:clear [TOGGLE_CONTEXTMENUS] Nrm:clear Alt:clear [FIRST_PERSON_CAMERA] Nrm:clear Alt:clear [OVERHEAD_CAMERA] Nrm:clear Alt:clear [CHASE_CAMERA] Nrm:clear Alt:clear [USER1_CAMERA] Nrm:clear Alt:clear [USER2_CAMERA] Nrm:clear Alt:clear [TETHER_CAMERA] Nrm:clear Alt:clear [TOGGLE_ADVREQUESTWIN] Nrm:alt+V Alt:clear [CLOSE_TOP_WINDOW] Nrm:Esc Alt:clear [CLEAR_TARGET] Nrm:Esc Alt:clear [CMD_TOGGLE_FIND_WINDOW] Nrm:ctrl+F Alt:clear [TOGGLE_LEADERSHIPWIN] Nrm:clear Alt:clear [TOGGLE_TRIBUTEBENEFITWIN] Nrm:alt+U Alt:clear [CMD_OPENING_ATTACK1] Nrm:ctrl+1 Alt:clear [CMD_OPENING_ATTACK2] Nrm:ctrl+2 Alt:clear [CMD_OPENING_ATTACK3] Nrm:ctrl+3 Alt:clear [CMD_OPENING_ATTACK4] Nrm:ctrl+4 Alt:clear [CMD_OPENING_ATTACK5] Nrm:ctrl+5 Alt:clear [CMD_OPENING_ATTACK6] Nrm:ctrl+6 Alt:clear [CMD_OPENING_ATTACK7] Nrm:ctrl+7 Alt:clear [CMD_OPENING_ATTACK8] Nrm:ctrl+8 Alt:clear [CMD_TOGGLE_COMBAT_ABILITY_WIN] Nrm:alt+C Alt:clear [CMD_TOGGLE_DYNAMIC_ZONE_WIN] Nrm:alt+Z Alt:clear [CMD_TOGGLE_PVP_LEADERBOARD] Nrm:ctrl+P Alt:clear [CMD_TOGGLETASKWIN] Nrm:alt+Q Alt:clear [CMD_TOGGLE_TICKET_WND] Nrm:P Alt:clear [CMD_STOP_CAST] Nrm:shift+S Alt:clear [CMD_TOGGLEVOICEWIN] Nrm:clear Alt:clear [CMD_TOGGLE_TITLE_WND] Nrm:shift+T Alt:clear [POTION_SLOT_1] Nrm:clear Alt:clear [POTION_SLOT_2] Nrm:clear Alt:clear [POTION_SLOT_3] Nrm:clear Alt:clear [POTION_SLOT_4] Nrm:clear Alt:clear [TOGGLE_POTION_BELT] Nrm:shift+P Alt:clear [TOGGLE_BANDOLIER] Nrm:B Alt:clear [OPEN_INV_BAGS] Nrm:clear Alt:clear [CLOSE_INV_BAGS] Nrm:clear Alt:clear [TOGGLE_INV_BAGS] Nrm:shift+B Alt:clear [TOGGLE_SKILLS_WND] Nrm:clear Alt:clear [OPEN_ETN_HELP] Nrm:clear Alt:clear [CMD_TOGGLE_BLOCKEDBUFFWIN] Nrm:clear Alt:clear [CMD_TOGGLE_AUDIO_TRIGGER_WINDOW] Nrm:clear Alt:clear [CMD_CLIPBOARD_PASTE] Nrm:ctrl+V Alt:clear [CMD_OPEN_EQPLAYERS] Nrm:clear Alt:clear [CMD_TOGGLE_AURAWND] Nrm:shift+A Alt:clear [CMD_TOGGLE_BLOCKEDPETBUFFWIN] Nrm:clear Alt:clear [CMD_TOGGLE_REWARD_SELECTION_WIN] Nrm:clear Alt:clear [CMD_TOGGLE_CLAIM_WIN] Nrm:shift+C Alt:clear [CMD_TOGGLE_VOICE_BAR] Nrm:clear Alt:clear [CMD_TOGGLE_AS_LIST] Nrm:clear Alt:clear [CMD_PUSH_TO_TALK] Nrm:ctrl+Tab Alt:clear [CMD_PUSH_TO_TALK_SAY] Nrm:clear Alt:clear [CMD_PUSH_TO_TALK_GROUP] Nrm:clear Alt:clear [CMD_PUSH_TO_TALK_RAID] Nrm:clear Alt:clear [CMD_PUSH_TO_TALK_GUILD] Nrm:clear Alt:clear [CMD_MERCENARIES] Nrm:clear Alt:clear [CMD_MARKETPLACE] Nrm:clear Alt:clear [CMD_WELCOMESCREEN] Nrm:clear Alt:clear [CMD_EXTENDED_TARGET_WINDOW] Nrm:ctrl+alt+T Alt:clear [CMD_ACHIEVEMENT_WINDOW] Nrm:clear Alt:clear [TARGET_XTARGET_1] Nrm:clear Alt:clear [TARGET_XTARGET_2] Nrm:clear Alt:clear [TARGET_XTARGET_3] Nrm:clear Alt:clear [TARGET_XTARGET_4] Nrm:clear Alt:clear [TARGET_XTARGET_5] Nrm:clear Alt:clear [TARGET_XTARGET_6] Nrm:clear Alt:clear [TARGET_XTARGET_7] Nrm:clear Alt:clear [TARGET_XTARGET_8] Nrm:clear Alt:clear [TARGET_XTARGET_9] Nrm:clear Alt:clear [TARGET_XTARGET_10] Nrm:clear Alt:clear [TARGET_XTARGET_11] Nrm:clear Alt:clear [TARGET_XTARGET_12] Nrm:clear Alt:clear [TARGET_XTARGET_13] Nrm:clear Alt:clear [TARGET_XTARGET_14] Nrm:clear Alt:clear [TARGET_XTARGET_15] Nrm:clear Alt:clear [TARGET_XTARGET_16] Nrm:clear Alt:clear [TARGET_XTARGET_17] Nrm:clear Alt:clear [TARGET_XTARGET_18] Nrm:clear Alt:clear [TARGET_XTARGET_19] Nrm:clear Alt:clear [TARGET_XTARGET_20] Nrm:clear Alt:clear [ADD_XTARGET] Nrm:clear Alt:clear [REMOVE_XTARGET] Nrm:clear Alt:clear [CYCLE_XTARGET] Nrm:clear Alt:clear [REMOVE_XTARGET_BY_SLOT] Nrm:clear Alt:clear [CMD_REAL_ESTATE_ITEMS_WINDOW] Nrm:shift+I Alt:clear [CMD_REAL_ESTATE_MANAGE_WINDOW] Nrm:clear Alt:clear [CMD_REAL_ESTATE_TROPHIES_WINDOW] Nrm:clear Alt:clear [CMD_REAL_ESTATE_PLOT_SEARCH_WINDOW] Nrm:clear Alt:clear [CMD_REAL_ESTATE_HELP_WINDOW] Nrm:clear Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_TOGGLE_MODE] Nrm:shift+Z Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_SET_MODE_COLLISION] Nrm:clear Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_SET_MODE_WALL] Nrm:clear Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_SET_MODE_CURSOR] Nrm:clear Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_SET_MODE_FREE] Nrm:clear Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_RESET_ITEM_MOUSE_X_ROTATION] Nrm:shift+Q Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_RESET_ITEM_MOUSE_Y_ROTATION] Nrm:shift+W Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_RESET_ITEM_WHEEL_ROTATION] Nrm:shift+E Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_RESET_ITEM_SIZE] Nrm:shift+R Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_ROTATE_ITEM_MOUSE_X_ROTATION_90_DEGREES] Nrm:shift+D Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_ROTATE_ITEM_MOUSE_Y_ROTATION_90_DEGREES] Nrm:shift+F Alt:clear [CMD_REAL_ESTATE_ITEM_PLACEMENT_ROTATE_ITEM_WHEEL_ROTATION_90_DEGREES] Nrm:shift+G Alt:clear [CMD_REAL_ESTATE_LEAVE] Nrm:clear Alt:clear [CMD_VOTE_RESULTS] Nrm:shift+V Alt:clear [CMD_TOGGLE_TCG] Nrm:clear Alt:clear [CMD_MOVE_DOWN] Nrm:D Alt:clear [CMD_STOP_ACTION] Nrm:clear Alt:clear [POTION_SLOT_5] Nrm:clear Alt:clear [CMD_TOGGLE_ALARM] Nrm:clear Alt:clear [CMD_TOGGLE_BANK_BAGS] Nrm:clear Alt:clear [TOGGLE_ZONE_GUIDE_WINDOW] Nrm:clear Alt:clear [TOGGLE_ZONE_PATH_WINDOW] Nrm:clear Alt:clear [CMD_MARKETPLACE_SILVER] Nrm:clear Alt:clear [CMD_MARKETPLACE_GOLD] Nrm:clear Alt:clear [CMD_HISTORIC_ALERTS] Nrm:shift+H Alt:clear [CMD_SOCIAL_SHARE] Nrm:shift+ctrl+S Alt:clear [CMD_TOGGLE_AGGRO] Nrm:clear Alt:clear [CMD_LOCK_AGGRO] Nrm:clear Alt:clear [CMD_TOGGLE_BARTER_SEARCH] Nrm:clear Alt:clear [CMD_OPEN_URL] Nrm:clear Alt:clear [CMD_TOGGLE_TARGETOFTARGETWIN] Nrm:ctrl+U Alt:clear [CMD_RAID_DELEGATE_MAIN_ASSIST] Nrm:clear Alt:clear [CMD_INSPECT_BUFFS] Nrm:clear Alt:clear [CMD_GROUP_DELEGATE_MARK_NPC] Nrm:clear Alt:clear [CMD_RAID_DELEGATE_MARK_NPC] Nrm:clear Alt:clear [CMD_GROUP_MARK_NPC_1] Nrm:clear Alt:clear [CMD_GROUP_MARK_NPC_2] Nrm:clear Alt:clear [CMD_GROUP_MARK_NPC_3] Nrm:clear Alt:clear [CMD_RAID_MARK_NPC_1] Nrm:clear Alt:clear [CMD_RAID_MARK_NPC_2] Nrm:clear Alt:clear [CMD_RAID_MARK_NPC_3] Nrm:clear Alt:clear [CMD_FIND_PC_GROUP_RAID] Nrm:clear Alt:clear [CMD_TOGGLE_KEYRINGS] Nrm:clear Alt:clear [CMD_GROUP_DELEGATE_MASTER_LOOTER] Nrm:clear Alt:clear [CMD_RAID_DELEGATE_MASTER_LOOTER] Nrm:clear Alt:clear [CMD_TOGGLE_ADVANCED_LOOT_WIN] Nrm:clear Alt:clear [CMD_TOGGLE_PICKZONE_WIN] Nrm:clear Alt:clear [CMD_TOGGLE_TASK_OVERLAY_WIN] Nrm:clear Alt:clear [TOGGLE_FPS] Nrm:F Alt:clear [TOGGLE_AVATAR] Nrm:Z Alt:clear [TOGGLE_PETITION] Nrm:G Alt:clear [TOGGLE_MEMINFO] Nrm:clear Alt:clear [FLY_UP] Nrm:clear Alt:clear [FLY_DOWN] Nrm:clear Alt:clear [ADD_ROUTE] Nrm:clear Alt:clear [LAY_PPOINT] Nrm:clear Alt:clear [LAY_LINK] Nrm:clear Alt:clear [CONFIRM_YES] Nrm:clear Alt:clear [CONFIRM_NO] Nrm:clear Alt:clear [TARGET_PREV_NPC] Nrm:clear Alt:clear [TARGET_NEXT_NPC] Nrm:clear Alt:clear [ROTATE_STATS] Nrm:ctrl+alt+F Alt:clear [TOGGLE_NPC_TUNE] Nrm:alt+X Alt:clear [TOGGLEQAMARKER] Nrm:clear Alt:clear -------------- End EQ Binds","title":"EQUI Keybindings List"},{"location":"reference/commands/listmacros/","tags":["command"],"text":"/listmacros \u00b6 Syntax \u00b6 /listmacros [ filter ] Description \u00b6 Lists all files in the \"Macros\" directory that match filter Results are sorted alphabetically","title":"/listmacros"},{"location":"reference/commands/listmacros/#listmacros","text":"","title":"/listmacros"},{"location":"reference/commands/listmacros/#syntax","text":"/listmacros [ filter ]","title":"Syntax"},{"location":"reference/commands/listmacros/#description","text":"Lists all files in the \"Macros\" directory that match filter Results are sorted alphabetically","title":"Description"},{"location":"reference/commands/loadcfg/","tags":["command"],"text":"/loadcfg \u00b6 Syntax \u00b6 /loadcfg filename Description \u00b6 Loads the specified .cfg file. Plugins can use LoadCfgFile(filename) Some cfg files are loaded automatically. You may use /loadcfg to load them at your own desire. autoexec.cfg Executed on the first pulse - **charselect.cfg** Executed when you enter character select - **server_character.cfg** Executed when this *character* on *server* enters the world - **mapshortname.cfg** Executed upon entering the zone *mapshortname* - **pluginname-autoexec.cfg** Executed when this plugin is loaded (after its initialization is complete) Examples \u00b6 bertox_mycharacter.cfg Config file that will load for Mycharacter on the Bertox server when she first enters world. oot.cfg, soldungb.cfg, soldunga.cfg, take.cfg Config file that will load when entering a specific zone","title":"/loadcfg"},{"location":"reference/commands/loadcfg/#loadcfg","text":"","title":"/loadcfg"},{"location":"reference/commands/loadcfg/#syntax","text":"/loadcfg filename","title":"Syntax"},{"location":"reference/commands/loadcfg/#description","text":"Loads the specified .cfg file. Plugins can use LoadCfgFile(filename) Some cfg files are loaded automatically. You may use /loadcfg to load them at your own desire. autoexec.cfg Executed on the first pulse - **charselect.cfg** Executed when you enter character select - **server_character.cfg** Executed when this *character* on *server* enters the world - **mapshortname.cfg** Executed upon entering the zone *mapshortname* - **pluginname-autoexec.cfg** Executed when this plugin is loaded (after its initialization is complete)","title":"Description"},{"location":"reference/commands/loadcfg/#examples","text":"bertox_mycharacter.cfg Config file that will load for Mycharacter on the Bertox server when she first enters world. oot.cfg, soldungb.cfg, soldunga.cfg, take.cfg Config file that will load when entering a specific zone","title":"Examples"},{"location":"reference/commands/loadspells/","tags":["command"],"text":"/loadspells \u00b6 /loadspells spellset Loads the specified spellset. This is the same as the EQ command /memspellset, with the addition that it only memorizes the spellset if it is not already memorized. This command was part of MQ2 long before EQ added the same functionality. /loadspells list Lists all of your saved spellsets. /loadspells list spellset List the spells in the specified spellset.","title":"/loadspells"},{"location":"reference/commands/loadspells/#loadspells","text":"/loadspells spellset Loads the specified spellset. This is the same as the EQ command /memspellset, with the addition that it only memorizes the spellset if it is not already memorized. This command was part of MQ2 long before EQ added the same functionality. /loadspells list Lists all of your saved spellsets. /loadspells list spellset List the spells in the specified spellset.","title":"/loadspells"},{"location":"reference/commands/location/","tags":["command"],"text":"/location \u00b6 Syntax \u00b6 /location Description \u00b6 Returns your Y, X, Z location and the cardinal direction you are facing. Example Output \u00b6 Your Location is 100, 200, 10, and are heading south.","title":"/location"},{"location":"reference/commands/location/#location","text":"","title":"/location"},{"location":"reference/commands/location/#syntax","text":"/location","title":"Syntax"},{"location":"reference/commands/location/#description","text":"Returns your Y, X, Z location and the cardinal direction you are facing.","title":"Description"},{"location":"reference/commands/location/#example-output","text":"Your Location is 100, 200, 10, and are heading south.","title":"Example Output"},{"location":"reference/commands/loginname/","tags":["command"],"text":"/loginname \u00b6 Syntax \u00b6 /loginname Description \u00b6 Displays the login name of the account you are currently logged into.","title":"/loginname"},{"location":"reference/commands/loginname/#loginname","text":"","title":"/loginname"},{"location":"reference/commands/loginname/#syntax","text":"/loginname","title":"Syntax"},{"location":"reference/commands/loginname/#description","text":"Displays the login name of the account you are currently logged into.","title":"Description"},{"location":"reference/commands/look/","tags":["command"],"text":"/look \u00b6 Syntax \u00b6 /look [ - angle ] Description \u00b6 Changes the angle you are looking. Angle can be any value between -128 (directly down) and 128 \\(directly up\\) . The default for angle is 0 (straight ahead). Examples \u00b6 Changes your look angle to +50 /look 50 Changes your look angle to -75 (down) /look -75","title":"/look"},{"location":"reference/commands/look/#look","text":"","title":"/look"},{"location":"reference/commands/look/#syntax","text":"/look [ - angle ]","title":"Syntax"},{"location":"reference/commands/look/#description","text":"Changes the angle you are looking. Angle can be any value between -128 (directly down) and 128 \\(directly up\\) . The default for angle is 0 (straight ahead).","title":"Description"},{"location":"reference/commands/look/#examples","text":"Changes your look angle to +50 /look 50 Changes your look angle to -75 (down) /look -75","title":"Examples"},{"location":"reference/commands/lootall/","tags":["command"],"text":"/lootall \u00b6 Syntax \u00b6 /lootall Description \u00b6 /lootall allows you to loot everything on the corpse that is not No Trade. You must manually loot those unless you have /lootnodrop set to never. Using /lootall will loot everything on the corpse automatically unless there is more than one No Trade item on it. In this case, you will have to loot everything (including the item \\(s\\) that are not No Trade) manually. Examples \u00b6 Will loot everything : Slot 1: Diamond Slot 2: Jacinth Slot 3: No Trade Item Will not loot everything : Slot 1: Diamond Slot 2: Jacinth Slot 3: No Trade Item Slot 4: No Trade Item","title":"/lootall"},{"location":"reference/commands/lootall/#lootall","text":"","title":"/lootall"},{"location":"reference/commands/lootall/#syntax","text":"/lootall","title":"Syntax"},{"location":"reference/commands/lootall/#description","text":"/lootall allows you to loot everything on the corpse that is not No Trade. You must manually loot those unless you have /lootnodrop set to never. Using /lootall will loot everything on the corpse automatically unless there is more than one No Trade item on it. In this case, you will have to loot everything (including the item \\(s\\) that are not No Trade) manually.","title":"Description"},{"location":"reference/commands/lootall/#examples","text":"Will loot everything : Slot 1: Diamond Slot 2: Jacinth Slot 3: No Trade Item Will not loot everything : Slot 1: Diamond Slot 2: Jacinth Slot 3: No Trade Item Slot 4: No Trade Item","title":"Examples"},{"location":"reference/commands/macro/","tags":["command"],"text":"/macro \u00b6 Syntax \u00b6 /macro filename [ param0 ** _**param1**_ **\\[... ]] Description \u00b6 Starts running a macro. Optional parameters can be added to the end of the /macro line, and the parameters will be passed to Sub Main within that macro. Notes Calling a macro from another macro will end the calling macro. **Invoking a /macro from within a macro will cause the first line to be skipped in the new macro. Deal with it.</span>** Examples \u00b6 /macro mymacro /macro mymacro \"water flask\" \"metal bits\"","title":"/macro"},{"location":"reference/commands/macro/#macro","text":"","title":"/macro"},{"location":"reference/commands/macro/#syntax","text":"/macro filename [ param0 ** _**param1**_ **\\[... ]]","title":"Syntax"},{"location":"reference/commands/macro/#description","text":"Starts running a macro. Optional parameters can be added to the end of the /macro line, and the parameters will be passed to Sub Main within that macro. Notes Calling a macro from another macro will end the calling macro. **Invoking a /macro from within a macro will cause the first line to be skipped in the new macro. Deal with it.</span>**","title":"Description"},{"location":"reference/commands/macro/#examples","text":"/macro mymacro /macro mymacro \"water flask\" \"metal bits\"","title":"Examples"},{"location":"reference/commands/makemevisible/","tags":["command"],"text":"/makemevisible \u00b6 Syntax \u00b6 /makemevisible Description \u00b6 This will make your toon visible Example \u00b6 /makemevisible","title":"/makemevisible"},{"location":"reference/commands/makemevisible/#makemevisible","text":"","title":"/makemevisible"},{"location":"reference/commands/makemevisible/#syntax","text":"/makemevisible","title":"Syntax"},{"location":"reference/commands/makemevisible/#description","text":"This will make your toon visible","title":"Description"},{"location":"reference/commands/makemevisible/#example","text":"/makemevisible","title":"Example"},{"location":"reference/commands/memspell/","tags":["command"],"text":"/memspell \u00b6 /memspell # \" spellname \" Attempts to memorize \" spellname \" into gem #. Any spellname with more than one word must be surrounded by quotes. Example \u00b6 /memspell 1 \"Shallow Breath\"","title":"/memspell"},{"location":"reference/commands/memspell/#memspell","text":"/memspell # \" spellname \" Attempts to memorize \" spellname \" into gem #. Any spellname with more than one word must be surrounded by quotes.","title":"/memspell"},{"location":"reference/commands/memspell/#example","text":"/memspell 1 \"Shallow Breath\"","title":"Example"},{"location":"reference/commands/mouseto/","tags":["command"],"text":"/mouseto \u00b6 Syntax \u00b6 /mouseto <X or X offset> [Y or Y offset] Description \u00b6 Moves the mouse to the specified location. When an absolute location is specified (a number from 0 through 9) the mouse is moved to the absolute position. When a relative position is specified (using - or + in front of the X or Y) the mouse is moved by that offset. Examples \u00b6 Move the mouse to X=1 Y=1 /mouseto 1 1 Move the mouse by 1 positive unit vertically and horizontally /mouseto +1 +1","title":"/mouseto"},{"location":"reference/commands/mouseto/#mouseto","text":"","title":"/mouseto"},{"location":"reference/commands/mouseto/#syntax","text":"/mouseto <X or X offset> [Y or Y offset]","title":"Syntax"},{"location":"reference/commands/mouseto/#description","text":"Moves the mouse to the specified location. When an absolute location is specified (a number from 0 through 9) the mouse is moved to the absolute position. When a relative position is specified (using - or + in front of the X or Y) the mouse is moved by that offset.","title":"Description"},{"location":"reference/commands/mouseto/#examples","text":"Move the mouse to X=1 Y=1 /mouseto 1 1 Move the mouse by 1 positive unit vertically and horizontally /mouseto +1 +1","title":"Examples"},{"location":"reference/commands/mqcopylayout/","tags":["command"],"text":"/mqcopylayout \u00b6 Syntax \u00b6 /mqcopylayout | opt: (not specifying a res, will default to \"Windowed\")| nohot | noload | nosoc | none ] Description \u00b6 Uses MQ2 to copy a UI layout. Examples \u00b6 /mqcopylayout eqmule test Will Copy the layout from UI_eqmule_test.ini setting including hotbuttons loadouts and socials to your UI. Ok, so the default behaviour is to copy everything. Now if you wish to exclude stuff: /mqcopylayout eqmule test nohot Will Copy the layout from UI_eqmule_test.ini setting including loadouts and socials to your UI but NOT hotbuttons. /mqcopylayout eqmule test nohot noload Will Copy the layout from UI_eqmule_test.ini setting including socials to your UI but NOT hotbuttons and NOT loadouts. /mqcopylayout eqmule test nohot noload nosoc Will Copy the layout from UI_eqmule_test.ini setting excluding hotbuttons loadouts and socials to your UI. /mqcopylayout eqmule test none Will Copy the layout from UI_eqmule_test.ini setting excluding hotbuttons loadouts and socials to your UI. /mqcopylayout eqmule test ``res:1600x900 Will Copy the layout from UI_eqmule_test.ini setting including hotbuttons loadouts and socials to your 1600x900 UI (if that resolution actually exist in your UI ini).","title":"/mqcopylayout"},{"location":"reference/commands/mqcopylayout/#mqcopylayout","text":"","title":"/mqcopylayout"},{"location":"reference/commands/mqcopylayout/#syntax","text":"/mqcopylayout | opt: (not specifying a res, will default to \"Windowed\")| nohot | noload | nosoc | none ]","title":"Syntax"},{"location":"reference/commands/mqcopylayout/#description","text":"Uses MQ2 to copy a UI layout.","title":"Description"},{"location":"reference/commands/mqcopylayout/#examples","text":"/mqcopylayout eqmule test Will Copy the layout from UI_eqmule_test.ini setting including hotbuttons loadouts and socials to your UI. Ok, so the default behaviour is to copy everything. Now if you wish to exclude stuff: /mqcopylayout eqmule test nohot Will Copy the layout from UI_eqmule_test.ini setting including loadouts and socials to your UI but NOT hotbuttons. /mqcopylayout eqmule test nohot noload Will Copy the layout from UI_eqmule_test.ini setting including socials to your UI but NOT hotbuttons and NOT loadouts. /mqcopylayout eqmule test nohot noload nosoc Will Copy the layout from UI_eqmule_test.ini setting excluding hotbuttons loadouts and socials to your UI. /mqcopylayout eqmule test none Will Copy the layout from UI_eqmule_test.ini setting excluding hotbuttons loadouts and socials to your UI. /mqcopylayout eqmule test ``res:1600x900 Will Copy the layout from UI_eqmule_test.ini setting including hotbuttons loadouts and socials to your 1600x900 UI (if that resolution actually exist in your UI ini).","title":"Examples"},{"location":"reference/commands/mqlog/","tags":["command"],"text":"/mqlog \u00b6 Syntax \u00b6 /mqlog clear | text Description \u00b6 This will log text to a log file in the \"Logs\" directory Notes The log filename will be macroname.mac.log if run from within a macro The log filename will be MacroQuest.log if issued normally Example \u00b6 /mqlog The number of combines completed is: ${CombineCount}","title":"/mqlog"},{"location":"reference/commands/mqlog/#mqlog","text":"","title":"/mqlog"},{"location":"reference/commands/mqlog/#syntax","text":"/mqlog clear | text","title":"Syntax"},{"location":"reference/commands/mqlog/#description","text":"This will log text to a log file in the \"Logs\" directory Notes The log filename will be macroname.mac.log if run from within a macro The log filename will be MacroQuest.log if issued normally","title":"Description"},{"location":"reference/commands/mqlog/#example","text":"/mqlog The number of combines completed is: ${CombineCount}","title":"Example"},{"location":"reference/commands/mqpause/","tags":["command"],"text":"/mqpause \u00b6 Syntax \u00b6 /mqpause [ on | off ] Description \u00b6 Pauses/resumes a macro. Not using a parameter will toggle pausing on/off.","title":"/mqpause"},{"location":"reference/commands/mqpause/#mqpause","text":"","title":"/mqpause"},{"location":"reference/commands/mqpause/#syntax","text":"/mqpause [ on | off ]","title":"Syntax"},{"location":"reference/commands/mqpause/#description","text":"Pauses/resumes a macro. Not using a parameter will toggle pausing on/off.","title":"Description"},{"location":"reference/commands/mqtarget/","tags":["command"],"text":"/mqtarget \u00b6 Syntax \u00b6 /mqtarget option Description \u00b6 Targets whatever is matched by one or more of the following options : clear Clears your current target mycorpse Your own corpse (nearest) myself Target yourself Anything Else Anything else is considered a Spawn Search Examples \u00b6 /mqtarget npc radius 100 zradius 50 alert 1 /mqtarget pc range 30 35 lfg /mqtarget npc los radius 220 /mqtarget ${Spawn[alert 1]} /mqtarget ${Spawn[noalert 1]}","title":"/mqtarget"},{"location":"reference/commands/mqtarget/#mqtarget","text":"","title":"/mqtarget"},{"location":"reference/commands/mqtarget/#syntax","text":"/mqtarget option","title":"Syntax"},{"location":"reference/commands/mqtarget/#description","text":"Targets whatever is matched by one or more of the following options : clear Clears your current target mycorpse Your own corpse (nearest) myself Target yourself Anything Else Anything else is considered a Spawn Search","title":"Description"},{"location":"reference/commands/mqtarget/#examples","text":"/mqtarget npc radius 100 zradius 50 alert 1 /mqtarget pc range 30 35 lfg /mqtarget npc los radius 220 /mqtarget ${Spawn[alert 1]} /mqtarget ${Spawn[noalert 1]}","title":"Examples"},{"location":"reference/commands/multiline/","tags":["command"],"text":"/multiline \u00b6 Syntax \u00b6 /multiline delimiter command [ delimiter command [...] ] Description \u00b6 Executes multiple commands using a single line separated by the delimiter. Notes This is useful for keybinds There must be a space before and after the defined delimiter. e.g. /multiline ; command You do not need to put a space before and after the delimiter separating the individual commands The delimiter is 1 parameter, and the list of commands is 1 parameter, ergo you need a space separating the delimiter from the list of commands. The delimiter may be anything of your choosing e.g ; | word @ # ! * /call, /return and /delay are line based and their use on a /multiline line is unpredictable. Examples \u00b6 ; using one multline /if ( ${Target.ID} && ${Target.Type.Equal[NPC]} && !${Me.Combat} ) { /multiline ; /echo Attacking ${Target.DisplayName}; /attack on } ; use more than one multiline /multiline ; /target clear; /mqp on; /timed 200 /multiline | mqp off | /beep","title":"/multiline"},{"location":"reference/commands/multiline/#multiline","text":"","title":"/multiline"},{"location":"reference/commands/multiline/#syntax","text":"/multiline delimiter command [ delimiter command [...] ]","title":"Syntax"},{"location":"reference/commands/multiline/#description","text":"Executes multiple commands using a single line separated by the delimiter. Notes This is useful for keybinds There must be a space before and after the defined delimiter. e.g. /multiline ; command You do not need to put a space before and after the delimiter separating the individual commands The delimiter is 1 parameter, and the list of commands is 1 parameter, ergo you need a space separating the delimiter from the list of commands. The delimiter may be anything of your choosing e.g ; | word @ # ! * /call, /return and /delay are line based and their use on a /multiline line is unpredictable.","title":"Description"},{"location":"reference/commands/multiline/#examples","text":"; using one multline /if ( ${Target.ID} && ${Target.Type.Equal[NPC]} && !${Me.Combat} ) { /multiline ; /echo Attacking ${Target.DisplayName}; /attack on } ; use more than one multiline /multiline ; /target clear; /mqp on; /timed 200 /multiline | mqp off | /beep","title":"Examples"},{"location":"reference/commands/netstatusxpos/","tags":["command"],"text":"/netstatusxpos \u00b6 Syntax \u00b6 /netstatusxpos XXX Description \u00b6 used for moving the X coordinates of the Network Status Indicator","title":"/netstatusxpos"},{"location":"reference/commands/netstatusxpos/#netstatusxpos","text":"","title":"/netstatusxpos"},{"location":"reference/commands/netstatusxpos/#syntax","text":"/netstatusxpos XXX","title":"Syntax"},{"location":"reference/commands/netstatusxpos/#description","text":"used for moving the X coordinates of the Network Status Indicator","title":"Description"},{"location":"reference/commands/netstatusypos/","tags":["command"],"text":"/netstatusypos \u00b6 Syntax \u00b6 /netstatusypos XXX Description \u00b6 Used to change the Y coordinates of the Network Status Indicator","title":"/netstatusypos"},{"location":"reference/commands/netstatusypos/#netstatusypos","text":"","title":"/netstatusypos"},{"location":"reference/commands/netstatusypos/#syntax","text":"/netstatusypos XXX","title":"Syntax"},{"location":"reference/commands/netstatusypos/#description","text":"Used to change the Y coordinates of the Network Status Indicator","title":"Description"},{"location":"reference/commands/next/","tags":["command"],"text":"/next \u00b6 Syntax \u00b6 /for varname initial-value to|downto final-value [step interval ] /next varname Description \u00b6 This runs all commands between the /for line and the /next line, after which it increments/decrements the varname number (#1) by step number (#3) (default is 1) before running through the commands again. It will keep doing this until the varname number equals #2. You can end a /for loop immediately with /break or try the next iteration with /continue.","title":"/next"},{"location":"reference/commands/next/#next","text":"","title":"/next"},{"location":"reference/commands/next/#syntax","text":"/for varname initial-value to|downto final-value [step interval ] /next varname","title":"Syntax"},{"location":"reference/commands/next/#description","text":"This runs all commands between the /for line and the /next line, after which it increments/decrements the varname number (#1) by step number (#3) (default is 1) before running through the commands again. It will keep doing this until the varname number equals #2. You can end a /for loop immediately with /break or try the next iteration with /continue.","title":"Description"},{"location":"reference/commands/nomodkey/","tags":["command"],"text":"/nomodkey \u00b6 Syntax \u00b6 /nomodkey command Description \u00b6 Releases all ctrl/alt/shift keys while executing command","title":"/nomodkey"},{"location":"reference/commands/nomodkey/#nomodkey","text":"","title":"/nomodkey"},{"location":"reference/commands/nomodkey/#syntax","text":"/nomodkey command","title":"Syntax"},{"location":"reference/commands/nomodkey/#description","text":"Releases all ctrl/alt/shift keys while executing command","title":"Description"},{"location":"reference/commands/noparse/","tags":["command"],"text":"/noparse \u00b6 Syntax \u00b6 /noparse command Description \u00b6 Prevents any MQ2Data from being parsed when used in command . Example \u00b6 Here the literal string \"${stuff}\" is added to the ini file, as opposed to the current value of ${stuff}. /noparse /ini stuff.ini MySection MyVal ${stuff} *Here is another example. First we declare a variable /declare NotDisplayed string outer DISPLAYED Using echo by itself, the MQ2Data is parsed and displayed in the chatwnd: /echo ${NotDisplayed} [MQ2] DISPLAYED Using /noparse, we do not parse the MQ2Data, and the literal string is displayed in the chatwnd /noparse /echo ${NotDisplayed} [MQ2] ${NotDisplayed}","title":"/noparse"},{"location":"reference/commands/noparse/#noparse","text":"","title":"/noparse"},{"location":"reference/commands/noparse/#syntax","text":"/noparse command","title":"Syntax"},{"location":"reference/commands/noparse/#description","text":"Prevents any MQ2Data from being parsed when used in command .","title":"Description"},{"location":"reference/commands/noparse/#example","text":"Here the literal string \"${stuff}\" is added to the ini file, as opposed to the current value of ${stuff}. /noparse /ini stuff.ini MySection MyVal ${stuff} *Here is another example. First we declare a variable /declare NotDisplayed string outer DISPLAYED Using echo by itself, the MQ2Data is parsed and displayed in the chatwnd: /echo ${NotDisplayed} [MQ2] DISPLAYED Using /noparse, we do not parse the MQ2Data, and the literal string is displayed in the chatwnd /noparse /echo ${NotDisplayed} [MQ2] ${NotDisplayed}","title":"Example"},{"location":"reference/commands/notify/","tags":["command"],"text":"/notify \u00b6 Syntax \u00b6 /notify windowname **_**0 _ | _ controlname _** [ _**notification _** **\\_**data**\\_** ]** Description \u00b6 This is used to interact with UI windows instead of using the mouse (/notify cannot be used to interact with objects). Entering \"0\" for controlname would send the message to the window itself (used for \"close\" at least, possibly others). The use of data will usually not be necessary unless you are notifying a slider control or a list. leftmouseup Left-click controlname leftmouseheld Left-click and hold controlname until leftmouseheldup is performed leftmouseheldup Releases the mouse from leftmouseheld rightmouseup Right-click controlname rightmouseheld Right-click and hold controlname until rightmouseheldup is performed rightmouseheldup Releases the mouse from rightmouseheld enter Press the enter key on controlname close Clicks the Close Window gadget of windowname mouseover Hovers the mouse over controlname newvalue # Changes the value in controlname to # listselect # Selects the #th item in the controlname list leftmouse # Clicks the #th item in the controlname list tabselect # Selects the #th tab in the controlname list Notifications: Examples \u00b6 /notify hotbuttonwnd HB_Button1 leftmouseup Activates the first hotkey /notify somewindow SomeSlider newvalue 100 Moves the referenced slider in the window to 100 /notify trackingwnd 0 close Closes the tracking window /notify TradeskillWnd RecipeList listselect 1 Selects the first item in the RecipeList listbox /notify BuffWindow Buff${Math.Calc[${Me.Buff[BuffName].ID}-1].Int} leftmouseup Cancels the buff called \"BuffName\" /notify InventoryWindow IW_Subwindows tabselect 4 Select 4th tab in the Inventory window /notify AuraWindow Remove_Aura leftmouseup Removes aura through the aura window /notify QuantityWnd QTYW_slider newvalue # Adjust the value of the slider in Quantity Window. Put the item name in the bazaar search dialog box /echo ${SelectedItem.Name} /notify BazaarSearchWnd ${SelectedItem.Name} Select and click an item in a list /notify TaskWnd TASK_TaskList listselect 1 /delay 4 /notify TaskWnd TASK_TaskList leftmouse 1 /delay 4 Select Parcel tab on Parcel Merchant and click Receive All button /notify MerchantWnd MW_MerchantSubWindows tabselect 3 /delay 1s /notify MerchantWnd MW_Retrieve_All_Button leftmouseup","title":"/notify"},{"location":"reference/commands/notify/#notify","text":"","title":"/notify"},{"location":"reference/commands/notify/#syntax","text":"/notify windowname **_**0 _ | _ controlname _** [ _**notification _** **\\_**data**\\_** ]**","title":"Syntax"},{"location":"reference/commands/notify/#description","text":"This is used to interact with UI windows instead of using the mouse (/notify cannot be used to interact with objects). Entering \"0\" for controlname would send the message to the window itself (used for \"close\" at least, possibly others). The use of data will usually not be necessary unless you are notifying a slider control or a list. leftmouseup Left-click controlname leftmouseheld Left-click and hold controlname until leftmouseheldup is performed leftmouseheldup Releases the mouse from leftmouseheld rightmouseup Right-click controlname rightmouseheld Right-click and hold controlname until rightmouseheldup is performed rightmouseheldup Releases the mouse from rightmouseheld enter Press the enter key on controlname close Clicks the Close Window gadget of windowname mouseover Hovers the mouse over controlname newvalue # Changes the value in controlname to # listselect # Selects the #th item in the controlname list leftmouse # Clicks the #th item in the controlname list tabselect # Selects the #th tab in the controlname list Notifications:","title":"Description"},{"location":"reference/commands/notify/#examples","text":"/notify hotbuttonwnd HB_Button1 leftmouseup Activates the first hotkey /notify somewindow SomeSlider newvalue 100 Moves the referenced slider in the window to 100 /notify trackingwnd 0 close Closes the tracking window /notify TradeskillWnd RecipeList listselect 1 Selects the first item in the RecipeList listbox /notify BuffWindow Buff${Math.Calc[${Me.Buff[BuffName].ID}-1].Int} leftmouseup Cancels the buff called \"BuffName\" /notify InventoryWindow IW_Subwindows tabselect 4 Select 4th tab in the Inventory window /notify AuraWindow Remove_Aura leftmouseup Removes aura through the aura window /notify QuantityWnd QTYW_slider newvalue # Adjust the value of the slider in Quantity Window. Put the item name in the bazaar search dialog box /echo ${SelectedItem.Name} /notify BazaarSearchWnd ${SelectedItem.Name} Select and click an item in a list /notify TaskWnd TASK_TaskList listselect 1 /delay 4 /notify TaskWnd TASK_TaskList leftmouse 1 /delay 4 Select Parcel tab on Parcel Merchant and click Receive All button /notify MerchantWnd MW_MerchantSubWindows tabselect 3 /delay 1s /notify MerchantWnd MW_Retrieve_All_Button leftmouseup","title":"Examples"},{"location":"reference/commands/plugin/","tags":["command"],"text":"/plugin \u00b6 Syntax \u00b6 /plugin list /plugin name [load | unload] /plugin name [load | unload] [noauto] Description \u00b6 The plugin command can be used to list all plugins currently loaded, to load a new plugin, or to unload a plugin that is already loaded. Loading a plugin will also add an entry to the [Plugins] section of the MacroQuest.ini file. Next time MQ2 is started that plugin will be loaded automatically. Likewise, unloading a plugin will remove it from MacroQuest.ini. Using the noauto switch prevents this modification to MacroQuest.ini from occurring. Examples \u00b6 /plugin list /plugin mq2melee load /plugin mq2moveutils unload noauto","title":"/plugin"},{"location":"reference/commands/plugin/#plugin","text":"","title":"/plugin"},{"location":"reference/commands/plugin/#syntax","text":"/plugin list /plugin name [load | unload] /plugin name [load | unload] [noauto]","title":"Syntax"},{"location":"reference/commands/plugin/#description","text":"The plugin command can be used to list all plugins currently loaded, to load a new plugin, or to unload a plugin that is already loaded. Loading a plugin will also add an entry to the [Plugins] section of the MacroQuest.ini file. Next time MQ2 is started that plugin will be loaded automatically. Likewise, unloading a plugin will remove it from MacroQuest.ini. Using the noauto switch prevents this modification to MacroQuest.ini from occurring.","title":"Description"},{"location":"reference/commands/plugin/#examples","text":"/plugin list /plugin mq2melee load /plugin mq2moveutils unload noauto","title":"Examples"},{"location":"reference/commands/popcustom/","tags":["command"],"text":"/popcustom \u00b6 Syntax \u00b6 /popcustom [color] [time in seconds to display message] message Description \u00b6 Creates a custome pop up message on your screen Color Chart Number Color 1, 3, 8, 9, 11, 17, 19, 21+ dark grey 2 light green 4 dark blue 5 pink 6, 12 light grey 7, 10 white 13 red 14 bright green 15 yellow 16 bright blue 18 cyan 20 black Examples \u00b6 Example Output /popcustom hi there Will display \"hi there\" on the screen just like /popup /popcustom 5 hi there Will display \"hi there\" on the screen in pink, for 3 seconds (/popup's default) /popcustom 5 5 hi there Will display \"hi there\" on the screen in pink, for 5 seconds. If you type /popcustom with no parameters, it will display the help output for this information.","title":"/popcustom"},{"location":"reference/commands/popcustom/#popcustom","text":"","title":"/popcustom"},{"location":"reference/commands/popcustom/#syntax","text":"/popcustom [color] [time in seconds to display message] message","title":"Syntax"},{"location":"reference/commands/popcustom/#description","text":"Creates a custome pop up message on your screen Color Chart Number Color 1, 3, 8, 9, 11, 17, 19, 21+ dark grey 2 light green 4 dark blue 5 pink 6, 12 light grey 7, 10 white 13 red 14 bright green 15 yellow 16 bright blue 18 cyan 20 black","title":"Description"},{"location":"reference/commands/popcustom/#examples","text":"Example Output /popcustom hi there Will display \"hi there\" on the screen just like /popup /popcustom 5 hi there Will display \"hi there\" on the screen in pink, for 3 seconds (/popup's default) /popcustom 5 5 hi there Will display \"hi there\" on the screen in pink, for 5 seconds. If you type /popcustom with no parameters, it will display the help output for this information.","title":"Examples"},{"location":"reference/commands/popup/","tags":["command"],"text":"/popup \u00b6 Syntax \u00b6 /popup text Description \u00b6 Displays text in the center of your screen. Currently the text is a fixed font and color. If you desire a custom color or display duration you may perform this modification to add a new command /popcustom Examples \u00b6 Displays Current Mana: 65% /popup Current Mana: ${Me.CurrentMana} Displays Run away! Run away! /popup Run away! Run away!","title":"/popup"},{"location":"reference/commands/popup/#popup","text":"","title":"/popup"},{"location":"reference/commands/popup/#syntax","text":"/popup text","title":"Syntax"},{"location":"reference/commands/popup/#description","text":"Displays text in the center of your screen. Currently the text is a fixed font and color. If you desire a custom color or display duration you may perform this modification to add a new command /popcustom","title":"Description"},{"location":"reference/commands/popup/#examples","text":"Displays Current Mana: 65% /popup Current Mana: ${Me.CurrentMana} Displays Run away! Run away! /popup Run away! Run away!","title":"Examples"},{"location":"reference/commands/popupecho/","tags":["command"],"text":"/popupecho \u00b6 Syntax \u00b6 /popupecho [color] \\[ time in seconds to display message message ] Description \u00b6 Same as /popcustom but also echos the message to chat.","title":"/popupecho"},{"location":"reference/commands/popupecho/#popupecho","text":"","title":"/popupecho"},{"location":"reference/commands/popupecho/#syntax","text":"/popupecho [color] \\[ time in seconds to display message message ]","title":"Syntax"},{"location":"reference/commands/popupecho/#description","text":"Same as /popcustom but also echos the message to chat.","title":"Description"},{"location":"reference/commands/ranged/","tags":["command"],"text":"/ranged \u00b6 Syntax \u00b6 /ranged [ spawnID ] Description \u00b6 Performs a ranged attack. Notes No parameter executes a ranged attack on your current target If spawnID is supplied this will attempt to execute a ranged attack on that spawn if it exists.","title":"/ranged"},{"location":"reference/commands/ranged/#ranged","text":"","title":"/ranged"},{"location":"reference/commands/ranged/#syntax","text":"/ranged [ spawnID ]","title":"Syntax"},{"location":"reference/commands/ranged/#description","text":"Performs a ranged attack. Notes No parameter executes a ranged attack on your current target If spawnID is supplied this will attempt to execute a ranged attack on that spawn if it exists.","title":"Description"},{"location":"reference/commands/reloadui/","tags":["command"],"text":"/reloadui \u00b6 Syntax \u00b6 /reloadui Description \u00b6 It works just like /loadskin 1 but with less typing","title":"/reloadui"},{"location":"reference/commands/reloadui/#reloadui","text":"","title":"/reloadui"},{"location":"reference/commands/reloadui/#syntax","text":"/reloadui","title":"Syntax"},{"location":"reference/commands/reloadui/#description","text":"It works just like /loadskin 1 but with less typing","title":"Description"},{"location":"reference/commands/removeaura/","tags":["command"],"text":"/removeaura \u00b6 Syntax \u00b6 /removeaura Name Of Aura Description \u00b6 Will remove an aura by name or partial name Example \u00b6 /removeaura Frostweave Aura","title":"/removeaura"},{"location":"reference/commands/removeaura/#removeaura","text":"","title":"/removeaura"},{"location":"reference/commands/removeaura/#syntax","text":"/removeaura Name Of Aura","title":"Syntax"},{"location":"reference/commands/removeaura/#description","text":"Will remove an aura by name or partial name","title":"Description"},{"location":"reference/commands/removeaura/#example","text":"/removeaura Frostweave Aura","title":"Example"},{"location":"reference/commands/removebuff/","tags":["command"],"text":"/removebuff \u00b6 Syntax \u00b6 /removebuff [-pet|-both] Name Of Buff Description \u00b6 Will remove a buff or song by the name of the buff. It can be used to remove buffs from the player, the pet, or both. By default it does a partial match, but you can force an exact compare with the equals sign. Example \u00b6 /removebuff Resolution /removebuff -pet Resolution /removebuff -both Resolution /removebuff Illusion: Dark Elf /removebuff =Some Overlapping Buffname","title":"/removebuff"},{"location":"reference/commands/removebuff/#removebuff","text":"","title":"/removebuff"},{"location":"reference/commands/removebuff/#syntax","text":"/removebuff [-pet|-both] Name Of Buff","title":"Syntax"},{"location":"reference/commands/removebuff/#description","text":"Will remove a buff or song by the name of the buff. It can be used to remove buffs from the player, the pet, or both. By default it does a partial match, but you can force an exact compare with the equals sign.","title":"Description"},{"location":"reference/commands/removebuff/#example","text":"/removebuff Resolution /removebuff -pet Resolution /removebuff -both Resolution /removebuff Illusion: Dark Elf /removebuff =Some Overlapping Buffname","title":"Example"},{"location":"reference/commands/removelev/","tags":["command"],"text":"/removelev \u00b6 Syntax \u00b6 /removelev Description \u00b6 Will attempt to remove any levitation buffs on you that are found in the buff or shortbuff window. Example \u00b6 /removelev","title":"/removelev"},{"location":"reference/commands/removelev/#removelev","text":"","title":"/removelev"},{"location":"reference/commands/removelev/#syntax","text":"/removelev","title":"Syntax"},{"location":"reference/commands/removelev/#description","text":"Will attempt to remove any levitation buffs on you that are found in the buff or shortbuff window.","title":"Description"},{"location":"reference/commands/removelev/#example","text":"/removelev","title":"Example"},{"location":"reference/commands/removepetbuff/","tags":["command"],"text":"/removepetbuff \u00b6 Syntax \u00b6 /removepetbuff Buff Name Description \u00b6 Removes a pet buff using either the buff name, or a partial name. If an exact match is required, the equals sign can be used to force the exact match. Example \u00b6 /removepetbuff Burnout /removepetbuff \"Burnout XVII\" /removepetbuff =Burnout XVII /removepetbuff \"=Burnout XVI\"","title":"/removepetbuff"},{"location":"reference/commands/removepetbuff/#removepetbuff","text":"","title":"/removepetbuff"},{"location":"reference/commands/removepetbuff/#syntax","text":"/removepetbuff Buff Name","title":"Syntax"},{"location":"reference/commands/removepetbuff/#description","text":"Removes a pet buff using either the buff name, or a partial name. If an exact match is required, the equals sign can be used to force the exact match.","title":"Description"},{"location":"reference/commands/removepetbuff/#example","text":"/removepetbuff Burnout /removepetbuff \"Burnout XVII\" /removepetbuff =Burnout XVII /removepetbuff \"=Burnout XVI\"","title":"Example"},{"location":"reference/commands/return/","tags":["command"],"text":"/return \u00b6 Syntax \u00b6 /return [value|${varname}] Description \u00b6 Returns to the line immediately following the call. Can return values or variables. Examples \u00b6 Sub Add(int A, int B) /declare Sum int local ${Math.Calc[${A}+${B}]} /return ${Sum} Return can also be used to exit out of a subroutine early. Sub Evade /if (!${Me.AbilityReady[Hide]}) { /echo Hide has not refreshed, so we are leaving early. /return } /echo Hide is ready, so we will continue processing /attack off /doability Hide /delay 5 /attack on /return","title":"/return"},{"location":"reference/commands/return/#return","text":"","title":"/return"},{"location":"reference/commands/return/#syntax","text":"/return [value|${varname}]","title":"Syntax"},{"location":"reference/commands/return/#description","text":"Returns to the line immediately following the call. Can return values or variables.","title":"Description"},{"location":"reference/commands/return/#examples","text":"Sub Add(int A, int B) /declare Sum int local ${Math.Calc[${A}+${B}]} /return ${Sum} Return can also be used to exit out of a subroutine early. Sub Evade /if (!${Me.AbilityReady[Hide]}) { /echo Hide has not refreshed, so we are leaving early. /return } /echo Hide is ready, so we will continue processing /attack off /doability Hide /delay 5 /attack on /return","title":"Examples"},{"location":"reference/commands/screenmode/","tags":["command"],"text":"/screenmode \u00b6 Syntax \u00b6 /screenmode # Valid values for screen mode: 1, 2, or 3. Description \u00b6 Where 2 is normal and 3 is no windows. 1 is Unknown. Examples \u00b6 /screenmode 2 TLO:EverQuest","title":"/screenmode"},{"location":"reference/commands/screenmode/#screenmode","text":"","title":"/screenmode"},{"location":"reference/commands/screenmode/#syntax","text":"/screenmode # Valid values for screen mode: 1, 2, or 3.","title":"Syntax"},{"location":"reference/commands/screenmode/#description","text":"Where 2 is normal and 3 is no windows. 1 is Unknown.","title":"Description"},{"location":"reference/commands/screenmode/#examples","text":"/screenmode 2 TLO:EverQuest","title":"Examples"},{"location":"reference/commands/selectitem/","tags":["command"],"text":"/selectitem \u00b6 Syntax \u00b6 /selecitem \"itemname\" Description \u00b6 Selects items in your inventory when you have a merchant open. /selectitem \"bottle of\" will select a \"bottle of vinegar\" you can also do \"=bottle of vinegar\" to match EXACT name (its not case sensitive though) Examples \u00b6 /selectitem \"bottle of\" Will select a \"bottle of vinegar\" you can also do \"=bottle of vinegar\" to match EXACT name (its not case sensitive though)","title":"/selectitem"},{"location":"reference/commands/selectitem/#selectitem","text":"","title":"/selectitem"},{"location":"reference/commands/selectitem/#syntax","text":"/selecitem \"itemname\"","title":"Syntax"},{"location":"reference/commands/selectitem/#description","text":"Selects items in your inventory when you have a merchant open. /selectitem \"bottle of\" will select a \"bottle of vinegar\" you can also do \"=bottle of vinegar\" to match EXACT name (its not case sensitive though)","title":"Description"},{"location":"reference/commands/selectitem/#examples","text":"/selectitem \"bottle of\" Will select a \"bottle of vinegar\" you can also do \"=bottle of vinegar\" to match EXACT name (its not case sensitive though)","title":"Examples"},{"location":"reference/commands/sellitem/","tags":["command"],"text":"/sellitem \u00b6 Syntax \u00b6 /sellitem [#] Description \u00b6 Sells the selected item. If # is specified it will sell that # of a stacked item.","title":"/sellitem"},{"location":"reference/commands/sellitem/#sellitem","text":"","title":"/sellitem"},{"location":"reference/commands/sellitem/#syntax","text":"/sellitem [#]","title":"Syntax"},{"location":"reference/commands/sellitem/#description","text":"Sells the selected item. If # is specified it will sell that # of a stacked item.","title":"Description"},{"location":"reference/commands/setautorun/","tags":["command"],"text":"/setautorun \u00b6 Syntax \u00b6 /setautorun Description \u00b6 Creates an ini entry in Macroquest.ini that performs a command automatically after entering world. This may be deprecated in favor of .cfg files.","title":"/setautorun"},{"location":"reference/commands/setautorun/#setautorun","text":"","title":"/setautorun"},{"location":"reference/commands/setautorun/#syntax","text":"/setautorun","title":"Syntax"},{"location":"reference/commands/setautorun/#description","text":"Creates an ini entry in Macroquest.ini that performs a command automatically after entering world. This may be deprecated in favor of .cfg files.","title":"Description"},{"location":"reference/commands/seterror/","tags":["command"],"text":"/seterror \u00b6 Syntax \u00b6 /seterror [ error ] Description \u00b6 Sets ${MacroQuest.Error} to error Omitting error will clear ${MacroQuest.Error}","title":"/seterror"},{"location":"reference/commands/seterror/#seterror","text":"","title":"/seterror"},{"location":"reference/commands/seterror/#syntax","text":"/seterror [ error ]","title":"Syntax"},{"location":"reference/commands/seterror/#description","text":"Sets ${MacroQuest.Error} to error Omitting error will clear ${MacroQuest.Error}","title":"Description"},{"location":"reference/commands/setprio/","tags":["command"],"text":"/setprio \u00b6 Syntax \u00b6 /setprio # Description \u00b6 Sets process priority (like in Windows Task Manager), where 1 is low 2 is below normal 3 is normal 4 is above normal 5 is high and 6 is real time. The default value is 3. Examples \u00b6 You need to build something quick in Visual Studio, just do a /bcga //setprio 2 and it will zoom by real fast.","title":"/setprio"},{"location":"reference/commands/setprio/#setprio","text":"","title":"/setprio"},{"location":"reference/commands/setprio/#syntax","text":"/setprio #","title":"Syntax"},{"location":"reference/commands/setprio/#description","text":"Sets process priority (like in Windows Task Manager), where 1 is low 2 is below normal 3 is normal 4 is above normal 5 is high and 6 is real time. The default value is 3.","title":"Description"},{"location":"reference/commands/setprio/#examples","text":"You need to build something quick in Visual Studio, just do a /bcga //setprio 2 and it will zoom by real fast.","title":"Examples"},{"location":"reference/commands/setwintitle/","tags":["command"],"text":"/setwintitle \u00b6 Syntax \u00b6 /setwintitle <Window Name> Description \u00b6 Sets the window title (the name shown at the top of the window and in the task bar tray) to whatever text you specify. Examples \u00b6 Set the window title to \"My Very Cool Window\" /setwintitle My Very Cool Window Set the window title to \"EverQuest - <Your character name>\" /setwintitle EverQuest - ${Me.Name}","title":"/setwintitle"},{"location":"reference/commands/setwintitle/#setwintitle","text":"","title":"/setwintitle"},{"location":"reference/commands/setwintitle/#syntax","text":"/setwintitle <Window Name>","title":"Syntax"},{"location":"reference/commands/setwintitle/#description","text":"Sets the window title (the name shown at the top of the window and in the task bar tray) to whatever text you specify.","title":"Description"},{"location":"reference/commands/setwintitle/#examples","text":"Set the window title to \"My Very Cool Window\" /setwintitle My Very Cool Window Set the window title to \"EverQuest - <Your character name>\" /setwintitle EverQuest - ${Me.Name}","title":"Examples"},{"location":"reference/commands/shiftkey/","tags":["command"],"text":"/shiftkey \u00b6 Syntax \u00b6 /shiftkey command Description \u00b6 Execute command while telling the window manager that the shift key is pressed. Can also be used together with /altkey , /ctrlkey , or both in this format: /ctrlkey /altkey /shiftkey /command Examples \u00b6 /shiftkey /itemnotify pack1 leftmouseup","title":"/shiftkey"},{"location":"reference/commands/shiftkey/#shiftkey","text":"","title":"/shiftkey"},{"location":"reference/commands/shiftkey/#syntax","text":"/shiftkey command","title":"Syntax"},{"location":"reference/commands/shiftkey/#description","text":"Execute command while telling the window manager that the shift key is pressed. Can also be used together with /altkey , /ctrlkey , or both in this format: /ctrlkey /altkey /shiftkey /command","title":"Description"},{"location":"reference/commands/shiftkey/#examples","text":"/shiftkey /itemnotify pack1 leftmouseup","title":"Examples"},{"location":"reference/commands/skills/","tags":["command"],"text":"/skills \u00b6 Syntax \u00b6 /skills [ skillname ] Description \u00b6 Lists the skill level(s) that match skillname if provided, or all possible skills if no parameter given. Examples \u00b6 Lists all of your skills with skill level /skills Returns your pottery skill /skills pottery","title":"/skills"},{"location":"reference/commands/skills/#skills","text":"","title":"/skills"},{"location":"reference/commands/skills/#syntax","text":"/skills [ skillname ]","title":"Syntax"},{"location":"reference/commands/skills/#description","text":"Lists the skill level(s) that match skillname if provided, or all possible skills if no parameter given.","title":"Description"},{"location":"reference/commands/skills/#examples","text":"Lists all of your skills with skill level /skills Returns your pottery skill /skills pottery","title":"Examples"},{"location":"reference/commands/spellslotinfo/","tags":["command"],"text":"/spellslotinfo \u00b6 Syntax \u00b6 /spellslotinfo [#|\"spell name\"] Description \u00b6 You can use this to see the spell slot Information for any spell without having to right-click display through the MQ2ItemDisplay plugin.","title":"/spellslotinfo"},{"location":"reference/commands/spellslotinfo/#spellslotinfo","text":"","title":"/spellslotinfo"},{"location":"reference/commands/spellslotinfo/#syntax","text":"/spellslotinfo [#|\"spell name\"]","title":"Syntax"},{"location":"reference/commands/spellslotinfo/#description","text":"You can use this to see the spell slot Information for any spell without having to right-click display through the MQ2ItemDisplay plugin.","title":"Description"},{"location":"reference/commands/spew/","tags":["command"],"text":"/spew \u00b6 Syntax \u00b6 /spew [on|off] Description \u00b6 Enables or disables the output of Debug Spew to the \"\\Logs\\DebugSpew.log\" file.","title":"/spew"},{"location":"reference/commands/spew/#spew","text":"","title":"/spew"},{"location":"reference/commands/spew/#syntax","text":"/spew [on|off]","title":"Syntax"},{"location":"reference/commands/spew/#description","text":"Enables or disables the output of Debug Spew to the \"\\Logs\\DebugSpew.log\" file.","title":"Description"},{"location":"reference/commands/squelch/","tags":["command"],"text":"/squelch \u00b6 Syntax \u00b6 /squelch command Description \u00b6 Executes command while preventing any output from that command . Basically, it does the following: Turns mq filter off Executes command Turns mq filter back to the state it was in before step 1 Example \u00b6 /squelch /attack on","title":"/squelch"},{"location":"reference/commands/squelch/#squelch","text":"","title":"/squelch"},{"location":"reference/commands/squelch/#syntax","text":"/squelch command","title":"Syntax"},{"location":"reference/commands/squelch/#description","text":"Executes command while preventing any output from that command . Basically, it does the following: Turns mq filter off Executes command Turns mq filter back to the state it was in before step 1","title":"Description"},{"location":"reference/commands/squelch/#example","text":"/squelch /attack on","title":"Example"},{"location":"reference/commands/substitute/","tags":["command"],"text":"/substitute \u00b6 Syntax \u00b6 /substitute list /substitute [ orig delete| new ] Description \u00b6 Allows you to create custom midline substitutions. They can be called from any alias or commandline by using the percent sign (%). Substitutions do not currently work in macros. You don't use the percent signs when creating the substitutions or editing your config file. You can use MQ's substitutions without spaces around them (unlike EQ's!). You can use EQ's wildcards (ie: %t) within your substitutions, however, you have to leave spaces around them (yes, they suck). You cannot CURRENTLY replace EQ wildcards with MQ substitutions (eg. you can't make a replacement for %m). Example \u00b6 /substitute mom Mother /substitute omg Oh my god! /substitute k \"%omg, kill %t before I tell your %mom\" If you typed \"/say %k\", it would produce: Oh my god!, kill targetname before I tell your Mother","title":"/substitute"},{"location":"reference/commands/substitute/#substitute","text":"","title":"/substitute"},{"location":"reference/commands/substitute/#syntax","text":"/substitute list /substitute [ orig delete| new ]","title":"Syntax"},{"location":"reference/commands/substitute/#description","text":"Allows you to create custom midline substitutions. They can be called from any alias or commandline by using the percent sign (%). Substitutions do not currently work in macros. You don't use the percent signs when creating the substitutions or editing your config file. You can use MQ's substitutions without spaces around them (unlike EQ's!). You can use EQ's wildcards (ie: %t) within your substitutions, however, you have to leave spaces around them (yes, they suck). You cannot CURRENTLY replace EQ wildcards with MQ substitutions (eg. you can't make a replacement for %m).","title":"Description"},{"location":"reference/commands/substitute/#example","text":"/substitute mom Mother /substitute omg Oh my god! /substitute k \"%omg, kill %t before I tell your %mom\" If you typed \"/say %k\", it would produce: Oh my god!, kill targetname before I tell your Mother","title":"Example"},{"location":"reference/commands/target/","tags":["command"],"text":"/target \u00b6 Syntax \u00b6 /target option Description \u00b6 Targets whatever is matched by one or more of the following options : clear Clears your current target mycorpse Your own corpse (nearest) myself Target yourself Anything Else Anything else is considered a Spawn Search Examples \u00b6 /target npc radius 100 zradius 50 alert 1 /target pc range 30 35 lfg /target npc los radius 220 /target ${Spawn[alert 1]} /target ${Spawn[noalert 1]}","title":"/target"},{"location":"reference/commands/target/#target","text":"","title":"/target"},{"location":"reference/commands/target/#syntax","text":"/target option","title":"Syntax"},{"location":"reference/commands/target/#description","text":"Targets whatever is matched by one or more of the following options : clear Clears your current target mycorpse Your own corpse (nearest) myself Target yourself Anything Else Anything else is considered a Spawn Search","title":"Description"},{"location":"reference/commands/target/#examples","text":"/target npc radius 100 zradius 50 alert 1 /target pc range 30 35 lfg /target npc los radius 220 /target ${Spawn[alert 1]} /target ${Spawn[noalert 1]}","title":"Examples"},{"location":"reference/commands/timed/","tags":["command"],"text":"/timed \u00b6 Syntax \u00b6 /timed # command Description \u00b6 Executes command after a specified duration, given in deciseconds. Notes This does not pause successive commands. The first argument must be a literal integer (e.g. 2) It is not parsed for MQ2Data, so the following will not work /timed ${Math.Calc[1+1]} /echo This does not work - An exception to this being the use of /docommand in combination with /timed /docommand /timed ${Math.Calc[1+1]} /echo This works Examples \u00b6 /timed 10 /echo 1 second has passed","title":"/timed"},{"location":"reference/commands/timed/#timed","text":"","title":"/timed"},{"location":"reference/commands/timed/#syntax","text":"/timed # command","title":"Syntax"},{"location":"reference/commands/timed/#description","text":"Executes command after a specified duration, given in deciseconds. Notes This does not pause successive commands. The first argument must be a literal integer (e.g. 2) It is not parsed for MQ2Data, so the following will not work /timed ${Math.Calc[1+1]} /echo This does not work - An exception to this being the use of /docommand in combination with /timed /docommand /timed ${Math.Calc[1+1]} /echo This works","title":"Description"},{"location":"reference/commands/timed/#examples","text":"/timed 10 /echo 1 second has passed","title":"Examples"},{"location":"reference/commands/timestamp/","tags":["command"],"text":"/timestamp \u00b6 Syntax \u00b6 /timestamp Description \u00b6 Is a toggle, can be set in MacroQuest.ini TimeStampChat=0 in the [MacroQuest] section. Basically it timestamps all chat when its on... NOTE: The timestamp takes place AFTER chatevents are handled, so at least in theory this should NOT have any adverse effects when turned on.","title":"/timestamp"},{"location":"reference/commands/timestamp/#timestamp","text":"","title":"/timestamp"},{"location":"reference/commands/timestamp/#syntax","text":"/timestamp","title":"Syntax"},{"location":"reference/commands/timestamp/#description","text":"Is a toggle, can be set in MacroQuest.ini TimeStampChat=0 in the [MacroQuest] section. Basically it timestamps all chat when its on... NOTE: The timestamp takes place AFTER chatevents are handled, so at least in theory this should NOT have any adverse effects when turned on.","title":"Description"},{"location":"reference/commands/unload/","tags":["command"],"text":"/unload \u00b6 Syntax \u00b6 /unload Description \u00b6 Unloads MacroQuest.","title":"/unload"},{"location":"reference/commands/unload/#unload","text":"","title":"/unload"},{"location":"reference/commands/unload/#syntax","text":"/unload","title":"Syntax"},{"location":"reference/commands/unload/#description","text":"Unloads MacroQuest.","title":"Description"},{"location":"reference/commands/updateitems/","tags":["command"],"text":"/updateitems \u00b6 Status \u00b6 This command is currently disabled. Typing /updateitems will report: \"This command is disabled since the itemdb is maintained by the devs.\" Syntax \u00b6 /updateitems Description \u00b6 Scans your inventory and bank and collects item IDs and names. The information is placed in ItemDB.txt which is created if it does not already exist. Purpose \u00b6 The original purpose was to generate item numbers for a database project like lucy. **This command is now obsolete.** How it Works \u00b6 ItemDB.txt is read upon startup of MQ2 and the contents are stored in memory while it is running. If you issue the /updateitems command, MQ2 scans your inventory and bank and collects item IDs and names. Those IDs and names are added to the aforementioned list stored in memory. The resulting list is then written to ItemDB.txt. Notes \u00b6 If you want a list of your current assets, delete ItemDB.txt before you start MQ2 Don't forget to delete it and restart MQ2 each time you want to refresh that list.","title":"/updateitems"},{"location":"reference/commands/updateitems/#updateitems","text":"","title":"/updateitems"},{"location":"reference/commands/updateitems/#status","text":"This command is currently disabled. Typing /updateitems will report: \"This command is disabled since the itemdb is maintained by the devs.\"","title":"Status"},{"location":"reference/commands/updateitems/#syntax","text":"/updateitems","title":"Syntax"},{"location":"reference/commands/updateitems/#description","text":"Scans your inventory and bank and collects item IDs and names. The information is placed in ItemDB.txt which is created if it does not already exist.","title":"Description"},{"location":"reference/commands/updateitems/#purpose","text":"The original purpose was to generate item numbers for a database project like lucy. **This command is now obsolete.**","title":"Purpose"},{"location":"reference/commands/updateitems/#how-it-works","text":"ItemDB.txt is read upon startup of MQ2 and the contents are stored in memory while it is running. If you issue the /updateitems command, MQ2 scans your inventory and bank and collects item IDs and names. Those IDs and names are added to the aforementioned list stored in memory. The resulting list is then written to ItemDB.txt.","title":"How it Works"},{"location":"reference/commands/updateitems/#notes","text":"If you want a list of your current assets, delete ItemDB.txt before you start MQ2 Don't forget to delete it and restart MQ2 each time you want to refresh that list.","title":"Notes"},{"location":"reference/commands/useitem/","tags":["command"],"text":"/useitem \u00b6 /useitem \"some item\" (or partial name) or without the quotes... this one works for items in keyrings as well (illusions, mounts)","title":"/useitem"},{"location":"reference/commands/useitem/#useitem","text":"/useitem \"some item\" (or partial name) or without the quotes... this one works for items in keyrings as well (illusions, mounts)","title":"/useitem"},{"location":"reference/commands/varcalc/","tags":["command"],"text":"/varcalc \u00b6 Syntax \u00b6 /varcalc varname formula Description \u00b6 Sets a variable directly to the numeric result of a calculation ( formula ) Keep in mind that the type of the variable may itself reject this value depending on what you give it This will not work on strings! Examples \u00b6 /varcalc MyInt 1+2*2+1 /varcalc MyInt 1+(2*2)+1 /varcalc MyInt ${MyInt}+6","title":"/varcalc"},{"location":"reference/commands/varcalc/#varcalc","text":"","title":"/varcalc"},{"location":"reference/commands/varcalc/#syntax","text":"/varcalc varname formula","title":"Syntax"},{"location":"reference/commands/varcalc/#description","text":"Sets a variable directly to the numeric result of a calculation ( formula ) Keep in mind that the type of the variable may itself reject this value depending on what you give it This will not work on strings!","title":"Description"},{"location":"reference/commands/varcalc/#examples","text":"/varcalc MyInt 1+2*2+1 /varcalc MyInt 1+(2*2)+1 /varcalc MyInt ${MyInt}+6","title":"Examples"},{"location":"reference/commands/vardata/","tags":["command"],"text":"/vardata \u00b6 Syntax \u00b6 /vardata varname newMQ2Datavalue Description \u00b6 Sets a variable directly to the end result of a MQ2Data string. *To use this, do not put ${} around the outer data to parse. This is more efficient than using /varset as it skips a step /varset first converts the MQ2Data to text, and then back to MQ2Data /vardata converts directly through MQ2Data Examples \u00b6 /vardata MyFloat Math.Calc[${Me.X}+${Me.Y}] /vardata M_Assist Param0 | using /vardata with non-basic data types /declare x int local /declare xSpawn spawn local /for x 1 to ${SpawnCount[pc]} /vardata xSpawn NearestSpawn[${x},pc] /echo ID:${xSpawn.ID} NAME:${xSpawn.Name} /next x","title":"/vardata"},{"location":"reference/commands/vardata/#vardata","text":"","title":"/vardata"},{"location":"reference/commands/vardata/#syntax","text":"/vardata varname newMQ2Datavalue","title":"Syntax"},{"location":"reference/commands/vardata/#description","text":"Sets a variable directly to the end result of a MQ2Data string. *To use this, do not put ${} around the outer data to parse. This is more efficient than using /varset as it skips a step /varset first converts the MQ2Data to text, and then back to MQ2Data /vardata converts directly through MQ2Data","title":"Description"},{"location":"reference/commands/vardata/#examples","text":"/vardata MyFloat Math.Calc[${Me.X}+${Me.Y}] /vardata M_Assist Param0 | using /vardata with non-basic data types /declare x int local /declare xSpawn spawn local /for x 1 to ${SpawnCount[pc]} /vardata xSpawn NearestSpawn[${x},pc] /echo ID:${xSpawn.ID} NAME:${xSpawn.Name} /next x","title":"Examples"},{"location":"reference/commands/varset/","tags":["command"],"text":"/varset \u00b6 Syntax \u00b6 /varset varname [ newvalue ] Description \u00b6 Sets a variable directly to a new value. Keep in mind that the type of the variable may itself reject this value depending on what you give it. To clear the value of the variable, you may omit the new value. Examples \u00b6 /varset MyString ${MyString}stuff Concatenate a string variable /varset MyString stuff${MyString} Inserts stuff at the front of ${MyString} /varset MyInt 123 Sets MyInt to 123 /varset MyTimer 123s Sets MyTimer to 123 seconds /varset MyFloat 1.23 Sets MyFloat to 1.23 /varset MyIntArray[n] 123 Sets array element n to 123","title":"/varset"},{"location":"reference/commands/varset/#varset","text":"","title":"/varset"},{"location":"reference/commands/varset/#syntax","text":"/varset varname [ newvalue ]","title":"Syntax"},{"location":"reference/commands/varset/#description","text":"Sets a variable directly to a new value. Keep in mind that the type of the variable may itself reject this value depending on what you give it. To clear the value of the variable, you may omit the new value.","title":"Description"},{"location":"reference/commands/varset/#examples","text":"/varset MyString ${MyString}stuff Concatenate a string variable /varset MyString stuff${MyString} Inserts stuff at the front of ${MyString} /varset MyInt 123 Sets MyInt to 123 /varset MyTimer 123s Sets MyTimer to 123 seconds /varset MyFloat 1.23 Sets MyFloat to 1.23 /varset MyIntArray[n] 123 Sets array element n to 123","title":"Examples"},{"location":"reference/commands/where/","tags":["command"],"text":"/where \u00b6 Syntax \u00b6 /where [ pc | npc ] [ spawnname ] Description \u00b6 Lists where the closest PC, NPC or spawnname is. The message returned is: The closest 'spawnname' is a level # <race> <class> and <distance> away to the <direction>, Z difference = #.##. Examples \u00b6 /where Lists the closest PC or NPC /where pc Lists the closest PC /where npc Lists the closest NPC /where npc \"orc pawn\" Lists where the closest orc pawn is","title":"/where"},{"location":"reference/commands/where/#where","text":"","title":"/where"},{"location":"reference/commands/where/#syntax","text":"/where [ pc | npc ] [ spawnname ]","title":"Syntax"},{"location":"reference/commands/where/#description","text":"Lists where the closest PC, NPC or spawnname is. The message returned is: The closest 'spawnname' is a level # <race> <class> and <distance> away to the <direction>, Z difference = #.##.","title":"Description"},{"location":"reference/commands/where/#examples","text":"/where Lists the closest PC or NPC /where pc Lists the closest PC /where npc Lists the closest NPC /where npc \"orc pawn\" Lists where the closest orc pawn is","title":"Examples"},{"location":"reference/commands/while/","tags":["command"],"text":"/while \u00b6 Syntax \u00b6 /while (condition) { ... } Description \u00b6 Executes the commands between { and } while the expression condition evaluates to true. Note that } must be on a line by its own. You can end a /while loop immediately with /break or try the next iteration with /continue. Examples \u00b6 /declare varname int 0 /while (${varname) < 5) { /varcalc varname ${varname}+1 /echo ${varname} } Will output: 1 2 3 4 5 /declare varname int 0 /while (${varname) < 5) { /varcalc varname ${varname}+1 /if ({$varname} == 3) /continue /echo ${varname} } Will output: 1 2 4 5 /declare varname int 0 /while (${varname) < 5) { /varcalc varname ${varname}+1 /if ({$varname} == 3) /break /echo ${varname} } Will output: 1 2","title":"/while"},{"location":"reference/commands/while/#while","text":"","title":"/while"},{"location":"reference/commands/while/#syntax","text":"/while (condition) { ... }","title":"Syntax"},{"location":"reference/commands/while/#description","text":"Executes the commands between { and } while the expression condition evaluates to true. Note that } must be on a line by its own. You can end a /while loop immediately with /break or try the next iteration with /continue.","title":"Description"},{"location":"reference/commands/while/#examples","text":"/declare varname int 0 /while (${varname) < 5) { /varcalc varname ${varname}+1 /echo ${varname} } Will output: 1 2 3 4 5 /declare varname int 0 /while (${varname) < 5) { /varcalc varname ${varname}+1 /if ({$varname} == 3) /continue /echo ${varname} } Will output: 1 2 4 5 /declare varname int 0 /while (${varname) < 5) { /varcalc varname ${varname}+1 /if ({$varname} == 3) /break /echo ${varname} } Will output: 1 2","title":"Examples"},{"location":"reference/commands/who/","tags":["command"],"text":"/who \u00b6 Syntax \u00b6 /who options Description \u00b6 Searches the current zone for the spawns matching the specified Spawn Search options , with the addition of: all: Scan all zones. Note: this reverts to the native /who command. concolor: Displays the results in consider colors sort : Sort by this metric Examples \u00b6 /who npc named Displays a List of The Named NPC in Zone /who pc Cleric Displays a List of Player Clerics (Even if Anon or /role) /who npc pixtt Diplays a List of NPC's with pixtt in their name /who npc 64 Displays a List of NPC's who are level 64 /who pc 70 Displays a List of PC's Who are level 70 /who race human Displays a List of PC's Who are Human /whotarget (/whot) Displays a /who for your target, works on npc/pc shows even if role/anon, Shows if sneaking as well.","title":"/who"},{"location":"reference/commands/who/#who","text":"","title":"/who"},{"location":"reference/commands/who/#syntax","text":"/who options","title":"Syntax"},{"location":"reference/commands/who/#description","text":"Searches the current zone for the spawns matching the specified Spawn Search options , with the addition of: all: Scan all zones. Note: this reverts to the native /who command. concolor: Displays the results in consider colors sort : Sort by this metric","title":"Description"},{"location":"reference/commands/who/#examples","text":"/who npc named Displays a List of The Named NPC in Zone /who pc Cleric Displays a List of Player Clerics (Even if Anon or /role) /who npc pixtt Diplays a List of NPC's with pixtt in their name /who npc 64 Displays a List of NPC's who are level 64 /who pc 70 Displays a List of PC's Who are level 70 /who race human Displays a List of PC's Who are Human /whotarget (/whot) Displays a /who for your target, works on npc/pc shows even if role/anon, Shows if sneaking as well.","title":"Examples"},{"location":"reference/commands/whofilter/","tags":["command"],"text":"/whofilter \u00b6 Syntax \u00b6 /whofilter lastname|class|race|level|gm|guild|holding|ld|sneak|anon|lfg|npctag|spawnid|trader|afk|concolor|invisible|body|distance|light [on|off] Description \u00b6 Toggles the display of the specified spawn(s) when using /who","title":"/whofilter"},{"location":"reference/commands/whofilter/#whofilter","text":"","title":"/whofilter"},{"location":"reference/commands/whofilter/#syntax","text":"/whofilter lastname|class|race|level|gm|guild|holding|ld|sneak|anon|lfg|npctag|spawnid|trader|afk|concolor|invisible|body|distance|light [on|off]","title":"Syntax"},{"location":"reference/commands/whofilter/#description","text":"Toggles the display of the specified spawn(s) when using /who","title":"Description"},{"location":"reference/commands/whotarget/","tags":["command"],"text":"/whotarget \u00b6 Syntax \u00b6 /whotarget Description \u00b6 MQ2 enhances this EQ command by allowing you to use it on any target (including NPCs). Output is the same as the /who command (set by /whofilter), displaying the target's class, race, level, guild, con color, and distance regardless of the player being in anonymous or roleplaying mode.","title":"/whotarget"},{"location":"reference/commands/whotarget/#whotarget","text":"","title":"/whotarget"},{"location":"reference/commands/whotarget/#syntax","text":"/whotarget","title":"Syntax"},{"location":"reference/commands/whotarget/#description","text":"MQ2 enhances this EQ command by allowing you to use it on any target (including NPCs). Output is the same as the /who command (set by /whofilter), displaying the target's class, race, level, guild, con color, and distance regardless of the player being in anonymous or roleplaying mode.","title":"Description"},{"location":"reference/commands/windows/","tags":["command"],"text":"/windows \u00b6 Syntax \u00b6 /windows Description \u00b6 Lists all available UI windows These are usable with /notify Examples \u00b6 Display all open windows in UI /windows open Display all child windows and buttons inside the player window /windows playerwindow","title":"/windows"},{"location":"reference/commands/windows/#windows","text":"","title":"/windows"},{"location":"reference/commands/windows/#syntax","text":"/windows","title":"Syntax"},{"location":"reference/commands/windows/#description","text":"Lists all available UI windows These are usable with /notify","title":"Description"},{"location":"reference/commands/windows/#examples","text":"Display all open windows in UI /windows open Display all child windows and buttons inside the player window /windows playerwindow","title":"Examples"},{"location":"reference/commands/windowstate/","tags":["command"],"text":"/windowstate \u00b6 Syntax \u00b6 /windowstate inventory|merchant|corpse|spellbook|map|notes open|close Description \u00b6 Opens or closes the specified window. Notes These commands affect the client at an unnecessarily low level The best practice is to use /keypress for opening that window instead","title":"/windowstate"},{"location":"reference/commands/windowstate/#windowstate","text":"","title":"/windowstate"},{"location":"reference/commands/windowstate/#syntax","text":"/windowstate inventory|merchant|corpse|spellbook|map|notes open|close","title":"Syntax"},{"location":"reference/commands/windowstate/#description","text":"Opens or closes the specified window. Notes These commands affect the client at an unnecessarily low level The best practice is to use /keypress for opening that window instead","title":"Description"},{"location":"reference/commands/eq/lootnodrop/","tags":["command"],"text":"/lootnodrop \u00b6 Syntax \u00b6 /lootnodrop [always | sometimes | never] Description \u00b6 This is an EverQuest command , not related to MacroQuest2, used to specify how you loot no drop items on corpses. Always is the default and will cause a confirmation box to always be shown when looting no drop items. Sometimes will cause a confirmation box to be shown when looting no drop items not usable by your character. Never will never display a confirmation box when looting no drop items.","title":"/lootnodrop"},{"location":"reference/commands/eq/lootnodrop/#lootnodrop","text":"","title":"/lootnodrop"},{"location":"reference/commands/eq/lootnodrop/#syntax","text":"/lootnodrop [always | sometimes | never]","title":"Syntax"},{"location":"reference/commands/eq/lootnodrop/#description","text":"This is an EverQuest command , not related to MacroQuest2, used to specify how you loot no drop items on corpses. Always is the default and will cause a confirmation box to always be shown when looting no drop items. Sometimes will cause a confirmation box to be shown when looting no drop items not usable by your character. Never will never display a confirmation box when looting no drop items.","title":"Description"},{"location":"reference/data-types/","text":"Data Types \u00b6 See Also: Top Level Objects Reference . Links to pages (See sidebar for full list) achievement character float math switch achievementcat charselectlist ground mercenary target achievementobj class group merchant task altability corpse groupmember pet taskmember argb currentzone heading plugin ticks array deity int race time augtype double int64 raid timer auratype dynamiczone invslot raidmember timestamp bandolier dzmember item range type body dztimer itemspell skill window bool everquest keyring spawn worldlocation buff evolving keyringitem spell xtarget byte fellowship macro string zone cachedbuff fellowshipmember macroquest","title":"Data Types"},{"location":"reference/data-types/#data-types","text":"See Also: Top Level Objects Reference . Links to pages (See sidebar for full list) achievement character float math switch achievementcat charselectlist ground mercenary target achievementobj class group merchant task altability corpse groupmember pet taskmember argb currentzone heading plugin ticks array deity int race time augtype double int64 raid timer auratype dynamiczone invslot raidmember timestamp bandolier dzmember item range type body dztimer itemspell skill window bool everquest keyring spawn worldlocation buff evolving keyringitem spell xtarget byte fellowship macro string zone cachedbuff fellowshipmember macroquest","title":"Data Types"},{"location":"reference/data-types/datatype-achievement/","tags":["datatype"],"text":"achievement \u00b6 Provides the details about a single achievement and allows access to an achievement's objective. Members \u00b6 Type Member Description int ID The achievement's unique ID. string Name The achievement's name string Description The achievement's description int Points The point value for the achievement achievementobj Objective[ #| Description ] Find an objective by its objective ID or Description. achievementobj ObjectiveByIndex[ # ] Find an objective by its visual ordering as displayed in the achievements window. int ObjectiveCount The number of objectives in this achievement. string Link[ opt: Name ] Generate an achievement link. An optional name can be provided to display in the achievement, otherwise the current character's name will be used. int Index The index of the achievement. See Achievement Indices for more information. int IconID ID of the Achievement's Icon. See Achievement Icon below. string State The achievement state. See Achievement State below. bool Completed True if the achievement has been completed bool Open True if the achievement is open bool Locked True if the achievement is locked bool Hidden True if the achievement is hidden time CompletedTime Calendar time when the achievement was completed. Achievement State \u00b6 An achievement has one of the following mutually exclusive states, accessed via State State Description OPEN The achievement is available and not completed. COMPLETED The achievement has been completed LOCKED The achievement is \"locked\" and has criteria that must be completed to be unlocked. HIDDEN The achievement is hidden and not available to be earned. Hidden achievements include those that do not apply to the current character class. Achievement Icon \u00b6 Each achievement has an icon associated with it. This icon id represents a cell in the A_DragItem texture. To access the cell, subtract 500 from the icon id. Examples \u00b6 Link an achievement into chat MQScript Lua /say This is an achievement link: ${Achievement[2801001].Link} mq . cmdf ( \"/say This is an achievement link: %s\" , mq . TLO . Achievement ( 2801001 ). Link ()) Print a message if an achievement has been completed. This example also demonstrates how to properly use an achievement index. MQScript Lua | 500980300 = Wayfarers Brotherhood Adventurer's Stone (Various 20+) /declare achievementIndex int local ${Achievement[500980300].Index} /echo ${achievementIndex} /if (${Achievement.AchievementByIndex[${achievementIndex}].Completed}) { /echo ${Achievement.AchievementByIndex[${achievementIndex}].Name} is completed on ${Achievement.AchievementByIndex[${achievementIndex}].CompletedTime.Date} } else { /echo ${Achievement.AchievementByIndex[${achievementIndex}].Name} is not completed! } -- 500980300 = Wayfarers Brotherhood Adventurer's Stone (Various 20+) local achievementIndex = mq . TLO . Achievement ( 500980300 ). Index () local achievement = mq . TLO . Achievement . AchievementByIndex ( achievementIndex ) if achievement . Completed () then print ( string.format ( '%s is completed on %s' , achievement . Name (), achievement . CompletedTime . Date ())) else print ( achievement . Name () .. ' is not completed!' ) end Print how many humans you have left to kill for the \" I'm a People Person! \" achievement MQScript Lua | 11000028 = I'm a People Person! /if (${Achievement[11000028].Completed}) { /echo ${Achievement[11000028].Name} is complete! } else { | 300197 = Humans /if (!${Achievement[11000028].Objective[300197].Completed}) { /echo You have ${Math.Calc[${Achievement[11000028].Objective[300197].RequiredCount} - ${Achievement[11000028].Objective[300197].Count}].Int} humans left to kill! } else { /echo Done killing humans! } } local achievement = mq . TLO . Achievement ( \"I'm a People Person!\" ) if achievement . Completed () then print ( \"Achievement completed!\" ) else local objective = achievement . Objective ( \"Humans\" ) if not objective . Completed () then print ( string.format ( \"You have %d humans left to kill!\" , objective . RequiredCount () - objective . Count ())) else print ( \"Done killing humans!\" ) end end","title":"achievement"},{"location":"reference/data-types/datatype-achievement/#achievement","text":"Provides the details about a single achievement and allows access to an achievement's objective.","title":"achievement"},{"location":"reference/data-types/datatype-achievement/#members","text":"Type Member Description int ID The achievement's unique ID. string Name The achievement's name string Description The achievement's description int Points The point value for the achievement achievementobj Objective[ #| Description ] Find an objective by its objective ID or Description. achievementobj ObjectiveByIndex[ # ] Find an objective by its visual ordering as displayed in the achievements window. int ObjectiveCount The number of objectives in this achievement. string Link[ opt: Name ] Generate an achievement link. An optional name can be provided to display in the achievement, otherwise the current character's name will be used. int Index The index of the achievement. See Achievement Indices for more information. int IconID ID of the Achievement's Icon. See Achievement Icon below. string State The achievement state. See Achievement State below. bool Completed True if the achievement has been completed bool Open True if the achievement is open bool Locked True if the achievement is locked bool Hidden True if the achievement is hidden time CompletedTime Calendar time when the achievement was completed.","title":"Members"},{"location":"reference/data-types/datatype-achievement/#achievement-state","text":"An achievement has one of the following mutually exclusive states, accessed via State State Description OPEN The achievement is available and not completed. COMPLETED The achievement has been completed LOCKED The achievement is \"locked\" and has criteria that must be completed to be unlocked. HIDDEN The achievement is hidden and not available to be earned. Hidden achievements include those that do not apply to the current character class.","title":"Achievement State"},{"location":"reference/data-types/datatype-achievement/#achievement-icon","text":"Each achievement has an icon associated with it. This icon id represents a cell in the A_DragItem texture. To access the cell, subtract 500 from the icon id.","title":"Achievement Icon"},{"location":"reference/data-types/datatype-achievement/#examples","text":"Link an achievement into chat MQScript Lua /say This is an achievement link: ${Achievement[2801001].Link} mq . cmdf ( \"/say This is an achievement link: %s\" , mq . TLO . Achievement ( 2801001 ). Link ()) Print a message if an achievement has been completed. This example also demonstrates how to properly use an achievement index. MQScript Lua | 500980300 = Wayfarers Brotherhood Adventurer's Stone (Various 20+) /declare achievementIndex int local ${Achievement[500980300].Index} /echo ${achievementIndex} /if (${Achievement.AchievementByIndex[${achievementIndex}].Completed}) { /echo ${Achievement.AchievementByIndex[${achievementIndex}].Name} is completed on ${Achievement.AchievementByIndex[${achievementIndex}].CompletedTime.Date} } else { /echo ${Achievement.AchievementByIndex[${achievementIndex}].Name} is not completed! } -- 500980300 = Wayfarers Brotherhood Adventurer's Stone (Various 20+) local achievementIndex = mq . TLO . Achievement ( 500980300 ). Index () local achievement = mq . TLO . Achievement . AchievementByIndex ( achievementIndex ) if achievement . Completed () then print ( string.format ( '%s is completed on %s' , achievement . Name (), achievement . CompletedTime . Date ())) else print ( achievement . Name () .. ' is not completed!' ) end Print how many humans you have left to kill for the \" I'm a People Person! \" achievement MQScript Lua | 11000028 = I'm a People Person! /if (${Achievement[11000028].Completed}) { /echo ${Achievement[11000028].Name} is complete! } else { | 300197 = Humans /if (!${Achievement[11000028].Objective[300197].Completed}) { /echo You have ${Math.Calc[${Achievement[11000028].Objective[300197].RequiredCount} - ${Achievement[11000028].Objective[300197].Count}].Int} humans left to kill! } else { /echo Done killing humans! } } local achievement = mq . TLO . Achievement ( \"I'm a People Person!\" ) if achievement . Completed () then print ( \"Achievement completed!\" ) else local objective = achievement . Objective ( \"Humans\" ) if not objective . Completed () then print ( string.format ( \"You have %d humans left to kill!\" , objective . RequiredCount () - objective . Count ())) else print ( \"Done killing humans!\" ) end end","title":"Examples"},{"location":"reference/data-types/datatype-achievementcat/","tags":["datatype"],"text":"achievementcat \u00b6 Provides access to achievement categories. Achievements are organized hierarchically in the achievements window by categories. While not required to access achievements, categories may be useful for enumerating lists of achievements. Members \u00b6 Type Member Description int ID The unique ID for the category string Name The category's display name string Description The category's description achievement Achievement[ #| Name ] Find an achievement in this category by its ID or name. achievement AchievementByIndex[ # ] Find an achievement by its index in this category. int AchievementCount The number of achievements in this category. achievementcat Category[ #| Name ] Find a child category in this category by its ID or name. achievementcat CategoryByIndex Find a child category by its index in this category. int CategoryCount The number of child categories in this category. int Points The total earned points of achievements in this category. int CompletedAchievements The number of achievements earned in this category and its subcategories int TotalAchievements The total number of achievements in this category and its subcategories. string ImageTextureName Name of the image texture that is used to represent this category in the Achievements Window. int Index The index of the category in the achievement manager. For more information see Achievement Indices . Examples \u00b6 List the unearned achievements in the EverQuest / Exploration category: MQScript Lua /declare cat achievementcat local /vardata cat Achievement.Category[EverQuest].Category[Exploration] /echo Unearned achievements in the ${cat.Name} category: /declare i int local /for i 1 to ${cat.AchievementCount} { /if (!${cat.AchievementByIndex[${i}].Completed}) { /echo ${cat.AchievementByIndex[${i}].Name} } /next i } local category = mq . TLO . Achievement . Category ( 'EverQuest' ). Category ( 'Exploration' ) for i = 1 , category . AchievementCount () do local achievement = category . AchievementByIndex ( i ) if not achievement . Completed () then print ( achievement . Name ()) end end","title":"achievementcat"},{"location":"reference/data-types/datatype-achievementcat/#achievementcat","text":"Provides access to achievement categories. Achievements are organized hierarchically in the achievements window by categories. While not required to access achievements, categories may be useful for enumerating lists of achievements.","title":"achievementcat"},{"location":"reference/data-types/datatype-achievementcat/#members","text":"Type Member Description int ID The unique ID for the category string Name The category's display name string Description The category's description achievement Achievement[ #| Name ] Find an achievement in this category by its ID or name. achievement AchievementByIndex[ # ] Find an achievement by its index in this category. int AchievementCount The number of achievements in this category. achievementcat Category[ #| Name ] Find a child category in this category by its ID or name. achievementcat CategoryByIndex Find a child category by its index in this category. int CategoryCount The number of child categories in this category. int Points The total earned points of achievements in this category. int CompletedAchievements The number of achievements earned in this category and its subcategories int TotalAchievements The total number of achievements in this category and its subcategories. string ImageTextureName Name of the image texture that is used to represent this category in the Achievements Window. int Index The index of the category in the achievement manager. For more information see Achievement Indices .","title":"Members"},{"location":"reference/data-types/datatype-achievementcat/#examples","text":"List the unearned achievements in the EverQuest / Exploration category: MQScript Lua /declare cat achievementcat local /vardata cat Achievement.Category[EverQuest].Category[Exploration] /echo Unearned achievements in the ${cat.Name} category: /declare i int local /for i 1 to ${cat.AchievementCount} { /if (!${cat.AchievementByIndex[${i}].Completed}) { /echo ${cat.AchievementByIndex[${i}].Name} } /next i } local category = mq . TLO . Achievement . Category ( 'EverQuest' ). Category ( 'Exploration' ) for i = 1 , category . AchievementCount () do local achievement = category . AchievementByIndex ( i ) if not achievement . Completed () then print ( achievement . Name ()) end end","title":"Examples"},{"location":"reference/data-types/datatype-achievementobj/","tags":["datatype"],"text":"achievementobj \u00b6 Represents a single objective of an achievement Members \u00b6 Type Member Description int ID The objective's unique ID. string Description Text describing this objective. int Count The current count recorded by the objective. int RequiredCount The total count required to be complete the objective. For objectives that don't require a count, this will be zero. bool Completed True if the objective has been completed. int Index Visual index of the objective as displayed in the achievement window. Can be used with Achievement.ObjectiveByIndex . Example \u00b6 List the objectives that are still left to complete the achievement \" Norrathian Explorer \": MQScript Lua /declare ach achievement local Norrathian Explorer /if (${ach.Completed}) { /echo ${ach.Name} is complete! } else { /echo The following objectives for ${ach.Name} are incomplete: /declare i int local /for i 1 to ${ach.ObjectiveCount} { /if (!${ach.ObjectiveByIndex[${i}].Completed}) { /echo ${ach.ObjectiveByIndex[${i}].Description} } /next i } } local achievement = mq . TLO . Achievement ( 'Norrathian Explorer' ) if achievement . Completed () then print ( string.format ( '%s complete!' , achievement . Name ())) else print ( string.format ( 'The following objectives for %s are incomplete:' , achievement . Name ())) for i = 1 , achievement . ObjectiveCount () do local objective = achievement . ObjectiveByIndex ( i ) if not objective . Completed () then print ( achievement . ObjectiveByIndex ( i ). Description ()) end end end","title":"achievementobj"},{"location":"reference/data-types/datatype-achievementobj/#achievementobj","text":"Represents a single objective of an achievement","title":"achievementobj"},{"location":"reference/data-types/datatype-achievementobj/#members","text":"Type Member Description int ID The objective's unique ID. string Description Text describing this objective. int Count The current count recorded by the objective. int RequiredCount The total count required to be complete the objective. For objectives that don't require a count, this will be zero. bool Completed True if the objective has been completed. int Index Visual index of the objective as displayed in the achievement window. Can be used with Achievement.ObjectiveByIndex .","title":"Members"},{"location":"reference/data-types/datatype-achievementobj/#example","text":"List the objectives that are still left to complete the achievement \" Norrathian Explorer \": MQScript Lua /declare ach achievement local Norrathian Explorer /if (${ach.Completed}) { /echo ${ach.Name} is complete! } else { /echo The following objectives for ${ach.Name} are incomplete: /declare i int local /for i 1 to ${ach.ObjectiveCount} { /if (!${ach.ObjectiveByIndex[${i}].Completed}) { /echo ${ach.ObjectiveByIndex[${i}].Description} } /next i } } local achievement = mq . TLO . Achievement ( 'Norrathian Explorer' ) if achievement . Completed () then print ( string.format ( '%s complete!' , achievement . Name ())) else print ( string.format ( 'The following objectives for %s are incomplete:' , achievement . Name ())) for i = 1 , achievement . ObjectiveCount () do local objective = achievement . ObjectiveByIndex ( i ) if not objective . Completed () then print ( achievement . ObjectiveByIndex ( i ). Description ()) end end end","title":"Example"},{"location":"reference/data-types/datatype-altability/","tags":["datatype"],"text":"altability \u00b6 Contains all the data related to alternate abilities Members \u00b6 Type Member Description int AARankRequired Rank required to train bool CanTrain Returns true/false on if the Alternative Ability can be trained string Category The name of the category that this AA belongs to. int Cost Base cost to train string Description Basic description int Expansion Expansion level for the ability. int Flags Flags value (Currently unknown?). int GroupID ID of the AA group that this AA belongs to int ID ID int Index Returns the index number of the Alternative Ability int MaxRank Max rank available in this ability int MinLevel Minimum level to train int MyReuseTime Reuse time (in seconds) that takes into account any hastened AA abilities string Name Name int NextIndex Returns the next index number of the Alternative Ability int PointsSpent Returns the amount of points spent on an AA bool Passive Returns true/false on if the Alternative Ability is passive int Rank Returns the Rank of the AA altability RequiresAbility Required ability (if any) int RequiresAbilityPoints Points required in above ability int ReuseTime Reuse time in seconds string ShortName First line of button label (if any) string ShortName2 Second line of button label (if any) spell Spell Spell used by the ability (if any) int Type Type (1-6) string To String Same as Name Example: \u00b6 If the AA \"Companion's Aegis\" can be trained, buy the next index/rank of it MQScsript Lua /if (${AltAbility[Companion's Aegis].CanTrain}) { /alt buy ${AltAbility[Companion's Aegis].NextIndex} } if mq . TLO . AltAbility ( \"Companion's Aegis\" ). CanTrain () then mq . cmd . alt ( 'buy ' .. mq . TLO . AltAbility ( \"Companion's Aegis\" ). NextIndex ()) end","title":"altability"},{"location":"reference/data-types/datatype-altability/#altability","text":"Contains all the data related to alternate abilities","title":"altability"},{"location":"reference/data-types/datatype-altability/#members","text":"Type Member Description int AARankRequired Rank required to train bool CanTrain Returns true/false on if the Alternative Ability can be trained string Category The name of the category that this AA belongs to. int Cost Base cost to train string Description Basic description int Expansion Expansion level for the ability. int Flags Flags value (Currently unknown?). int GroupID ID of the AA group that this AA belongs to int ID ID int Index Returns the index number of the Alternative Ability int MaxRank Max rank available in this ability int MinLevel Minimum level to train int MyReuseTime Reuse time (in seconds) that takes into account any hastened AA abilities string Name Name int NextIndex Returns the next index number of the Alternative Ability int PointsSpent Returns the amount of points spent on an AA bool Passive Returns true/false on if the Alternative Ability is passive int Rank Returns the Rank of the AA altability RequiresAbility Required ability (if any) int RequiresAbilityPoints Points required in above ability int ReuseTime Reuse time in seconds string ShortName First line of button label (if any) string ShortName2 Second line of button label (if any) spell Spell Spell used by the ability (if any) int Type Type (1-6) string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-altability/#example","text":"If the AA \"Companion's Aegis\" can be trained, buy the next index/rank of it MQScsript Lua /if (${AltAbility[Companion's Aegis].CanTrain}) { /alt buy ${AltAbility[Companion's Aegis].NextIndex} } if mq . TLO . AltAbility ( \"Companion's Aegis\" ). CanTrain () then mq . cmd . alt ( 'buy ' .. mq . TLO . AltAbility ( \"Companion's Aegis\" ). NextIndex ()) end","title":"Example:"},{"location":"reference/data-types/datatype-argb/","tags":["datatype"],"text":"argb \u00b6 Represents a color Members \u00b6 int A Alpha channel value. int R Red color value. int G Green color value. int B Blue color value. int Int The integer formed by the ARGB. string (To String) The hex value of the integer formed by the ARGB.","title":"argb"},{"location":"reference/data-types/datatype-argb/#argb","text":"Represents a color","title":"argb"},{"location":"reference/data-types/datatype-argb/#members","text":"int A Alpha channel value. int R Red color value. int G Green color value. int B Blue color value. int Int The integer formed by the ARGB. string (To String) The hex value of the integer formed by the ARGB.","title":"Members"},{"location":"reference/data-types/datatype-array/","tags":["datatype"],"text":"array \u00b6 Data related to arrays. Note Array indexing starts at 1. Members \u00b6 Type Member Description int Dimensions Number of dimensions in the array int Size Total number of elements in the array int Size [ N ] Total number of elements stored in the N th dimension of the array Usage \u00b6 To create an array, attach square brackets to the end of the variable name and place in it the number of elements per dimension. Tip This array syntax only applies to MQScript. For lua, use tables instead. Array Examples \u00b6 This creates a single-dimension local array of int with 10 elements (1-10) all 0: /declare MyArray[10] int This creates a 2-dimensional 10x10 elements(1-10,1-10) int array of scope outer with all values of 5: /declare MyArray[10,10] int outer 5 This creates a 3-dimensional array with 4x5x6 elements (1-4,1-5, 1-6) with UNDEFINED-ARRAY-ELEMENT in each location: /declare MyArray[4,5,6] string outer UNDEFINED-ARRAY-ELEMENT There is no limit to the number of dimensions or the number of elements in each dimension, but use your own good judgement. Note: You cannot make an array of timers. Example Snippets \u00b6 Example ArrayExample.mac sub main /declare myArray[9] int local 0 /declare myCounter int local /echo =============[Put Data]================= /for myCounter 1 to ${myArray.Size} /varset myArray[${myCounter}] ${Math.Rand[999]} /echo Put a random number in Index ${myCounter} of myArray /next myCounter /echo =============[Get Data]================= /for myCounter 1 to ${myArray.Size} /echo Index ${myCounter} in myArray is ${myArray[${myCounter}]} /next myCounter /return","title":"array"},{"location":"reference/data-types/datatype-array/#array","text":"Data related to arrays. Note Array indexing starts at 1.","title":"array"},{"location":"reference/data-types/datatype-array/#members","text":"Type Member Description int Dimensions Number of dimensions in the array int Size Total number of elements in the array int Size [ N ] Total number of elements stored in the N th dimension of the array","title":"Members"},{"location":"reference/data-types/datatype-array/#usage","text":"To create an array, attach square brackets to the end of the variable name and place in it the number of elements per dimension. Tip This array syntax only applies to MQScript. For lua, use tables instead.","title":"Usage"},{"location":"reference/data-types/datatype-array/#array-examples","text":"This creates a single-dimension local array of int with 10 elements (1-10) all 0: /declare MyArray[10] int This creates a 2-dimensional 10x10 elements(1-10,1-10) int array of scope outer with all values of 5: /declare MyArray[10,10] int outer 5 This creates a 3-dimensional array with 4x5x6 elements (1-4,1-5, 1-6) with UNDEFINED-ARRAY-ELEMENT in each location: /declare MyArray[4,5,6] string outer UNDEFINED-ARRAY-ELEMENT There is no limit to the number of dimensions or the number of elements in each dimension, but use your own good judgement. Note: You cannot make an array of timers.","title":"Array Examples"},{"location":"reference/data-types/datatype-array/#example-snippets","text":"Example ArrayExample.mac sub main /declare myArray[9] int local 0 /declare myCounter int local /echo =============[Put Data]================= /for myCounter 1 to ${myArray.Size} /varset myArray[${myCounter}] ${Math.Rand[999]} /echo Put a random number in Index ${myCounter} of myArray /next myCounter /echo =============[Get Data]================= /for myCounter 1 to ${myArray.Size} /echo Index ${myCounter} in myArray is ${myArray[${myCounter}]} /next myCounter /return","title":"Example Snippets"},{"location":"reference/data-types/datatype-augtype/","tags":["datatype"],"text":"augtype Type \u00b6 Describes data about an augmentation slot in an item. Type Member Description bool Empty True if the slot is empty bool Infusable True if this is a hidden energeian power source slot. item Item The item socketed in this slot, if any. string Name The name of the item socketed in this slot, if any. int Slot Index of the augment slot. int Solvent Item ID of the solvent used to remove this item, if any. int Type Type of augment slot. int Visible True if this slot is visible to the user.","title":"augtype"},{"location":"reference/data-types/datatype-augtype/#augtype-type","text":"Describes data about an augmentation slot in an item. Type Member Description bool Empty True if the slot is empty bool Infusable True if this is a hidden energeian power source slot. item Item The item socketed in this slot, if any. string Name The name of the item socketed in this slot, if any. int Slot Index of the augment slot. int Solvent Item ID of the solvent used to remove this item, if any. int Type Type of augment slot. int Visible True if this slot is visible to the user.","title":"augtype Type"},{"location":"reference/data-types/datatype-auratype/","tags":["datatype"],"text":"auratype Type \u00b6 Describes an aura. Type Member Description int ID ID of the Aura string Name Name of the Aura int SpawnID ID of the spawn that emits aura","title":"auratype"},{"location":"reference/data-types/datatype-auratype/#auratype-type","text":"Describes an aura. Type Member Description int ID ID of the Aura string Name Name of the Aura int SpawnID ID of the spawn that emits aura","title":"auratype Type"},{"location":"reference/data-types/datatype-bandolier/","tags":["datatype"],"text":"bandolier \u00b6 Used to access information about bandolier sets on your character. Members \u00b6 Type Member Description bool Active Indicates if the bandolier set is active int Index Returns the index number of the bandolier set bandolieritem Item [ Index ] Provides information about the specified item. Returns the Nth item in the set (Primary, Secondary, Ranged, Ammo) string Name Returns the name of the bandolier set Methods \u00b6 Name Action Activate Activate the bandolier profile Associated DataTypes \u00b6 bandolieritem DataType \u00b6 Type Member Description int IconID Returns the icon id for the item int ID Returns the item id for the item string Name Returns the name of the item Usage Examples \u00b6 MQScript Lua | Activate the bandolier set named \"1HB\" /if (!${Me.Bandolier[1HB].Active}) { /echo Player want us to activate Bandolier: 1HB. /invoke ${Me.Bandolier[1HB].Activate} } | Print the weapon in the primary bandolier slot /echo I have a ${Me.Bandolier[1HB].Item[1].Name} in my primary bandolier slot -- Activate the bandolier set named \"1HB\" if not mq . TLO . Me . Bandolier ( '1HB' ). Active () then print ( 'Player wants us to activate Bandodlier: 1HB' ) mq . TLO . Me . Bandolier ( '1HB' ). Activate () end -- Print the weapon in the primary bandolier slot print ( 'I have a ' , mq . TLO . Me . Bandolier ( '1HB' ). Item ( 1 ). Name (), ' in my primary bandolier slot' )","title":"bandolier"},{"location":"reference/data-types/datatype-bandolier/#bandolier","text":"Used to access information about bandolier sets on your character.","title":"bandolier"},{"location":"reference/data-types/datatype-bandolier/#members","text":"Type Member Description bool Active Indicates if the bandolier set is active int Index Returns the index number of the bandolier set bandolieritem Item [ Index ] Provides information about the specified item. Returns the Nth item in the set (Primary, Secondary, Ranged, Ammo) string Name Returns the name of the bandolier set","title":"Members"},{"location":"reference/data-types/datatype-bandolier/#methods","text":"Name Action Activate Activate the bandolier profile","title":"Methods"},{"location":"reference/data-types/datatype-bandolier/#associated-datatypes","text":"","title":"Associated DataTypes"},{"location":"reference/data-types/datatype-bandolier/#bandolieritem-datatype","text":"Type Member Description int IconID Returns the icon id for the item int ID Returns the item id for the item string Name Returns the name of the item","title":"bandolieritem DataType"},{"location":"reference/data-types/datatype-bandolier/#usage-examples","text":"MQScript Lua | Activate the bandolier set named \"1HB\" /if (!${Me.Bandolier[1HB].Active}) { /echo Player want us to activate Bandolier: 1HB. /invoke ${Me.Bandolier[1HB].Activate} } | Print the weapon in the primary bandolier slot /echo I have a ${Me.Bandolier[1HB].Item[1].Name} in my primary bandolier slot -- Activate the bandolier set named \"1HB\" if not mq . TLO . Me . Bandolier ( '1HB' ). Active () then print ( 'Player wants us to activate Bandodlier: 1HB' ) mq . TLO . Me . Bandolier ( '1HB' ). Activate () end -- Print the weapon in the primary bandolier slot print ( 'I have a ' , mq . TLO . Me . Bandolier ( '1HB' ). Item ( 1 ). Name (), ' in my primary bandolier slot' )","title":"Usage Examples"},{"location":"reference/data-types/datatype-body/","tags":["datatype"],"text":"body \u00b6 Contains data about spawn body types Members \u00b6 Type Member Description int ID The ID of the body type string Name The full name of the body type string To String Same as Name Usage \u00b6 Example MQScript Lua Prints true if a summoned npc is targeted /echo ${Target.Body.Name.Equal[Undead Pet]}` Prints true if a summoned npc is targeted print ( mq . TLO . Target . Boddy . Name === 'Undead Pet' )","title":"body"},{"location":"reference/data-types/datatype-body/#body","text":"Contains data about spawn body types","title":"body"},{"location":"reference/data-types/datatype-body/#members","text":"Type Member Description int ID The ID of the body type string Name The full name of the body type string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-body/#usage","text":"Example MQScript Lua Prints true if a summoned npc is targeted /echo ${Target.Body.Name.Equal[Undead Pet]}` Prints true if a summoned npc is targeted print ( mq . TLO . Target . Boddy . Name === 'Undead Pet' )","title":"Usage"},{"location":"reference/data-types/datatype-bool/","tags":["datatype"],"text":"bool \u00b6 A Boolean expression is one that has just two possible outcomes: 1 (TRUE) and 0 (FALSE). Technically TRUE doesn't have to be 1, but it's always treated that way. Members \u00b6 Type Member Description string To String \"TRUE\" for non-zero, or \"FALSE\" for zero","title":"bool"},{"location":"reference/data-types/datatype-bool/#bool","text":"A Boolean expression is one that has just two possible outcomes: 1 (TRUE) and 0 (FALSE). Technically TRUE doesn't have to be 1, but it's always treated that way.","title":"bool"},{"location":"reference/data-types/datatype-bool/#members","text":"Type Member Description string To String \"TRUE\" for non-zero, or \"FALSE\" for zero","title":"Members"},{"location":"reference/data-types/datatype-buff/","tags":["datatype"],"text":"buff \u00b6 This is the type for any buffs currently affecting you, both long duration and short duration buffs. Members \u00b6 This type inherits members from spell . Type Member Description string Caster Name of the caster who cast the buff, if available. int64 CountersCorruption The number of corruption counters. int64 CountersCurse The number of curse counters. int64 CountersDisease The number of disease counters. int64 CountersPoison The number of poison counters. int64 Dar The remaining damage absorption of the buff (if any). This is not entirely accurate, it will only show you to the Dar of your spell when it was initially cast, or what it was when you last zoned (whichever is more recent). ticks Duration The time remaining before the buff fades (not total duration) int HitCount int ID The ID of the buff or shortbuff slot int Level The level of the person that cast the buff on you (not the level of the spell) float Mod The modifier to a bard song spell Spell The spell int64 TotalCounters The total number of counters on the buff. string To String Same as Name Methods \u00b6 Name Action Remove Removes the named/partial name buff Examples \u00b6 Example MQScript Lua Remove the buff named \"Credence\" /invoke ${Me.Buff[Credence].Remove} Remove the buff named \"Crerdence\" mq . TLO . Me . Buff ( \"Credence\" ). Remove ()","title":"buff"},{"location":"reference/data-types/datatype-buff/#buff","text":"This is the type for any buffs currently affecting you, both long duration and short duration buffs.","title":"buff"},{"location":"reference/data-types/datatype-buff/#members","text":"This type inherits members from spell . Type Member Description string Caster Name of the caster who cast the buff, if available. int64 CountersCorruption The number of corruption counters. int64 CountersCurse The number of curse counters. int64 CountersDisease The number of disease counters. int64 CountersPoison The number of poison counters. int64 Dar The remaining damage absorption of the buff (if any). This is not entirely accurate, it will only show you to the Dar of your spell when it was initially cast, or what it was when you last zoned (whichever is more recent). ticks Duration The time remaining before the buff fades (not total duration) int HitCount int ID The ID of the buff or shortbuff slot int Level The level of the person that cast the buff on you (not the level of the spell) float Mod The modifier to a bard song spell Spell The spell int64 TotalCounters The total number of counters on the buff. string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-buff/#methods","text":"Name Action Remove Removes the named/partial name buff","title":"Methods"},{"location":"reference/data-types/datatype-buff/#examples","text":"Example MQScript Lua Remove the buff named \"Credence\" /invoke ${Me.Buff[Credence].Remove} Remove the buff named \"Crerdence\" mq . TLO . Me . Buff ( \"Credence\" ). Remove ()","title":"Examples"},{"location":"reference/data-types/datatype-byte/","tags":["datatype"],"text":"byte \u00b6 Represents an 8 bit integer, with values randing from 0 to 255. This is a pure DataType and has no members","title":"byte"},{"location":"reference/data-types/datatype-byte/#byte","text":"Represents an 8 bit integer, with values randing from 0 to 255. This is a pure DataType and has no members","title":"byte"},{"location":"reference/data-types/datatype-cachedbuff/","tags":["datatype"],"text":"cachedbuff \u00b6 Info \"Cached Buffs\" used to be a new way to access buff information on players without needing to re-target them. Now, this functionality is fully integrated into MacroQuest and available through the buff datatype. As a result, using cached buffs is now discouraged. You should only used this type if you need access to its \"unique\" style of buff lookup. Information about cached buffs on a player. Data must be populated on a player by first targeting them. See also: Cached Buffs . Inheritance \u00b6 This type inherits members from spell . classDiagram spell <|-- cachedbuff direction RL class cachedbuff { } class spell { } Members \u00b6 Type Member Description string CasterName Returns the name of the caster who applied the buff string Caster Same as CasterName , added for consistency. int Count Returns the amount of buffs catched, or -1 it none int Duration Returns the duration of the buff int OriginalDuration Original duration of the buff. int Slot Returns the buff slot the target had the buff in spell Spell Access the spell. int SpellID Returns the buff's spell ID timestamp Staleness How long it has been since this information was refreshed. Usage \u00b6 Example MQScript Lua Check the time left on a group member's buff. Assumes that data has already been populated by targeting them at some point in the recent past. /echo ${Group.Member[2].CachedBuff[Spirit of Wolf].Duration} Check the time left on a group member's buff. Assumes that data has already been populated by targeting them at some point in the recent past. print ( mq . TLO . Group . Member ( 2 ). CachedBuff ( \"Spirit of Wolf\" ). Duration ())","title":"cachedbuff"},{"location":"reference/data-types/datatype-cachedbuff/#cachedbuff","text":"Info \"Cached Buffs\" used to be a new way to access buff information on players without needing to re-target them. Now, this functionality is fully integrated into MacroQuest and available through the buff datatype. As a result, using cached buffs is now discouraged. You should only used this type if you need access to its \"unique\" style of buff lookup. Information about cached buffs on a player. Data must be populated on a player by first targeting them. See also: Cached Buffs .","title":"cachedbuff"},{"location":"reference/data-types/datatype-cachedbuff/#inheritance","text":"This type inherits members from spell . classDiagram spell <|-- cachedbuff direction RL class cachedbuff { } class spell { }","title":"Inheritance"},{"location":"reference/data-types/datatype-cachedbuff/#members","text":"Type Member Description string CasterName Returns the name of the caster who applied the buff string Caster Same as CasterName , added for consistency. int Count Returns the amount of buffs catched, or -1 it none int Duration Returns the duration of the buff int OriginalDuration Original duration of the buff. int Slot Returns the buff slot the target had the buff in spell Spell Access the spell. int SpellID Returns the buff's spell ID timestamp Staleness How long it has been since this information was refreshed.","title":"Members"},{"location":"reference/data-types/datatype-cachedbuff/#usage","text":"Example MQScript Lua Check the time left on a group member's buff. Assumes that data has already been populated by targeting them at some point in the recent past. /echo ${Group.Member[2].CachedBuff[Spirit of Wolf].Duration} Check the time left on a group member's buff. Assumes that data has already been populated by targeting them at some point in the recent past. print ( mq . TLO . Group . Member ( 2 ). CachedBuff ( \"Spirit of Wolf\" ). Duration ())","title":"Usage"},{"location":"reference/data-types/datatype-character/","tags":["datatype"],"text":"character \u00b6 This data type contains all the information about your character. Inheritance \u00b6 This type inherits members from spawn . classDiagram spawn <|-- character direction RL class spawn { } class character { } Members \u00b6 The source always has the latest data members. If something is missing here, you can check the source to see if it exists. Type Member Description int AAExp AA exp as a raw number out of 10,000 (10,000=100%) int AAPoints Unused AA points int AAPointsAssigned Number of AA Points currently assigned int AAPointsSpent The number of points you have spent on AA abilities int AAPointsTotal The total number of AA points you have int64 AAVitality The total number of AA Vitality you have int64 AAVitalityCap string Ability [ name ] Skill name assigned to this doability button int Ability [ # ] The doability button number that the skill name is on bool AbilityReady [ # | name ] Ability with this name or on this button # ready? AbilityTimer int AccuracyBonus Accuracy bonus from gear and spells spell ActiveDisc Returns a spell if melee discipline is active. int ActiveFavorCost If Tribute is active, how much it is costing you every 10 minutes. Returns NULL if tribute is inactive. AdoptiveCoin buff Aego Returns the name of the Aegolism buff or equivalent (Aego, HP Buff, Symbol) from a Cleric. spawn AggroLock Spawn info for aggro lock player int AGI Character Agility AirSupply altability AltAbility [ # | name ] Returns the total number of points you have spent in ability # or name bool AltAbilityReady [ # | name ] Alt ability # or name ready? int AltAbilityTimer [ # | name ] Alt ability reuse time remaining (in ticks) for ability # or name int AltCurrency [ name ] The amount of alternate currency given the name (e.g. Marks of Valor) bool AltTimerReady Alternate timer ready? (Bash/Slam/Frenzy/Backstab). Note: ${AbilityReady} works fine with most of these. bool AmIGroupLeader Am I the group leader? AncientDraconicCoin AncientSebilisianCoins bool AssistComplete returns true/false if the assist is complete int AttackBonus Attack bonus from gear and spells int AttackSpeed Your Attack Speed. No haste spells/items = AttackSpeed of 100. A 41% haste item will result in an AttackSpeed of 141. This variable does not take into account spell or song haste. auratype Aura Aura data, if an aura is active. bool AutoFire Is Autofire on? AutoSkill int AvoidanceBonus Avoidance bonus from gear/spells Bandolier item Bank [ # ] Item in this bankslot # bool BardSongPlaying Is a bard song playing? int BaseAGI Base Agility int BaseCHA Base Charisma int BaseDEX Base Dexterity int BaseINT Base Intelligence int BaseSTA Base Stamana int BaseSTR Base Strength int BaseWIS Base Wisdom BathezidTradeGems buff Beneficial Returns the first Beneficial buff found in your list of buffs BifurcatedCoin BlockedBuff BlockedPetBuff int Book [ name ] Slot in your spell book assigned to spell name spell Book [ # ] Spell assigned to this slot # in your spell book worldlocation BoundLocation [ # ] Returns information about your bind points (0-4) Brellium buff Brells Returns the Brell's line HP buff from a Paladin BronzeFiats buff Buff [ name ] The buff with this name buff Buff [ # ] The buff in this slot # bool CanMount Can you use a mount here? int64 CareerFavor Career favor/tribute int64 Cash Total cash on your character, expressed in coppers (eg. if you are carrying 100pp, Cash will return 100000) int64 CashBank Total cash in your bank, expressed in coppers CastTimeLeft int CHA Character Charisma Charmed int Chronobines Chronobines on your character int ClairvoyanceBonus Clairvoyance Bonus Clarity bool Combat In combat? spell CombatAbility [ # ] The name of Combat Ability # in your list (not the same as anyone else's list!) int CombatAbility [ name ] The number of Combat ability name in your list (not the same as anyone else's list!) bool CombatAbilityReady [ name | # ] Is this Combat Ability ready? int CombatAbilityTimer [ name | # ] The time remaining (in seconds) before the Combat Ability name is usable int CombatEffectsBonus Combat Effects bonus from gear and spells string CombatState Returns one of the following: COMBAT, DEBUFFED, COOLDOWN, ACTIVE, RESTING, UNKNOWN Commemoratives int Copper Copper on your character int CopperBank Copper in bank spell Corrupted Returns the name of the Corrupted debuff if you have one int CountBuffs Number of buffs you have, not including short duration buffs int64 CountersCorruption int64 CountersCurse Number of curse counters you have int64 CountersDisease Number of disease counters you have int64 CountersPoison Number of poison counters you have int CountSongs Number of songs you have Crippled CrystallizedFear CryrstallizedLuck int CurrentEndurance Current endurance int64 CurrentFavor Current favor/tribute int CurrentHPs Current hit points int CurrentMana Current mana int CurrentWeight Current weight spell Cursed Returns the name of the Curse debuff if you are effected by one CursorCopper CursorGold CursorKrono CursorPlatinum CursorSilver int DamageShieldBonus Damage Shield bonus from gear and spells int DamageShieldMitigationBonus Damage Shield Mitigation bonus from gear and spells int64 Dar Damage absorption remaining (eg. from Rune-type spells) int DEX Character Dexterity DiamondCoins string Diseased Returns the name of first Disease spell on character int DoTShieldBonus DoT Shield bonus from gear and spells string Dotted Returns name of first DoT on character int Doubloons Doubloons on your character ticks Downtime Downtime (Ticks left til combat timer end) DreadStones int Drunk Drunkenness level DSed int EbonCrystals Number of Ebon Crystals on your character Endurance int EnduranceBonus Endurance bonus from gear and spells int EnduranceRegen Endurance regen from the last tick int EnduranceRegenBonus Endurance regen bonus EnergyCrystals EntwinedDjinnCoins int64 Exp Experience (out of 10,000) int ExpansionFlags Returns a numeric number representing which expansions your toon is flagged for int Faycites Faycites on your character Feared fellowship Fellowship Info about Fellowship FetteredIfritCoins FindBuff Fists Focus int FreeBuffSlots Number of open buff slots (not counting the short duration buff slots) int FreeInventory Number of free inventory spaces int FreeInventory [ # ] Number of free inventory spaces of at least # size (giant=4) FroststoneDucat int Gem [ name ] Returns the slot # with the spell name spell Gem [ # ] The name of the spell in this slot # ticks GemTimer [ name | # ] The timer for the spell with this name or in this gem # int Gold Gold on character int GoldBank Gold in bank GoldTokens spawn GroupAssistTarget Current group assist target bool Grouped Grouped? string GroupList Returns a string of your group members (excluding you) spawn GroupMarkNPC [ # ] Current group marked NPC (1-3) int GroupSize Size of group Growth int GukEarned Total LDoN points earned in Deepest Guk int64 GuildID Returns the ID number of your guild int Haste Total Combined Haste (worn and spell) as shown in Inventory Window stats Hasted bool HaveExpansion [ # ] Returns TRUE/FALSE if you have that expansion # int HealAmountBonus Total Heal Amount bonus from gear int HeroicAGIBonus Total Heroic Agility bonus from gear int HeroicCHABonus Total Heroic Charisma bonus from gear int HeroicDEXBonus Total Heroic Dexterity bonus from gear int HeroicINTBonus Total Heroic Intelligence bonus from gear int HeroicSTABonus Total Heroic Stamina bonus from gear int HeroicSTRBonus Total Heroic Strength bonus from gear int HeroicWISBonus Total Heroic Wisdom bonus from gear int HPBonus Hit point bonus from gear and spells int HPRegen Hit point regeneration from last tick int HPRegenBonus HP regen bonus from gear and spells int Hunger Hunger level HybridHP int ID Spawn ID bool InInstance Returns TRUE/FALSE if you are in an instance. Instance int INT Character Intelligence item Inventory [ # ] Item in this slot # item Inventory [ slotname ] Item in this slotname (inventory slots only). See Slot Names for a list of slotnames. bool Invited Invited to group? strinrg Inviter Name of player sending group invite string Invulnerable Returns the invulnerable spell name on you, can be used with spell data type ex. ${Me.Invulnerable.Spell.ID} IsBerserk bool ItemReady [ XXX ] True/False on if the item is ready to cast. Krono int LADelegateMA Level of Delegate MA of the current group leader (not your own ability level) int LADelegateMarkNPC Level of Delegate Mark NPC of the current group leader (not your own ability level) int LAFindPathPC Level of Find Path PC of the current group leader (not your own ability level) int LAHealthEnhancement Level of Health Enhancement of the current group leader (not your own ability level) int LAHealthRegen Level of Health Regen of the current group leader (not your own ability level) int LAHoTT Level of HoTT of the current group leader (not your own ability level) int LAInspectBuffs Level of Inspect Buffs of the current group leader (not your own ability level) int LAManaEnhancement Level of Mana Enhancement of the current group leader (not your own ability level) int LAMarkNPC Level of Mark NPC of the current group leader (not your own ability level) int LANPCHealth Level of NPC Health of the current group leader (not your own ability level) int LAOffenseEnhancement Level of Offense Enhancement of the current group leader (not your own ability level) int LASpellAwareness Level of Spell Awareness of the current group leader (not your own ability level) int Language [ language name ] The EQ language number of the specified language. See languages . string Language [ language number ] Returns the EQ language name of the language number specified. See languages . int LanguageSkill [ language ] Your skill in language int LargestFreeInventory Size of your largest free inventory space int LargestFreeInventory Size of your largest free inventory space timestamp LastZoned Returns a timestamp of last time you zoned LCK int LDoNPoints Available LDoN points LoyaltyTokens Maloed int ManaBonus Mana bonus from gear and spells int ManaRegen Mana regeneration from last tick int ManaRegenBonus Mana regen bonus from gear and spells MarksOfValor MaxAirSupply int MaxBuffSlots Max number of buffs you can have on you. /echo ${Me.MaxBuffSlots} int MaxEndurance Max endurance int MaxHPs Max hit points MaxLevel int MaxMana Max mana McKenzie MedalsOfConflict MedalsOfHeroism int64 MercAAExp **MercAAPoints* MercAAPointsSpent string Mercenary The state of your Mercenary, ACTIVE, SUSPENDED, or UNKNOWN (If it's dead). Returns NULL if you do not have a Mercenary. string MercenaryStance Current active mercenary stance as a string, default is NULL. MercListInfo Mezzed int MirEarned Total LDoN points earned in Miragul's int MMEarned Total LDoN points earned in Mistmoore Motes bool Moving Moving? (including strafe) string Name First name Nobles NumBagSlots int NumGems Returns the amount of spell gems your toon has Origin int Orux Orux on your character OverseerTetradrachm ParcelStatus float PctAAExp AA exp as a % int PctAAVitality Percentage of AA Vitality your toon has int PctAggro Your aggro percentage PctAirSupply int PctEndurance Current endurance as a % float PctExp Experience as a % PctExpToAA int PctHPs Current HP as a % int PctMana Current mana as a % PctMercAAExp int PctVitality Percentage of Vitality the toon has spell PetBuff [ # ] The spell in this PetBuff slot # int PetBuff [ name ] Finds PetBuff slot with the spell name int Phosphenes Phosphenes on your character int Phosphites Phosphites on your character PiecesofEight int Platinum Platinum on your character int PlatinumBank Platinum in bank int PlatinumShared Platinum in shared bank string Poisoned Returns the name of any Poison spell PracticePoints Pred int RadiantCrystals Number of Radiant Crystals on your character spawn RaidAssistTarget [ # ] Current raid assist target (1-3) spawn RaidMarkNPC [ # ] Current raid marked NPC (1-3) bool RangedReady Ranged attack ready? RebellionChits Reclamation Regen RemnantOfTranquility RestlessMark RevDSed Rooted int RujEarned Total LDoN points earned in Rujarkian bool Running Do I have auto-run turned on? SathirsTradeGems ScarletMarks SE spawn SecondaryAggroPlayer spawninfo for secondary aggro player int SecondaryPctAggro Secondary Percentage aggro ShadowStones SharedBank int ShieldingBonus Shielding bonus from gear and spells Shining bool Shrouded Am I Shrouded? string Silenced Returns the name of the Silence type effect on you int Silver Silver on your character int SilverBank Silver in bank SilverTokens int Skill [ name | # ] Skill level of skill with this name or ID # SkillBase int SkillCap [ name | # ] Skill cap of skill with this name or ID # Skin Slowed Snared buff Song [ name ] Finds song with this name buff Song [ # ] The song in this slot # SPA spawn Spawn The character's spawn Spell int SpellDamageBonus Spell Damage bonus bool SpellInCooldown returns TRUE if you have a spell in cooldown and FALSE when not. int SpellRankCap your characters spell rank cap. if it returns: 1 = Rk. I spells 2 = Rk. II spells 3 = Rk. III spells bool SpellReady [ name | # ] Gem with this spell name or in this gem # ready to cast? int SpellShieldBonus Spell Shield bonus from gear and spells int STA Character Stamina int STR Character Strength Strength int StrikeThroughBonus Strikethrough bonus from gear and spells bool Stunned Am I stunned? int StunResistBonus Stun Resist bonus from gear and spells string Subscription Subscription type GOLD, FREE, (Silver?) int SubscriptionDays The number of days left before subscription expires. SV int svChromatic Your character's lowest resist int svCold Character Cold Resist int svCorruption Character Corruption Resist int svDisease Character Disease Resist int svFire Character Fire Resist int svMagic Character Magic Resist int svPoison Character Poison Resist int svPrismatic The average of your character's resists Symbol int TakEarned Total LDoN points earned in Takish spawn TargetOfTarget Target of Target (will only work when group or raid Target of Target is active; if not, it will return NULL) Tashed int Thirst Thirst level int64 TotalCounters bool TributeActive Tribute Active ticks TributeTimer Tribute Timer bool UseAdvancedLooting TRUE/FALSE if using advanced looting VeliumShards int64 Vitality Total amount of Vitality your toon has int64 VitalityCap Voucher WarforgedEmblem WarlordsSymbol int WIS Character Wisdom int XTAggroCount [ N ] N is optional and defaults to 100 . Returns the number of AUTO-HATER mobs on the extended target window where your aggro is less than the optional parameter N. N must be between 1-100 inclusive or it will be set to 100 (the default value). xtarget XTarget [ # ] Extended target data for the specified XTarget #. Note: Passing no index to this returns the number of current extended targets. XTargetSlots XTHaterCount ZoneBound ZoneBoundX ZoneBoundY ZoneBoundZ Zoning string To String The character's name Methods \u00b6 Name Action Dismount Causes character to dismount. Sit Causes character to sit if not already. Stand Causes character to stand if not already. StopCast Causes character to stop casting. Usage \u00b6 Todo Add some examples MQScript /assist PlayerName /delay 5s ${Me.AssistComplete}==TRUE The delay will last either 5s OR until the assist is complete","title":"character"},{"location":"reference/data-types/datatype-character/#character","text":"This data type contains all the information about your character.","title":"character"},{"location":"reference/data-types/datatype-character/#inheritance","text":"This type inherits members from spawn . classDiagram spawn <|-- character direction RL class spawn { } class character { }","title":"Inheritance"},{"location":"reference/data-types/datatype-character/#members","text":"The source always has the latest data members. If something is missing here, you can check the source to see if it exists. Type Member Description int AAExp AA exp as a raw number out of 10,000 (10,000=100%) int AAPoints Unused AA points int AAPointsAssigned Number of AA Points currently assigned int AAPointsSpent The number of points you have spent on AA abilities int AAPointsTotal The total number of AA points you have int64 AAVitality The total number of AA Vitality you have int64 AAVitalityCap string Ability [ name ] Skill name assigned to this doability button int Ability [ # ] The doability button number that the skill name is on bool AbilityReady [ # | name ] Ability with this name or on this button # ready? AbilityTimer int AccuracyBonus Accuracy bonus from gear and spells spell ActiveDisc Returns a spell if melee discipline is active. int ActiveFavorCost If Tribute is active, how much it is costing you every 10 minutes. Returns NULL if tribute is inactive. AdoptiveCoin buff Aego Returns the name of the Aegolism buff or equivalent (Aego, HP Buff, Symbol) from a Cleric. spawn AggroLock Spawn info for aggro lock player int AGI Character Agility AirSupply altability AltAbility [ # | name ] Returns the total number of points you have spent in ability # or name bool AltAbilityReady [ # | name ] Alt ability # or name ready? int AltAbilityTimer [ # | name ] Alt ability reuse time remaining (in ticks) for ability # or name int AltCurrency [ name ] The amount of alternate currency given the name (e.g. Marks of Valor) bool AltTimerReady Alternate timer ready? (Bash/Slam/Frenzy/Backstab). Note: ${AbilityReady} works fine with most of these. bool AmIGroupLeader Am I the group leader? AncientDraconicCoin AncientSebilisianCoins bool AssistComplete returns true/false if the assist is complete int AttackBonus Attack bonus from gear and spells int AttackSpeed Your Attack Speed. No haste spells/items = AttackSpeed of 100. A 41% haste item will result in an AttackSpeed of 141. This variable does not take into account spell or song haste. auratype Aura Aura data, if an aura is active. bool AutoFire Is Autofire on? AutoSkill int AvoidanceBonus Avoidance bonus from gear/spells Bandolier item Bank [ # ] Item in this bankslot # bool BardSongPlaying Is a bard song playing? int BaseAGI Base Agility int BaseCHA Base Charisma int BaseDEX Base Dexterity int BaseINT Base Intelligence int BaseSTA Base Stamana int BaseSTR Base Strength int BaseWIS Base Wisdom BathezidTradeGems buff Beneficial Returns the first Beneficial buff found in your list of buffs BifurcatedCoin BlockedBuff BlockedPetBuff int Book [ name ] Slot in your spell book assigned to spell name spell Book [ # ] Spell assigned to this slot # in your spell book worldlocation BoundLocation [ # ] Returns information about your bind points (0-4) Brellium buff Brells Returns the Brell's line HP buff from a Paladin BronzeFiats buff Buff [ name ] The buff with this name buff Buff [ # ] The buff in this slot # bool CanMount Can you use a mount here? int64 CareerFavor Career favor/tribute int64 Cash Total cash on your character, expressed in coppers (eg. if you are carrying 100pp, Cash will return 100000) int64 CashBank Total cash in your bank, expressed in coppers CastTimeLeft int CHA Character Charisma Charmed int Chronobines Chronobines on your character int ClairvoyanceBonus Clairvoyance Bonus Clarity bool Combat In combat? spell CombatAbility [ # ] The name of Combat Ability # in your list (not the same as anyone else's list!) int CombatAbility [ name ] The number of Combat ability name in your list (not the same as anyone else's list!) bool CombatAbilityReady [ name | # ] Is this Combat Ability ready? int CombatAbilityTimer [ name | # ] The time remaining (in seconds) before the Combat Ability name is usable int CombatEffectsBonus Combat Effects bonus from gear and spells string CombatState Returns one of the following: COMBAT, DEBUFFED, COOLDOWN, ACTIVE, RESTING, UNKNOWN Commemoratives int Copper Copper on your character int CopperBank Copper in bank spell Corrupted Returns the name of the Corrupted debuff if you have one int CountBuffs Number of buffs you have, not including short duration buffs int64 CountersCorruption int64 CountersCurse Number of curse counters you have int64 CountersDisease Number of disease counters you have int64 CountersPoison Number of poison counters you have int CountSongs Number of songs you have Crippled CrystallizedFear CryrstallizedLuck int CurrentEndurance Current endurance int64 CurrentFavor Current favor/tribute int CurrentHPs Current hit points int CurrentMana Current mana int CurrentWeight Current weight spell Cursed Returns the name of the Curse debuff if you are effected by one CursorCopper CursorGold CursorKrono CursorPlatinum CursorSilver int DamageShieldBonus Damage Shield bonus from gear and spells int DamageShieldMitigationBonus Damage Shield Mitigation bonus from gear and spells int64 Dar Damage absorption remaining (eg. from Rune-type spells) int DEX Character Dexterity DiamondCoins string Diseased Returns the name of first Disease spell on character int DoTShieldBonus DoT Shield bonus from gear and spells string Dotted Returns name of first DoT on character int Doubloons Doubloons on your character ticks Downtime Downtime (Ticks left til combat timer end) DreadStones int Drunk Drunkenness level DSed int EbonCrystals Number of Ebon Crystals on your character Endurance int EnduranceBonus Endurance bonus from gear and spells int EnduranceRegen Endurance regen from the last tick int EnduranceRegenBonus Endurance regen bonus EnergyCrystals EntwinedDjinnCoins int64 Exp Experience (out of 10,000) int ExpansionFlags Returns a numeric number representing which expansions your toon is flagged for int Faycites Faycites on your character Feared fellowship Fellowship Info about Fellowship FetteredIfritCoins FindBuff Fists Focus int FreeBuffSlots Number of open buff slots (not counting the short duration buff slots) int FreeInventory Number of free inventory spaces int FreeInventory [ # ] Number of free inventory spaces of at least # size (giant=4) FroststoneDucat int Gem [ name ] Returns the slot # with the spell name spell Gem [ # ] The name of the spell in this slot # ticks GemTimer [ name | # ] The timer for the spell with this name or in this gem # int Gold Gold on character int GoldBank Gold in bank GoldTokens spawn GroupAssistTarget Current group assist target bool Grouped Grouped? string GroupList Returns a string of your group members (excluding you) spawn GroupMarkNPC [ # ] Current group marked NPC (1-3) int GroupSize Size of group Growth int GukEarned Total LDoN points earned in Deepest Guk int64 GuildID Returns the ID number of your guild int Haste Total Combined Haste (worn and spell) as shown in Inventory Window stats Hasted bool HaveExpansion [ # ] Returns TRUE/FALSE if you have that expansion # int HealAmountBonus Total Heal Amount bonus from gear int HeroicAGIBonus Total Heroic Agility bonus from gear int HeroicCHABonus Total Heroic Charisma bonus from gear int HeroicDEXBonus Total Heroic Dexterity bonus from gear int HeroicINTBonus Total Heroic Intelligence bonus from gear int HeroicSTABonus Total Heroic Stamina bonus from gear int HeroicSTRBonus Total Heroic Strength bonus from gear int HeroicWISBonus Total Heroic Wisdom bonus from gear int HPBonus Hit point bonus from gear and spells int HPRegen Hit point regeneration from last tick int HPRegenBonus HP regen bonus from gear and spells int Hunger Hunger level HybridHP int ID Spawn ID bool InInstance Returns TRUE/FALSE if you are in an instance. Instance int INT Character Intelligence item Inventory [ # ] Item in this slot # item Inventory [ slotname ] Item in this slotname (inventory slots only). See Slot Names for a list of slotnames. bool Invited Invited to group? strinrg Inviter Name of player sending group invite string Invulnerable Returns the invulnerable spell name on you, can be used with spell data type ex. ${Me.Invulnerable.Spell.ID} IsBerserk bool ItemReady [ XXX ] True/False on if the item is ready to cast. Krono int LADelegateMA Level of Delegate MA of the current group leader (not your own ability level) int LADelegateMarkNPC Level of Delegate Mark NPC of the current group leader (not your own ability level) int LAFindPathPC Level of Find Path PC of the current group leader (not your own ability level) int LAHealthEnhancement Level of Health Enhancement of the current group leader (not your own ability level) int LAHealthRegen Level of Health Regen of the current group leader (not your own ability level) int LAHoTT Level of HoTT of the current group leader (not your own ability level) int LAInspectBuffs Level of Inspect Buffs of the current group leader (not your own ability level) int LAManaEnhancement Level of Mana Enhancement of the current group leader (not your own ability level) int LAMarkNPC Level of Mark NPC of the current group leader (not your own ability level) int LANPCHealth Level of NPC Health of the current group leader (not your own ability level) int LAOffenseEnhancement Level of Offense Enhancement of the current group leader (not your own ability level) int LASpellAwareness Level of Spell Awareness of the current group leader (not your own ability level) int Language [ language name ] The EQ language number of the specified language. See languages . string Language [ language number ] Returns the EQ language name of the language number specified. See languages . int LanguageSkill [ language ] Your skill in language int LargestFreeInventory Size of your largest free inventory space int LargestFreeInventory Size of your largest free inventory space timestamp LastZoned Returns a timestamp of last time you zoned LCK int LDoNPoints Available LDoN points LoyaltyTokens Maloed int ManaBonus Mana bonus from gear and spells int ManaRegen Mana regeneration from last tick int ManaRegenBonus Mana regen bonus from gear and spells MarksOfValor MaxAirSupply int MaxBuffSlots Max number of buffs you can have on you. /echo ${Me.MaxBuffSlots} int MaxEndurance Max endurance int MaxHPs Max hit points MaxLevel int MaxMana Max mana McKenzie MedalsOfConflict MedalsOfHeroism int64 MercAAExp **MercAAPoints* MercAAPointsSpent string Mercenary The state of your Mercenary, ACTIVE, SUSPENDED, or UNKNOWN (If it's dead). Returns NULL if you do not have a Mercenary. string MercenaryStance Current active mercenary stance as a string, default is NULL. MercListInfo Mezzed int MirEarned Total LDoN points earned in Miragul's int MMEarned Total LDoN points earned in Mistmoore Motes bool Moving Moving? (including strafe) string Name First name Nobles NumBagSlots int NumGems Returns the amount of spell gems your toon has Origin int Orux Orux on your character OverseerTetradrachm ParcelStatus float PctAAExp AA exp as a % int PctAAVitality Percentage of AA Vitality your toon has int PctAggro Your aggro percentage PctAirSupply int PctEndurance Current endurance as a % float PctExp Experience as a % PctExpToAA int PctHPs Current HP as a % int PctMana Current mana as a % PctMercAAExp int PctVitality Percentage of Vitality the toon has spell PetBuff [ # ] The spell in this PetBuff slot # int PetBuff [ name ] Finds PetBuff slot with the spell name int Phosphenes Phosphenes on your character int Phosphites Phosphites on your character PiecesofEight int Platinum Platinum on your character int PlatinumBank Platinum in bank int PlatinumShared Platinum in shared bank string Poisoned Returns the name of any Poison spell PracticePoints Pred int RadiantCrystals Number of Radiant Crystals on your character spawn RaidAssistTarget [ # ] Current raid assist target (1-3) spawn RaidMarkNPC [ # ] Current raid marked NPC (1-3) bool RangedReady Ranged attack ready? RebellionChits Reclamation Regen RemnantOfTranquility RestlessMark RevDSed Rooted int RujEarned Total LDoN points earned in Rujarkian bool Running Do I have auto-run turned on? SathirsTradeGems ScarletMarks SE spawn SecondaryAggroPlayer spawninfo for secondary aggro player int SecondaryPctAggro Secondary Percentage aggro ShadowStones SharedBank int ShieldingBonus Shielding bonus from gear and spells Shining bool Shrouded Am I Shrouded? string Silenced Returns the name of the Silence type effect on you int Silver Silver on your character int SilverBank Silver in bank SilverTokens int Skill [ name | # ] Skill level of skill with this name or ID # SkillBase int SkillCap [ name | # ] Skill cap of skill with this name or ID # Skin Slowed Snared buff Song [ name ] Finds song with this name buff Song [ # ] The song in this slot # SPA spawn Spawn The character's spawn Spell int SpellDamageBonus Spell Damage bonus bool SpellInCooldown returns TRUE if you have a spell in cooldown and FALSE when not. int SpellRankCap your characters spell rank cap. if it returns: 1 = Rk. I spells 2 = Rk. II spells 3 = Rk. III spells bool SpellReady [ name | # ] Gem with this spell name or in this gem # ready to cast? int SpellShieldBonus Spell Shield bonus from gear and spells int STA Character Stamina int STR Character Strength Strength int StrikeThroughBonus Strikethrough bonus from gear and spells bool Stunned Am I stunned? int StunResistBonus Stun Resist bonus from gear and spells string Subscription Subscription type GOLD, FREE, (Silver?) int SubscriptionDays The number of days left before subscription expires. SV int svChromatic Your character's lowest resist int svCold Character Cold Resist int svCorruption Character Corruption Resist int svDisease Character Disease Resist int svFire Character Fire Resist int svMagic Character Magic Resist int svPoison Character Poison Resist int svPrismatic The average of your character's resists Symbol int TakEarned Total LDoN points earned in Takish spawn TargetOfTarget Target of Target (will only work when group or raid Target of Target is active; if not, it will return NULL) Tashed int Thirst Thirst level int64 TotalCounters bool TributeActive Tribute Active ticks TributeTimer Tribute Timer bool UseAdvancedLooting TRUE/FALSE if using advanced looting VeliumShards int64 Vitality Total amount of Vitality your toon has int64 VitalityCap Voucher WarforgedEmblem WarlordsSymbol int WIS Character Wisdom int XTAggroCount [ N ] N is optional and defaults to 100 . Returns the number of AUTO-HATER mobs on the extended target window where your aggro is less than the optional parameter N. N must be between 1-100 inclusive or it will be set to 100 (the default value). xtarget XTarget [ # ] Extended target data for the specified XTarget #. Note: Passing no index to this returns the number of current extended targets. XTargetSlots XTHaterCount ZoneBound ZoneBoundX ZoneBoundY ZoneBoundZ Zoning string To String The character's name","title":"Members"},{"location":"reference/data-types/datatype-character/#methods","text":"Name Action Dismount Causes character to dismount. Sit Causes character to sit if not already. Stand Causes character to stand if not already. StopCast Causes character to stop casting.","title":"Methods"},{"location":"reference/data-types/datatype-character/#usage","text":"Todo Add some examples MQScript /assist PlayerName /delay 5s ${Me.AssistComplete}==TRUE The delay will last either 5s OR until the assist is complete","title":"Usage"},{"location":"reference/data-types/datatype-charselectlist/","tags":["datatype"],"text":"charselectlist \u00b6 Provides information about the character list. See Also: DataType:character , TLO:Me Members \u00b6 Type Member Description string Class Class of the character int Count Number of characters in the character select list int Level Level of the character string Name Name of the character string Race Race of the character int ZoneID Id of the zone the character logged out in Usage \u00b6 Example Using EverQuest.ValidLoc: MQScript Lua | Macro Example -- Lua Example","title":"charselectlist"},{"location":"reference/data-types/datatype-charselectlist/#charselectlist","text":"Provides information about the character list. See Also: DataType:character , TLO:Me","title":"charselectlist"},{"location":"reference/data-types/datatype-charselectlist/#members","text":"Type Member Description string Class Class of the character int Count Number of characters in the character select list int Level Level of the character string Name Name of the character string Race Race of the character int ZoneID Id of the zone the character logged out in","title":"Members"},{"location":"reference/data-types/datatype-charselectlist/#usage","text":"Example Using EverQuest.ValidLoc: MQScript Lua | Macro Example -- Lua Example","title":"Usage"},{"location":"reference/data-types/datatype-class/","tags":["datatype"],"text":"class \u00b6 Data about a particular character class Members \u00b6 Type Member Description bool CanCast Can cast spells, including Bard bool ClericType True if class is a Cleric or Paladin bool DruidType True if class is a Druid or Ranger bool HealerType True if class is a Healer (Cleric, Druid or Shaman) int ID The class numeric ID bool MercType True if class is Mercenary string Name The full name of the class. Ex: \"Ranger\" bool NecromancerType True if class is a Necromancer or Shadow Knight bool PetClass True if class is a pet class (Shaman, Necromancer, Mage or Beastlord) bool PureCaster True if class is a pure caster (Cleric, Druid, Shaman, Necromancer, Wizard, Mage or Enchanter) bool ShamanType True if class is Shaman or Beastlord string ShortName The short name (three letter code) of the class. Ex: RNG for Ranger string To String Same as Name Name -> ShortName list: \u00b6 Name ShortName Bard BRD Beastlord BST Berserker BER Cleric CLR Druid DRU Enchanter ENC Magician MAG Monk MNK Necromancer NEC Paladin PAL Ranger RNG Shadow Knight SHD Shaman SHM Warrior WAR Wizard WIZ Mercenary MER","title":"class"},{"location":"reference/data-types/datatype-class/#class","text":"Data about a particular character class","title":"class"},{"location":"reference/data-types/datatype-class/#members","text":"Type Member Description bool CanCast Can cast spells, including Bard bool ClericType True if class is a Cleric or Paladin bool DruidType True if class is a Druid or Ranger bool HealerType True if class is a Healer (Cleric, Druid or Shaman) int ID The class numeric ID bool MercType True if class is Mercenary string Name The full name of the class. Ex: \"Ranger\" bool NecromancerType True if class is a Necromancer or Shadow Knight bool PetClass True if class is a pet class (Shaman, Necromancer, Mage or Beastlord) bool PureCaster True if class is a pure caster (Cleric, Druid, Shaman, Necromancer, Wizard, Mage or Enchanter) bool ShamanType True if class is Shaman or Beastlord string ShortName The short name (three letter code) of the class. Ex: RNG for Ranger string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-class/#name-shortname-list","text":"Name ShortName Bard BRD Beastlord BST Berserker BER Cleric CLR Druid DRU Enchanter ENC Magician MAG Monk MNK Necromancer NEC Paladin PAL Ranger RNG Shadow Knight SHD Shaman SHM Warrior WAR Wizard WIZ Mercenary MER","title":"Name -&gt; ShortName list:"},{"location":"reference/data-types/datatype-corpse/","tags":["datatype"],"text":"corpse \u00b6 Data related to the current lootable corpse. See Corpse . Inheritance \u00b6 This type inherits members from spawn . classDiagram spawn <|-- corpse direction RL class spawn { } link spawn \"../datatype-spawn/\" class corpse { } Members \u00b6 Type Member Description item Item [ N ] Nth item on the corpse item Item [ name ] Finds an item by partial name in this corpse (use =<name> for exact match) int Items Number of items on the corpse bool Open Corpse open? string To String Same as Open Usage \u00b6 Example MQScript Lua | Print a message if we have items to loot /if (${Corpse.Open} && ${Corpse.Items}) /echo We are currently looting a corpse with items -- Print a message if we have items to loot if mq . TLO . Corpse . Open () and mq . TLO . Corpse . Items () > 0 then print ( 'We are currently looting a corpse with items' ) end","title":"corpse"},{"location":"reference/data-types/datatype-corpse/#corpse","text":"Data related to the current lootable corpse. See Corpse .","title":"corpse"},{"location":"reference/data-types/datatype-corpse/#inheritance","text":"This type inherits members from spawn . classDiagram spawn <|-- corpse direction RL class spawn { } link spawn \"../datatype-spawn/\" class corpse { }","title":"Inheritance"},{"location":"reference/data-types/datatype-corpse/#members","text":"Type Member Description item Item [ N ] Nth item on the corpse item Item [ name ] Finds an item by partial name in this corpse (use =<name> for exact match) int Items Number of items on the corpse bool Open Corpse open? string To String Same as Open","title":"Members"},{"location":"reference/data-types/datatype-corpse/#usage","text":"Example MQScript Lua | Print a message if we have items to loot /if (${Corpse.Open} && ${Corpse.Items}) /echo We are currently looting a corpse with items -- Print a message if we have items to loot if mq . TLO . Corpse . Open () and mq . TLO . Corpse . Items () > 0 then print ( 'We are currently looting a corpse with items' ) end","title":"Usage"},{"location":"reference/data-types/datatype-currentzone/","tags":["datatype"],"text":"currentzone \u00b6 Extends the zone type with additional information about the current zone. Inheritance \u00b6 This type inherits members from zone . classDiagram zone <|-- currentzone direction RL class zone { } link zone \"../datatype-zone/\" class currentzone { } Members \u00b6 This type inherits members from zone . Type Member Description bool Dungeon Same as Indoor. int ID the ID of the zone. bool Indoor True if this is an Indoor zone. float MaxClip Maximum clip plane allowed in zone. float MinClip Minimum clip plane allowed in zone. string Name Full zone name. bool NoBind True if binding isn't allowed in this zone outside specified bindable areas. bool Outdoor True if this is an outdoor zone. string ShortName Short zone name int Type Zone type:0=Indoor Dungeon 1=Outdoor 2=Outdoor City 3=Dungeon City 4=Indoor City 5=Outdoor Dungeon int ZoneType Same as Type string To String Same as Name Usage \u00b6 Example MQScript Lua | echo if the current zone is indoors: /echo ${Zone.Indoor} -- echo if the current zone is indoors: print ( mq . TLO . Zone . Indoor ())","title":"currentzone"},{"location":"reference/data-types/datatype-currentzone/#currentzone","text":"Extends the zone type with additional information about the current zone.","title":"currentzone"},{"location":"reference/data-types/datatype-currentzone/#inheritance","text":"This type inherits members from zone . classDiagram zone <|-- currentzone direction RL class zone { } link zone \"../datatype-zone/\" class currentzone { }","title":"Inheritance"},{"location":"reference/data-types/datatype-currentzone/#members","text":"This type inherits members from zone . Type Member Description bool Dungeon Same as Indoor. int ID the ID of the zone. bool Indoor True if this is an Indoor zone. float MaxClip Maximum clip plane allowed in zone. float MinClip Minimum clip plane allowed in zone. string Name Full zone name. bool NoBind True if binding isn't allowed in this zone outside specified bindable areas. bool Outdoor True if this is an outdoor zone. string ShortName Short zone name int Type Zone type:0=Indoor Dungeon 1=Outdoor 2=Outdoor City 3=Dungeon City 4=Indoor City 5=Outdoor Dungeon int ZoneType Same as Type string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-currentzone/#usage","text":"Example MQScript Lua | echo if the current zone is indoors: /echo ${Zone.Indoor} -- echo if the current zone is indoors: print ( mq . TLO . Zone . Indoor ())","title":"Usage"},{"location":"reference/data-types/datatype-deity/","tags":["datatype"],"text":"deity Type \u00b6 Contains data related to deity members Members \u00b6 Type Member Description int ID The deity's ID # string Name The full deity name string Team The team name string To String Same as Name","title":"deity"},{"location":"reference/data-types/datatype-deity/#deity-type","text":"Contains data related to deity members","title":"deity Type"},{"location":"reference/data-types/datatype-deity/#members","text":"Type Member Description int ID The deity's ID # string Name The full deity name string Team The team name string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-double/","tags":["datatype"],"text":"double Type \u00b6 Represents a double precision (64-bit) floating point number. A floating-point number is one which has a decimal component ( e.g. 1.01 ) Members of this DataType generally manipulate the number's precision ( i.e. how many decimal places ) They all round correctly with the exception of int Members \u00b6 Type Member Description string Deci The number as a string with one place of precision, i.e. ###.# string Centi The number as a string with two places of precision, i.e. ###.## int Int Integer portion of the number truncated rather than rounded, e.g. 12.779 returns 12 string Milli The number as a string with three places of precision, i.e. ###.### string Precision [ # ] The number as a string with # places of precision string Prettify [ precision ] Pretty print the number with commas, with optional precision (defaults to two decimal points). string To String Same as Centi","title":"double"},{"location":"reference/data-types/datatype-double/#double-type","text":"Represents a double precision (64-bit) floating point number. A floating-point number is one which has a decimal component ( e.g. 1.01 ) Members of this DataType generally manipulate the number's precision ( i.e. how many decimal places ) They all round correctly with the exception of int","title":"double Type"},{"location":"reference/data-types/datatype-double/#members","text":"Type Member Description string Deci The number as a string with one place of precision, i.e. ###.# string Centi The number as a string with two places of precision, i.e. ###.## int Int Integer portion of the number truncated rather than rounded, e.g. 12.779 returns 12 string Milli The number as a string with three places of precision, i.e. ###.### string Precision [ # ] The number as a string with # places of precision string Prettify [ precision ] Pretty print the number with commas, with optional precision (defaults to two decimal points). string To String Same as Centi","title":"Members"},{"location":"reference/data-types/datatype-dynamiczone/","tags":["datatype"],"text":"dynamiczone \u00b6 Data for the current dynamic zone instance See Also: TLO:DynamicZone Members \u00b6 Type Member Description bool InRaid ?? dzmember Leader The leader of the dynamic zone bool LeaderFlagged Returns true if the dzleader can successfully enter the dz (this also means the dz is actually Loaded.) int MaxMembers Maximum number of characters that can enter this dynamic zone int MaxTimers The number of timers present in Timers dzmember Member [ # | name ] The dynamic zone member # or name int Members Current number of characters in the dynamic zone int MinMembers Minimum number of members required. string Name The full name of the dynamic zone. dztimer Timer [ # | name ] Access the list of current lockout timers. This is either an index from 1 to MaxTimers , or a \"Expedition|Event\" combination. Event is optional, but if multiple Expeditions match, the timer with the earliest lockout expiration will be returned. string To String Same as Name Usage \u00b6 Example Example usage of Timer MQScript Lua | Example output: 2:10:24 /echo ${DynamicZone.Timer[Nagafen's Lair|Lord Nagafen].Timer.TimeDHM} -- Example output: 2:10:24 print ( mq . TLO . DynamicZone . Timer ( \"Nagafen's Lair|Lord Nagafen\" ). Timer . TimeDHM ()) Changelog \u00b6 January 19 th , 2022: Added MinMembers July 9 th , 2021: Added MaxTimers, Timer","title":"dynamiczone"},{"location":"reference/data-types/datatype-dynamiczone/#dynamiczone","text":"Data for the current dynamic zone instance See Also: TLO:DynamicZone","title":"dynamiczone"},{"location":"reference/data-types/datatype-dynamiczone/#members","text":"Type Member Description bool InRaid ?? dzmember Leader The leader of the dynamic zone bool LeaderFlagged Returns true if the dzleader can successfully enter the dz (this also means the dz is actually Loaded.) int MaxMembers Maximum number of characters that can enter this dynamic zone int MaxTimers The number of timers present in Timers dzmember Member [ # | name ] The dynamic zone member # or name int Members Current number of characters in the dynamic zone int MinMembers Minimum number of members required. string Name The full name of the dynamic zone. dztimer Timer [ # | name ] Access the list of current lockout timers. This is either an index from 1 to MaxTimers , or a \"Expedition|Event\" combination. Event is optional, but if multiple Expeditions match, the timer with the earliest lockout expiration will be returned. string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-dynamiczone/#usage","text":"Example Example usage of Timer MQScript Lua | Example output: 2:10:24 /echo ${DynamicZone.Timer[Nagafen's Lair|Lord Nagafen].Timer.TimeDHM} -- Example output: 2:10:24 print ( mq . TLO . DynamicZone . Timer ( \"Nagafen's Lair|Lord Nagafen\" ). Timer . TimeDHM ())","title":"Usage"},{"location":"reference/data-types/datatype-dynamiczone/#changelog","text":"January 19 th , 2022: Added MinMembers July 9 th , 2021: Added MaxTimers, Timer","title":"Changelog"},{"location":"reference/data-types/datatype-dzmember/","tags":["datatype"],"text":"dzmember \u00b6 This DataType contains information on the members of the current dynamic zone instance See Also: DataType:dynamiczone , TLO:DynamicZone Members \u00b6 Type Member Description bool Flagged Returns true if the dzmember can successfully enter the dz. where x is either index or the name. string Name The name of the member string Status The status of the member - one of the following: Unknown, Online, Offline, In Dynamic Zone, Link Dead string To String Same as Name","title":"dzmember"},{"location":"reference/data-types/datatype-dzmember/#dzmember","text":"This DataType contains information on the members of the current dynamic zone instance See Also: DataType:dynamiczone , TLO:DynamicZone","title":"dzmember"},{"location":"reference/data-types/datatype-dzmember/#members","text":"Type Member Description bool Flagged Returns true if the dzmember can successfully enter the dz. where x is either index or the name. string Name The name of the member string Status The status of the member - one of the following: Unknown, Online, Offline, In Dynamic Zone, Link Dead string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-dztimer/","tags":["datatype"],"text":"dztimer \u00b6 Provides information about a dynamic zone lockout timer See Also: DataType:dynamiczone , TLO:DynamicZone Members \u00b6 Type Name Description string ExpeditionName The name of the expedition string EventName The name of the event timestamp Timer The timestamp indicating when this lockout expires int EventID ID of the event. These values are only unique per Expedition. Non-event lockouts (Replay Timer) will have a -1 event id. string To String Returns the string formatted as \"ExpeditionName|EventName\" Changelog \u00b6 July 9 th , 2021: Initial version","title":"dztimer"},{"location":"reference/data-types/datatype-dztimer/#dztimer","text":"Provides information about a dynamic zone lockout timer See Also: DataType:dynamiczone , TLO:DynamicZone","title":"dztimer"},{"location":"reference/data-types/datatype-dztimer/#members","text":"Type Name Description string ExpeditionName The name of the expedition string EventName The name of the event timestamp Timer The timestamp indicating when this lockout expires int EventID ID of the event. These values are only unique per Expedition. Non-event lockouts (Replay Timer) will have a -1 event id. string To String Returns the string formatted as \"ExpeditionName|EventName\"","title":"Members"},{"location":"reference/data-types/datatype-dztimer/#changelog","text":"July 9 th , 2021: Initial version","title":"Changelog"},{"location":"reference/data-types/datatype-everquest/","tags":["datatype"],"text":"everquest \u00b6 Data types related to the current EverQuest session. Members \u00b6 Type Member Description int CharSelectList Currently returns the zone ID the character is currently in bool ChatChannel [ channelname ] Returns TRUE if channelname is joined string ChatChannel [ # ] Returns the name of chat channel # int ChatChannels Returns the number of channels currently joined string CurrentUI return a string representing the currently loaded UI skin bool Foreground Returns TRUE if EverQuest is in Foreground string GameState Shows the current game state. Values: CHARSELECT, INGAME, PRECHARSELECT, UNKNOWN int64 HWND Window handle. bool IsDefaultUILoaded returns a bool true or false if the \"Default\" UI skin is the one loaded string LastCommand Last command entered window LastMouseOver Returns the last window you moused over string LastTell Name of last person to send you a tell bool LayoutCopyInProgress Returns TRUE if a layoutcopy is in progress and FALSE if not. bool LClickedObject Returns TRUE if an object has been left clicked string LoginName Your station name int MouseX Mouse's X location int MouseY Mouse's Y location string Path Path to the Everquest folder int PID Your current (Process ID) int Ping Your current ping int Running Running time of current MQ2 session, in milliseconds int ScreenMode Returns the screenmode as an integer, 2 is Normal and 3 is No Windows string Server Full name of your server int PPriority Returns the processor priority that Everquest is set to. Values: UNKNOWN, LOW, BELOW NORMAL, NORMAL, ABOVE NORMAL, HIGH, REALTIME bool ValidLoc [ coorrdinates ] Returns true if the given coordinates are valid. int ViewportX EverQuest viewport upper left (X) position int ViewportXCenter EverQuest viewport center (X) position int ViewportXMax EverQuest viewport lower right (X) position int ViewportY EverQuest viewport upper left (Y) position int ViewportYCenter EverQuest viewport center (Y) position int ViewportYMax EverQuest viewport lower right (Y) position string WinTitle Titlebar text of the Everquest window. Usage \u00b6 Example You can place the mouse over a window and then run the following command to see the name of the window that the mouse is hovering over: /echo ${EverQuest.LastMouseOver.Name} Example Using EverQuest.ValidLoc: MQScript Lua | Will print TRUE or FALSE if the location is valid /echo ${EverQuest.ValidLoc[123 456 789]} -- Will print true or false if the location is valid print ( mq . TLO . EverQuest . ValidLoc ( \"123 456 789\" )())","title":"everquest"},{"location":"reference/data-types/datatype-everquest/#everquest","text":"Data types related to the current EverQuest session.","title":"everquest"},{"location":"reference/data-types/datatype-everquest/#members","text":"Type Member Description int CharSelectList Currently returns the zone ID the character is currently in bool ChatChannel [ channelname ] Returns TRUE if channelname is joined string ChatChannel [ # ] Returns the name of chat channel # int ChatChannels Returns the number of channels currently joined string CurrentUI return a string representing the currently loaded UI skin bool Foreground Returns TRUE if EverQuest is in Foreground string GameState Shows the current game state. Values: CHARSELECT, INGAME, PRECHARSELECT, UNKNOWN int64 HWND Window handle. bool IsDefaultUILoaded returns a bool true or false if the \"Default\" UI skin is the one loaded string LastCommand Last command entered window LastMouseOver Returns the last window you moused over string LastTell Name of last person to send you a tell bool LayoutCopyInProgress Returns TRUE if a layoutcopy is in progress and FALSE if not. bool LClickedObject Returns TRUE if an object has been left clicked string LoginName Your station name int MouseX Mouse's X location int MouseY Mouse's Y location string Path Path to the Everquest folder int PID Your current (Process ID) int Ping Your current ping int Running Running time of current MQ2 session, in milliseconds int ScreenMode Returns the screenmode as an integer, 2 is Normal and 3 is No Windows string Server Full name of your server int PPriority Returns the processor priority that Everquest is set to. Values: UNKNOWN, LOW, BELOW NORMAL, NORMAL, ABOVE NORMAL, HIGH, REALTIME bool ValidLoc [ coorrdinates ] Returns true if the given coordinates are valid. int ViewportX EverQuest viewport upper left (X) position int ViewportXCenter EverQuest viewport center (X) position int ViewportXMax EverQuest viewport lower right (X) position int ViewportY EverQuest viewport upper left (Y) position int ViewportYCenter EverQuest viewport center (Y) position int ViewportYMax EverQuest viewport lower right (Y) position string WinTitle Titlebar text of the Everquest window.","title":"Members"},{"location":"reference/data-types/datatype-everquest/#usage","text":"Example You can place the mouse over a window and then run the following command to see the name of the window that the mouse is hovering over: /echo ${EverQuest.LastMouseOver.Name} Example Using EverQuest.ValidLoc: MQScript Lua | Will print TRUE or FALSE if the location is valid /echo ${EverQuest.ValidLoc[123 456 789]} -- Will print true or false if the location is valid print ( mq . TLO . EverQuest . ValidLoc ( \"123 456 789\" )())","title":"Usage"},{"location":"reference/data-types/datatype-evolving/","tags":["datatype"],"text":"evolving \u00b6 A DataType that deals with evolving items. Members \u00b6 Type Member Description bool ExpOn Is evolving item experience turned on for this item? float ExpPct Percentage of experience that the item has gained int Level The level of the evolving item. int MaxLevel The maximum level of the evolving item string To String Same as ExpOn Usage \u00b6 Example MQScript Lua /echo ${FindItem[Blade of the Eclipse].Evolving.ExpPct} print ( mq . TLO . FindItem ( \"Blade of the Eclipse\" ). Evolving . ExpPct ())","title":"evolving"},{"location":"reference/data-types/datatype-evolving/#evolving","text":"A DataType that deals with evolving items.","title":"evolving"},{"location":"reference/data-types/datatype-evolving/#members","text":"Type Member Description bool ExpOn Is evolving item experience turned on for this item? float ExpPct Percentage of experience that the item has gained int Level The level of the evolving item. int MaxLevel The maximum level of the evolving item string To String Same as ExpOn","title":"Members"},{"location":"reference/data-types/datatype-evolving/#usage","text":"Example MQScript Lua /echo ${FindItem[Blade of the Eclipse].Evolving.ExpPct} print ( mq . TLO . FindItem ( \"Blade of the Eclipse\" ). Evolving . ExpPct ())","title":"Usage"},{"location":"reference/data-types/datatype-fellowship/","tags":["datatype"],"text":"fellowship \u00b6 Contains all the data about your fellowship Members \u00b6 Type Member Description bool Campfire TRUE if campfire is up, FALSE if not ticks CampfireDuration Time left on current campfire float CampfireX Campfire X location float CampfireY Campfire Y location float CampfireZ Campfire Z location zone CampfireZone Zone information for the zone that contains your campfire bool Exists Returns TRUE if a fellowship exists. int ID Fellowship ID string Leader Fellowship leader's name fellowshipmember Member [ name|# ] Member data by name or # int Members Number of members in the fellowship string MotD Fellowship Message of the Day bool Sharing [ N ] Returns TRUE if exp sharing is enabled for the Nth member string To String TRUE if currently in a fellowship, FALSE if not Changelog \u00b6 May 13, 2022: Added Exists December 3 rd , 2020: Added Sharing","title":"fellowship"},{"location":"reference/data-types/datatype-fellowship/#fellowship","text":"Contains all the data about your fellowship","title":"fellowship"},{"location":"reference/data-types/datatype-fellowship/#members","text":"Type Member Description bool Campfire TRUE if campfire is up, FALSE if not ticks CampfireDuration Time left on current campfire float CampfireX Campfire X location float CampfireY Campfire Y location float CampfireZ Campfire Z location zone CampfireZone Zone information for the zone that contains your campfire bool Exists Returns TRUE if a fellowship exists. int ID Fellowship ID string Leader Fellowship leader's name fellowshipmember Member [ name|# ] Member data by name or # int Members Number of members in the fellowship string MotD Fellowship Message of the Day bool Sharing [ N ] Returns TRUE if exp sharing is enabled for the Nth member string To String TRUE if currently in a fellowship, FALSE if not","title":"Members"},{"location":"reference/data-types/datatype-fellowship/#changelog","text":"May 13, 2022: Added Exists December 3 rd , 2020: Added Sharing","title":"Changelog"},{"location":"reference/data-types/datatype-fellowshipmember/","tags":["datatype"],"text":"fellowshipmember \u00b6 Contains all the data related to fellowship members Members \u00b6 Type Member Description class Class Member's class ticks LastOn How long since member was last online int Level Member's level string Name Member's name bool Sharing TRUE if member has exp sharing enabled zone Zone Zone information for the member's zone string To String player name Changelog \u00b6 March 7 th , 2021: Added Sharing","title":"fellowshipmember"},{"location":"reference/data-types/datatype-fellowshipmember/#fellowshipmember","text":"Contains all the data related to fellowship members","title":"fellowshipmember"},{"location":"reference/data-types/datatype-fellowshipmember/#members","text":"Type Member Description class Class Member's class ticks LastOn How long since member was last online int Level Member's level string Name Member's name bool Sharing TRUE if member has exp sharing enabled zone Zone Zone information for the member's zone string To String player name","title":"Members"},{"location":"reference/data-types/datatype-fellowshipmember/#changelog","text":"March 7 th , 2021: Added Sharing","title":"Changelog"},{"location":"reference/data-types/datatype-float/","tags":["datatype"],"text":"float Type \u00b6 Represents a single precision (32-bit) floatiang point number. A floating-point number is one which has a decimal component ( e.g. 1.01 ) Members of this DataType generally manipulate the number's precision ( i.e. how many decimal places ) They all round correctly with the exception of int Members \u00b6 Type Member Description string Deci The number as a string with one place of precision, i.e. ###.# string Centi The number as a string with two places of precision, i.e. ###.## int Int Integer portion of the number truncated rather than rounded, e.g. 12.779 returns 12 string Milli The number as a string with three places of precision, i.e. ###.### string Precision [ # ] The number as a string with # places of precision string Prettify [ precision ] Pretty print the number with commas, with optional precision (defaults to two decimal points). int Raw Returns IEEE 754 representation of floating point value. string To String Same as Centi","title":"float"},{"location":"reference/data-types/datatype-float/#float-type","text":"Represents a single precision (32-bit) floatiang point number. A floating-point number is one which has a decimal component ( e.g. 1.01 ) Members of this DataType generally manipulate the number's precision ( i.e. how many decimal places ) They all round correctly with the exception of int","title":"float Type"},{"location":"reference/data-types/datatype-float/#members","text":"Type Member Description string Deci The number as a string with one place of precision, i.e. ###.# string Centi The number as a string with two places of precision, i.e. ###.## int Int Integer portion of the number truncated rather than rounded, e.g. 12.779 returns 12 string Milli The number as a string with three places of precision, i.e. ###.### string Precision [ # ] The number as a string with # places of precision string Prettify [ precision ] Pretty print the number with commas, with optional precision (defaults to two decimal points). int Raw Returns IEEE 754 representation of floating point value. string To String Same as Centi","title":"Members"},{"location":"reference/data-types/datatype-ground/","tags":["datatype"],"text":"ground \u00b6 Represents a ground item. Members \u00b6 Type Member Description int ID Ground item ID (not the same as item ID, this is like spawn ID) int Distance Distance from player to ground item float X X coordinate float Y Y coordinate float Z Z coordinate heading Heading Ground item is facing this heading string Name Name heading HeadingTo Direction player must move to meet this ground item bool LineOfSight Returns TRUE if ground spawn is in line of sight int Address ??? float DisplayName Displays name of the grounspawn int Distance3D Distance from player to ground item int SubID ??? int ZoneID ??? ground First First spawn ground Last Last spawn ground Next Next spawn ground Prev Prev spawn float W X coordinate (Westward-positive) float N Y coordinate (Northward-positive) float U Z coordinate (Upward-positive) string To String Same as ID Methods \u00b6 Name Action DoFace Will cause the toon to face the called for spawn if it exists DoTarget Will cause the toon to target the called for spawn if it exists Grab Picks up the ground spawn Reset Clears the currently selected ground spawn Examples \u00b6 Extended the Ground TLO to accept searches /echo The closest ${Ground[brew].DisplayName} is ${Ground[brew].Distance3D} away from you. output: The closest Brew Barrel is 26.4 away from you. Note that both of the search functions are case insensitive and are sorted by distance closest to you. The only acceptable parameter in the search filter is by name or partial name. /echo ${Ground[egg].Doface.Distance3D}) Will face the closest item on the ground which has the word \"egg\" in it. and then echo the distance to it in the mq2 window. well if it finds an item with the word \"egg\" in it on the ground that is, otherwise it will just echo NULL .DoFace does NOT target the ground item, it just faces it. /if (${Ground[egg].DoTarget.ID}) /echo we just targeted a ${Ground[egg]} Will target the closest item on the ground which has the word \"egg\" in it. and then echo the distance to it in the mq2 window. /if (${Ground[1].Doface.Distance3D}) /echo we just targeted a ${Ground[1].DisplayName} Will face the closest item on the ground. and then echo the distance to it in the mq2 window. well if it finds an groundspawn, otherwise it will just echo NULL .DoFace does NOT target the ground item, it just faces it.","title":"ground"},{"location":"reference/data-types/datatype-ground/#ground","text":"Represents a ground item.","title":"ground"},{"location":"reference/data-types/datatype-ground/#members","text":"Type Member Description int ID Ground item ID (not the same as item ID, this is like spawn ID) int Distance Distance from player to ground item float X X coordinate float Y Y coordinate float Z Z coordinate heading Heading Ground item is facing this heading string Name Name heading HeadingTo Direction player must move to meet this ground item bool LineOfSight Returns TRUE if ground spawn is in line of sight int Address ??? float DisplayName Displays name of the grounspawn int Distance3D Distance from player to ground item int SubID ??? int ZoneID ??? ground First First spawn ground Last Last spawn ground Next Next spawn ground Prev Prev spawn float W X coordinate (Westward-positive) float N Y coordinate (Northward-positive) float U Z coordinate (Upward-positive) string To String Same as ID","title":"Members"},{"location":"reference/data-types/datatype-ground/#methods","text":"Name Action DoFace Will cause the toon to face the called for spawn if it exists DoTarget Will cause the toon to target the called for spawn if it exists Grab Picks up the ground spawn Reset Clears the currently selected ground spawn","title":"Methods"},{"location":"reference/data-types/datatype-ground/#examples","text":"Extended the Ground TLO to accept searches /echo The closest ${Ground[brew].DisplayName} is ${Ground[brew].Distance3D} away from you. output: The closest Brew Barrel is 26.4 away from you. Note that both of the search functions are case insensitive and are sorted by distance closest to you. The only acceptable parameter in the search filter is by name or partial name. /echo ${Ground[egg].Doface.Distance3D}) Will face the closest item on the ground which has the word \"egg\" in it. and then echo the distance to it in the mq2 window. well if it finds an item with the word \"egg\" in it on the ground that is, otherwise it will just echo NULL .DoFace does NOT target the ground item, it just faces it. /if (${Ground[egg].DoTarget.ID}) /echo we just targeted a ${Ground[egg]} Will target the closest item on the ground which has the word \"egg\" in it. and then echo the distance to it in the mq2 window. /if (${Ground[1].Doface.Distance3D}) /echo we just targeted a ${Ground[1].DisplayName} Will face the closest item on the ground. and then echo the distance to it in the mq2 window. well if it finds an groundspawn, otherwise it will just echo NULL .DoFace does NOT target the ground item, it just faces it.","title":"Examples"},{"location":"reference/data-types/datatype-group/","tags":["datatype"],"text":"group \u00b6 Contains details about your group Members \u00b6 bool AnyoneMissing True if somebody in the group is offline, in some other zone, or just simply dead. int CasterMercCount The number of caster dps mercenaries in your group. spawn Cleric The first member of the group that is a cleric. int GroupSize The number of members in your group, including yourself. int HealerMercCount The number of healer mercenaries in your group. int Injured [ # ] The numbers of people in the group that has an hp percent lower than # . groupmember Leader The leader of the group. int LowMana [ # ] The number of people in the group that have a mana percent lower than # . groupmember MainAssist The main assist of the group, if one is assigned. groupmember MainTank The main tank of the group, if one is assigned. groupmember MarkNpc The group member who can mark NPCs, if one is assigned. groupmember MasterLooter The master looter of the group, if one is assigned. int MeleeMercCount The number of melee mercenaries in your group. groupmember Member [ N ] The Nth member of your group. 0 is always you. 1 is the first person in the group list, etc. int Member [ Name ] The group member of your group identified by Name . int Members The total number of group members, excluding yourself. int MercenaryCount The total number of mercenaries that are in the group. groupmember MouseOver The name of the group member that the mouse is currently hovering over in the group window, if any. Note You can hover over your own name in the player window where you see your hp and it will return you. Examples /echo Im hovering my mouse over ${Group.MouseOver.Name} which has ths spawnid: ${Group.MouseOver.ID} /bct ${Group.MouseOver.Name} hi there I dont want to change my target just to tell you: please heal ${Me.Mame} /bct soandso //casting \"Complete Heal\" -targetid|${Group.MouseOver.ID} /bct ${Group.MouseOver.CleanName} //setprio 2 groupmember Puller The puller of the group, if one is assigned. int TankMercCount The number of tank mercenaries in your group. string (To String) The number of members in the group, as a string.","title":"group"},{"location":"reference/data-types/datatype-group/#group","text":"Contains details about your group","title":"group"},{"location":"reference/data-types/datatype-group/#members","text":"bool AnyoneMissing True if somebody in the group is offline, in some other zone, or just simply dead. int CasterMercCount The number of caster dps mercenaries in your group. spawn Cleric The first member of the group that is a cleric. int GroupSize The number of members in your group, including yourself. int HealerMercCount The number of healer mercenaries in your group. int Injured [ # ] The numbers of people in the group that has an hp percent lower than # . groupmember Leader The leader of the group. int LowMana [ # ] The number of people in the group that have a mana percent lower than # . groupmember MainAssist The main assist of the group, if one is assigned. groupmember MainTank The main tank of the group, if one is assigned. groupmember MarkNpc The group member who can mark NPCs, if one is assigned. groupmember MasterLooter The master looter of the group, if one is assigned. int MeleeMercCount The number of melee mercenaries in your group. groupmember Member [ N ] The Nth member of your group. 0 is always you. 1 is the first person in the group list, etc. int Member [ Name ] The group member of your group identified by Name . int Members The total number of group members, excluding yourself. int MercenaryCount The total number of mercenaries that are in the group. groupmember MouseOver The name of the group member that the mouse is currently hovering over in the group window, if any. Note You can hover over your own name in the player window where you see your hp and it will return you. Examples /echo Im hovering my mouse over ${Group.MouseOver.Name} which has ths spawnid: ${Group.MouseOver.ID} /bct ${Group.MouseOver.Name} hi there I dont want to change my target just to tell you: please heal ${Me.Mame} /bct soandso //casting \"Complete Heal\" -targetid|${Group.MouseOver.ID} /bct ${Group.MouseOver.CleanName} //setprio 2 groupmember Puller The puller of the group, if one is assigned. int TankMercCount The number of tank mercenaries in your group. string (To String) The number of members in the group, as a string.","title":"Members"},{"location":"reference/data-types/datatype-groupmember/","tags":["datatype"],"text":"groupmember \u00b6 Contains data on a specific group member Members \u00b6 this type inherits members from spawn if the member is in the current zone. Type Member Description int Index Which number in the group the member is bool Leader TRUE if the member is the group's leader, FALSE otherwise int Level The member's level bool MainAssist TRUE if the member is designated as the group's Main Assist, FALSE otherwise bool MainTank TRUE if the member is designated as the group's Main Tank, FALSE otherwise bool Mercenary TRUE if the member is a mercenary, FALSE otherwise string Name The name of the group member. This works even if they are not in the same zone as you. bool Offline TRUE if the member is offline and FALSE if online bool OtherZone TRUE if the member is online but in another zone and FALSE if online and in same zone as you. bool Present TRUE if the member is online and in same zone and FALSE if online and not in same zone as you. bool Puller TRUE if the member is designated as the group's Puller, FALSE otherwise spawn Spawn Accesses the group member's spawn. Not all members will have a spawn (if they are out of the zone). string To String Same as Name Examples \u00b6 /echo ${Group.Member[0].Leader} Echo TRUE if you are Group Leader. /echo ${Group.Member[3].Puller} Echo TRUE if Group Member 3 is marked as Role Puller","title":"groupmember"},{"location":"reference/data-types/datatype-groupmember/#groupmember","text":"Contains data on a specific group member","title":"groupmember"},{"location":"reference/data-types/datatype-groupmember/#members","text":"this type inherits members from spawn if the member is in the current zone. Type Member Description int Index Which number in the group the member is bool Leader TRUE if the member is the group's leader, FALSE otherwise int Level The member's level bool MainAssist TRUE if the member is designated as the group's Main Assist, FALSE otherwise bool MainTank TRUE if the member is designated as the group's Main Tank, FALSE otherwise bool Mercenary TRUE if the member is a mercenary, FALSE otherwise string Name The name of the group member. This works even if they are not in the same zone as you. bool Offline TRUE if the member is offline and FALSE if online bool OtherZone TRUE if the member is online but in another zone and FALSE if online and in same zone as you. bool Present TRUE if the member is online and in same zone and FALSE if online and not in same zone as you. bool Puller TRUE if the member is designated as the group's Puller, FALSE otherwise spawn Spawn Accesses the group member's spawn. Not all members will have a spawn (if they are out of the zone). string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-groupmember/#examples","text":"/echo ${Group.Member[0].Leader} Echo TRUE if you are Group Leader. /echo ${Group.Member[3].Puller} Echo TRUE if Group Member 3 is marked as Role Puller","title":"Examples"},{"location":"reference/data-types/datatype-heading/","tags":["datatype"],"text":"heading \u00b6 Represents a direction on a compass. Members \u00b6 Type Member Description int Clock The nearest clock direction, e.g. 1-12 float Degrees Heading in degrees (same as casting to float) float DegreesCCW Heading in degrees counter-clockwise (the way the rest of MQ2 and EQ uses it) string Name The long compass direction, eg. \"south\", \"south by southeast\" string ShortName The short compass direction, eg. \"S\", \"SSE\" string (To String) Same as ShortName","title":"heading"},{"location":"reference/data-types/datatype-heading/#heading","text":"Represents a direction on a compass.","title":"heading"},{"location":"reference/data-types/datatype-heading/#members","text":"Type Member Description int Clock The nearest clock direction, e.g. 1-12 float Degrees Heading in degrees (same as casting to float) float DegreesCCW Heading in degrees counter-clockwise (the way the rest of MQ2 and EQ uses it) string Name The long compass direction, eg. \"south\", \"south by southeast\" string ShortName The short compass direction, eg. \"S\", \"SSE\" string (To String) Same as ShortName","title":"Members"},{"location":"reference/data-types/datatype-ini/","tags":["datatype"],"text":"ini \u00b6 This is the type for an ini that you have referenced without an Index. Members \u00b6 Type Member Description inifile File The ini file you would like to reference. Relative and absolute paths are allowed. Searching is performed using the macro directory and the config directory for relative paths. \".ini\" is appended if there is no extension.","title":"ini"},{"location":"reference/data-types/datatype-ini/#ini","text":"This is the type for an ini that you have referenced without an Index.","title":"ini"},{"location":"reference/data-types/datatype-ini/#members","text":"Type Member Description inifile File The ini file you would like to reference. Relative and absolute paths are allowed. Searching is performed using the macro directory and the config directory for relative paths. \".ini\" is appended if there is no extension.","title":"Members"},{"location":"reference/data-types/datatype-inifile/","tags":["datatype"],"text":"inifile \u00b6 This is the type for the ini file that was referenced from ${Ini} Members \u00b6 Type Member Description bool Exists Whether the ini file exists or not. inifilesection Section A reference to the named or unnamed section of this ini file. Examples \u00b6 Example MQScript Lua Does the file \"sample.ini\" exist? /echo ${Ini.File[sample].Exists} Remove the buff named \"Crerdence\" mq . TLO . Ini . File ( \"sample\" ). Exists ()","title":"inifile"},{"location":"reference/data-types/datatype-inifile/#inifile","text":"This is the type for the ini file that was referenced from ${Ini}","title":"inifile"},{"location":"reference/data-types/datatype-inifile/#members","text":"Type Member Description bool Exists Whether the ini file exists or not. inifilesection Section A reference to the named or unnamed section of this ini file.","title":"Members"},{"location":"reference/data-types/datatype-inifile/#examples","text":"Example MQScript Lua Does the file \"sample.ini\" exist? /echo ${Ini.File[sample].Exists} Remove the buff named \"Crerdence\" mq . TLO . Ini . File ( \"sample\" ). Exists ()","title":"Examples"},{"location":"reference/data-types/datatype-inifilesection/","tags":["datatype"],"text":"inifilesection \u00b6 This is the type for the referenced section of an ini file. The Index passed to Section[] is optional. Passing an Index means it will search for matches to that Index. Not passing an Index references all sections for operations that allow it. Members \u00b6 Type Member Description int Count How many sections matching the Section[] index exist. bool Exists Whether a specific section exists. inifilesectionkey Key A reference to the named or unnamed key in this specific ini file section. Examples \u00b6 Given the sample.ini file: [Section1] Key1 = foo Key2 = bar [Section1] Key1 = bar Key2 = foo [Section2] Key = foo Key = bar Key = foobar Example MQScript Lua How many sections are there? /echo ${Ini.File[Sample].Section.Count} 3 How many sections named \"Section1\" are there? /echo ${Ini.File[Sample].Section[Section1].Count} 2 Does \"Section3\" exist? /echo ${Ini.File[Sample].Section[Section3].Exists} FALSE How many sections are there? print ( mq . TLO . Ini . File ( \"Sample\" ). Section . Count ()) 3 How many sections named \"Section1\" are there? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section1\" ). Count ()} 2 Does \"Section3\" exist? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section3\" ). Exists ()} false","title":"inifilesection"},{"location":"reference/data-types/datatype-inifilesection/#inifilesection","text":"This is the type for the referenced section of an ini file. The Index passed to Section[] is optional. Passing an Index means it will search for matches to that Index. Not passing an Index references all sections for operations that allow it.","title":"inifilesection"},{"location":"reference/data-types/datatype-inifilesection/#members","text":"Type Member Description int Count How many sections matching the Section[] index exist. bool Exists Whether a specific section exists. inifilesectionkey Key A reference to the named or unnamed key in this specific ini file section.","title":"Members"},{"location":"reference/data-types/datatype-inifilesection/#examples","text":"Given the sample.ini file: [Section1] Key1 = foo Key2 = bar [Section1] Key1 = bar Key2 = foo [Section2] Key = foo Key = bar Key = foobar Example MQScript Lua How many sections are there? /echo ${Ini.File[Sample].Section.Count} 3 How many sections named \"Section1\" are there? /echo ${Ini.File[Sample].Section[Section1].Count} 2 Does \"Section3\" exist? /echo ${Ini.File[Sample].Section[Section3].Exists} FALSE How many sections are there? print ( mq . TLO . Ini . File ( \"Sample\" ). Section . Count ()) 3 How many sections named \"Section1\" are there? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section1\" ). Count ()} 2 Does \"Section3\" exist? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section3\" ). Exists ()} false","title":"Examples"},{"location":"reference/data-types/datatype-inifilesectionkey/","tags":["datatype"],"text":"inifilesectionkey \u00b6 This is the type for the referenced key in a specific section of an ini file. The Index passed to Key[] is optional. Passing an Index means it will search for matches to that Index. Not passing an Index references all keys for operations that allow it. Members \u00b6 Type Member Description int Count How many keys matching the Key[] index exist. bool Exists Whether a specific key exists. string Value The value for a specific key. Accepts an Index to allow for returning a value if the key does not exist string KeyAtIndex The name of the key at KeyAtIndex[Index] string ValueAtIndex The value at ValueAtIndex[Index] Examples \u00b6 Given the sample.ini file: [Section1] Key1 = foo Key2 = bar [Section2] Key = foo Key = bar Key = foobar Key4 = foobarfour Example MQScript Lua How many keys are there in Section1? /echo ${Ini.File[Sample].Section[Section1].Key.Count} 2 How many keys named \"Key\" are there in Section2? /echo ${Ini.File[Sample].Section[Section2].Key[Key].Count} 3 What is the value of Key1 in Section1? /echo ${Ini.File[Sample].Section[Section1].Key[Key1].Value} foo What is the value of Key in Section2? /echo ${Ini.File[Sample].Section[Section2].Key[Key].Value} foo What is the value of the 2 nd key named \"Key\" in Section 2? /echo ${Ini.File[Sample].Section[Section2].Key[Key].ValueAtIndex[2]} bar Get the value of Section2, Key5 and if it doesn't exist, return \"foobarfive\": /echo ${Ini.File[Sample].Section[Section2].Key[Key5].Value[foobarfive]} foobarfive How many keys are there in Section1? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section1\" ). Key . Count ()) 2 How many keys named \"Key\" are there in Section2? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section2\" ). Key ( \"Key\" ). Count ()) 3 What is the value of Key1 in Section1? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section1\" ). Key ( \"Key1\" ). Value ()) foo What is the value of Key in Section2? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section2\" ). Key ( \"Key\" ). Value ()) foo What is the value of the 2 nd key named \"Key\" in Section 2? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section2\" ). Key ( \"Key\" ). ValueAtIndex ( 2 )) bar Get the value of Section2, Key5 and if it doesn't exist, return \"foobarfive\": print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section2\" ). Key ( \"Key5\" ). Value ( \"foobarfive\" )) foobarfive","title":"inifilesectionkey"},{"location":"reference/data-types/datatype-inifilesectionkey/#inifilesectionkey","text":"This is the type for the referenced key in a specific section of an ini file. The Index passed to Key[] is optional. Passing an Index means it will search for matches to that Index. Not passing an Index references all keys for operations that allow it.","title":"inifilesectionkey"},{"location":"reference/data-types/datatype-inifilesectionkey/#members","text":"Type Member Description int Count How many keys matching the Key[] index exist. bool Exists Whether a specific key exists. string Value The value for a specific key. Accepts an Index to allow for returning a value if the key does not exist string KeyAtIndex The name of the key at KeyAtIndex[Index] string ValueAtIndex The value at ValueAtIndex[Index]","title":"Members"},{"location":"reference/data-types/datatype-inifilesectionkey/#examples","text":"Given the sample.ini file: [Section1] Key1 = foo Key2 = bar [Section2] Key = foo Key = bar Key = foobar Key4 = foobarfour Example MQScript Lua How many keys are there in Section1? /echo ${Ini.File[Sample].Section[Section1].Key.Count} 2 How many keys named \"Key\" are there in Section2? /echo ${Ini.File[Sample].Section[Section2].Key[Key].Count} 3 What is the value of Key1 in Section1? /echo ${Ini.File[Sample].Section[Section1].Key[Key1].Value} foo What is the value of Key in Section2? /echo ${Ini.File[Sample].Section[Section2].Key[Key].Value} foo What is the value of the 2 nd key named \"Key\" in Section 2? /echo ${Ini.File[Sample].Section[Section2].Key[Key].ValueAtIndex[2]} bar Get the value of Section2, Key5 and if it doesn't exist, return \"foobarfive\": /echo ${Ini.File[Sample].Section[Section2].Key[Key5].Value[foobarfive]} foobarfive How many keys are there in Section1? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section1\" ). Key . Count ()) 2 How many keys named \"Key\" are there in Section2? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section2\" ). Key ( \"Key\" ). Count ()) 3 What is the value of Key1 in Section1? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section1\" ). Key ( \"Key1\" ). Value ()) foo What is the value of Key in Section2? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section2\" ). Key ( \"Key\" ). Value ()) foo What is the value of the 2 nd key named \"Key\" in Section 2? print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section2\" ). Key ( \"Key\" ). ValueAtIndex ( 2 )) bar Get the value of Section2, Key5 and if it doesn't exist, return \"foobarfive\": print ( mq . TLO . Ini . File ( \"Sample\" ). Section ( \"Section2\" ). Key ( \"Key5\" ). Value ( \"foobarfive\" )) foobarfive","title":"Examples"},{"location":"reference/data-types/datatype-int/","tags":["datatype"],"text":"int Type \u00b6 Represents a 32-bit integer. Can hold values from -2,147,483,648 to 2,147,483,647. Members \u00b6 Type Member Description float Float The number as a float (123 is represented as 123.0) double Double The number as a double (123 is represented as 123.0) string Hex The hex value of the integer (10 is represented as 0xA) int Reverse Endianness reversed int LowPart Lower 16-bits of the value. int HighPart Upper 16-bits of the value. string Prettify [ precision ] Pretty print the number with commas, with optional precision string (To String) The number as a string","title":"int"},{"location":"reference/data-types/datatype-int/#int-type","text":"Represents a 32-bit integer. Can hold values from -2,147,483,648 to 2,147,483,647.","title":"int Type"},{"location":"reference/data-types/datatype-int/#members","text":"Type Member Description float Float The number as a float (123 is represented as 123.0) double Double The number as a double (123 is represented as 123.0) string Hex The hex value of the integer (10 is represented as 0xA) int Reverse Endianness reversed int LowPart Lower 16-bits of the value. int HighPart Upper 16-bits of the value. string Prettify [ precision ] Pretty print the number with commas, with optional precision string (To String) The number as a string","title":"Members"},{"location":"reference/data-types/datatype-int64/","tags":["datatype"],"text":"int64 Type \u00b6 Represents a 64-bit integer. Can hold values from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807. Members \u00b6 Type Member Description float Float The number as a float (123 is represented as 123.0) double Double The number as a double (123 is represented as 123.0) string Hex The hex value of the integer (10 is represented as 0xA) int64 Reverse Endianness reversed int LowPart Lower 32-bits of the value. int HighPart Upper 32-bits of the value. string Prettify [ precision ] Pretty print the number with commas, with optional precision string (To String) The number as a string","title":"int64"},{"location":"reference/data-types/datatype-int64/#int64-type","text":"Represents a 64-bit integer. Can hold values from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807.","title":"int64 Type"},{"location":"reference/data-types/datatype-int64/#members","text":"Type Member Description float Float The number as a float (123 is represented as 123.0) double Double The number as a double (123 is represented as 123.0) string Hex The hex value of the integer (10 is represented as 0xA) int64 Reverse Endianness reversed int LowPart Lower 32-bits of the value. int HighPart Upper 32-bits of the value. string Prettify [ precision ] Pretty print the number with commas, with optional precision string (To String) The number as a string","title":"Members"},{"location":"reference/data-types/datatype-invslot/","tags":["datatype"],"text":"invslot \u00b6 Data related to an inventory slot. Members \u00b6 Type Member Description int ID ID of this item slot (usable directly by /itemnotify ) item Item Item data for the item in this slot string Name For inventory slots not inside packs, the slot name, otherwise NULL invslot Pack Container that must be opened to access the slot with /itemnotify int Slot Slot number inside the pack which holds the item, otherwise NULL string To String Same as ID Example \u00b6 Bag is a defined variable in a for loop in this case: /if (${InvSlot[pack${Bag}].Item.Item[${Slot}].NoDrop}) { /echo I found a No Drop Item: \\ag${InvSlot[pack${Bag}].Item.Item[${Slot}].Name} /return }","title":"invslot"},{"location":"reference/data-types/datatype-invslot/#invslot","text":"Data related to an inventory slot.","title":"invslot"},{"location":"reference/data-types/datatype-invslot/#members","text":"Type Member Description int ID ID of this item slot (usable directly by /itemnotify ) item Item Item data for the item in this slot string Name For inventory slots not inside packs, the slot name, otherwise NULL invslot Pack Container that must be opened to access the slot with /itemnotify int Slot Slot number inside the pack which holds the item, otherwise NULL string To String Same as ID","title":"Members"},{"location":"reference/data-types/datatype-invslot/#example","text":"Bag is a defined variable in a for loop in this case: /if (${InvSlot[pack${Bag}].Item.Item[${Slot}].NoDrop}) { /echo I found a No Drop Item: \\ag${InvSlot[pack${Bag}].Item.Item[${Slot}].Name} /return }","title":"Example"},{"location":"reference/data-types/datatype-item/","tags":["datatype"],"text":"item Type \u00b6 Contains the properties that describe an item. Members \u00b6 Type Member Description int AC AC value on item int Accuracy Accuracy int AGI AGI value on item Artifact int Attack Attack value on item bool Attuneable Attuneable? int AugRestrictions Augment Restrictions int Augs Number of augs on this item augtype AugSlot Retrieve the augment in the specified slot number. int AugSlot1 Returns the type of agument in slot 1 int AugSlot2 Returns the type of agument in slot 2 int AugSlot3 Returns the type of agument in slot 3 int AugSlot4 Returns the type of agument in slot 4 int AugSlot5 Returns the type of agument in slot 5 int AugSlot6 Returns the type of agument in slot 6 int AugType Augmentation slot type mask. int Avoidance Avoidance BaneDMG BaneDMGType int64 BuyPrice The cost to buy this item from active merchant CanUse float CastTime Spell effect's cast time (in seconds) int CHA CHA value on item int Charges Charges int Clairvoyance Clairvoyance string Class [ N ] Returns the Nth long class name of the listed classes on an item. Items suitable for ALL classes will effectively have all 17 classes listed. int Classes The number of classes that can use the item. Items suitable for ALL classes will return 16. itemspell Clicky Activatable spell effect, if any. Collectible int CombatEffects CombatEffects Combinable int Container Number of slots, if this is a container ContentSize Damage int DamageShieldMitigation Damage Shield Mitigation int DamShield Damage Shield value on item int Deities The number of deities that can use the item. Items with no deity restrictions will return 0. string Deity [ N ] Returns the Nth deity of the listed deities on an item. Items with no deity restrictions will return NULL for all values of N . Delay int DEX DEX value on item DMGBonus string DMGBonusType \"None\", \"Magic\", \"Fire\", \"Cold\", \"Poison\", \"Disease\" int DoTShielding DoT Shielding string EffectType Spell effect type ( see below for spell effect types) int Endurance Endurance int EnduranceRegen Endurance regen evolving Evolving Does this item have Evolving experience on? Expendable itemspell Familiar Familiar spell effect, if any. FirstFreeSlot itemspell Focus First focus effect, if any. itemspell Focus2 Second focus effect, if any. FocusID int FreeStack The number of items needed to fill all the stacks of the item you have (with a stacksize of 20). If you have 3 stacks (1, 10, 20 in those stacks), you have room for 60 total and you have 31 on you, so FreeStack would return 29. int Haste Haste value on item int HealAmount HealAmount (regen?) Heirloiom int HeroicAGI Heroic AGI value on item int HeroicCHA Heroic CHA value on item int HeroicDEX Heroic DEX value on item int HeroicINT Heroic INT value on item int HeroicSTA Heroic STA value on item int HeroicSTR Heroic STR value on item int HeroicSvCold Heroic SvCold value on item int HeroicSvCorruption Heroic SvCorruption value on item int HeroicSvDisease Heroic SvDisease value on item int HeroicSvFire Heroic SvFire value on item int HeroicSvMagic Heroic SvMagic value on item int HeroicSvPoison Heroic SvPoison value on item int HeroicWIS Heroic WIS value on item int HP HP value on item int HPRegen HPRegen value on item int Icon Item Icon int ID Item ID IDFile IDFile2 itemspell Illusion Illusion spell effect, if any. float InstrumentMod Instrument Modifier Value InstrumentType int INT INT value on item int InvSlot Inventory Slot Number (Historic and now deprecated, use ItemSlot and ItemSlot2) item Item [ N ] Item in Nth slot, if this is a container or has augs float ItemDelay Returns the delay of the weapon string ItemLink [CLICKABLE] just prints the actual hexlink for an item (not clickable) unless [CLICKABLE] is included int Items Number of items, if this is a container. int ItemSlot Item Slot number see Slot Names int ItemSlot2 Item Slot subnumber see Slot Names LDoNCost string LDoNTheme \"All\", \"Deepest Guk\", \"Miragul's\", \"Mistmoore\", \"Rujarkian\", \"Takish\", \"Unknown\" Level Light bool Lore Lore? LoreEquipped LoreText Luck bool Magic Magic? int Mana Mana value on item int ManaRegen ManaRegen value on item MaxLuck int MaxPower Max power on an power source int MerchQuantity Quantity of item active merchant has MinLuck itemspell Mount Mount spell effect, if any. string Name Name NoDestroy bool NoDrop No Trade? bool NoRent Temporary? NoTrade Synonym for NoDrop Open OrnamentationIcon PctPower PendingLore int Power Power left on power source Prestige itemspell Proc Combat proc effect. ProcRate int Purity Purity of item Quality Quest string Race [ N ] Returns the Nth long race name of the listed races on an item. Items suitable for ALL races will effectively have all 15 races listed. int Races The number of races that can use the item. Items suitable for ALL races will return 15. Range RecommendedLevel int RequiredLevel Returns the Required Level of an item. Items with no required level will return 0. itemspell Scroll Scroll effect, if any. int SellPrice Price to sell this item at this merchant int Shielding Shielding int Size Item size: 1 SMALL 2 MEDIUM 3 LARGE 4 GIANT int SizeCapacity If item is a container, size of items it can hold: 1 SMALL 2 MEDIUM 3 LARGE 4 GIANT Skill SkillModMax SkillModValue* SlotsUsedByItem spell Spell Spell effect int SpellDamage Spell damage int SpellShield SpellShield int STA STA value on item int Stack Number of items in the stack bool Stackable Stackable? int StackCount The total number of the stackable item in your inventory int Stacks Number of stacks of the item in your inventory int StackSize Maximum number if items that can be in the stack int STR STR value on item int StrikeThrough StrikeThrough int StunResist Stun resist int svCold svCold value on item int svCorruption svCorruption value on item int svDisease svDisease value on item int svFire svFire value on item int svMagic svMagic value on item int svPoison svPoison value on item ticks Timer Returns the number of ticks remaining on an item recast timer int TimerReady Returns the number of seconds remaining on an item recast timer bool Tradeskills Tradeskills? int Tribute Tribute value of the item string Type Type int Value Item value in coppers int Weight Item weight WeightReduction int WIS WIS value on item itemspell Worn Passive worn effect, if any. invslot WornSlot [ N ] The Nth invslot this item can be worn in (fingers/ears count as 2 slots) bool WornSlot [ name ] Can item be worn in invslot with this name ? (worn slots only) int WornSlots The number of invslots this item can be worn in (fingers/ears count as 2 slots) string (To String) Same as Name Spell Effect Types \u00b6 EffectType will return one of the following values: Click Inventory Item has a right-click effect and can be used from the inventory. Click Unknown Item has an unknown right-click effect restriction. Click Worn Item has a right-click effect and must be equipped to use it. Combat Item has a combat proc effect. Spell Scroll Item is a scribable spell scroll, and the effect is the spell that will be scribed. Worn Item has an effect that is persistent while worn (focus effect). DisplayItem Index \u00b6 Warning This section needs to be moved to the MQ2ItemDisplay article ${DisplayItem} now takes an index as an option parameter index can be 0-5 you can still just do ${DsiplayItem} and it will just pick whatever you inspected last. Example: /echo ${DisplayItem[5]} Info = 1, WindowTitle = 2, AdvancedLore = 3, MadeBy = 4, Information = 5, DisplayIndex = 6 NOTE: There is a difference between .Info and .Information .Info contains for example: .Info can return text like; this item is placable in yards, guild yards blah blah , This item can be used in tradeskills .Information can return text like Item Information: Placing this augment into blah blah, this armor can only be used in blah blah","title":"item"},{"location":"reference/data-types/datatype-item/#item-type","text":"Contains the properties that describe an item.","title":"item Type"},{"location":"reference/data-types/datatype-item/#members","text":"Type Member Description int AC AC value on item int Accuracy Accuracy int AGI AGI value on item Artifact int Attack Attack value on item bool Attuneable Attuneable? int AugRestrictions Augment Restrictions int Augs Number of augs on this item augtype AugSlot Retrieve the augment in the specified slot number. int AugSlot1 Returns the type of agument in slot 1 int AugSlot2 Returns the type of agument in slot 2 int AugSlot3 Returns the type of agument in slot 3 int AugSlot4 Returns the type of agument in slot 4 int AugSlot5 Returns the type of agument in slot 5 int AugSlot6 Returns the type of agument in slot 6 int AugType Augmentation slot type mask. int Avoidance Avoidance BaneDMG BaneDMGType int64 BuyPrice The cost to buy this item from active merchant CanUse float CastTime Spell effect's cast time (in seconds) int CHA CHA value on item int Charges Charges int Clairvoyance Clairvoyance string Class [ N ] Returns the Nth long class name of the listed classes on an item. Items suitable for ALL classes will effectively have all 17 classes listed. int Classes The number of classes that can use the item. Items suitable for ALL classes will return 16. itemspell Clicky Activatable spell effect, if any. Collectible int CombatEffects CombatEffects Combinable int Container Number of slots, if this is a container ContentSize Damage int DamageShieldMitigation Damage Shield Mitigation int DamShield Damage Shield value on item int Deities The number of deities that can use the item. Items with no deity restrictions will return 0. string Deity [ N ] Returns the Nth deity of the listed deities on an item. Items with no deity restrictions will return NULL for all values of N . Delay int DEX DEX value on item DMGBonus string DMGBonusType \"None\", \"Magic\", \"Fire\", \"Cold\", \"Poison\", \"Disease\" int DoTShielding DoT Shielding string EffectType Spell effect type ( see below for spell effect types) int Endurance Endurance int EnduranceRegen Endurance regen evolving Evolving Does this item have Evolving experience on? Expendable itemspell Familiar Familiar spell effect, if any. FirstFreeSlot itemspell Focus First focus effect, if any. itemspell Focus2 Second focus effect, if any. FocusID int FreeStack The number of items needed to fill all the stacks of the item you have (with a stacksize of 20). If you have 3 stacks (1, 10, 20 in those stacks), you have room for 60 total and you have 31 on you, so FreeStack would return 29. int Haste Haste value on item int HealAmount HealAmount (regen?) Heirloiom int HeroicAGI Heroic AGI value on item int HeroicCHA Heroic CHA value on item int HeroicDEX Heroic DEX value on item int HeroicINT Heroic INT value on item int HeroicSTA Heroic STA value on item int HeroicSTR Heroic STR value on item int HeroicSvCold Heroic SvCold value on item int HeroicSvCorruption Heroic SvCorruption value on item int HeroicSvDisease Heroic SvDisease value on item int HeroicSvFire Heroic SvFire value on item int HeroicSvMagic Heroic SvMagic value on item int HeroicSvPoison Heroic SvPoison value on item int HeroicWIS Heroic WIS value on item int HP HP value on item int HPRegen HPRegen value on item int Icon Item Icon int ID Item ID IDFile IDFile2 itemspell Illusion Illusion spell effect, if any. float InstrumentMod Instrument Modifier Value InstrumentType int INT INT value on item int InvSlot Inventory Slot Number (Historic and now deprecated, use ItemSlot and ItemSlot2) item Item [ N ] Item in Nth slot, if this is a container or has augs float ItemDelay Returns the delay of the weapon string ItemLink [CLICKABLE] just prints the actual hexlink for an item (not clickable) unless [CLICKABLE] is included int Items Number of items, if this is a container. int ItemSlot Item Slot number see Slot Names int ItemSlot2 Item Slot subnumber see Slot Names LDoNCost string LDoNTheme \"All\", \"Deepest Guk\", \"Miragul's\", \"Mistmoore\", \"Rujarkian\", \"Takish\", \"Unknown\" Level Light bool Lore Lore? LoreEquipped LoreText Luck bool Magic Magic? int Mana Mana value on item int ManaRegen ManaRegen value on item MaxLuck int MaxPower Max power on an power source int MerchQuantity Quantity of item active merchant has MinLuck itemspell Mount Mount spell effect, if any. string Name Name NoDestroy bool NoDrop No Trade? bool NoRent Temporary? NoTrade Synonym for NoDrop Open OrnamentationIcon PctPower PendingLore int Power Power left on power source Prestige itemspell Proc Combat proc effect. ProcRate int Purity Purity of item Quality Quest string Race [ N ] Returns the Nth long race name of the listed races on an item. Items suitable for ALL races will effectively have all 15 races listed. int Races The number of races that can use the item. Items suitable for ALL races will return 15. Range RecommendedLevel int RequiredLevel Returns the Required Level of an item. Items with no required level will return 0. itemspell Scroll Scroll effect, if any. int SellPrice Price to sell this item at this merchant int Shielding Shielding int Size Item size: 1 SMALL 2 MEDIUM 3 LARGE 4 GIANT int SizeCapacity If item is a container, size of items it can hold: 1 SMALL 2 MEDIUM 3 LARGE 4 GIANT Skill SkillModMax SkillModValue* SlotsUsedByItem spell Spell Spell effect int SpellDamage Spell damage int SpellShield SpellShield int STA STA value on item int Stack Number of items in the stack bool Stackable Stackable? int StackCount The total number of the stackable item in your inventory int Stacks Number of stacks of the item in your inventory int StackSize Maximum number if items that can be in the stack int STR STR value on item int StrikeThrough StrikeThrough int StunResist Stun resist int svCold svCold value on item int svCorruption svCorruption value on item int svDisease svDisease value on item int svFire svFire value on item int svMagic svMagic value on item int svPoison svPoison value on item ticks Timer Returns the number of ticks remaining on an item recast timer int TimerReady Returns the number of seconds remaining on an item recast timer bool Tradeskills Tradeskills? int Tribute Tribute value of the item string Type Type int Value Item value in coppers int Weight Item weight WeightReduction int WIS WIS value on item itemspell Worn Passive worn effect, if any. invslot WornSlot [ N ] The Nth invslot this item can be worn in (fingers/ears count as 2 slots) bool WornSlot [ name ] Can item be worn in invslot with this name ? (worn slots only) int WornSlots The number of invslots this item can be worn in (fingers/ears count as 2 slots) string (To String) Same as Name","title":"Members"},{"location":"reference/data-types/datatype-item/#spell-effect-types","text":"EffectType will return one of the following values: Click Inventory Item has a right-click effect and can be used from the inventory. Click Unknown Item has an unknown right-click effect restriction. Click Worn Item has a right-click effect and must be equipped to use it. Combat Item has a combat proc effect. Spell Scroll Item is a scribable spell scroll, and the effect is the spell that will be scribed. Worn Item has an effect that is persistent while worn (focus effect).","title":"Spell Effect Types"},{"location":"reference/data-types/datatype-item/#displayitem-index","text":"Warning This section needs to be moved to the MQ2ItemDisplay article ${DisplayItem} now takes an index as an option parameter index can be 0-5 you can still just do ${DsiplayItem} and it will just pick whatever you inspected last. Example: /echo ${DisplayItem[5]} Info = 1, WindowTitle = 2, AdvancedLore = 3, MadeBy = 4, Information = 5, DisplayIndex = 6 NOTE: There is a difference between .Info and .Information .Info contains for example: .Info can return text like; this item is placable in yards, guild yards blah blah , This item can be used in tradeskills .Information can return text like Item Information: Placing this augment into blah blah, this armor can only be used in blah blah","title":"DisplayItem Index"},{"location":"reference/data-types/datatype-itemspell/","tags":["datatype"],"text":"itemspell Type \u00b6 Represents a spell effect on an item. Members \u00b6 Type Member Description int CastTime Spell cast time. int EffectiveCasterLevel Effective level that is used to cast the spell. int EffectType The type of item spell effect. int MaxCharges The maximum number of charges supported by this spell. string OverrideDescription Overrides the normal spell description string, if set. string OverrideName Overrides the normal spell name string, if set. int ProcRate Combat effect proc rate. int RecastType Recast type of the spell. int RequiredLevel Level required for the spell to be usable. spell Spell The spell. int SpellID ID of the Spell. int TimerID Timer ID of the spell.","title":"itemspell"},{"location":"reference/data-types/datatype-itemspell/#itemspell-type","text":"Represents a spell effect on an item.","title":"itemspell Type"},{"location":"reference/data-types/datatype-itemspell/#members","text":"Type Member Description int CastTime Spell cast time. int EffectiveCasterLevel Effective level that is used to cast the spell. int EffectType The type of item spell effect. int MaxCharges The maximum number of charges supported by this spell. string OverrideDescription Overrides the normal spell description string, if set. string OverrideName Overrides the normal spell name string, if set. int ProcRate Combat effect proc rate. int RecastType Recast type of the spell. int RequiredLevel Level required for the spell to be usable. spell Spell The spell. int SpellID ID of the Spell. int TimerID Timer ID of the spell.","title":"Members"},{"location":"reference/data-types/datatype-keyring/","tags":["datatype"],"text":"keyring \u00b6 This datatype represents information about a keyring (a.k.a. a collection of mounts, illusions, etc) Members \u00b6 Type Member Description int Count The number of items in this keyring keyringitem Stat The keyring item assigned as the stat item Examples \u00b6 If Jungle Raptor Saddle is set as your Stat Mount : /echo ${Mount.Stat} Outputs: Jungle Raptor Saddle If you have 3 items in your Mounts keyring: /echo ${Mount.Count} Outputs: 3","title":"keyring"},{"location":"reference/data-types/datatype-keyring/#keyring","text":"This datatype represents information about a keyring (a.k.a. a collection of mounts, illusions, etc)","title":"keyring"},{"location":"reference/data-types/datatype-keyring/#members","text":"Type Member Description int Count The number of items in this keyring keyringitem Stat The keyring item assigned as the stat item","title":"Members"},{"location":"reference/data-types/datatype-keyring/#examples","text":"If Jungle Raptor Saddle is set as your Stat Mount : /echo ${Mount.Stat} Outputs: Jungle Raptor Saddle If you have 3 items in your Mounts keyring: /echo ${Mount.Count} Outputs: 3","title":"Examples"},{"location":"reference/data-types/datatype-keyringitem/","tags":["datatype"],"text":"keyringitem \u00b6 This datatype deals strictly with information items on a keyring. Members \u00b6 Type Member Description int Index Where on the keyring list item Item The item on the keyring string Name name of the keyring item Examples \u00b6 /echo ${Mount[1].Name} Outputs: Whirligig Flyer Control Device /echo ${Mount[2].Name} Outputs: Abyssal Steed /echo ${Mount[Abyssal Steed].Index} Outputs: 2","title":"keyringitem"},{"location":"reference/data-types/datatype-keyringitem/#keyringitem","text":"This datatype deals strictly with information items on a keyring.","title":"keyringitem"},{"location":"reference/data-types/datatype-keyringitem/#members","text":"Type Member Description int Index Where on the keyring list item Item The item on the keyring string Name name of the keyring item","title":"Members"},{"location":"reference/data-types/datatype-keyringitem/#examples","text":"/echo ${Mount[1].Name} Outputs: Whirligig Flyer Control Device /echo ${Mount[2].Name} Outputs: Abyssal Steed /echo ${Mount[Abyssal Steed].Index} Outputs: 2","title":"Examples"},{"location":"reference/data-types/datatype-macro/","tags":["datatype"],"text":"macro \u00b6 The Macro DataType deals with the macro currently running, and nothing else. Members \u00b6 Type Member Description string CurCommand list the current line number, macro name, and code of the macro being processed int CurLine The current line number of the macro being processed string CurSub The current subroutine bool isOuterVariable true if the provided parameter is a defined outer variable bool isTLO true if the provided parameter an existing TLO int MemUse How much memory the macro is using string Name The name of the macro currently running int Params The number of parameters that were passed to the current subroutine bool Paused NULL if no macro running, FALSE if mqpause is off, TRUE if mqpause is on string Return The value that was returned by the last completed subroutine int64 RunTime How long the macro has been running (in seconds) int StackSize StackSize? varies Variable returns the value given the name of Macro variable Methods \u00b6 Method Name Action Undeclared List all undeclared variables","title":"macro"},{"location":"reference/data-types/datatype-macro/#macro","text":"The Macro DataType deals with the macro currently running, and nothing else.","title":"macro"},{"location":"reference/data-types/datatype-macro/#members","text":"Type Member Description string CurCommand list the current line number, macro name, and code of the macro being processed int CurLine The current line number of the macro being processed string CurSub The current subroutine bool isOuterVariable true if the provided parameter is a defined outer variable bool isTLO true if the provided parameter an existing TLO int MemUse How much memory the macro is using string Name The name of the macro currently running int Params The number of parameters that were passed to the current subroutine bool Paused NULL if no macro running, FALSE if mqpause is off, TRUE if mqpause is on string Return The value that was returned by the last completed subroutine int64 RunTime How long the macro has been running (in seconds) int StackSize StackSize? varies Variable returns the value given the name of Macro variable","title":"Members"},{"location":"reference/data-types/datatype-macro/#methods","text":"Method Name Action Undeclared List all undeclared variables","title":"Methods"},{"location":"reference/data-types/datatype-macroquest/","tags":["datatype"],"text":"macroquest \u00b6 Data types related to the current MacroQuest2 session. These also inherit from the EverQuest Type . Members \u00b6 Type Member Description int Build The build (client target) for MQ2Main.dll (1 - Live, 2 - Test, 3 - Beta, 4 - Emu) string BuildName The build (client target) name for MQ2Main.dll (Live, Test, Beta, Emu) string BuildDate Date that MQ2Main.dll was built string Error Last normal error message string InternalName The internal name from MQ2Main.dll (\"Next\") string MQ2DataError Last MQ2Data parsing error message int Parser Which parser engine is currently active string Path [ Option ] Directory that Macroquest.exe launched from. When passed root/config/crashdumps/logs/mqini/macros/plugins/resources, returns the respective path string SyntaxError Last syntax error message string Version The full version of MQ2Main.dll string To String None Example \u00b6 /echo ${MacroQuest.Path[config]}","title":"macroquest"},{"location":"reference/data-types/datatype-macroquest/#macroquest","text":"Data types related to the current MacroQuest2 session. These also inherit from the EverQuest Type .","title":"macroquest"},{"location":"reference/data-types/datatype-macroquest/#members","text":"Type Member Description int Build The build (client target) for MQ2Main.dll (1 - Live, 2 - Test, 3 - Beta, 4 - Emu) string BuildName The build (client target) name for MQ2Main.dll (Live, Test, Beta, Emu) string BuildDate Date that MQ2Main.dll was built string Error Last normal error message string InternalName The internal name from MQ2Main.dll (\"Next\") string MQ2DataError Last MQ2Data parsing error message int Parser Which parser engine is currently active string Path [ Option ] Directory that Macroquest.exe launched from. When passed root/config/crashdumps/logs/mqini/macros/plugins/resources, returns the respective path string SyntaxError Last syntax error message string Version The full version of MQ2Main.dll string To String None","title":"Members"},{"location":"reference/data-types/datatype-macroquest/#example","text":"/echo ${MacroQuest.Path[config]}","title":"Example"},{"location":"reference/data-types/datatype-math/","tags":["datatype"],"text":"math \u00b6 This DataType performs various mathematical calculations. In the following members, n is any formula that consists of valid Operators . Members \u00b6 float Abs[ n ] The absolute value of the result of n float Acos[ n ] Arccosine of n (in degrees) float Asin[ n ] Arcsine of n (in degrees) float Atan[ n ] Arctangent of n (in degrees) float Calc[ n ] Performs a mathematical calculation n int Clamp[ n, min, max ] Clamps the value n such that min _<= _n <= max float Cos[ n ] Cosine of n (in degrees) int Dec[ hex ] Decimal value of a hexidecimal string float Distance[**y,x,z : y,x,z ]** Calculates the distance between two points on the map 1, 2, or 3 dimensions may be provided Defaults to your character's current location string Hex[ n ] Returns hexidecimal value of int n int Not[ n ] Bitwise complement of n int Rand[ n ] Random integer. Rand[5] range 0 to 4. Rand[100,200] range 100 to 199 float Sin[ n ] Sine of n (in degrees) float Sqrt[ n ] Square root of n float Tan[ n ] Tangent of n (in degrees) string To String NULL","title":"math"},{"location":"reference/data-types/datatype-math/#math","text":"This DataType performs various mathematical calculations. In the following members, n is any formula that consists of valid Operators .","title":"math"},{"location":"reference/data-types/datatype-math/#members","text":"float Abs[ n ] The absolute value of the result of n float Acos[ n ] Arccosine of n (in degrees) float Asin[ n ] Arcsine of n (in degrees) float Atan[ n ] Arctangent of n (in degrees) float Calc[ n ] Performs a mathematical calculation n int Clamp[ n, min, max ] Clamps the value n such that min _<= _n <= max float Cos[ n ] Cosine of n (in degrees) int Dec[ hex ] Decimal value of a hexidecimal string float Distance[**y,x,z : y,x,z ]** Calculates the distance between two points on the map 1, 2, or 3 dimensions may be provided Defaults to your character's current location string Hex[ n ] Returns hexidecimal value of int n int Not[ n ] Bitwise complement of n int Rand[ n ] Random integer. Rand[5] range 0 to 4. Rand[100,200] range 100 to 199 float Sin[ n ] Sine of n (in degrees) float Sqrt[ n ] Square root of n float Tan[ n ] Tangent of n (in degrees) string To String NULL","title":"Members"},{"location":"reference/data-types/datatype-mercenary/","tags":["datatype"],"text":"mercenary \u00b6 This is the type used for mercenaries. Members \u00b6 This type inherits members from spawn . Type Member Description int AAPoints AA Points spent on mercenary abilities string Stance Current stance of the mercenary string State Current state of the mercenary (returns \"DEAD\",\"SUSPENDED\",\"ACTIVE\", or \"UNKNOWN\" int StateID Current state ID of the mercenary as a number. string Index Index string To String Same as Name Examples \u00b6 Check on if you have an active mercenary, mercenary is a cleric, and if it's stance is NOT reactive.... then change it TO reactive. /if (${Mercenary.State.Equal[ACTIVE]} && ${Mercenary.Class.Name.Equal[Cleric]} && ${Mercenary.Stance.NotEqual[REACTIVE]}) { /stance reactive }","title":"mercenary"},{"location":"reference/data-types/datatype-mercenary/#mercenary","text":"This is the type used for mercenaries.","title":"mercenary"},{"location":"reference/data-types/datatype-mercenary/#members","text":"This type inherits members from spawn . Type Member Description int AAPoints AA Points spent on mercenary abilities string Stance Current stance of the mercenary string State Current state of the mercenary (returns \"DEAD\",\"SUSPENDED\",\"ACTIVE\", or \"UNKNOWN\" int StateID Current state ID of the mercenary as a number. string Index Index string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-mercenary/#examples","text":"Check on if you have an active mercenary, mercenary is a cleric, and if it's stance is NOT reactive.... then change it TO reactive. /if (${Mercenary.State.Equal[ACTIVE]} && ${Mercenary.Class.Name.Equal[Cleric]} && ${Mercenary.Stance.NotEqual[REACTIVE]}) { /stance reactive }","title":"Examples"},{"location":"reference/data-types/datatype-merchant/","tags":["datatype"],"text":"merchant \u00b6 This contains information related to the active merchant. Members \u00b6 This type inherits members from spawn if a merchant is active. Type Member Description bool Full Returns True if the merchant's inventory is full. int Items Number of items on the merchant. item Item [ # ] Item number # on the merchant's list. item Item [ name ] Find an item by partial name on the merchant's list. Prefix with \"=\" for an exact match. float Markup The number used to calculate the buy and sell value for an item. (This is what is changed by charisma and faction). This value is capped at 1.05. Markup * Item Value = Amount you buy item for Item Value * (1/Markup) = Amount you sell item for bool Open Returns True if the merchant window is open. item SelectedItem The currently selected item in the merchant window. Items can be selected by using /selectitem bool ItemsReceived True if the merchant's item list has been populated. string (To String) Same as Open Methods \u00b6 Name Action Buy [ # ] Buys # of whatever is selected with Merchant.SelectItem[xxx] OpenWindow Will open the merchant closest to you, or if you have a merchant target CloseWindow Will close the merchant window SelectItem [ name ] Select item by partial name match, case insensitive. Prefix name with = for EXACT match Sell [ count ] Sell count of selected item. See examples Examples \u00b6 Using ${Merchant.Sell[#]} : /selectitem \"Diamond\" Will select a \"Diamond\" you can also do \"=Diamond\" to match EXACT name. Then you can the following command to sell 100 of it: /invoke ${Merchant.Sell[100]}","title":"merchant"},{"location":"reference/data-types/datatype-merchant/#merchant","text":"This contains information related to the active merchant.","title":"merchant"},{"location":"reference/data-types/datatype-merchant/#members","text":"This type inherits members from spawn if a merchant is active. Type Member Description bool Full Returns True if the merchant's inventory is full. int Items Number of items on the merchant. item Item [ # ] Item number # on the merchant's list. item Item [ name ] Find an item by partial name on the merchant's list. Prefix with \"=\" for an exact match. float Markup The number used to calculate the buy and sell value for an item. (This is what is changed by charisma and faction). This value is capped at 1.05. Markup * Item Value = Amount you buy item for Item Value * (1/Markup) = Amount you sell item for bool Open Returns True if the merchant window is open. item SelectedItem The currently selected item in the merchant window. Items can be selected by using /selectitem bool ItemsReceived True if the merchant's item list has been populated. string (To String) Same as Open","title":"Members"},{"location":"reference/data-types/datatype-merchant/#methods","text":"Name Action Buy [ # ] Buys # of whatever is selected with Merchant.SelectItem[xxx] OpenWindow Will open the merchant closest to you, or if you have a merchant target CloseWindow Will close the merchant window SelectItem [ name ] Select item by partial name match, case insensitive. Prefix name with = for EXACT match Sell [ count ] Sell count of selected item. See examples","title":"Methods"},{"location":"reference/data-types/datatype-merchant/#examples","text":"Using ${Merchant.Sell[#]} : /selectitem \"Diamond\" Will select a \"Diamond\" you can also do \"=Diamond\" to match EXACT name. Then you can the following command to sell 100 of it: /invoke ${Merchant.Sell[100]}","title":"Examples"},{"location":"reference/data-types/datatype-pet/","tags":["datatype"],"text":"pet \u00b6 Pet object Members \u00b6 This type inherits members from spawn . Type Member Description int Buff [ buffname ] Returns the slot number for buffname string Buff [ slot ] Prints name of the buff at the given slot int BuffDuration [ buffname ] Buff time remaining for pet buff buffname in miliseconds int BuffDuration [ slot ] Buff time remaining for pet buff in slot slot in miliseconds bool Combat Combat state FindBuff bool Focus Focus state bool GHold GHold state bool Hold Hold state Name bool ReGroup ReGroup state string Stance Returns the pet's current stance, (e.g. FOLLOW, GUARD) bool Stop Stop state spawn Target Returns the pet's current target. bool Taunt Taunt state","title":"pet"},{"location":"reference/data-types/datatype-pet/#pet","text":"Pet object","title":"pet"},{"location":"reference/data-types/datatype-pet/#members","text":"This type inherits members from spawn . Type Member Description int Buff [ buffname ] Returns the slot number for buffname string Buff [ slot ] Prints name of the buff at the given slot int BuffDuration [ buffname ] Buff time remaining for pet buff buffname in miliseconds int BuffDuration [ slot ] Buff time remaining for pet buff in slot slot in miliseconds bool Combat Combat state FindBuff bool Focus Focus state bool GHold GHold state bool Hold Hold state Name bool ReGroup ReGroup state string Stance Returns the pet's current stance, (e.g. FOLLOW, GUARD) bool Stop Stop state spawn Target Returns the pet's current target. bool Taunt Taunt state","title":"Members"},{"location":"reference/data-types/datatype-plugin/","tags":["datatype"],"text":"plugin \u00b6 Data for the specified plugin Members \u00b6 Type Member Description string Name Name of the plugin float Version Version number of the plugin string To String Same as Name","title":"plugin"},{"location":"reference/data-types/datatype-plugin/#plugin","text":"Data for the specified plugin","title":"plugin"},{"location":"reference/data-types/datatype-plugin/#members","text":"Type Member Description string Name Name of the plugin float Version Version number of the plugin string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-race/","tags":["datatype"],"text":"race \u00b6 Contains information on the specified race Members \u00b6 Type Member Description int ID The ID of the race string Name The name of the race string To String Same as Name","title":"race"},{"location":"reference/data-types/datatype-race/#race","text":"Contains information on the specified race","title":"race"},{"location":"reference/data-types/datatype-race/#members","text":"Type Member Description int ID The ID of the race string Name The name of the race string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-raid/","tags":["datatype"],"text":"raid \u00b6 Contains data on the current raid Members \u00b6 Type Member Description float AverageLevel Average level of raid members (more accurate than in the window) bool Invited Have I been invited to the raid? raidmember Leader Raid leader bool Locked Returns TRUE if the raid is locked string Looter [ # ] Specified looter name by number int Looters Number of specified looters int LootType Loot type number: 1 = Leader 2 = Leader & GroupLeader 3 = Leader & Assignments raidmember MainAssist Raid main assist raidmember MasterLooter Raid Master Looter raidmember Member [ N ] Raid member by number N raidmember Member [ name ] Raid member by name . int Members Total number of raid members raidmember Target Raid target (clicked in raid window) int TotalLevels Sum of all raid member's levels string (To String) None","title":"raid"},{"location":"reference/data-types/datatype-raid/#raid","text":"Contains data on the current raid","title":"raid"},{"location":"reference/data-types/datatype-raid/#members","text":"Type Member Description float AverageLevel Average level of raid members (more accurate than in the window) bool Invited Have I been invited to the raid? raidmember Leader Raid leader bool Locked Returns TRUE if the raid is locked string Looter [ # ] Specified looter name by number int Looters Number of specified looters int LootType Loot type number: 1 = Leader 2 = Leader & GroupLeader 3 = Leader & Assignments raidmember MainAssist Raid main assist raidmember MasterLooter Raid Master Looter raidmember Member [ N ] Raid member by number N raidmember Member [ name ] Raid member by name . int Members Total number of raid members raidmember Target Raid target (clicked in raid window) int TotalLevels Sum of all raid member's levels string (To String) None","title":"Members"},{"location":"reference/data-types/datatype-raidmember/","tags":["datatype"],"text":"raidmember \u00b6 Data related to the specified raid member Members \u00b6 Type Member Description class Class Raid member's class (works without being in zone) int Group Current group number (or 0) bool GroupLeader Returns TRUE if the member is a group leader int Level Raid member's level (works without being in zone) bool Looter Allowed to loot with current loot rules and looters? string Name Raid member's name bool RaidLeader Returns TRUE if the member is the raid leader spawn Spawn Spawn object for this player if available (must be in zone) string To String Same as Name","title":"raidmember"},{"location":"reference/data-types/datatype-raidmember/#raidmember","text":"Data related to the specified raid member","title":"raidmember"},{"location":"reference/data-types/datatype-raidmember/#members","text":"Type Member Description class Class Raid member's class (works without being in zone) int Group Current group number (or 0) bool GroupLeader Returns TRUE if the member is a group leader int Level Raid member's level (works without being in zone) bool Looter Allowed to loot with current loot rules and looters? string Name Raid member's name bool RaidLeader Returns TRUE if the member is the raid leader spawn Spawn Spawn object for this player if available (must be in zone) string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-range/","tags":["datatype"],"text":"range \u00b6 This DataType performs a simple test on n using the following members. Members \u00b6 bool Between [ #1 , #2 : N ] True if N is between the range of #1 and #2 , inclusive. Example Is 50 between 33 and 66? ${Range.Between[33,66:50]} returns TRUE Is 25 between 33 and 66? ${Range.Between[33,66:25]} returns FALSE bool Inside [ #1 , #2 : N ] True if N is within the range of #1 and #2 , exclusive. Example Is 50 Inside 33 and 66? ${Range.Inside[33,66:50]} returns TRUE Is 33 inside 33 and 66? ${Range.Inside[33,66:33]} returns FALSE","title":"range"},{"location":"reference/data-types/datatype-range/#range","text":"This DataType performs a simple test on n using the following members.","title":"range"},{"location":"reference/data-types/datatype-range/#members","text":"bool Between [ #1 , #2 : N ] True if N is between the range of #1 and #2 , inclusive. Example Is 50 between 33 and 66? ${Range.Between[33,66:50]} returns TRUE Is 25 between 33 and 66? ${Range.Between[33,66:25]} returns FALSE bool Inside [ #1 , #2 : N ] True if N is within the range of #1 and #2 , exclusive. Example Is 50 Inside 33 and 66? ${Range.Inside[33,66:50]} returns TRUE Is 33 inside 33 and 66? ${Range.Inside[33,66:33]} returns FALSE","title":"Members"},{"location":"reference/data-types/datatype-skill/","tags":["datatype"],"text":"skill \u00b6 Data related to a particular skill Members \u00b6 Type Member Description bool Activated Returns TRUE if the skill has been activated bool AltTimer Returns TRUE if the skill uses the kick/bash/slam/backstab/frenzy timer int ID Skill number int MinLevel Minimum level for your class string Name Name of the skill int ReuseTime Reuse timer (what number format? ticks, seconds, deciseconds?) int SkillCap Skill cap based on your current level and class. int StartingSkill Base skill level for your class string To String Same as Name","title":"skill"},{"location":"reference/data-types/datatype-skill/#skill","text":"Data related to a particular skill","title":"skill"},{"location":"reference/data-types/datatype-skill/#members","text":"Type Member Description bool Activated Returns TRUE if the skill has been activated bool AltTimer Returns TRUE if the skill uses the kick/bash/slam/backstab/frenzy timer int ID Skill number int MinLevel Minimum level for your class string Name Name of the skill int ReuseTime Reuse timer (what number format? ticks, seconds, deciseconds?) int SkillCap Skill cap based on your current level and class. int StartingSkill Base skill level for your class string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-spawn/","tags":["datatype"],"text":"spawn \u00b6 Represents an in-game spawn. Members \u00b6 Type Member Description int AARank AA rank number AATitle ActorDef bool AFK AFK? bool Aggressive returns TRUE or FALSE if a mob is aggressive or not int Animation Current animation ID. See Animations for a list of animations. bool Anonymous Anonymous bool Assist Current Raid or Group assist target? bool Binding Binding wounds? Blind body Body Body type BodyWet bShowHelm Buff BuffCount BuffDuration BuffsPopulated bool Buyer Is a buyer? (ie. Buyer in the bazaar) cachedbuff CachedBuff Caches buff information cast on others CachedBuffCount bool CanSplashLand TRUE/FALSE on if a splash spell can land... Note: This check is ONLY for line of sight to the targetindicator (red/green circle) spell Casting Spell, if currently casting (only accurate on yourself, not NPCs or other group members) CeilingHeightAtCurrLocation class Class Class string CleanName The \"cleaned up\" name CombatSkillTicks string ConColor GREY, GREEN, LIGHT BLUE, BLUE, WHITE, YELLOW, RED ContractorID int CurrentEndurance Current Endurance points (only updates when target/group) int64 CurrentHPs Current hit points int CurrentMana Current Mana points (only updates when target/group) bool Dead Dead? deity Deity Deity string DisplayName Name displayed in game (same as EQ's %T) float Distance Distance from player in (x,y) float Distance3D Distance from player in (x,y,z) in 3D float DistanceN Distance from player in Y plane (North/South) float DistancePredict Estimated distance in (x,y), taking into account the spawn's movement speed but not the player's float DistanceU Distance from player in Z plane (Up/Down) float DistanceW Distance from player in X plane (East/West) float DistanceX Distance from player in X plane float DistanceY Distance from player in Y plane float DistanceZ Distance from player in Z plane bool Ducking Ducking? float EQLoc Location using EQ format int Equipment returns a inttype, it takes numbers 0-8 or names: head chest arms wrists hands legs feet primary offhand bool FeetWet Feet wet/swimming? bool Feigning Feigning? FindBuff bool Fleeing Is your target moving away from you? FloorZ spawn Following The spawn a player is following using /follow on - also returns your pet's target via ${Me.Pet.Following} string Gender Gender bool GM GM or Guide? GMRank bool GroupLeader Group leader? string Guild Guild name string GuildStatus Guild status (Leader, Officer, Member) NOTE GuildStatus is no longer present in BETA/TEST/LIVE versions and only available in UF and ROF EMU builds. heading Heading Heading in this direction heading HeadingTo Heading player must travel in to reach this spawn heading HeadingToLoc [ y, x ] Heading to the coordinates y,x from the spawn HeadWet float Height Height int Holding Represents what the pc/npc is holding HoldingAnimation bool Hovering Hovering? int ID Spawn ID InPvPArea bool Invis [ ANY | 0 ] Gives TRUE/FALSE returns. Options are: ANY or 0 - ${Me.Invis[ANY]} or ${Me.Invis[0]} or ${Me.Invis} NORMAL or 1 - ${Me.Invis[NORMAL]} or just ${Me.Invis[1]} UNDEAD or 2 - ${Me.Invis[UNDEAD]} or just ${Me.Invis[2]} ANIMAL or 3 - ${Me.Invis[ANIMAL]} or just ${Me.Invis[3]} SOS or 4 - ${Me.Invis[SOS]} or just ${Me.Invis[4]} returns true IF you are a ROG AND in fact hidden AND have a skill of at least 100 in HIDE AND have the AA for SoS IsSummoned IsTouchingSwitch int Level Level bool Levitating Levitating? bool LFG LFG? string Light Name of the light class this spawn has bool LineOfSight Returns TRUE if spawn is in LoS bool Linkdead Linkdead? string Loc Loc of the spawn string LocYX LocYX of the spawn LocYXZ float Look Looking this angle int Mark Current Raid or Group marked npc mark number (raid first) spawn Master Master, if it is charmed or a pet int MaxEndurance Maximum Endurance points (only updates when target/group) int64 MaxHPs Maximum hit points int MaxMana Maximum Mana points (only updates when target/group) float MaxRange The max distance from this spawn for it to hit you float MaxRangeTo The Max distance from this spawn for you to hit it MercID spawn Mount Mount bool Moving Moving? float MQLoc Location using MQ format MyBuff MyBuffCount MyBuffDuration string Name Name bool Named Is this a \"named\" spawn (ie. does it's name not start with an \"a\" or an \"an\") spawn NearestSpawn [ search ] Find the nearest spawn matching this Spawn Search , to this spawn (most efficient on yourself) spawn NearestSpawn [ #, search ] Find the #th nearest spawn matching this Spawn Search , to this spawn (most efficient on yourself) spawn Next Next spawn in the list spawn Owner Owner, if mercenary int64 PctHPs Percent hit points PctMana spawn Pet Pet int PlayerState returns a mask as an inttype which has the following meaning: 0=Idle 1=Open 2=WeaponSheathed 4=Aggressive 8=ForcedAggressive 0x10=InstrumentEquipped 0x20=Stunned 0x40=PrimaryWeaponEquipped 0x80=SecondaryWeaponEquipped spawn Prev Previous spawn in the list int Primary Item ID of anything that may be in the Primary slot race Race Race bool Roleplaying Roleplaying? int Secondary Item ID of anything that may be in the Secondary slot SeeInvis bool Sitting Sitting? bool Sneaking Sneaking? SpawnStatus float Speed Speed moving bool Standing Standing? int StandState StandState string State STAND, SIT, DUCK, BIND, FEIGN, DEAD, STUN, HOVER, MOUNT, UNKNOWN bool Stuck Stuck? bool Stunned Stunned? string Suffix Suffix attached to name, eg. of string Surname Last name Targetable TargetOfTarget TemporaryPet TimeBeenDead string Title Prefix/Title before name bool Trader Trader? string Type PC, NPC, Untargetable, Mount, Pet, Corpse, Chest, Trigger, Trap, Timer, Item, Mercenary, Aura, Object, Banner, Campfire, Flyer bool Underwater Underwater? float X X coordinate float Y Y coordinate float Z Z coordinate float N X, the Northward-positive coordinate float W Y, the Westward-positive coordinate float U Z, the Upward-positive coordinate float E Shortcut for -X (makes Eastward positive) float S Shortcut for -Y (makes Southward positive) float D Shortcut for -Z (makes Downward positive) string To String Same as Name Methods \u00b6 Name Action DoAssist assists the spawn DoFace Faces target DoTarget Targets the spawn LeftClick left clicks the spawn RightClick Right clicks the spawn Examples \u00b6 Example Output ${Pet.Equipment[primary].ID} ID number of the pet's primary weapon ${Group.Member[mymagesname].Pet.Equipment[primary].ID} ID number of the group member's pet's primary weapon","title":"spawn"},{"location":"reference/data-types/datatype-spawn/#spawn","text":"Represents an in-game spawn.","title":"spawn"},{"location":"reference/data-types/datatype-spawn/#members","text":"Type Member Description int AARank AA rank number AATitle ActorDef bool AFK AFK? bool Aggressive returns TRUE or FALSE if a mob is aggressive or not int Animation Current animation ID. See Animations for a list of animations. bool Anonymous Anonymous bool Assist Current Raid or Group assist target? bool Binding Binding wounds? Blind body Body Body type BodyWet bShowHelm Buff BuffCount BuffDuration BuffsPopulated bool Buyer Is a buyer? (ie. Buyer in the bazaar) cachedbuff CachedBuff Caches buff information cast on others CachedBuffCount bool CanSplashLand TRUE/FALSE on if a splash spell can land... Note: This check is ONLY for line of sight to the targetindicator (red/green circle) spell Casting Spell, if currently casting (only accurate on yourself, not NPCs or other group members) CeilingHeightAtCurrLocation class Class Class string CleanName The \"cleaned up\" name CombatSkillTicks string ConColor GREY, GREEN, LIGHT BLUE, BLUE, WHITE, YELLOW, RED ContractorID int CurrentEndurance Current Endurance points (only updates when target/group) int64 CurrentHPs Current hit points int CurrentMana Current Mana points (only updates when target/group) bool Dead Dead? deity Deity Deity string DisplayName Name displayed in game (same as EQ's %T) float Distance Distance from player in (x,y) float Distance3D Distance from player in (x,y,z) in 3D float DistanceN Distance from player in Y plane (North/South) float DistancePredict Estimated distance in (x,y), taking into account the spawn's movement speed but not the player's float DistanceU Distance from player in Z plane (Up/Down) float DistanceW Distance from player in X plane (East/West) float DistanceX Distance from player in X plane float DistanceY Distance from player in Y plane float DistanceZ Distance from player in Z plane bool Ducking Ducking? float EQLoc Location using EQ format int Equipment returns a inttype, it takes numbers 0-8 or names: head chest arms wrists hands legs feet primary offhand bool FeetWet Feet wet/swimming? bool Feigning Feigning? FindBuff bool Fleeing Is your target moving away from you? FloorZ spawn Following The spawn a player is following using /follow on - also returns your pet's target via ${Me.Pet.Following} string Gender Gender bool GM GM or Guide? GMRank bool GroupLeader Group leader? string Guild Guild name string GuildStatus Guild status (Leader, Officer, Member) NOTE GuildStatus is no longer present in BETA/TEST/LIVE versions and only available in UF and ROF EMU builds. heading Heading Heading in this direction heading HeadingTo Heading player must travel in to reach this spawn heading HeadingToLoc [ y, x ] Heading to the coordinates y,x from the spawn HeadWet float Height Height int Holding Represents what the pc/npc is holding HoldingAnimation bool Hovering Hovering? int ID Spawn ID InPvPArea bool Invis [ ANY | 0 ] Gives TRUE/FALSE returns. Options are: ANY or 0 - ${Me.Invis[ANY]} or ${Me.Invis[0]} or ${Me.Invis} NORMAL or 1 - ${Me.Invis[NORMAL]} or just ${Me.Invis[1]} UNDEAD or 2 - ${Me.Invis[UNDEAD]} or just ${Me.Invis[2]} ANIMAL or 3 - ${Me.Invis[ANIMAL]} or just ${Me.Invis[3]} SOS or 4 - ${Me.Invis[SOS]} or just ${Me.Invis[4]} returns true IF you are a ROG AND in fact hidden AND have a skill of at least 100 in HIDE AND have the AA for SoS IsSummoned IsTouchingSwitch int Level Level bool Levitating Levitating? bool LFG LFG? string Light Name of the light class this spawn has bool LineOfSight Returns TRUE if spawn is in LoS bool Linkdead Linkdead? string Loc Loc of the spawn string LocYX LocYX of the spawn LocYXZ float Look Looking this angle int Mark Current Raid or Group marked npc mark number (raid first) spawn Master Master, if it is charmed or a pet int MaxEndurance Maximum Endurance points (only updates when target/group) int64 MaxHPs Maximum hit points int MaxMana Maximum Mana points (only updates when target/group) float MaxRange The max distance from this spawn for it to hit you float MaxRangeTo The Max distance from this spawn for you to hit it MercID spawn Mount Mount bool Moving Moving? float MQLoc Location using MQ format MyBuff MyBuffCount MyBuffDuration string Name Name bool Named Is this a \"named\" spawn (ie. does it's name not start with an \"a\" or an \"an\") spawn NearestSpawn [ search ] Find the nearest spawn matching this Spawn Search , to this spawn (most efficient on yourself) spawn NearestSpawn [ #, search ] Find the #th nearest spawn matching this Spawn Search , to this spawn (most efficient on yourself) spawn Next Next spawn in the list spawn Owner Owner, if mercenary int64 PctHPs Percent hit points PctMana spawn Pet Pet int PlayerState returns a mask as an inttype which has the following meaning: 0=Idle 1=Open 2=WeaponSheathed 4=Aggressive 8=ForcedAggressive 0x10=InstrumentEquipped 0x20=Stunned 0x40=PrimaryWeaponEquipped 0x80=SecondaryWeaponEquipped spawn Prev Previous spawn in the list int Primary Item ID of anything that may be in the Primary slot race Race Race bool Roleplaying Roleplaying? int Secondary Item ID of anything that may be in the Secondary slot SeeInvis bool Sitting Sitting? bool Sneaking Sneaking? SpawnStatus float Speed Speed moving bool Standing Standing? int StandState StandState string State STAND, SIT, DUCK, BIND, FEIGN, DEAD, STUN, HOVER, MOUNT, UNKNOWN bool Stuck Stuck? bool Stunned Stunned? string Suffix Suffix attached to name, eg. of string Surname Last name Targetable TargetOfTarget TemporaryPet TimeBeenDead string Title Prefix/Title before name bool Trader Trader? string Type PC, NPC, Untargetable, Mount, Pet, Corpse, Chest, Trigger, Trap, Timer, Item, Mercenary, Aura, Object, Banner, Campfire, Flyer bool Underwater Underwater? float X X coordinate float Y Y coordinate float Z Z coordinate float N X, the Northward-positive coordinate float W Y, the Westward-positive coordinate float U Z, the Upward-positive coordinate float E Shortcut for -X (makes Eastward positive) float S Shortcut for -Y (makes Southward positive) float D Shortcut for -Z (makes Downward positive) string To String Same as Name","title":"Members"},{"location":"reference/data-types/datatype-spawn/#methods","text":"Name Action DoAssist assists the spawn DoFace Faces target DoTarget Targets the spawn LeftClick left clicks the spawn RightClick Right clicks the spawn","title":"Methods"},{"location":"reference/data-types/datatype-spawn/#examples","text":"Example Output ${Pet.Equipment[primary].ID} ID number of the pet's primary weapon ${Group.Member[mymagesname].Pet.Equipment[primary].ID} ID number of the group member's pet's primary weapon","title":"Examples"},{"location":"reference/data-types/datatype-spell/","tags":["datatype"],"text":"spell \u00b6 This is the type used for spell information. Members \u00b6 Type Member Description float AERange AE range (group spells use this for their range) Attrib AutoCast int64 Base int64 Base2 BaseEffectsFocusCap BaseName Beneficial BookIcon Calc CalcIndex CanMGB CastByMe CastByOther string CastOnAnother Message when cast on others string CastOnYou Message when cast on yourself timestamp CastTime Cast time (unadjusted) Category int64 CounterNumber The number of counters that the spell adds string CounterType The resist counter. Will be one of \"Disease\", \"Poison\", \"Curse\" or \"Corruption\" Deletable Description ticks Duration Duration of the spell (if any) ticks DurationValue1 Duration of the spell (if any) DurationWindow EnduranceCost EQSpellDuration Extra timestamp FizzleTime Time to recover after fizzle int GemIcon Icon number of the spell. Example ${Spell[blah].GemIcon} HasSPA int HastePct Percentage of haste, example of use ${Me.Hasted.HastePct} or ${Spell[Speed of Milyex].HastePct} int ID Spell ID IllusionOkWhenMounted IsActiveAA bool IsSkill is this spell a skill? bool IsSwarmSpell Is this spell a Swarm spell? int Level Level int Location Appears to be max distance int Mana Mana cost (unadjusted) int64 Max int64 MaxLevel timestamp MyCastTime Adjusted cast time MyDuration float MyRange Adjusted spell range, including focus effects, etc. string Name Spell Name NoExpendReagentID NumEffects float PushBack Push back amount float Range Maximum range to target (use AERange for AE and group spells) int Rank Returns either 1, 2 or 3 for spells and 4-30 for clickables and potions. string RankName Returns the spell/combat ability name rank character has. ReagentCount ReagentID float RecastTime Time to recast after successful cast RecastTimerID timestamp RecoveryTime Same as FizzleTime int ResistAdj Resist adjustment string ResistType See below for Resist Types Restrictions string Skill See below for Skill Types int SlowPct Percentage of slow, example of use ${Target.Slowed.SlowPct} or ${Spell[Slowing Helix].SlowPct} SPA SpellGroup int SpellIcon Icon number of the spell. Exmaple ${Spell[blah].SpellIcon} string SpellType \"Beneficial(Group)\", \"Beneficial\", \"Detrimental\" or \"Unknown\" bool Stacks [ duration ] Does the selected spell stack with your current buffs (duration is in ticks) bool StacksPet [ duration ] Does the selected spell stack with your pet's current buffs (duration is in ticks) StacksSpawn bool StacksTarget Does the selected spell stack with your target's current buffs bool StacksWith [ name ] alias for .WillStack - see entry for more details StacksWithDiscs Subcategory SubSpellGroup string TargetType See below for Target Types TimeOfDay Trigger string WearOff The \"wear off\" message int WillLand This is like stacks but without the duration check. It's a clean: \"Will this spell land.\" Returns the slot it would land in. int WillLandPet Same as WillLand, but for your pet. bool WillStack [ name ] Does the selected spell stack with the specific SPELL name DOES NOT work with AAs. string (To String) Same as Name Spell Ranks \u00b6 /echo I have the ${Spell[Certitude].RankName} version of Certitude. - Spell Outputs: I have the Certitude Rk. II version of Ceritude. /cast \"${Spell[Vinespur].RankName}\" in your macro will cast the proper rank, since its going to be resolved as /cast \"Vinespur Rk. II\" /echo My version of Rest is: ${Spell[Rest].RankName} - Combat ability Outputs: My version of Rest is: Rest Rk. II Resist Types \u00b6 ResistType will be one of the following: Chromatic Corruption Cold Disease Fire Magic Poison Unresistable Prismatic Unknown Spell Types \u00b6 SpellType will be one of the following: Beneficial(Group) Beneficial Detrimental Unknown Target Types \u00b6 TargetType will be one of the following: AE PC v1 AE PC v2 AE Summoned AE Undead Animal Beam Caster PB NPC Caster PB PC Chest Corpse Directional AE Free Target Group v1 Group v2 Hatelist Hatelist2 LifeTap Line of Sight No Pets None PB AE Pet Pet Owner Pet2 Plant Self Single Single Friendly (or Target's Target) Single in Group Special Muramites Summoned Target of Target Target_AE_No_Players_Pets Targeted AE Targeted AE Tap Uber Dragons Uber Giants Undead Unknown Skill Types \u00b6 Skill will be one of the following: Abjuration Alteration Conjuration Divination Evocation","title":"spell"},{"location":"reference/data-types/datatype-spell/#spell","text":"This is the type used for spell information.","title":"spell"},{"location":"reference/data-types/datatype-spell/#members","text":"Type Member Description float AERange AE range (group spells use this for their range) Attrib AutoCast int64 Base int64 Base2 BaseEffectsFocusCap BaseName Beneficial BookIcon Calc CalcIndex CanMGB CastByMe CastByOther string CastOnAnother Message when cast on others string CastOnYou Message when cast on yourself timestamp CastTime Cast time (unadjusted) Category int64 CounterNumber The number of counters that the spell adds string CounterType The resist counter. Will be one of \"Disease\", \"Poison\", \"Curse\" or \"Corruption\" Deletable Description ticks Duration Duration of the spell (if any) ticks DurationValue1 Duration of the spell (if any) DurationWindow EnduranceCost EQSpellDuration Extra timestamp FizzleTime Time to recover after fizzle int GemIcon Icon number of the spell. Example ${Spell[blah].GemIcon} HasSPA int HastePct Percentage of haste, example of use ${Me.Hasted.HastePct} or ${Spell[Speed of Milyex].HastePct} int ID Spell ID IllusionOkWhenMounted IsActiveAA bool IsSkill is this spell a skill? bool IsSwarmSpell Is this spell a Swarm spell? int Level Level int Location Appears to be max distance int Mana Mana cost (unadjusted) int64 Max int64 MaxLevel timestamp MyCastTime Adjusted cast time MyDuration float MyRange Adjusted spell range, including focus effects, etc. string Name Spell Name NoExpendReagentID NumEffects float PushBack Push back amount float Range Maximum range to target (use AERange for AE and group spells) int Rank Returns either 1, 2 or 3 for spells and 4-30 for clickables and potions. string RankName Returns the spell/combat ability name rank character has. ReagentCount ReagentID float RecastTime Time to recast after successful cast RecastTimerID timestamp RecoveryTime Same as FizzleTime int ResistAdj Resist adjustment string ResistType See below for Resist Types Restrictions string Skill See below for Skill Types int SlowPct Percentage of slow, example of use ${Target.Slowed.SlowPct} or ${Spell[Slowing Helix].SlowPct} SPA SpellGroup int SpellIcon Icon number of the spell. Exmaple ${Spell[blah].SpellIcon} string SpellType \"Beneficial(Group)\", \"Beneficial\", \"Detrimental\" or \"Unknown\" bool Stacks [ duration ] Does the selected spell stack with your current buffs (duration is in ticks) bool StacksPet [ duration ] Does the selected spell stack with your pet's current buffs (duration is in ticks) StacksSpawn bool StacksTarget Does the selected spell stack with your target's current buffs bool StacksWith [ name ] alias for .WillStack - see entry for more details StacksWithDiscs Subcategory SubSpellGroup string TargetType See below for Target Types TimeOfDay Trigger string WearOff The \"wear off\" message int WillLand This is like stacks but without the duration check. It's a clean: \"Will this spell land.\" Returns the slot it would land in. int WillLandPet Same as WillLand, but for your pet. bool WillStack [ name ] Does the selected spell stack with the specific SPELL name DOES NOT work with AAs. string (To String) Same as Name","title":"Members"},{"location":"reference/data-types/datatype-spell/#spell-ranks","text":"/echo I have the ${Spell[Certitude].RankName} version of Certitude. - Spell Outputs: I have the Certitude Rk. II version of Ceritude. /cast \"${Spell[Vinespur].RankName}\" in your macro will cast the proper rank, since its going to be resolved as /cast \"Vinespur Rk. II\" /echo My version of Rest is: ${Spell[Rest].RankName} - Combat ability Outputs: My version of Rest is: Rest Rk. II","title":"Spell Ranks"},{"location":"reference/data-types/datatype-spell/#resist-types","text":"ResistType will be one of the following: Chromatic Corruption Cold Disease Fire Magic Poison Unresistable Prismatic Unknown","title":"Resist Types"},{"location":"reference/data-types/datatype-spell/#spell-types","text":"SpellType will be one of the following: Beneficial(Group) Beneficial Detrimental Unknown","title":"Spell Types"},{"location":"reference/data-types/datatype-spell/#target-types","text":"TargetType will be one of the following: AE PC v1 AE PC v2 AE Summoned AE Undead Animal Beam Caster PB NPC Caster PB PC Chest Corpse Directional AE Free Target Group v1 Group v2 Hatelist Hatelist2 LifeTap Line of Sight No Pets None PB AE Pet Pet Owner Pet2 Plant Self Single Single Friendly (or Target's Target) Single in Group Special Muramites Summoned Target of Target Target_AE_No_Players_Pets Targeted AE Targeted AE Tap Uber Dragons Uber Giants Undead Unknown","title":"Target Types"},{"location":"reference/data-types/datatype-spell/#skill-types","text":"Skill will be one of the following: Abjuration Alteration Conjuration Divination Evocation","title":"Skill Types"},{"location":"reference/data-types/datatype-string/","tags":["datatype"],"text":"string \u00b6 A string is an array of characters. In MQ2 there is no single character datatype, so any variable or expression that contains text is considered a string. Members \u00b6 Type Member Description string Arg [ # , s ] Returns the #th argument of the string separated by s . The separator s must be a single character (defaults to space). See Difference between Arg and Token . int Compare [ text ] Determines how the initial string and the second string, text , compare to each other: If both are the same, Compare will return 0. If the string is alphabetically before text, Compare will return -1. If text is alphabetically after string, Compare will return 1. Compare is case-insensitive int CompareCS [ text ] The same as Compare , except that it is case-sensitive int Count [ c ] Returns how many times a single character c occurs in the string bool Equal [ text ] If the initial string and the second string text are exactly the same, returns TRUE. Equal is case-insensitive bool EqualCS [ text ] The same as Equal , except that it is case-sensitive int Find [ text ] This tries to find the second string text within the original string: If it is successful, it returns the first position in the string where text begins. It returns NULL if text is not found. Find is case-insensitive string Left [ # ] Returns the first # characters of the string. A negative # will return the whole string except for the last # characters int Length Returns the length of the string as an integer string Lower Returns the string in all lower-case string Mid [ p , n ] Returns a segment of the string, starting at position p and running n characters. bool NotEqual [ text ] If the initial string and the second string text are exactly the same, returns FALSE. NotEqual is case-insensitive bool NotEqualCS [ text ] The same as NotEqual , except that it is case-sensitive. string Replace [ ReplaceThis , WithThis ] Replaces ReplaceThis with WithThis . string Right [ # ] Returns the last # characters of the string. A negative # will return the whole string except for the first # characters string StripLinks Returns the plain text version of a string, stripping out the links string Token [ # , s ] Returns the #th token of the string separated by s . The separator s must be a single character (defaults to space). See Difference between Arg and Token . string Upper Returns the string in all upper-case string (To String) Returns the string Usage \u00b6 Simple Examples \u00b6 /declare TestString abcdebc /echo ${TestString.Find[bc]} | Will return 2 /echo ${TestString.Left[2]} | Will return \"ab\" /echo ${TestString.Left[-2]} | Will return \"abcde\" /echo ${TestString.Mid[2,3]} | Will return \"bcd\" /echo ${TestString.Right[2]} | Will return \"bc\" /echo ${TestString.Right[-2]} | Will return \"cdebc\" Difference between Arg and Token \u00b6 Arg [ # , s ] and Token [ # , s ] are very similar. The only difference between them is Token will include null values, while Arg will skip them. For example: /declare TestString ABC,,DEF | Will return \"DEF\" because it is the second non-null string separated by a comma: /echo ${TestString.Arg[2,,]} | Will return \"NULL\" because the second token, the null string, is not ignored: /echo ${TestString.Token[2,,]} Compare strings to strings \u00b6 Warning There is a temptation by some novice macro writers to put the string inside quotes within brackets. Don't! #Event SpellWornOff \"Your #1# spell has worn off of #2#.\" Sub Event_SpellWornOff(string Line, string SpellName, string OnWho) | You can put all kinds of logic here, on what to do when certain | buffs or debuffs wear off. | In this example, we'll just check to see if the spell that wore | off is a particular spell multiple words seperated by spaces. | | Note: No quotes inside the brackets, and pay attention | to where the curly brackets are in the /if compare statement. /echo SpellWornOff: ${SpellName} wore off ${OnWho} /if (${SpellName.Equal[Enveloping Roots]}) /echo Yikes, Root wore off ... run! /return","title":"string"},{"location":"reference/data-types/datatype-string/#string","text":"A string is an array of characters. In MQ2 there is no single character datatype, so any variable or expression that contains text is considered a string.","title":"string"},{"location":"reference/data-types/datatype-string/#members","text":"Type Member Description string Arg [ # , s ] Returns the #th argument of the string separated by s . The separator s must be a single character (defaults to space). See Difference between Arg and Token . int Compare [ text ] Determines how the initial string and the second string, text , compare to each other: If both are the same, Compare will return 0. If the string is alphabetically before text, Compare will return -1. If text is alphabetically after string, Compare will return 1. Compare is case-insensitive int CompareCS [ text ] The same as Compare , except that it is case-sensitive int Count [ c ] Returns how many times a single character c occurs in the string bool Equal [ text ] If the initial string and the second string text are exactly the same, returns TRUE. Equal is case-insensitive bool EqualCS [ text ] The same as Equal , except that it is case-sensitive int Find [ text ] This tries to find the second string text within the original string: If it is successful, it returns the first position in the string where text begins. It returns NULL if text is not found. Find is case-insensitive string Left [ # ] Returns the first # characters of the string. A negative # will return the whole string except for the last # characters int Length Returns the length of the string as an integer string Lower Returns the string in all lower-case string Mid [ p , n ] Returns a segment of the string, starting at position p and running n characters. bool NotEqual [ text ] If the initial string and the second string text are exactly the same, returns FALSE. NotEqual is case-insensitive bool NotEqualCS [ text ] The same as NotEqual , except that it is case-sensitive. string Replace [ ReplaceThis , WithThis ] Replaces ReplaceThis with WithThis . string Right [ # ] Returns the last # characters of the string. A negative # will return the whole string except for the first # characters string StripLinks Returns the plain text version of a string, stripping out the links string Token [ # , s ] Returns the #th token of the string separated by s . The separator s must be a single character (defaults to space). See Difference between Arg and Token . string Upper Returns the string in all upper-case string (To String) Returns the string","title":"Members"},{"location":"reference/data-types/datatype-string/#usage","text":"","title":"Usage"},{"location":"reference/data-types/datatype-string/#simple-examples","text":"/declare TestString abcdebc /echo ${TestString.Find[bc]} | Will return 2 /echo ${TestString.Left[2]} | Will return \"ab\" /echo ${TestString.Left[-2]} | Will return \"abcde\" /echo ${TestString.Mid[2,3]} | Will return \"bcd\" /echo ${TestString.Right[2]} | Will return \"bc\" /echo ${TestString.Right[-2]} | Will return \"cdebc\"","title":"Simple Examples"},{"location":"reference/data-types/datatype-string/#difference-between-arg-and-token","text":"Arg [ # , s ] and Token [ # , s ] are very similar. The only difference between them is Token will include null values, while Arg will skip them. For example: /declare TestString ABC,,DEF | Will return \"DEF\" because it is the second non-null string separated by a comma: /echo ${TestString.Arg[2,,]} | Will return \"NULL\" because the second token, the null string, is not ignored: /echo ${TestString.Token[2,,]}","title":"Difference between Arg and Token"},{"location":"reference/data-types/datatype-string/#compare-strings-to-strings","text":"Warning There is a temptation by some novice macro writers to put the string inside quotes within brackets. Don't! #Event SpellWornOff \"Your #1# spell has worn off of #2#.\" Sub Event_SpellWornOff(string Line, string SpellName, string OnWho) | You can put all kinds of logic here, on what to do when certain | buffs or debuffs wear off. | In this example, we'll just check to see if the spell that wore | off is a particular spell multiple words seperated by spaces. | | Note: No quotes inside the brackets, and pay attention | to where the curly brackets are in the /if compare statement. /echo SpellWornOff: ${SpellName} wore off ${OnWho} /if (${SpellName.Equal[Enveloping Roots]}) /echo Yikes, Root wore off ... run! /return","title":"Compare strings to strings"},{"location":"reference/data-types/datatype-switch/","tags":["datatype"],"text":"switch \u00b6 Data related to switches (levers, buttons, etc) in the zone Members \u00b6 Type Member Description float D D coordinate (Upward-positive) heading DefaultHeading Heading of \"closed\" switch float DefaultN Y coordinate of \"closed\" switch (Northward-positive) float DefaultU Z coordinate of \"closed\" switch (Upward-positive) float DefaultW X coordinate of \"closed\" switch (Westward-positive) float DefaultX X coordinate of \"closed\" switch float DefaultY Y coordinate of \"closed\" switch float DefaultZ Z coordinate of \"closed\" switch float Distance Distance from player to switch in (x,y) heading Heading Switch is facing this heading heading HeadingTo Direction player must move to meet this switch int ID Switch ID bool LineOfSight Returns TRUE if the switch is in LoS float N Y coordinate (Northward-positive) string Name Name bool Open True if the switch is in the \"open\" state (State == 1) int State The \"state\" of the switch. float W X coordinate (Westward-positive) float X X coordinate float Y Y coordinate float Z Z coordinate string ToString Same as ID","title":"switch"},{"location":"reference/data-types/datatype-switch/#switch","text":"Data related to switches (levers, buttons, etc) in the zone","title":"switch"},{"location":"reference/data-types/datatype-switch/#members","text":"Type Member Description float D D coordinate (Upward-positive) heading DefaultHeading Heading of \"closed\" switch float DefaultN Y coordinate of \"closed\" switch (Northward-positive) float DefaultU Z coordinate of \"closed\" switch (Upward-positive) float DefaultW X coordinate of \"closed\" switch (Westward-positive) float DefaultX X coordinate of \"closed\" switch float DefaultY Y coordinate of \"closed\" switch float DefaultZ Z coordinate of \"closed\" switch float Distance Distance from player to switch in (x,y) heading Heading Switch is facing this heading heading HeadingTo Direction player must move to meet this switch int ID Switch ID bool LineOfSight Returns TRUE if the switch is in LoS float N Y coordinate (Northward-positive) string Name Name bool Open True if the switch is in the \"open\" state (State == 1) int State The \"state\" of the switch. float W X coordinate (Westward-positive) float X X coordinate float Y Y coordinate float Z Z coordinate string ToString Same as ID","title":"Members"},{"location":"reference/data-types/datatype-target/","tags":["datatype"],"text":"target \u00b6 This data type represents information specific to your current target. It contains additional members for querying buff information. Inheritance \u00b6 This type inherits members from spawn . classDiagram spawn <|-- target direction RL class spawn { } class target { } Members \u00b6 Type Member Description spell Aego Returns the name of the Aego spell if the Target has one spawn AggroHolder Returns the target's current target. spell Beneficial Returns the name of the Beneficial spell if the Target has one. This will skip \"player\" casted buffs, but will show NPC Casted buffs and some AA buffs. spell Brells Returns the name of the Brells spell if the Target has one spell Charmed Returns the name of the Charmed spell if the Target has one spell Clarity Returns the name of the Clarity spell if the Target has one spell Corrupted Returns the name of any the Corruption spell if Target has one spell Cursed Returns the name of the Curse spell if Target has one spell Crippled Returns the name of the Cripple spell if the Target has one string Diseased Returns the name of a Disease spell if the Target has one string Dotted Returns the name of a DOT spell if the Target has one spell DSed Returns the name of the Damage Shield spell if the Target has one Feared spell Focus Returns the name of the Focus spell if the Target has one spell Growth Returns the name of the Growth spell if the Target has one spell Hasted Returns the name of the Haste spell if the Target has one spell HybridHP Returns the name of the Hybrid HP spell if the Target has one Invulnerable spell Maloed Returns the name of the Malo spell if the Target has one MaxMeleeTo spell Mezzed Returns the name of the Mez spell if the Target has one PctAggro string Poisoned Returns the name of a Poison spell if the Target has one spell Pred Returns the name of the Predator spell if the Target has one spell Regen Returns the name of the Regen spell if the Target has one spell RevDSed Returns the name of the Reverse Damage Shield spell if the Target has one spell Rooted Returns the name of the Rooted spell if the Target has one spell SE Returns the name of the Spiritual Enlightenment spell if the Target has one SecondaryAggroPlayer SecondaryPctAggro spell Shining Returns the name of the Shining spell if the Target has one Silenced spell Skin Returns the name of the Skin spell if the Target has one spell Slowed Returns the name of the Slow spell if the Target has one spell Snared Returns the name of the Snare spell if the Target has one spell Strength Returns the name of the Strength spell if the Target has one spell SV Returns the name of the Spiritual Vitality spell if the Target has one spell Symbol Returns the name of the Symbol spell if the Target has one spell Tashed Returns the name of the Tash spell if the Target has one string (To String) Same as Name Examples \u00b6 | The Delay will end when the pet is targeted...AND target buffs are | populated, or 5 seconds, whichever is shorter. /target pet /delay 5s ${Target.ID}==${Pet.ID} && ${Target.BuffsPopulated}==TRUE","title":"target"},{"location":"reference/data-types/datatype-target/#target","text":"This data type represents information specific to your current target. It contains additional members for querying buff information.","title":"target"},{"location":"reference/data-types/datatype-target/#inheritance","text":"This type inherits members from spawn . classDiagram spawn <|-- target direction RL class spawn { } class target { }","title":"Inheritance"},{"location":"reference/data-types/datatype-target/#members","text":"Type Member Description spell Aego Returns the name of the Aego spell if the Target has one spawn AggroHolder Returns the target's current target. spell Beneficial Returns the name of the Beneficial spell if the Target has one. This will skip \"player\" casted buffs, but will show NPC Casted buffs and some AA buffs. spell Brells Returns the name of the Brells spell if the Target has one spell Charmed Returns the name of the Charmed spell if the Target has one spell Clarity Returns the name of the Clarity spell if the Target has one spell Corrupted Returns the name of any the Corruption spell if Target has one spell Cursed Returns the name of the Curse spell if Target has one spell Crippled Returns the name of the Cripple spell if the Target has one string Diseased Returns the name of a Disease spell if the Target has one string Dotted Returns the name of a DOT spell if the Target has one spell DSed Returns the name of the Damage Shield spell if the Target has one Feared spell Focus Returns the name of the Focus spell if the Target has one spell Growth Returns the name of the Growth spell if the Target has one spell Hasted Returns the name of the Haste spell if the Target has one spell HybridHP Returns the name of the Hybrid HP spell if the Target has one Invulnerable spell Maloed Returns the name of the Malo spell if the Target has one MaxMeleeTo spell Mezzed Returns the name of the Mez spell if the Target has one PctAggro string Poisoned Returns the name of a Poison spell if the Target has one spell Pred Returns the name of the Predator spell if the Target has one spell Regen Returns the name of the Regen spell if the Target has one spell RevDSed Returns the name of the Reverse Damage Shield spell if the Target has one spell Rooted Returns the name of the Rooted spell if the Target has one spell SE Returns the name of the Spiritual Enlightenment spell if the Target has one SecondaryAggroPlayer SecondaryPctAggro spell Shining Returns the name of the Shining spell if the Target has one Silenced spell Skin Returns the name of the Skin spell if the Target has one spell Slowed Returns the name of the Slow spell if the Target has one spell Snared Returns the name of the Snare spell if the Target has one spell Strength Returns the name of the Strength spell if the Target has one spell SV Returns the name of the Spiritual Vitality spell if the Target has one spell Symbol Returns the name of the Symbol spell if the Target has one spell Tashed Returns the name of the Tash spell if the Target has one string (To String) Same as Name","title":"Members"},{"location":"reference/data-types/datatype-target/#examples","text":"| The Delay will end when the pet is targeted...AND target buffs are | populated, or 5 seconds, whichever is shorter. /target pet /delay 5s ${Target.ID}==${Pet.ID} && ${Target.BuffsPopulated}==TRUE","title":"Examples"},{"location":"reference/data-types/datatype-task/","tags":["datatype"],"text":"task \u00b6 This is the type for your current task. Members \u00b6 Type Member Description string Index Returns the task's place on the tasklist string Objective[#].Instruction Returns a tasks's Objectives string Objective[#].Status Returns the status of the objective in the format amount done Vs total IE 0/3 string Objective[#].Zone Returns the zone the objective is to be performed in int CurrentCount Returns the current count of the .Type needed to complete a objective int RequiredCount Returns the required count of the .Type needed to complete a objective bool Optional Returns true or false if a objective is optional string RequiredItem Returns a string of the required item to complete a objective. string RequiredSkill Returns a string of the required skill to complete a objective. string RequiredSpell Returns a string of the required spell to complete a objective. int DZSwitchID Returns an int of the switch used in a objective. int ID Returns an int of the task ID string Step Returns description of current step in the task string Select Selects the task string Title Returns name of the shared task timestamp Timer Returns amount of time before task expires int Members Returns number of members in task taskmember Member[ # ] Returns specified member in task by index taskmember Member[ name ] Returns specified member in task by name string Leader Returns task leader's name int WindowIndex Returns the Quest Window List Index. (if the window actually has the list filled) string Type Returns a string that can be one of the following: Unknown None Deliver Kill Loot Hail Explore Tradeskill Fishing Foraging Cast UseSkill DZSwitch DestroyObject Collect Dialogue Methods \u00b6 Name Action Select [ name ] Select the given task name in the UI Usage \u00b6 Indexing Tasks \u00b6 Task TLO can be accessed by index to make iteration possible. Example: /echo ${Task[2].Title} Don't use ${Task[1].ID} and expect it to be whatever is the first list item. Always refer to tasks by their name. Note This index is not the same index as the one you see in the quest window list. Tasks are accessed in memory order, not in the order they are displayed in the UI. If you want the UI order, you'll need to use the Window TLO . Example: /echo ${Task[3].WindowIndex} Example: /echo ${Task[Into The Muck].WindowIndex} /echo ${Task[hatch].Type} Output: Shared (Can be Shared or Quest in this context) Selection \u00b6 The Task TLO also has a Select Method: Select can select list items and combobox items. It returns TRUE if a selection was made and FALSE if not. /if (${Task[hatch].Select}) { /echo I just Selected a task that has the name \"hatch\" in it... } else { /echo I did not find a task that has the word \"hatch\" in it, so nothing was selected. } /echo The task with \"hatch\" in is name is called: ${Task[hatch]} Examples \u00b6 Output: The task with \"hatch\" in is name is called: Hatching a Plan /echo ${Task[hatch]} is listed as number ${Task[hatch].Index} in the tasklist. Output: Hatching a Plan is listed as number 1 in the tasklist. /echo The ${Task[hatch]} first objective is to ${Task[hatch].Objective[1].Instruction} Output: The Hatching a Plan first objective is to find where the eggs are being incubated /echo The ${Task[hatch]} first objective status is ${Task[hatch].Objective[1].Status} Output: The Hatching a Plan first objective status is 0/1 /echo The ${Task[hatch]} first objective should be completed in ${Task[hatch].Objective[1].Zone} Output: The Hatching a Plan first objective should be completed in Hatchery Wing /echo I should be working on ${Task[hatch].Step} in ${Task[hatch].Step.Zone}","title":"task"},{"location":"reference/data-types/datatype-task/#task","text":"This is the type for your current task.","title":"task"},{"location":"reference/data-types/datatype-task/#members","text":"Type Member Description string Index Returns the task's place on the tasklist string Objective[#].Instruction Returns a tasks's Objectives string Objective[#].Status Returns the status of the objective in the format amount done Vs total IE 0/3 string Objective[#].Zone Returns the zone the objective is to be performed in int CurrentCount Returns the current count of the .Type needed to complete a objective int RequiredCount Returns the required count of the .Type needed to complete a objective bool Optional Returns true or false if a objective is optional string RequiredItem Returns a string of the required item to complete a objective. string RequiredSkill Returns a string of the required skill to complete a objective. string RequiredSpell Returns a string of the required spell to complete a objective. int DZSwitchID Returns an int of the switch used in a objective. int ID Returns an int of the task ID string Step Returns description of current step in the task string Select Selects the task string Title Returns name of the shared task timestamp Timer Returns amount of time before task expires int Members Returns number of members in task taskmember Member[ # ] Returns specified member in task by index taskmember Member[ name ] Returns specified member in task by name string Leader Returns task leader's name int WindowIndex Returns the Quest Window List Index. (if the window actually has the list filled) string Type Returns a string that can be one of the following: Unknown None Deliver Kill Loot Hail Explore Tradeskill Fishing Foraging Cast UseSkill DZSwitch DestroyObject Collect Dialogue","title":"Members"},{"location":"reference/data-types/datatype-task/#methods","text":"Name Action Select [ name ] Select the given task name in the UI","title":"Methods"},{"location":"reference/data-types/datatype-task/#usage","text":"","title":"Usage"},{"location":"reference/data-types/datatype-task/#indexing-tasks","text":"Task TLO can be accessed by index to make iteration possible. Example: /echo ${Task[2].Title} Don't use ${Task[1].ID} and expect it to be whatever is the first list item. Always refer to tasks by their name. Note This index is not the same index as the one you see in the quest window list. Tasks are accessed in memory order, not in the order they are displayed in the UI. If you want the UI order, you'll need to use the Window TLO . Example: /echo ${Task[3].WindowIndex} Example: /echo ${Task[Into The Muck].WindowIndex} /echo ${Task[hatch].Type} Output: Shared (Can be Shared or Quest in this context)","title":"Indexing Tasks"},{"location":"reference/data-types/datatype-task/#selection","text":"The Task TLO also has a Select Method: Select can select list items and combobox items. It returns TRUE if a selection was made and FALSE if not. /if (${Task[hatch].Select}) { /echo I just Selected a task that has the name \"hatch\" in it... } else { /echo I did not find a task that has the word \"hatch\" in it, so nothing was selected. } /echo The task with \"hatch\" in is name is called: ${Task[hatch]}","title":"Selection"},{"location":"reference/data-types/datatype-task/#examples","text":"Output: The task with \"hatch\" in is name is called: Hatching a Plan /echo ${Task[hatch]} is listed as number ${Task[hatch].Index} in the tasklist. Output: Hatching a Plan is listed as number 1 in the tasklist. /echo The ${Task[hatch]} first objective is to ${Task[hatch].Objective[1].Instruction} Output: The Hatching a Plan first objective is to find where the eggs are being incubated /echo The ${Task[hatch]} first objective status is ${Task[hatch].Objective[1].Status} Output: The Hatching a Plan first objective status is 0/1 /echo The ${Task[hatch]} first objective should be completed in ${Task[hatch].Objective[1].Zone} Output: The Hatching a Plan first objective should be completed in Hatchery Wing /echo I should be working on ${Task[hatch].Step} in ${Task[hatch].Step.Zone}","title":"Examples"},{"location":"reference/data-types/datatype-taskmember/","tags":["datatype"],"text":"taskmember \u00b6 Describes a member in your current task Members \u00b6 Type Member Description string Name Returns name of the mamber bool Leader Returns true if member is leader int Index Returns task index for member (i.e., 1-6)","title":"taskmember"},{"location":"reference/data-types/datatype-taskmember/#taskmember","text":"Describes a member in your current task","title":"taskmember"},{"location":"reference/data-types/datatype-taskmember/#members","text":"Type Member Description string Name Returns name of the mamber bool Leader Returns true if member is leader int Index Returns task index for member (i.e., 1-6)","title":"Members"},{"location":"reference/data-types/datatype-ticks/","tags":["datatype"],"text":"ticks Type \u00b6 Represents a count of \"ticks\". Ticks are units of 6 seconds that are used to represent certain measurements of time in EverQuest. Members \u00b6 Type Member Description int Hours The number of hours in HH:MM:SS (0-23) int Minutes The number of minutes in HH:MM:SS (1-59) int Seconds The number of seconds in HH:MM:SS (1-59) int TotalMinutes The total number of minutes int TotalSeconds The total number of seconds int Ticks The value in ticks string Time Time in the form MM:SS string TimeHMS Time in the form HH:MM:SS (if there are no hours, the form will be MM:SS) string To String Same as Ticks","title":"ticks"},{"location":"reference/data-types/datatype-ticks/#ticks-type","text":"Represents a count of \"ticks\". Ticks are units of 6 seconds that are used to represent certain measurements of time in EverQuest.","title":"ticks Type"},{"location":"reference/data-types/datatype-ticks/#members","text":"Type Member Description int Hours The number of hours in HH:MM:SS (0-23) int Minutes The number of minutes in HH:MM:SS (1-59) int Seconds The number of seconds in HH:MM:SS (1-59) int TotalMinutes The total number of minutes int TotalSeconds The total number of seconds int Ticks The value in ticks string Time Time in the form MM:SS string TimeHMS Time in the form HH:MM:SS (if there are no hours, the form will be MM:SS) string To String Same as Ticks","title":"Members"},{"location":"reference/data-types/datatype-time/","tags":["datatype"],"text":"time Type \u00b6 Represents a unit of clock time. Members \u00b6 Type Member Description string Date Date in the format MM/DD/YYYY int Day Day of the month int DayOfWeek Day of the week (1=sunday to 7=saturday) int Hour Hour (0-23) int Hour12 Hour (0-11) int Minute Minute (0-59) int Month Month of the year (1-12) bool Night Gives true if the current hour is considered \"night\" in EQ (7:00pm-6:59am) int Second Second (0-59) int SecondsSinceMidnight Number of seconds since midnight string Time12 Time in 12-hour format (HH:MM:SS) string Time24 Time in 24-hour format (HH:MM:SS) int Year Year string (To String) Same as Time24","title":"time"},{"location":"reference/data-types/datatype-time/#time-type","text":"Represents a unit of clock time.","title":"time Type"},{"location":"reference/data-types/datatype-time/#members","text":"Type Member Description string Date Date in the format MM/DD/YYYY int Day Day of the month int DayOfWeek Day of the week (1=sunday to 7=saturday) int Hour Hour (0-23) int Hour12 Hour (0-11) int Minute Minute (0-59) int Month Month of the year (1-12) bool Night Gives true if the current hour is considered \"night\" in EQ (7:00pm-6:59am) int Second Second (0-59) int SecondsSinceMidnight Number of seconds since midnight string Time12 Time in 12-hour format (HH:MM:SS) string Time24 Time in 24-hour format (HH:MM:SS) int Year Year string (To String) Same as Time24","title":"Members"},{"location":"reference/data-types/datatype-timer/","tags":["datatype"],"text":"timer \u00b6 A timer data type is set in tenths of one second and counts down to zero; starting immediately after being set. Members \u00b6 Type Member Description int OriginalValue Original value of the timer int Value Current value of the timer string To String Same as Value Usage \u00b6 Consider the following timer: /declare BuffTimer timer local /varset BuffTimer 360 BuffTimer will be equal to 0 in: 360 tenths of 1 second 36 seconds 6 ticks (a tick is 6 seconds) Timers may also be set with an \"s\" (seconds) or an \"m\" (minutes) appended to the value. For example: /varset BuffTimer 360s This would set the timer to 3600 (360 * 10) tenths of 1 second /varset BuffTimer 360m This would set the timer to 216000 (360 * 60 * 10) tenths of 1 second sub main /declare myTimer timer local 100 /while ( ${myTimer} ) { /echo ${myTimer} /delay 10 } /return This would loop while myTimer is above 0","title":"timer"},{"location":"reference/data-types/datatype-timer/#timer","text":"A timer data type is set in tenths of one second and counts down to zero; starting immediately after being set.","title":"timer"},{"location":"reference/data-types/datatype-timer/#members","text":"Type Member Description int OriginalValue Original value of the timer int Value Current value of the timer string To String Same as Value","title":"Members"},{"location":"reference/data-types/datatype-timer/#usage","text":"Consider the following timer: /declare BuffTimer timer local /varset BuffTimer 360 BuffTimer will be equal to 0 in: 360 tenths of 1 second 36 seconds 6 ticks (a tick is 6 seconds) Timers may also be set with an \"s\" (seconds) or an \"m\" (minutes) appended to the value. For example: /varset BuffTimer 360s This would set the timer to 3600 (360 * 10) tenths of 1 second /varset BuffTimer 360m This would set the timer to 216000 (360 * 60 * 10) tenths of 1 second sub main /declare myTimer timer local 100 /while ( ${myTimer} ) { /echo ${myTimer} /delay 10 } /return This would loop while myTimer is above 0","title":"Usage"},{"location":"reference/data-types/datatype-timestamp/","tags":["datatype"],"text":"timestamp \u00b6 A timestamp represented in milliseconds. Type Member Description int Days Number of days remaining in the timestamp (3d 2h 23m will return 3) float Float timestamp represented in remaining seconds (1hr 23 min 53 seconds will return 5033.00) int64 Hours Number of hours remaining in the timestamp (1hr 23min 53 seconds will return 1) int64 Minutes Number of Minutes remaining in the timestamp (1hr 23min 53 seconds will return 23) int64 Raw Remaining time value represented in milliseconds int64 Seconds Number of Seconds remaining in the timestamp (1hr 23min 53 seconds will return 53) int64 Ticks Remaining time value represented in ticks string TimeDHM Remaining time value formatted in D:H:M (Days:Hours:Minutes) string TimeHMS Remaining time value formatted in H:M:S string Time Remaining time value formatted in M:S int64 TotalMinutes Total number of remaining minutes in the timestamp (1hr 23min 53 seconds will return 83) int64 TotalSeconds Total number of remaining minutes in the timestamp (1hr 23min 53 seconds will return 5033) string (To String) Same as Raw Changelog \u00b6 July 9 th , 2021: Added Days, TimeDHM","title":"timestamp"},{"location":"reference/data-types/datatype-timestamp/#timestamp","text":"A timestamp represented in milliseconds. Type Member Description int Days Number of days remaining in the timestamp (3d 2h 23m will return 3) float Float timestamp represented in remaining seconds (1hr 23 min 53 seconds will return 5033.00) int64 Hours Number of hours remaining in the timestamp (1hr 23min 53 seconds will return 1) int64 Minutes Number of Minutes remaining in the timestamp (1hr 23min 53 seconds will return 23) int64 Raw Remaining time value represented in milliseconds int64 Seconds Number of Seconds remaining in the timestamp (1hr 23min 53 seconds will return 53) int64 Ticks Remaining time value represented in ticks string TimeDHM Remaining time value formatted in D:H:M (Days:Hours:Minutes) string TimeHMS Remaining time value formatted in H:M:S string Time Remaining time value formatted in M:S int64 TotalMinutes Total number of remaining minutes in the timestamp (1hr 23min 53 seconds will return 83) int64 TotalSeconds Total number of remaining minutes in the timestamp (1hr 23min 53 seconds will return 5033) string (To String) Same as Raw","title":"timestamp"},{"location":"reference/data-types/datatype-timestamp/#changelog","text":"July 9 th , 2021: Added Days, TimeDHM","title":"Changelog"},{"location":"reference/data-types/datatype-type/","tags":["datatype"],"text":"type \u00b6 Contains information about data types Members \u00b6 Type Member Description string Name Type name string Member [ N ] Member name based on an internal ID number (based on 1 through N , not all values will be used) int Member [ name ] Member internal ID number based on name (will be a number from 1 to N) string (To String) Same as Name","title":"type"},{"location":"reference/data-types/datatype-type/#type","text":"Contains information about data types","title":"type"},{"location":"reference/data-types/datatype-type/#members","text":"Type Member Description string Name Type name string Member [ N ] Member name based on an internal ID number (based on 1 through N , not all values will be used) int Member [ name ] Member internal ID number based on name (will be a number from 1 to N) string (To String) Same as Name","title":"Members"},{"location":"reference/data-types/datatype-window/","tags":["datatype"],"text":"window \u00b6 This contains data related to the specified in-game window Windows come in many forms, but all are represented with the generic window type. In some of the descriptions, a bold window type may be specified, which defines the behavior for that type of window. Members \u00b6 Type Member Description argb BGColor Background color bool Checked Returns TRUE if the button has been checked window Child [ name ] Find a child window with the provided name bool Children Returns TRUE if the window has children window CurrentTab TabBox : Returns the Page window associated with the currently selected tab. int CurrentTabIndex TabBox : Returns the index of the currently selected tab. bool Enabled Returns TRUE if the window is enabled window FirstChild First child window int GetCurSel Index of the currently selected/highlighted item in a list or treeview int Height Height in pixels bool Highlighted Returns TRUE if the window is highlighted bool HisTradeReady Has the other person clicked the Trade button? int HScrollMax Horizontal scrollbar range int HScrollPos Horizontal scrollbar position int HScrollPct Horizontal scrollbar position in % to range from 0 to 100 int Items Number of items in a Listbox or Combobox string List [ N , y ] Get the text for the Nth item in a list box. Only works on list boxes. Use of y is optional and allows selection of the column of the window to get text from. int List [ text , y ] Find an item in a list box by partial match (use window.List [= text ] for exact). Only works on list boxes. Use of y is optional and allows selection of the column of the window to search in. bool Minimized Returns TRUE if the window is minimized bool MouseOver Returns TRUE if the mouse is currently over the window bool MyTradeReady Have I clicked the Trade button? string Name Name of window piece, e.g. \"ChatWindow\" for top level windows, or the piece name for child windows. Note: this is custom ui dependent window Next Next sibling window bool Open Returns TRUE if the window is open window Parent Parent window string ScreenID ScreenID of window piece. Note: This is not custom ui dependent, it must be the same on all UIs bool Siblings Returns TRUE if the window has siblings int Style Window style code int TabCount TabBox : The number of tabs present in the TabBox. window Tab [ #/Name ] TabBox : Looks up the Page window that matches the provided index or tab text. string Text Window's text. STMLBox : returns the contents of the STML. Page : returns the name of the page's Tab. string Tooltip TooltipReference text string Type Type of window piece (Screen for top level windows, or Listbox, Button, Gauge, Label, Editbox, Slider, etc) int VScrollMax Vertical scrollbar range int VScrollPct Vertical scrollbar position in % to range from 0 to 100 int VScrollPos Vertical scrollbar position int Width Width in pixels int X Screen X position int Y Screen Y position string To String TRUE if window exists, FALSE if not Methods \u00b6 Name Action DoClose Does the action of closing a window DoOpen Does the action of opening a window LeftMouseDown Does the action of clicking the left mouse button down LeftMouseHeld Does the action of holding the left mouse button LeftMouseHeldUp does the action of holding the left mouse button up LeftMouseUp Does the action of clicking the left mouse button up RightMouseDown does the action of clicking the right mouse button RightMouseHeld Does the action of holding the right mouse button RightMouseHeldUp Does the action of holding the right mouse button up RightMouseUp Does the action of clicking the right mouse button up Select Selects the specified window SetCurrentTab [ # or Name ] If the window is a TabBox, set the current tab by index or by name. Usage \u00b6 /invoke ${Window[MerchantWnd].DoOpen} Expected Result: the Merchant window window appears /echo ${Window[MerchantWnd].Open} Returns TRUE if a Merchant window is open /echo ${Window[windowname]} Returns TRUE if the WindowName exists, but doesn't have to be opened. /echo ${Window[MerchantWnd].Minimized} Returns TRUE if the Window is opened and minimized /echo ${Window[MerchantWnd/ItemList].List[=Water Flask,2]} Returns the index (int) of Water Flask in the merchant's item list. \",2\" means scan the second column, since that's where the item names are. ${Window[TradeskillWnd/RecipeList].List[=Inky Shadow Silk]} Find an item in the tradeskill item list box by the exact name Inky Shadow Silk ${Window[TradeskillWnd/RecipeList].List[1]} Get the first-column text for the 1 st item in the tradeskill item list box ${Window[tradewnd].HisTradeReady} Return TRUE if the other person has clicked the Trade button in the Trade Window ${Window[tradewnd].MyTradeReady} Return TRUE if I have clicked the Trade button in the Trade Window (TradeWnd) ${Window[RewardSelectionWnd/RewardPageTabWindow].Tab[Brew for the Day].Child[RewardSelectionOptionList].List[2]} Returns the name of the 2 nd option in the list of rewards for the tab titled \"Brew for the Day\"","title":"window"},{"location":"reference/data-types/datatype-window/#window","text":"This contains data related to the specified in-game window Windows come in many forms, but all are represented with the generic window type. In some of the descriptions, a bold window type may be specified, which defines the behavior for that type of window.","title":"window"},{"location":"reference/data-types/datatype-window/#members","text":"Type Member Description argb BGColor Background color bool Checked Returns TRUE if the button has been checked window Child [ name ] Find a child window with the provided name bool Children Returns TRUE if the window has children window CurrentTab TabBox : Returns the Page window associated with the currently selected tab. int CurrentTabIndex TabBox : Returns the index of the currently selected tab. bool Enabled Returns TRUE if the window is enabled window FirstChild First child window int GetCurSel Index of the currently selected/highlighted item in a list or treeview int Height Height in pixels bool Highlighted Returns TRUE if the window is highlighted bool HisTradeReady Has the other person clicked the Trade button? int HScrollMax Horizontal scrollbar range int HScrollPos Horizontal scrollbar position int HScrollPct Horizontal scrollbar position in % to range from 0 to 100 int Items Number of items in a Listbox or Combobox string List [ N , y ] Get the text for the Nth item in a list box. Only works on list boxes. Use of y is optional and allows selection of the column of the window to get text from. int List [ text , y ] Find an item in a list box by partial match (use window.List [= text ] for exact). Only works on list boxes. Use of y is optional and allows selection of the column of the window to search in. bool Minimized Returns TRUE if the window is minimized bool MouseOver Returns TRUE if the mouse is currently over the window bool MyTradeReady Have I clicked the Trade button? string Name Name of window piece, e.g. \"ChatWindow\" for top level windows, or the piece name for child windows. Note: this is custom ui dependent window Next Next sibling window bool Open Returns TRUE if the window is open window Parent Parent window string ScreenID ScreenID of window piece. Note: This is not custom ui dependent, it must be the same on all UIs bool Siblings Returns TRUE if the window has siblings int Style Window style code int TabCount TabBox : The number of tabs present in the TabBox. window Tab [ #/Name ] TabBox : Looks up the Page window that matches the provided index or tab text. string Text Window's text. STMLBox : returns the contents of the STML. Page : returns the name of the page's Tab. string Tooltip TooltipReference text string Type Type of window piece (Screen for top level windows, or Listbox, Button, Gauge, Label, Editbox, Slider, etc) int VScrollMax Vertical scrollbar range int VScrollPct Vertical scrollbar position in % to range from 0 to 100 int VScrollPos Vertical scrollbar position int Width Width in pixels int X Screen X position int Y Screen Y position string To String TRUE if window exists, FALSE if not","title":"Members"},{"location":"reference/data-types/datatype-window/#methods","text":"Name Action DoClose Does the action of closing a window DoOpen Does the action of opening a window LeftMouseDown Does the action of clicking the left mouse button down LeftMouseHeld Does the action of holding the left mouse button LeftMouseHeldUp does the action of holding the left mouse button up LeftMouseUp Does the action of clicking the left mouse button up RightMouseDown does the action of clicking the right mouse button RightMouseHeld Does the action of holding the right mouse button RightMouseHeldUp Does the action of holding the right mouse button up RightMouseUp Does the action of clicking the right mouse button up Select Selects the specified window SetCurrentTab [ # or Name ] If the window is a TabBox, set the current tab by index or by name.","title":"Methods"},{"location":"reference/data-types/datatype-window/#usage","text":"/invoke ${Window[MerchantWnd].DoOpen} Expected Result: the Merchant window window appears /echo ${Window[MerchantWnd].Open} Returns TRUE if a Merchant window is open /echo ${Window[windowname]} Returns TRUE if the WindowName exists, but doesn't have to be opened. /echo ${Window[MerchantWnd].Minimized} Returns TRUE if the Window is opened and minimized /echo ${Window[MerchantWnd/ItemList].List[=Water Flask,2]} Returns the index (int) of Water Flask in the merchant's item list. \",2\" means scan the second column, since that's where the item names are. ${Window[TradeskillWnd/RecipeList].List[=Inky Shadow Silk]} Find an item in the tradeskill item list box by the exact name Inky Shadow Silk ${Window[TradeskillWnd/RecipeList].List[1]} Get the first-column text for the 1 st item in the tradeskill item list box ${Window[tradewnd].HisTradeReady} Return TRUE if the other person has clicked the Trade button in the Trade Window ${Window[tradewnd].MyTradeReady} Return TRUE if I have clicked the Trade button in the Trade Window (TradeWnd) ${Window[RewardSelectionWnd/RewardPageTabWindow].Tab[Brew for the Day].Child[RewardSelectionOptionList].List[2]} Returns the name of the 2 nd option in the list of rewards for the tab titled \"Brew for the Day\"","title":"Usage"},{"location":"reference/data-types/datatype-worldlocation/","tags":["datatype"],"text":"worldlocation \u00b6 Provides access to world locations such as a character's bound location Members \u00b6 Type Member Description int ID The location's ID float Heading At the point of binding, what direction was the character facing zone Zone Access to the zone data float X The X coordinate float Y The Y coordinate float Z The Z coordinate","title":"worldlocation"},{"location":"reference/data-types/datatype-worldlocation/#worldlocation","text":"Provides access to world locations such as a character's bound location","title":"worldlocation"},{"location":"reference/data-types/datatype-worldlocation/#members","text":"Type Member Description int ID The location's ID float Heading At the point of binding, what direction was the character facing zone Zone Access to the zone data float X The X coordinate float Y The Y coordinate float Z The Z coordinate","title":"Members"},{"location":"reference/data-types/datatype-xtarget/","tags":["datatype"],"text":"xtarget \u00b6 Contains the data related to your extended target list Members \u00b6 Type Member Description int ID ID of specified XTarget string Name Name of specified XTarget int PctAggro PctAggro of specified XTarget string TargetType Extended target type (see below) string To String Number of current extended targets Extended Target Types \u00b6 Type will return one of the following: Empty Target Auto Hater Specific PC Specific NPC Target's Target Group Tank Group Tank's Target Group Assist Group Assist Target Group Puller Group Puller Target Group Mark 1 Group Mark 2 Group Mark 3 Raid Assist 1 Raid Assist 2 Raid Assist 3 Raid Assist 1 Target Raid Assist 2 Target Raid Assist 3 Target Raid Mark 1 Raid Mark 2 Raid Mark 3 Pet Target Mercenary Target","title":"xtarget"},{"location":"reference/data-types/datatype-xtarget/#xtarget","text":"Contains the data related to your extended target list","title":"xtarget"},{"location":"reference/data-types/datatype-xtarget/#members","text":"Type Member Description int ID ID of specified XTarget string Name Name of specified XTarget int PctAggro PctAggro of specified XTarget string TargetType Extended target type (see below) string To String Number of current extended targets","title":"Members"},{"location":"reference/data-types/datatype-xtarget/#extended-target-types","text":"Type will return one of the following: Empty Target Auto Hater Specific PC Specific NPC Target's Target Group Tank Group Tank's Target Group Assist Group Assist Target Group Puller Group Puller Target Group Mark 1 Group Mark 2 Group Mark 3 Raid Assist 1 Raid Assist 2 Raid Assist 3 Raid Assist 1 Target Raid Assist 2 Target Raid Assist 3 Target Raid Mark 1 Raid Mark 2 Raid Mark 3 Pet Target Mercenary Target","title":"Extended Target Types"},{"location":"reference/data-types/datatype-zone/","tags":["datatype"],"text":"zone \u00b6 Contains information related to the specified zone Members \u00b6 Type Member Description int64 Flags Flags for this zone int ID ID of the zone string Name Full zone name string ShortName Short zone name string To String Same as Name","title":"zone"},{"location":"reference/data-types/datatype-zone/#zone","text":"Contains information related to the specified zone","title":"zone"},{"location":"reference/data-types/datatype-zone/#members","text":"Type Member Description int64 Flags Flags for this zone int ID ID of the zone string Name Full zone name string ShortName Short zone name string To String Same as Name","title":"Members"},{"location":"reference/general/animations/","text":"Animations \u00b6 This is not a complete list. Note that the animation ID #'s above 100 or so are for the newer models like the Drakkin. A distance of 500 seems to be the cutoff for animation ID's to be sent to the client, but not all of them are sent at that distance. For example you may get the standing and turning ID's, but not the casting ones. As you move closer to the spawn, the update of ID's becomes more consistent. Between a distance of 400 - 450 they seem to become consistent. If you need to rely on ID updates for a script, I would play it safe and stick with 400. Animation ID's do not rely on line of sight. 1 kick 5 melee 6 melee2 11 roundhouse 15 drowning 16 dead 17 walking 18 running 19 jumprun 20 jumpinplace 21 falling 24 ducking 25 tread_water 26 stand_animated2 27 casting1 28 emote_cry 29 emote_wave 30 emote_rude 32 stand2 33 sitting 34 turning 36 bind_wound 37 swimming 43 casting2 44 casting3 45 kick2 46 tigerclaw 47 eaglestrike 48 emote_nod 51 emote_clap 53 emote_blush 54 emote_snicker 55 emote_cough 56 emote_duck 57 emote_stare 59 emote_veto 60 emote_glare 61 emote_peer 62 emote_grovel 63 emote_laugh 64 emote_point 65 emote_shrug 67 emote_salute 68 emote_shiver 69 emote_tap 70 emote_bow 71 stand1 72 stand_animated1 74 mounted 80 melee3 82 melee4 104 walking2 105 reverse 106 running2 107 turn_right 108 turn_left 109 bind_wound2 110 stand3 111 stand_animated3 112 melee4 118 sitting2 121 sit_animation 122 ducking2 123 jumprun2 124 jumpinplace2 125 crawl 127 tread_water2 128 swimming2 134 castin4 135 casting5 144 youarehit 145 drowning2 146 dead2 151 falling2 152 emote_bow2 154 emote_wave2 155 salute2 156 emote_clap2 158 emote_point2 159 emote_snicker2 160 emote_shrug2 162 emote_cry2 163 emote_rude2 165 emote_grovel2 166 emote_blush2 167 emote_cough2 168 emote_duck2 172 emote_shiver2 174 emote_tap2 177 emote_glare2 180 emote_stare2 254 zonein","title":"Animations"},{"location":"reference/general/animations/#animations","text":"This is not a complete list. Note that the animation ID #'s above 100 or so are for the newer models like the Drakkin. A distance of 500 seems to be the cutoff for animation ID's to be sent to the client, but not all of them are sent at that distance. For example you may get the standing and turning ID's, but not the casting ones. As you move closer to the spawn, the update of ID's becomes more consistent. Between a distance of 400 - 450 they seem to become consistent. If you need to rely on ID updates for a script, I would play it safe and stick with 400. Animation ID's do not rely on line of sight. 1 kick 5 melee 6 melee2 11 roundhouse 15 drowning 16 dead 17 walking 18 running 19 jumprun 20 jumpinplace 21 falling 24 ducking 25 tread_water 26 stand_animated2 27 casting1 28 emote_cry 29 emote_wave 30 emote_rude 32 stand2 33 sitting 34 turning 36 bind_wound 37 swimming 43 casting2 44 casting3 45 kick2 46 tigerclaw 47 eaglestrike 48 emote_nod 51 emote_clap 53 emote_blush 54 emote_snicker 55 emote_cough 56 emote_duck 57 emote_stare 59 emote_veto 60 emote_glare 61 emote_peer 62 emote_grovel 63 emote_laugh 64 emote_point 65 emote_shrug 67 emote_salute 68 emote_shiver 69 emote_tap 70 emote_bow 71 stand1 72 stand_animated1 74 mounted 80 melee3 82 melee4 104 walking2 105 reverse 106 running2 107 turn_right 108 turn_left 109 bind_wound2 110 stand3 111 stand_animated3 112 melee4 118 sitting2 121 sit_animation 122 ducking2 123 jumprun2 124 jumpinplace2 125 crawl 127 tread_water2 128 swimming2 134 castin4 135 casting5 144 youarehit 145 drowning2 146 dead2 151 falling2 152 emote_bow2 154 emote_wave2 155 salute2 156 emote_clap2 158 emote_point2 159 emote_snicker2 160 emote_shrug2 162 emote_cry2 163 emote_rude2 165 emote_grovel2 166 emote_blush2 167 emote_cough2 168 emote_duck2 172 emote_shiver2 174 emote_tap2 177 emote_glare2 180 emote_stare2 254 zonein","title":"Animations"},{"location":"reference/general/combatstate/","text":"CombatState \u00b6 Me.CombatState A new Out Of Combat (OOC) resting feature was introduced with The Serpent's Spine expansion, allowing accelerated mana and hit point regeneration. Once this state is Active and you are sitting (or on a mount), it takes a maximum 3 mins to go from 0 to full health/mana. The waiting period to reach an active/resting state varies on the zone or mobs you are fighting. The default timer is 30 seconds but this can reach upwards of 5 mins or more in high end raid zones. A new DataType:character member was added, CombatState. Possible Return Values \u00b6 COMBAT You are currently in a combat state and can not rest yet. DEBUFFED You can't rest now. You need to be cleansed before the cooldown will start COOLDOWN You are cooling down. OOC regen is ready when you are done cooling down ACTIVE You can rest now. You can use the OOC regen if you want RESTING You ARE resting now. the OOC regen is active NULL Your UI does not have the OOC regen XML additions and state can not be determined NULL only occurs if your player UI file does not have the required additions to track OCC. You should replace this portion with an updated version. Examples \u00b6 /if ${Me.CombatState.Equal[ACTIVE]} /echo I can now sit and regen fast /if ${Me.CombatState.Equal[DEBUFFED]} /echo I need cures before I can rest","title":"CombatState"},{"location":"reference/general/combatstate/#combatstate","text":"Me.CombatState A new Out Of Combat (OOC) resting feature was introduced with The Serpent's Spine expansion, allowing accelerated mana and hit point regeneration. Once this state is Active and you are sitting (or on a mount), it takes a maximum 3 mins to go from 0 to full health/mana. The waiting period to reach an active/resting state varies on the zone or mobs you are fighting. The default timer is 30 seconds but this can reach upwards of 5 mins or more in high end raid zones. A new DataType:character member was added, CombatState.","title":"CombatState"},{"location":"reference/general/combatstate/#possible-return-values","text":"COMBAT You are currently in a combat state and can not rest yet. DEBUFFED You can't rest now. You need to be cleansed before the cooldown will start COOLDOWN You are cooling down. OOC regen is ready when you are done cooling down ACTIVE You can rest now. You can use the OOC regen if you want RESTING You ARE resting now. the OOC regen is active NULL Your UI does not have the OOC regen XML additions and state can not be determined NULL only occurs if your player UI file does not have the required additions to track OCC. You should replace this portion with an updated version.","title":"Possible Return Values"},{"location":"reference/general/combatstate/#examples","text":"/if ${Me.CombatState.Equal[ACTIVE]} /echo I can now sit and regen fast /if ${Me.CombatState.Equal[DEBUFFED]} /echo I need cures before I can rest","title":"Examples"},{"location":"reference/general/containers-list/","text":"Containers List \u00b6 This is a list of all tradeskill containers. Alchemy Baking Blacksmithing Brewing Firing Fishing Fletching Fletching WoodElf Jewelry Making Make Poison Medicine Quest Merchant Mixing Pottery Regular Research ??? Research ENC Research MAG Research NEC Research WIZ Research Practice Tailoring Tailoring Halfling Tinkering","title":"Containers List"},{"location":"reference/general/containers-list/#containers-list","text":"This is a list of all tradeskill containers. Alchemy Baking Blacksmithing Brewing Firing Fishing Fletching Fletching WoodElf Jewelry Making Make Poison Medicine Quest Merchant Mixing Pottery Regular Research ??? Research ENC Research MAG Research NEC Research WIZ Research Practice Tailoring Tailoring Halfling Tinkering","title":"Containers List"},{"location":"reference/general/languages/","text":"Languages \u00b6 List of languages. Language ID Language Name 1 Common Tongue 2 Barbarian 3 Erudian 4 Elvish 5 Dark Elvish 6 Dwarvish 7 Troll 8 Ogre 9 Gnomish 10 Halfling 11 Thieves Cant 12 Old Erudian 13 Elder Elvish 14 Froglok 15 Goblin 16 Gnoll 17 Combine Tongue 18 Elder Teir'Dal 19 Lizardman 20 Orcish 21 Faerie 22 Dragon 23 Elder Dragon 24 Dark Speech 25 Vah Shir","title":"Languages"},{"location":"reference/general/languages/#languages","text":"List of languages. Language ID Language Name 1 Common Tongue 2 Barbarian 3 Erudian 4 Elvish 5 Dark Elvish 6 Dwarvish 7 Troll 8 Ogre 9 Gnomish 10 Halfling 11 Thieves Cant 12 Old Erudian 13 Elder Elvish 14 Froglok 15 Goblin 16 Gnoll 17 Combine Tongue 18 Elder Teir'Dal 19 Lizardman 20 Orcish 21 Faerie 22 Dragon 23 Elder Dragon 24 Dark Speech 25 Vah Shir","title":"Languages"},{"location":"reference/general/list-of-spawn-heights/","text":"List of spawn heights \u00b6 Ogre 9.00 Troll 8.00 Barbarian 7.00 Vah Shir 7.00 Iksar 6.50 Erudite 6.00 High Elf 6.00 Human 6.00 Skeleton 6.00 Half Elf 5.50 Dark Elf 5.00 Wood Elf 5.00 Dwarf 4.00 Halfling 3.50 Gnome 3.00","title":"List of spawn heights"},{"location":"reference/general/list-of-spawn-heights/#list-of-spawn-heights","text":"Ogre 9.00 Troll 8.00 Barbarian 7.00 Vah Shir 7.00 Iksar 6.50 Erudite 6.00 High Elf 6.00 Human 6.00 Skeleton 6.00 Half Elf 5.50 Dark Elf 5.00 Wood Elf 5.00 Dwarf 4.00 Halfling 3.50 Gnome 3.00","title":"List of spawn heights"},{"location":"reference/general/skills-list/","text":"Skills List \u00b6 The list of skills that can be used with the /skills command. 1H Blunt 1H Slashing 2H Blunt 2H Slashing Abjuration Alchemy Alcohol Tolerance Alteration Apply Poison Archery Backstab Baking Bash Begging Berserking Bind Wound Blacksmithing Block Brass Instruments Brewing Channeling Conjuration Defense Disarm Disarm Traps Divination Dodge Double Attack Dragon Punch Duel Wield Eagle Strike Evocation Feign Death Fishing Fletching Flying Kick Forage Frenzy Hand To Hand Hide Intimidation Jewelry Making Kick Make Poison Meditate Mend Offense Parry Percussion Instruments Pick Lock Pick Pockets Piercing Pottery Research Riposte Round Kick Safe Fall Sense Heading Sense Traps Sing Slam Sneak Specialize Abjure Specialize Alteration Specialize Conjuration Specialize Divination Specialize Evocation Stringed Instruments Tailoring Taunt Throwing Tiger Claw Tinkering Tracking Wind Instruments","title":"Skills List"},{"location":"reference/general/skills-list/#skills-list","text":"The list of skills that can be used with the /skills command. 1H Blunt 1H Slashing 2H Blunt 2H Slashing Abjuration Alchemy Alcohol Tolerance Alteration Apply Poison Archery Backstab Baking Bash Begging Berserking Bind Wound Blacksmithing Block Brass Instruments Brewing Channeling Conjuration Defense Disarm Disarm Traps Divination Dodge Double Attack Dragon Punch Duel Wield Eagle Strike Evocation Feign Death Fishing Fletching Flying Kick Forage Frenzy Hand To Hand Hide Intimidation Jewelry Making Kick Make Poison Meditate Mend Offense Parry Percussion Instruments Pick Lock Pick Pockets Piercing Pottery Research Riposte Round Kick Safe Fall Sense Heading Sense Traps Sing Slam Sneak Specialize Abjure Specialize Alteration Specialize Conjuration Specialize Divination Specialize Evocation Stringed Instruments Tailoring Taunt Throwing Tiger Claw Tinkering Tracking Wind Instruments","title":"Skills List"},{"location":"reference/general/slot-names/","text":"Slot Names \u00b6 ItemSlot & ItemSlot2 \u00b6 These are not top level objects they are only members of DataType:item ItemSlot Diagram \u00b6 You SHOULD use .ItemSlot and .ItemSlot2 instead of .InvSlot The reason for this is that they work without having to open the bags. Example: Picking up an item from pack 10 first slot in that pack: /itemnotify in pack${Math.Calc[${Me.Inventory[32].Item[1].ItemSlot}-22].Int} ${Math.Calc[${Me.Inventory[32].Item[1].ItemSlot2} + 1].Int} leftmouseup Why not just /itemnotify in ${Me.Inventory[32].Item 1 .ItemSlot} ${Me.Inventory 32 .Item[1].ItemSlot2} you may ask... well, we didn't have .ItemSlot and .ItemSlot2 until recently, so /itemnotify works with the old pack system that starts at slot 1 not 0 I can't change it to use real slotnumbers because then it will break a lot of old macros. So use the above calculation. -eqmule ItemSlot Inventory +----+----+ | 23 | 24 | +----+----+ | 25 | 26 | +----+----+ | 27 | 28 | +----+----+ | 29 | 30 | +----+----+ | 31 | 32 | +----+----+ .ItemSlot2 is a \"sub\" slot, example if .ItemSlot is 23 (a container like a Backpack for example) and your item is inside that container this will return what slot INSIDE that container it\u2019s in... complicated? Not really. Picking up an item from pack 10 first slot in that pack: /itemnotify in pack \\({Math.Calc[\\) {Me.Inventory 32 .Item 1 .ItemSlot}-22].Int} \\({Math.Calc\\[\\) {Me.Inventory 32 .Item 1 .ItemSlot2} + 1].Int} leftmouseup Or say you want an Iron Ration, which is in bag 1 in slot 8 Doing /echo ${FindItem[=Iron Ration].ItemSlot} will return 23 Doing /echo ${FindItem[=Iron Ration].ItemSlot2} will return 7 (slots start at 0 so this is in fact correct) For the above example, you would be using this: /itemnotify in pack${Math.Calc[${Me.Inventory[23].ItemSlot}-22].Int} ${Math.Calc[${Me.Inventory[23].Item[7].ItemSlot2} + 1].Int} leftmouseup and programatically: /itemnotify in pack${Math.Calc[${Me.Inventory[${FindItem[=Iron Ration].ItemSlot}].ItemSlot}-22].Int} Line above, then a space, and the following(I couldn't do a single line due to lack of linewrap): ${Math.Calc[${Me.Inventory[${FindItem[=Iron Ration].ItemSlot}].Item[${FindItem[=Iron Ration].ItemSlot2}].ItemSlot2} + 1].Int} leftmouseup InvSlot \u00b6 Inventory Diagram \u00b6 InvSlot Inventory +----+----+ | 24 | 25 | +----+----+ | 26 | 27 | +----+----+ | 28 | 29 | +----+----+ | 30 | 31 | +----+----+ | 32 | 33 | +----+----+ Equipment Slots \u00b6 0 charm 1 leftear 2 head 3 face 4 rightear 5 neck 6 shoulder 7 arms 8 back 9 leftwrist 10 rightwrist 11 ranged 12 hands 13 mainhand 14 offhand 15 leftfinger 16 rightfinger 17 chest 18 legs 19 feet 20 waist 21 powersource 22 ammo Inventory Slots \u00b6 23 pack1 24 pack2 25 pack3 26 pack4 27 pack5 28 pack6 29 pack7 30 pack8 31 pack9 32 pack10 Bank Slots \u00b6 2000 bank1 2001 bank2 2002 bank3 2003 bank4 2004 bank5 2005 bank6 2006 bank7 2007 bank8 2008 bank9 2009 bank10 2010 bank11 2011 bank12 2012 bank13 2013 bank14 2014 bank15 2015 bank16 2016 bank17 2017 bank18 2018 bank19 2019 bank20 2020 bank21 2021 bank22 2022 bank23 2023 bank24 2500 sharedbank1 2501 sharedbank2 Trade Slots \u00b6 3000 trade1 3001 trade2 3002 trade3 3003 trade4 3004 trade5 3005 trade6 3006 trade7 3007 trade8 3008 trade9 Enviroment Slots \u00b6 4000 enviro1 4001 enviro2 4002 enviro3 4003 enviro4 4004 enviro5 4005 enviro6 4006 enviro7 4007 enviro8 4008 enviro9 Loot Slots \u00b6 5000 loot1 5001 loot2 5002 loot3 5003 loot4 5004 loot5 5005 loot6 5006 loot7 5007 loot8 5008 loot9 5009 loot10 5010 loot11 5011 loot12 5012 loot13 5013 loot14 5014 loot15 5015 loot16 5016 loot17 5017 loot18 5018 loot19 5019 loot20 5020 loot21 5021 loot22 5022 loot23 5023 loot24 5024 loot25 5025 loot26 5026 loot27 5027 loot28 5028 loot29 5029 loot30 5030 loot31 Merchant Slots \u00b6 6000 merchant1 6001 merchant2 6002 merchant3 6003 merchant4 6004 merchant5 6005 merchant6 6006 merchant7 6007 merchant8 6008 merchant9 6009 merchant10 6010 merchant11 6011 merchant12 6012 merchant13 6013 merchant14 6014 merchant15 6015 merchant16 6016 merchant17 6017 merchant18 6018 merchant19 6019 merchant20 6020 merchant21 6021 merchant22 6022 merchant23 6023 merchant24 6024 merchant25 6025 merchant26 6026 merchant27 6027 merchant28 6028 merchant29 6029 merchant30 6030 merchant31 6031 merchant32 6032 merchant33 6033 merchant34 6034 merchant35 6035 merchant36 6036 merchant37 6037 merchant38 6038 merchant39 6039 merchant40 6040 merchant41 6041 merchant42 6042 merchant43 6043 merchant44 6044 merchant45 6045 merchant46 6046 merchant47 6047 merchant48 6048 merchant49 6049 merchant50 6050 merchant51 6051 merchant52 6052 merchant53 6053 merchant54 6054 merchant55 6055 merchant56 6056 merchant57 6057 merchant58 6058 merchant59 6059 merchant60 6060 merchant61 6061 merchant62 6062 merchant63 6063 merchant64 6064 merchant65 6065 merchant66 6066 merchant67 6067 merchant68 6068 merchant69 6069 merchant70 6070 merchant71 6071 merchant72 6072 merchant73 6073 merchant74 6074 merchant75 6075 merchant76 6076 merchant77 6077 merchant78 6078 merchant79 6079 merchant80 Bazaar Slots \u00b6 7000 bazaar1 7001 bazaar2 7002 bazaar3 7003 bazaar4 7004 bazaar5 7005 bazaar6 7006 bazaar7 7007 bazaar8 7008 bazaar9 7009 bazaar10 7010 bazaar11 7011 bazaar12 7012 bazaar13 7013 bazaar14 7014 bazaar15 7015 bazaar16 7016 bazaar17 7017 bazaar18 7018 bazaar19 7019 bazaar20 7020 bazaar21 7021 bazaar22 7022 bazaar23 7023 bazaar24 7024 bazaar25 7025 bazaar26 7026 bazaar27 7027 bazaar28 7028 bazaar29 7029 bazaar30 7030 bazaar31 7031 bazaar32 7032 bazaar33 7033 bazaar34 7034 bazaar35 7035 bazaar36 7036 bazaar37 7037 bazaar38 7038 bazaar39 7039 bazaar40 7040 bazaar41 7041 bazaar42 7042 bazaar43 7043 bazaar44 7044 bazaar45 7045 bazaar46 7046 bazaar47 7047 bazaar48 7048 bazaar49 7049 bazaar50 7050 bazaar51 7051 bazaar52 7052 bazaar53 7053 bazaar54 7054 bazaar55 7055 bazaar56 7056 bazaar57 7057 bazaar58 7058 bazaar59 7059 bazaar60 7060 bazaar61 7061 bazaar62 7062 bazaar63 7063 bazaar64 7064 bazaar65 7065 bazaar66 7066 bazaar67 7067 bazaar68 7068 bazaar69 7069 bazaar70 7070 bazaar71 7071 bazaar72 7072 bazaar73 7073 bazaar74 7074 bazaar75 7075 bazaar76 7076 bazaar77 7077 bazaar78 7078 bazaar79 7079 bazaar80 Inspect Slots \u00b6 8000 inspect1 8001 inspect2 8002 inspect3 8003 inspect4 8004 inspect5 8005 inspect6 8006 inspect7 8007 inspect8 8008 inspect9 8009 inspect10 8010 inspect11 8011 inspect12 8012 inspect13 8013 inspect14 8014 inspect15 8015 inspect16 8016 inspect17 8017 inspect18 8018 inspect19 8019 inspect20 8020 inspect21 8021 inspect22 8022 inspect23 8023 inspect24 8024 inspect25 8025 inspect26 8026 inspect27 8027 inspect28 8028 inspect29 8029 inspect30 8030 inspect31","title":"Slot Names"},{"location":"reference/general/slot-names/#slot-names","text":"","title":"Slot Names"},{"location":"reference/general/slot-names/#itemslot-itemslot2","text":"These are not top level objects they are only members of DataType:item","title":"ItemSlot &amp; ItemSlot2"},{"location":"reference/general/slot-names/#itemslot-diagram","text":"You SHOULD use .ItemSlot and .ItemSlot2 instead of .InvSlot The reason for this is that they work without having to open the bags. Example: Picking up an item from pack 10 first slot in that pack: /itemnotify in pack${Math.Calc[${Me.Inventory[32].Item[1].ItemSlot}-22].Int} ${Math.Calc[${Me.Inventory[32].Item[1].ItemSlot2} + 1].Int} leftmouseup Why not just /itemnotify in ${Me.Inventory[32].Item 1 .ItemSlot} ${Me.Inventory 32 .Item[1].ItemSlot2} you may ask... well, we didn't have .ItemSlot and .ItemSlot2 until recently, so /itemnotify works with the old pack system that starts at slot 1 not 0 I can't change it to use real slotnumbers because then it will break a lot of old macros. So use the above calculation. -eqmule ItemSlot Inventory +----+----+ | 23 | 24 | +----+----+ | 25 | 26 | +----+----+ | 27 | 28 | +----+----+ | 29 | 30 | +----+----+ | 31 | 32 | +----+----+ .ItemSlot2 is a \"sub\" slot, example if .ItemSlot is 23 (a container like a Backpack for example) and your item is inside that container this will return what slot INSIDE that container it\u2019s in... complicated? Not really. Picking up an item from pack 10 first slot in that pack: /itemnotify in pack \\({Math.Calc[\\) {Me.Inventory 32 .Item 1 .ItemSlot}-22].Int} \\({Math.Calc\\[\\) {Me.Inventory 32 .Item 1 .ItemSlot2} + 1].Int} leftmouseup Or say you want an Iron Ration, which is in bag 1 in slot 8 Doing /echo ${FindItem[=Iron Ration].ItemSlot} will return 23 Doing /echo ${FindItem[=Iron Ration].ItemSlot2} will return 7 (slots start at 0 so this is in fact correct) For the above example, you would be using this: /itemnotify in pack${Math.Calc[${Me.Inventory[23].ItemSlot}-22].Int} ${Math.Calc[${Me.Inventory[23].Item[7].ItemSlot2} + 1].Int} leftmouseup and programatically: /itemnotify in pack${Math.Calc[${Me.Inventory[${FindItem[=Iron Ration].ItemSlot}].ItemSlot}-22].Int} Line above, then a space, and the following(I couldn't do a single line due to lack of linewrap): ${Math.Calc[${Me.Inventory[${FindItem[=Iron Ration].ItemSlot}].Item[${FindItem[=Iron Ration].ItemSlot2}].ItemSlot2} + 1].Int} leftmouseup","title":"ItemSlot Diagram"},{"location":"reference/general/slot-names/#invslot","text":"","title":"InvSlot"},{"location":"reference/general/slot-names/#inventory-diagram","text":"InvSlot Inventory +----+----+ | 24 | 25 | +----+----+ | 26 | 27 | +----+----+ | 28 | 29 | +----+----+ | 30 | 31 | +----+----+ | 32 | 33 | +----+----+","title":"Inventory Diagram"},{"location":"reference/general/slot-names/#equipment-slots","text":"0 charm 1 leftear 2 head 3 face 4 rightear 5 neck 6 shoulder 7 arms 8 back 9 leftwrist 10 rightwrist 11 ranged 12 hands 13 mainhand 14 offhand 15 leftfinger 16 rightfinger 17 chest 18 legs 19 feet 20 waist 21 powersource 22 ammo","title":"Equipment Slots"},{"location":"reference/general/slot-names/#inventory-slots","text":"23 pack1 24 pack2 25 pack3 26 pack4 27 pack5 28 pack6 29 pack7 30 pack8 31 pack9 32 pack10","title":"Inventory Slots"},{"location":"reference/general/slot-names/#bank-slots","text":"2000 bank1 2001 bank2 2002 bank3 2003 bank4 2004 bank5 2005 bank6 2006 bank7 2007 bank8 2008 bank9 2009 bank10 2010 bank11 2011 bank12 2012 bank13 2013 bank14 2014 bank15 2015 bank16 2016 bank17 2017 bank18 2018 bank19 2019 bank20 2020 bank21 2021 bank22 2022 bank23 2023 bank24 2500 sharedbank1 2501 sharedbank2","title":"Bank Slots"},{"location":"reference/general/slot-names/#trade-slots","text":"3000 trade1 3001 trade2 3002 trade3 3003 trade4 3004 trade5 3005 trade6 3006 trade7 3007 trade8 3008 trade9","title":"Trade Slots"},{"location":"reference/general/slot-names/#enviroment-slots","text":"4000 enviro1 4001 enviro2 4002 enviro3 4003 enviro4 4004 enviro5 4005 enviro6 4006 enviro7 4007 enviro8 4008 enviro9","title":"Enviroment Slots"},{"location":"reference/general/slot-names/#loot-slots","text":"5000 loot1 5001 loot2 5002 loot3 5003 loot4 5004 loot5 5005 loot6 5006 loot7 5007 loot8 5008 loot9 5009 loot10 5010 loot11 5011 loot12 5012 loot13 5013 loot14 5014 loot15 5015 loot16 5016 loot17 5017 loot18 5018 loot19 5019 loot20 5020 loot21 5021 loot22 5022 loot23 5023 loot24 5024 loot25 5025 loot26 5026 loot27 5027 loot28 5028 loot29 5029 loot30 5030 loot31","title":"Loot Slots"},{"location":"reference/general/slot-names/#merchant-slots","text":"6000 merchant1 6001 merchant2 6002 merchant3 6003 merchant4 6004 merchant5 6005 merchant6 6006 merchant7 6007 merchant8 6008 merchant9 6009 merchant10 6010 merchant11 6011 merchant12 6012 merchant13 6013 merchant14 6014 merchant15 6015 merchant16 6016 merchant17 6017 merchant18 6018 merchant19 6019 merchant20 6020 merchant21 6021 merchant22 6022 merchant23 6023 merchant24 6024 merchant25 6025 merchant26 6026 merchant27 6027 merchant28 6028 merchant29 6029 merchant30 6030 merchant31 6031 merchant32 6032 merchant33 6033 merchant34 6034 merchant35 6035 merchant36 6036 merchant37 6037 merchant38 6038 merchant39 6039 merchant40 6040 merchant41 6041 merchant42 6042 merchant43 6043 merchant44 6044 merchant45 6045 merchant46 6046 merchant47 6047 merchant48 6048 merchant49 6049 merchant50 6050 merchant51 6051 merchant52 6052 merchant53 6053 merchant54 6054 merchant55 6055 merchant56 6056 merchant57 6057 merchant58 6058 merchant59 6059 merchant60 6060 merchant61 6061 merchant62 6062 merchant63 6063 merchant64 6064 merchant65 6065 merchant66 6066 merchant67 6067 merchant68 6068 merchant69 6069 merchant70 6070 merchant71 6071 merchant72 6072 merchant73 6073 merchant74 6074 merchant75 6075 merchant76 6076 merchant77 6077 merchant78 6078 merchant79 6079 merchant80","title":"Merchant Slots"},{"location":"reference/general/slot-names/#bazaar-slots","text":"7000 bazaar1 7001 bazaar2 7002 bazaar3 7003 bazaar4 7004 bazaar5 7005 bazaar6 7006 bazaar7 7007 bazaar8 7008 bazaar9 7009 bazaar10 7010 bazaar11 7011 bazaar12 7012 bazaar13 7013 bazaar14 7014 bazaar15 7015 bazaar16 7016 bazaar17 7017 bazaar18 7018 bazaar19 7019 bazaar20 7020 bazaar21 7021 bazaar22 7022 bazaar23 7023 bazaar24 7024 bazaar25 7025 bazaar26 7026 bazaar27 7027 bazaar28 7028 bazaar29 7029 bazaar30 7030 bazaar31 7031 bazaar32 7032 bazaar33 7033 bazaar34 7034 bazaar35 7035 bazaar36 7036 bazaar37 7037 bazaar38 7038 bazaar39 7039 bazaar40 7040 bazaar41 7041 bazaar42 7042 bazaar43 7043 bazaar44 7044 bazaar45 7045 bazaar46 7046 bazaar47 7047 bazaar48 7048 bazaar49 7049 bazaar50 7050 bazaar51 7051 bazaar52 7052 bazaar53 7053 bazaar54 7054 bazaar55 7055 bazaar56 7056 bazaar57 7057 bazaar58 7058 bazaar59 7059 bazaar60 7060 bazaar61 7061 bazaar62 7062 bazaar63 7063 bazaar64 7064 bazaar65 7065 bazaar66 7066 bazaar67 7067 bazaar68 7068 bazaar69 7069 bazaar70 7070 bazaar71 7071 bazaar72 7072 bazaar73 7073 bazaar74 7074 bazaar75 7075 bazaar76 7076 bazaar77 7077 bazaar78 7078 bazaar79 7079 bazaar80","title":"Bazaar Slots"},{"location":"reference/general/slot-names/#inspect-slots","text":"8000 inspect1 8001 inspect2 8002 inspect3 8003 inspect4 8004 inspect5 8005 inspect6 8006 inspect7 8007 inspect8 8008 inspect9 8009 inspect10 8010 inspect11 8011 inspect12 8012 inspect13 8013 inspect14 8014 inspect15 8015 inspect16 8016 inspect17 8017 inspect18 8018 inspect19 8019 inspect20 8020 inspect21 8021 inspect22 8022 inspect23 8023 inspect24 8024 inspect25 8025 inspect26 8026 inspect27 8027 inspect28 8028 inspect29 8029 inspect30 8030 inspect31","title":"Inspect Slots"},{"location":"reference/general/spa-list/","text":"SPA List \u00b6 Spell Affects (yea they have bad engrish) Spell Effects Source Info (Updated 2018-12) AFFECTNUMBER - AFFECTNAME 0 - HP 1 - AC 2 - Attack Power 3 - Movement Rate 4 - STR 5 - DEX 6 - AGI 7 - STA 8 - INT 9 - WIS 10 - CHA 11 - Melee Speed 12 - Invisibility 13 - See Invis 14 - Enduring Breath 15 - Mana 16 - NPC-Frenzy 17 - NPC-Awareness 18 - NPC Aggro 19 - NPC Faction 20 - Blindness 21 - Stun 22 - Charm 23 - Fear 24 - Fatigue 25 - Bind Affinity 26 - Gate 27 - Dispel Magic 28 - Invis Vs Undead 29 - Invis Vs Animals 30 - NPC-ReactRange 31 - Enthrall (Mez) 32 - Create Item 33 - Spawn NPC 34 - Confuse 35 - Disease 36 - Poison 37 - DetectHostile 38 - DetectMagic 39 - NoTwincast 40 - Invulnerability 41 - Banish 42 - Shadow Step 43 - Berserk 44 - Lycanthropy 45 - Vampirism 46 - Resist Fire 47 - Resist Cold 48 - Resist Poison 49 - Resist Disease 50 - Resist Magic 51 - Detect (Switch) Traps 52 - Detect Undead 53 - Detect Summoned 54 - Detect Animals 55 - Stoneskin 56 - True North 57 - Levitation 58 - Change Form 59 - Damage Attackers (DS) 60 - TransferItem 61 - Identify 62 - Item ID 63 - NPC-WipeHatelist 64 - Spin Stun 65 - Infravision 66 - Ultravision 67 - NPC-POV 68 - Reclaim Energy 69 - Max HP 70 - CorpseBomb 71 - Create Undead 72 - PreserveCorpse 73 - TargetsView 74 - FeignDeath 75 - Ventriloquism 76 - Sentinel 77 - LocateCorpse 78 - SpellShield 79 - InstantHP 80 - Enchant:Light 81 - Resurrect 82 - Summon Target 83 - Portal 84 - Hp-NPC-ONLY 85 - Contact Ability (Melee Proc) 86 - NPC-Help-Radius 87 - Telescope 88 - Combat Portal 89 - Height 90 - IgnorePet 91 - SummonCorpse 92 - Hate (On Spell Land) 93 - WeatherControl 94 - Fragile 95 - Sacrifice 96 - Silence 97 - Max Mana 98 - Bard Haste 99 - Root 100 - HP Duration Only 101 - Complete Heal (Residual Buff) 102 - Pet No Fear 103 - Summon Pet 104 - Translocate 105 - Anti-Gate (NPC Only) 106 - BeastLordPet 107 - Alter Pet Level 108 - Familiar 109 - CreateItemInBag 110 - Removed (Archery RNG Acc%) 111 - Resistances 112 - Adjust Casting Skill (Fizzles) 113 - SummonMount 114 - Modify Hate 115 - Cornucopia 116 - Curse 117 - HitMagic 118 - Amplification 119 - BardHaste2 120 - HealMod 121 - IronMaiden 122 - ReduceSkill 123 - Immunity 124 - Fc_Damage_% 125 - Fc_HealMod 126 - Fc_ResistMod 127 - Fc_CastTimeMod1 128 - Fc_DurationMod 129 - Fc_RangeMod 130 - Fc_HateMod 131 - Fc_ReagentMod 132 - Fc_ManaMod 133 - Fc_StunTimeMod 134 - Ff_LevelMax 135 - Ff_ResistType 136 - Ff_TargetType 137 - Ff_WhichSPA 138 - Ff_Beneficial 139 - Ff_WhichSpellID 140 - Ff_DurationMin 141 - Ff_InstantOnly 142 - Ff_LevelMin 143 - Ff_CastTimeMin 144 - Ff_CastTimeMax 145 - Portal NPC Warder Banish 146 - Portal Locations 147 - Percent Heal 148 - StackingBlocker 149 - StripVirtualSlot 150 - Divine Intervention/Death Pact 151 - PocketPet 152 - PetSwarm 153 - Damage Balance 154 - Cancel Negative 155 - PoP Resurrect 156 - Mirror Form 157 - Feedback 158 - Reflect 159 - Mod all Stats 160 - Inebriation | Sobriety 161 - Spell Guard 162 - Melee Guard 163 - Absorb Hit 164 - Object - Sense Trap 165 - Object - Disarm Trap 166 - Object - Picklock 167 - Fc_Pet 168 - Defensive 169 - Critical Melee (PC Only) 170 - Spell Crit Damage 171 - Crippling Blow 172 - Evasion 173 - Riposte 174 - Dodge 175 - Parry 176 - Dual Wield 177 - Double Attack 178 - Melee Resource Drain 179 - Puretone 180 - Sanctification 181 - Fearless 182 - Hundred Hands 183 - UNUSED - Skill Increase Chance 184 - Accuracy % 185 - Skill Damage Mod 1 186 - Min Damage Done Mod 187 - Mana Balance 188 - Block 189 - Endurance 190 - Max Endurance 191 - Amnesia 192 - Hate (Duration Only) 193 - Skill Attack 194 - Fade 195 - Stun Resist (Melee+Spell) 196 - Deprecated (strikethrough) 197 - Skill Damage Taken Incoming 198 - Instant Endurance 199 - Taunt 200 - Weapon Proc Chance 201 - Ranged Proc 202 - IllusionOther 203 - MassBuff 204 - Group Fear Immunity 205 - AE Rampage Instant (PC Only) 206 - AE Taunt 207 - Flesh to Bone 208 - Purge Poison 209 - Cancel Beneficial 210 - Shield Caster 211 - AE Melee (PC Only) 212 - Fc_FrenziedDevastation 213 - Pet % HP 214 - HP Max Percent 215 - Pet Avoidance % 216 - Melee Accuracy Amt 217 - Headshot 218 - Pet Crit Melee Chance (Owner) 219 - Slay Undead 220 - Skill Min_Damage Amt 1 221 - ReduceWeight 222 - BlockBehind 223 - Double Riposte 224 - AddRiposte 225 - Give Double Attack 226 - 2hbash 227 - ReduceSkillTimer 228 - ReduceFallDmg 229 - CastThroughStun 230 - Increase Shield Distance 231 - StunBashChance 232 - Divine Save 233 - Metabolism 234 - Poison Mastery 235 - FocusChannelling 236 - Free Pet 237 - PetAffinity 238 - Permanent Illusion 239 - Stonewall 240 - String Unbreakable 241 - Improve Reclaim Energy 242 - IncreaseChanceMemwipe 243 - NoBreakCharmChance 244 - RootBreakChance 245 - Trap Circumvention 246 - Lung Capacity 247 - IncreaseSkillCap 248 - ExtraSpecialization 249 - Offhand Weapon MinDamage Bonus 250 - Increase ContactAbility Chance 251 - EndlessQuiver 252 - Backstab FullDamage From Front 253 - Chaotic Stab 254 - NoSpell 255 - Shielding Duration Mod 256 - Shroud of Stealth 257 - DEPRECATED - GivePetHold 258 - Triple Backstab 259 - ACLimitMod 260 - AddInstrumentMod 261 - SongModCap 262 - StatsCap 263 - TradeskillMasteries 264 - ReduceAATimer 265 - NoFizzle 266 - AddExtraAttack% (2h) 267 - AddPetCommands 268 - AlcFailRate 269 - Bandage Max HP Limit % 270 - Bard Song Beneficial Radius % 271 - BaseRunMod 272 - Bard Song Level 273 - Critical DoT 274 - CriticalHeal 275 - Critical Mend % 276 - DualWieldAmt 277 - ExtraDIChance 278 - FinishingBlow 279 - FlurryChance (PC Only) 280 - Pet Flurry Chance (Owner) 281 - GivePetFeign 282 - Increase Bandage Heal % 283 - SpecialAttackChain 284 - LoHSetHeal 285 - Allow Hide/Evade While Moving 286 - Fc_Damage_Amt 287 - Fc_DurationMod (static) 288 - Add Proc Hit (AA) 289 - Doom Duration 290 - Increase Movement Cap 291 - Purify 292 - Strikethrough 293 - StunResist2 (Melee) 294 - Spell Crit Chance 295 - ReduceTimerSpecial 296 - Fc_Spell_Damage_%_Incoming 297 - Fc_Spell_Damage_Amt_Incoming 298 - Height (Small) 299 - Wake the Dead 1 (Corpse Class) 300 - Doppelganger 301 - Increase Range Damage 302 - Fc_Damage_%_Crit 303 - Fc_Damage_Amt_Crit 304 - Secondary Riposte Mod 305 - Mitigate Damage Shield Offhand 306 - Wake the Dead 2 (File Class) 307 - Appraisal 308 - Zone Suspend Minion 309 - Teleport Caster's Bindpoint 310 - Fc_ReuseTimer 311 - Ff_CombatSkill 312 - Observer 313 - Forage Master 314 - Improved Invis 315 - Improved Invis Undead 316 - Improved Invis Animals 317 - Worn Regen Cap 318 - Worn Mana Regen Cap 319 - Critical HP Regen 320 - Shield Block Chance 321 - Reduce Target Hate 322 - Gate Starting City 323 - Defensive Proc 324 - HP for Mana 325 - No Break AE Sneak 326 - Spell Slots 327 - Buff Slots 328 - Negative HP Limit 329 - Mana Absorb % Damage 330 - Critical Melee Damage Mod 331 - Alchemy Item Recovery 332 - Summon to Corpse 333 - Doom Rune Consumed 334 - HP No Move 335 - Fc_Immunity_Focus 336 - Illusionary Target 337 - Increase Exp % 338 - Expedient Recovery 339 - Fc_CastProc 340 - Chance Spell 341 - Worn Attack Cap 342 - No Panic 343 - Spell Interrupt 344 - Item Channeling 345 - Assassinate Max Level / Chance 346 - Headshot Max 347 - Double Ranged Attack 348 - Ff_Mana_Min 349 - Increase Damage With Shield 350 - Manaburn 351 - Spawn Interactive Object 352 - Increase Trap Count 353 - Increase SOI Count 354 - Deactivate All Traps 355 - Learn Trap 356 - Change Trigger Type 357 - Fc_Mute 358 - Instant Mana 359 - Passive Sense Trap 360 - Proc On Kill Shot 361 - Proc On Death 362 - Potion Belt 363 - Bandolier 364 - AddTripleAttackChance 365 - Proc On Spell Kill Shot 366 - Group Shielding 367 - Modify Body Type 368 - Modify Faction 369 - Corruption 370 - ResistCorruption 371 - Slow 372 - Grant Foraging 373 - Doom Always 374 - Trigger Spell 375 - Critical DoT Damage Mod % 376 - Fling 377 - Removed (Doom Entity) 378 - Resist Other SPA 379 - Directional Shadowstep 380 - Knockback Explosive (PC Only) 381 - Fling Target to Caster 382 - Suppression 383 - Fc_CastProcNormalized 384 - Fling Caster to Target 385 - Ff_WhichSpellGroup 386 - Doom Dispeller 387 - Doom Dispelled 388 - Summon All Corpses 389 - Fc_Timer_Refresh 390 - Fc_Timer_Lockout 391 - Ff_Mana_Max 392 - Fc_Heal_Amt 393 - Fc_Heal_%_Incoming 394 - Fc_Heal_Amt_Incoming 395 - Fc_Heal_%_Crit 396 - Fc_Heal_Amt_Crit 397 - Pet Add AC 398 - Fc_Swarm_Pet_Duration 399 - Fc_Twincast 400 - Healburn 401 - Mana Ignite 402 - Endurance Ignite 403 - Ff_SpellClass 404 - Ff_SpellSubclass 405 - Staff Block Chance 406 - Doom Limit Use 407 - Doom Focus Used 408 - Limit HP 409 - Limit Mana 410 - Limit Endurance 411 - Ff_ClassPlayer 412 - Ff_Race 413 - Fc_BaseEffects 414 - Ff_CastingSkill 415 - Ff_ItemClass 416 - AC_2 417 - Mana_2 418 - Skill Min_Damage Amt 2 419 - Contact Ability 2 (Melee Proc) 420 - Fc_Limit_Use 421 - Fc_Limit_Use_Amt 422 - Ff_Limit_Use_Min 423 - Ff_Limit_Use_Type 424 - Gravitate 425 - Fly 426 - AddExtTargetSlots 427 - Skill Proc (Attempt) 428 - Proc Skill Modifier 429 - Skill Proc (Success) 430 - PostEffect 431 - PostEffectData 432 - ExpandMaxActiveTrophyBenefits 433 - Normalized Skill Min_Dmg Amt 1 434 - Normalized Skill Min_Dmg Amt 2 435 - Fragile Defense 436 - Toggle Freeze Buff Timers 437 - Teleport to Anchor 438 - Translocate to Anchor 439 - Assassinate Chance / DMG 440 - FinishingBlowMax 441 - Distance Removal 442 - Doom Req Bearer 443 - Doom Req Caster 444 - Improved Taunt 445 - Add Merc Slot 446 - A_Stacker 447 - B_Stacker 448 - C_Stacker 449 - D_Stacker 450 - DoT Guard 451 - Melee Threshold Guard 452 - Spell Threshold Guard 453 - Doom Melee Threshold 454 - Doom Spell Threshold 455 - Add Hate % (On Land) 456 - Add Hate Over Time % 457 - Resource Tap 458 - Faction Mod % 459 - Skill Damage Mod 2 460 - Ff_Override_NotFocusable 461 - Fc_Damage_%_Crit 2 462 - Fc_Damage_Amt 2 463 - Shield Target 464 - PC Pet Rampage 465 - PC Pet AE Rampage 466 - PC Pet Flurry Chance 467 - DS Mitigation Amount 468 - DS Mitigation Percentage 469 - Chance Best in Spell Group 470 - Trigger Best in Spell Group 471 - Double Melee Round (PC Only) 472 - Buy AA Rank 473 - Double Backstab From Front 474 - Pet Crit Melee Damage% (Owner) 475 - Trigger Spell Non-Item 476 - Weapon Stance 477 - Hatelist To Top Index 478 - Hatelist To Tail Index 479 - Ff_Value_Min 480 - Ff_Value_Max 481 - Fc_Cast_Spell_On_Land 482 - Skill Base Damage Mod 483 - Fc_Spell_Damage_%_IncomingPC 484 - Fc_Spell_Damage_Amt_IncomingPC 485 - Ff_CasterClass 486 - Ff_Same_Caster 487 - Extend Tradeskill Cap 488 - Defender Melee Force % (PC) 489 - Worn Endurance Regen Cap 490 - Ff_ReuseTimeMin 491 - Ff_ReuseTimeMax 492 - Ff_Endurance_Min 493 - Ff_Endurance_Max 494 - Pet Add Atk 495 - Ff_DurationMax 496 - Critical Melee Damage Mod Max 497 - Ff_FocusCastProcNoBypass 498 - AddExtraAttack% (1h-Primary) 499 - AddExtraAttack% (1h-Secondary) 500 - Fc_CastTimeMod2 501 - Fc_CastTimeAmt 502 - Fearstun 503 - Melee Damage Position Mod 504 - Melee Damage Position Amt 505 - Damage Taken Position Mod 506 - Damage Taken Position Amt 507 - Fc_Amplify_Mod 508 - Fc_Amplify_Amt 509 - Health Transfer 510 - Fc_ResistIncoming 511 - Ff_FocusTimerMin 512 - Proc Timer Modifier 513 - Mana Max Percent 514 - Endurance Max Percent 515 - AC Avoidance Max Percent 516 - AC Mitigation Max Percent 517 - Attack Offense Max Percent 518 - Attack Accuracy Max Percent 519 - Luck Amount 520 - Luck Percent","title":"SPA List"},{"location":"reference/general/spa-list/#spa-list","text":"Spell Affects (yea they have bad engrish) Spell Effects Source Info (Updated 2018-12) AFFECTNUMBER - AFFECTNAME 0 - HP 1 - AC 2 - Attack Power 3 - Movement Rate 4 - STR 5 - DEX 6 - AGI 7 - STA 8 - INT 9 - WIS 10 - CHA 11 - Melee Speed 12 - Invisibility 13 - See Invis 14 - Enduring Breath 15 - Mana 16 - NPC-Frenzy 17 - NPC-Awareness 18 - NPC Aggro 19 - NPC Faction 20 - Blindness 21 - Stun 22 - Charm 23 - Fear 24 - Fatigue 25 - Bind Affinity 26 - Gate 27 - Dispel Magic 28 - Invis Vs Undead 29 - Invis Vs Animals 30 - NPC-ReactRange 31 - Enthrall (Mez) 32 - Create Item 33 - Spawn NPC 34 - Confuse 35 - Disease 36 - Poison 37 - DetectHostile 38 - DetectMagic 39 - NoTwincast 40 - Invulnerability 41 - Banish 42 - Shadow Step 43 - Berserk 44 - Lycanthropy 45 - Vampirism 46 - Resist Fire 47 - Resist Cold 48 - Resist Poison 49 - Resist Disease 50 - Resist Magic 51 - Detect (Switch) Traps 52 - Detect Undead 53 - Detect Summoned 54 - Detect Animals 55 - Stoneskin 56 - True North 57 - Levitation 58 - Change Form 59 - Damage Attackers (DS) 60 - TransferItem 61 - Identify 62 - Item ID 63 - NPC-WipeHatelist 64 - Spin Stun 65 - Infravision 66 - Ultravision 67 - NPC-POV 68 - Reclaim Energy 69 - Max HP 70 - CorpseBomb 71 - Create Undead 72 - PreserveCorpse 73 - TargetsView 74 - FeignDeath 75 - Ventriloquism 76 - Sentinel 77 - LocateCorpse 78 - SpellShield 79 - InstantHP 80 - Enchant:Light 81 - Resurrect 82 - Summon Target 83 - Portal 84 - Hp-NPC-ONLY 85 - Contact Ability (Melee Proc) 86 - NPC-Help-Radius 87 - Telescope 88 - Combat Portal 89 - Height 90 - IgnorePet 91 - SummonCorpse 92 - Hate (On Spell Land) 93 - WeatherControl 94 - Fragile 95 - Sacrifice 96 - Silence 97 - Max Mana 98 - Bard Haste 99 - Root 100 - HP Duration Only 101 - Complete Heal (Residual Buff) 102 - Pet No Fear 103 - Summon Pet 104 - Translocate 105 - Anti-Gate (NPC Only) 106 - BeastLordPet 107 - Alter Pet Level 108 - Familiar 109 - CreateItemInBag 110 - Removed (Archery RNG Acc%) 111 - Resistances 112 - Adjust Casting Skill (Fizzles) 113 - SummonMount 114 - Modify Hate 115 - Cornucopia 116 - Curse 117 - HitMagic 118 - Amplification 119 - BardHaste2 120 - HealMod 121 - IronMaiden 122 - ReduceSkill 123 - Immunity 124 - Fc_Damage_% 125 - Fc_HealMod 126 - Fc_ResistMod 127 - Fc_CastTimeMod1 128 - Fc_DurationMod 129 - Fc_RangeMod 130 - Fc_HateMod 131 - Fc_ReagentMod 132 - Fc_ManaMod 133 - Fc_StunTimeMod 134 - Ff_LevelMax 135 - Ff_ResistType 136 - Ff_TargetType 137 - Ff_WhichSPA 138 - Ff_Beneficial 139 - Ff_WhichSpellID 140 - Ff_DurationMin 141 - Ff_InstantOnly 142 - Ff_LevelMin 143 - Ff_CastTimeMin 144 - Ff_CastTimeMax 145 - Portal NPC Warder Banish 146 - Portal Locations 147 - Percent Heal 148 - StackingBlocker 149 - StripVirtualSlot 150 - Divine Intervention/Death Pact 151 - PocketPet 152 - PetSwarm 153 - Damage Balance 154 - Cancel Negative 155 - PoP Resurrect 156 - Mirror Form 157 - Feedback 158 - Reflect 159 - Mod all Stats 160 - Inebriation | Sobriety 161 - Spell Guard 162 - Melee Guard 163 - Absorb Hit 164 - Object - Sense Trap 165 - Object - Disarm Trap 166 - Object - Picklock 167 - Fc_Pet 168 - Defensive 169 - Critical Melee (PC Only) 170 - Spell Crit Damage 171 - Crippling Blow 172 - Evasion 173 - Riposte 174 - Dodge 175 - Parry 176 - Dual Wield 177 - Double Attack 178 - Melee Resource Drain 179 - Puretone 180 - Sanctification 181 - Fearless 182 - Hundred Hands 183 - UNUSED - Skill Increase Chance 184 - Accuracy % 185 - Skill Damage Mod 1 186 - Min Damage Done Mod 187 - Mana Balance 188 - Block 189 - Endurance 190 - Max Endurance 191 - Amnesia 192 - Hate (Duration Only) 193 - Skill Attack 194 - Fade 195 - Stun Resist (Melee+Spell) 196 - Deprecated (strikethrough) 197 - Skill Damage Taken Incoming 198 - Instant Endurance 199 - Taunt 200 - Weapon Proc Chance 201 - Ranged Proc 202 - IllusionOther 203 - MassBuff 204 - Group Fear Immunity 205 - AE Rampage Instant (PC Only) 206 - AE Taunt 207 - Flesh to Bone 208 - Purge Poison 209 - Cancel Beneficial 210 - Shield Caster 211 - AE Melee (PC Only) 212 - Fc_FrenziedDevastation 213 - Pet % HP 214 - HP Max Percent 215 - Pet Avoidance % 216 - Melee Accuracy Amt 217 - Headshot 218 - Pet Crit Melee Chance (Owner) 219 - Slay Undead 220 - Skill Min_Damage Amt 1 221 - ReduceWeight 222 - BlockBehind 223 - Double Riposte 224 - AddRiposte 225 - Give Double Attack 226 - 2hbash 227 - ReduceSkillTimer 228 - ReduceFallDmg 229 - CastThroughStun 230 - Increase Shield Distance 231 - StunBashChance 232 - Divine Save 233 - Metabolism 234 - Poison Mastery 235 - FocusChannelling 236 - Free Pet 237 - PetAffinity 238 - Permanent Illusion 239 - Stonewall 240 - String Unbreakable 241 - Improve Reclaim Energy 242 - IncreaseChanceMemwipe 243 - NoBreakCharmChance 244 - RootBreakChance 245 - Trap Circumvention 246 - Lung Capacity 247 - IncreaseSkillCap 248 - ExtraSpecialization 249 - Offhand Weapon MinDamage Bonus 250 - Increase ContactAbility Chance 251 - EndlessQuiver 252 - Backstab FullDamage From Front 253 - Chaotic Stab 254 - NoSpell 255 - Shielding Duration Mod 256 - Shroud of Stealth 257 - DEPRECATED - GivePetHold 258 - Triple Backstab 259 - ACLimitMod 260 - AddInstrumentMod 261 - SongModCap 262 - StatsCap 263 - TradeskillMasteries 264 - ReduceAATimer 265 - NoFizzle 266 - AddExtraAttack% (2h) 267 - AddPetCommands 268 - AlcFailRate 269 - Bandage Max HP Limit % 270 - Bard Song Beneficial Radius % 271 - BaseRunMod 272 - Bard Song Level 273 - Critical DoT 274 - CriticalHeal 275 - Critical Mend % 276 - DualWieldAmt 277 - ExtraDIChance 278 - FinishingBlow 279 - FlurryChance (PC Only) 280 - Pet Flurry Chance (Owner) 281 - GivePetFeign 282 - Increase Bandage Heal % 283 - SpecialAttackChain 284 - LoHSetHeal 285 - Allow Hide/Evade While Moving 286 - Fc_Damage_Amt 287 - Fc_DurationMod (static) 288 - Add Proc Hit (AA) 289 - Doom Duration 290 - Increase Movement Cap 291 - Purify 292 - Strikethrough 293 - StunResist2 (Melee) 294 - Spell Crit Chance 295 - ReduceTimerSpecial 296 - Fc_Spell_Damage_%_Incoming 297 - Fc_Spell_Damage_Amt_Incoming 298 - Height (Small) 299 - Wake the Dead 1 (Corpse Class) 300 - Doppelganger 301 - Increase Range Damage 302 - Fc_Damage_%_Crit 303 - Fc_Damage_Amt_Crit 304 - Secondary Riposte Mod 305 - Mitigate Damage Shield Offhand 306 - Wake the Dead 2 (File Class) 307 - Appraisal 308 - Zone Suspend Minion 309 - Teleport Caster's Bindpoint 310 - Fc_ReuseTimer 311 - Ff_CombatSkill 312 - Observer 313 - Forage Master 314 - Improved Invis 315 - Improved Invis Undead 316 - Improved Invis Animals 317 - Worn Regen Cap 318 - Worn Mana Regen Cap 319 - Critical HP Regen 320 - Shield Block Chance 321 - Reduce Target Hate 322 - Gate Starting City 323 - Defensive Proc 324 - HP for Mana 325 - No Break AE Sneak 326 - Spell Slots 327 - Buff Slots 328 - Negative HP Limit 329 - Mana Absorb % Damage 330 - Critical Melee Damage Mod 331 - Alchemy Item Recovery 332 - Summon to Corpse 333 - Doom Rune Consumed 334 - HP No Move 335 - Fc_Immunity_Focus 336 - Illusionary Target 337 - Increase Exp % 338 - Expedient Recovery 339 - Fc_CastProc 340 - Chance Spell 341 - Worn Attack Cap 342 - No Panic 343 - Spell Interrupt 344 - Item Channeling 345 - Assassinate Max Level / Chance 346 - Headshot Max 347 - Double Ranged Attack 348 - Ff_Mana_Min 349 - Increase Damage With Shield 350 - Manaburn 351 - Spawn Interactive Object 352 - Increase Trap Count 353 - Increase SOI Count 354 - Deactivate All Traps 355 - Learn Trap 356 - Change Trigger Type 357 - Fc_Mute 358 - Instant Mana 359 - Passive Sense Trap 360 - Proc On Kill Shot 361 - Proc On Death 362 - Potion Belt 363 - Bandolier 364 - AddTripleAttackChance 365 - Proc On Spell Kill Shot 366 - Group Shielding 367 - Modify Body Type 368 - Modify Faction 369 - Corruption 370 - ResistCorruption 371 - Slow 372 - Grant Foraging 373 - Doom Always 374 - Trigger Spell 375 - Critical DoT Damage Mod % 376 - Fling 377 - Removed (Doom Entity) 378 - Resist Other SPA 379 - Directional Shadowstep 380 - Knockback Explosive (PC Only) 381 - Fling Target to Caster 382 - Suppression 383 - Fc_CastProcNormalized 384 - Fling Caster to Target 385 - Ff_WhichSpellGroup 386 - Doom Dispeller 387 - Doom Dispelled 388 - Summon All Corpses 389 - Fc_Timer_Refresh 390 - Fc_Timer_Lockout 391 - Ff_Mana_Max 392 - Fc_Heal_Amt 393 - Fc_Heal_%_Incoming 394 - Fc_Heal_Amt_Incoming 395 - Fc_Heal_%_Crit 396 - Fc_Heal_Amt_Crit 397 - Pet Add AC 398 - Fc_Swarm_Pet_Duration 399 - Fc_Twincast 400 - Healburn 401 - Mana Ignite 402 - Endurance Ignite 403 - Ff_SpellClass 404 - Ff_SpellSubclass 405 - Staff Block Chance 406 - Doom Limit Use 407 - Doom Focus Used 408 - Limit HP 409 - Limit Mana 410 - Limit Endurance 411 - Ff_ClassPlayer 412 - Ff_Race 413 - Fc_BaseEffects 414 - Ff_CastingSkill 415 - Ff_ItemClass 416 - AC_2 417 - Mana_2 418 - Skill Min_Damage Amt 2 419 - Contact Ability 2 (Melee Proc) 420 - Fc_Limit_Use 421 - Fc_Limit_Use_Amt 422 - Ff_Limit_Use_Min 423 - Ff_Limit_Use_Type 424 - Gravitate 425 - Fly 426 - AddExtTargetSlots 427 - Skill Proc (Attempt) 428 - Proc Skill Modifier 429 - Skill Proc (Success) 430 - PostEffect 431 - PostEffectData 432 - ExpandMaxActiveTrophyBenefits 433 - Normalized Skill Min_Dmg Amt 1 434 - Normalized Skill Min_Dmg Amt 2 435 - Fragile Defense 436 - Toggle Freeze Buff Timers 437 - Teleport to Anchor 438 - Translocate to Anchor 439 - Assassinate Chance / DMG 440 - FinishingBlowMax 441 - Distance Removal 442 - Doom Req Bearer 443 - Doom Req Caster 444 - Improved Taunt 445 - Add Merc Slot 446 - A_Stacker 447 - B_Stacker 448 - C_Stacker 449 - D_Stacker 450 - DoT Guard 451 - Melee Threshold Guard 452 - Spell Threshold Guard 453 - Doom Melee Threshold 454 - Doom Spell Threshold 455 - Add Hate % (On Land) 456 - Add Hate Over Time % 457 - Resource Tap 458 - Faction Mod % 459 - Skill Damage Mod 2 460 - Ff_Override_NotFocusable 461 - Fc_Damage_%_Crit 2 462 - Fc_Damage_Amt 2 463 - Shield Target 464 - PC Pet Rampage 465 - PC Pet AE Rampage 466 - PC Pet Flurry Chance 467 - DS Mitigation Amount 468 - DS Mitigation Percentage 469 - Chance Best in Spell Group 470 - Trigger Best in Spell Group 471 - Double Melee Round (PC Only) 472 - Buy AA Rank 473 - Double Backstab From Front 474 - Pet Crit Melee Damage% (Owner) 475 - Trigger Spell Non-Item 476 - Weapon Stance 477 - Hatelist To Top Index 478 - Hatelist To Tail Index 479 - Ff_Value_Min 480 - Ff_Value_Max 481 - Fc_Cast_Spell_On_Land 482 - Skill Base Damage Mod 483 - Fc_Spell_Damage_%_IncomingPC 484 - Fc_Spell_Damage_Amt_IncomingPC 485 - Ff_CasterClass 486 - Ff_Same_Caster 487 - Extend Tradeskill Cap 488 - Defender Melee Force % (PC) 489 - Worn Endurance Regen Cap 490 - Ff_ReuseTimeMin 491 - Ff_ReuseTimeMax 492 - Ff_Endurance_Min 493 - Ff_Endurance_Max 494 - Pet Add Atk 495 - Ff_DurationMax 496 - Critical Melee Damage Mod Max 497 - Ff_FocusCastProcNoBypass 498 - AddExtraAttack% (1h-Primary) 499 - AddExtraAttack% (1h-Secondary) 500 - Fc_CastTimeMod2 501 - Fc_CastTimeAmt 502 - Fearstun 503 - Melee Damage Position Mod 504 - Melee Damage Position Amt 505 - Damage Taken Position Mod 506 - Damage Taken Position Amt 507 - Fc_Amplify_Mod 508 - Fc_Amplify_Amt 509 - Health Transfer 510 - Fc_ResistIncoming 511 - Ff_FocusTimerMin 512 - Proc Timer Modifier 513 - Mana Max Percent 514 - Endurance Max Percent 515 - AC Avoidance Max Percent 516 - AC Mitigation Max Percent 517 - Attack Offense Max Percent 518 - Attack Accuracy Max Percent 519 - Luck Amount 520 - Luck Percent","title":"SPA List"},{"location":"reference/general/spawn-search/","text":"Spawn Search \u00b6 All Top-Level Objects and Data Types that support searching for spawns, can take the following options: Parameter Description alert # Any spawns on the alert list # aura Auras body bodytype Spawns with the specified bodytype chest Chests class classname Spawns with this class name (long name) corpse Corpses dps Returns Wizards, Rangers and Rogues fellowship includes toons in your fellowship that is in zone gm GMs and Guides group Group members guildname name Members of name guild guildname Members of your own guild healer Returns Druids and Clerics id # Spawn with ID # invis Invisible spawns knight Returns Paladins and Shadow Knights lfg All spawns Looking For Group light lightsource Spawns with the specified lightsource loc #x #y [#z] Spawn at the specified loc, Z is optional, if Z is not supplied it will use your current Z. (note: you must use radius with this keyword) los Spawns in Line of Sight (from your point of view) mercenary Spawn which is a mercenary merchant NPC Merchants name Spawn with this name named \"Named\" spawns (spawns whose names start with a #, or whose name does not start with \"a\" or \"an\") nearalert # Spawns close to alert list # next Next spawn matching the search criteria noalert # Spawns not on the alert list # noguild Spawns with no guild tag notid # Spawns not matching ID # npc Non-Player Characters npccorpse Non-Player Characters Corpses npcpet Pets Owned by Non-Player Characters pc Player Characters (default) pccorpse Player corpses pcpet Pets Owned by Player Characters pet Pets prev Previous spawn matching the search criteria race racename Spawns with the race racename radius # Within the radius # range low# high# Within the level range #(low) and #(high) slower Returns Shamans, Enchanters and Beastlords tank Returns Paladins, Shadow Knights and Warriors targetable Spawns that can be targeted timer Timer spawns trap Traps tribute Tribute Masters trigger Triggers untargettable Untargettable spawns zradius # Spawns within the specified Z-Axis radius Anything Else Anything not matched above is considered a name Complete list of searchables as of 30 march 2020 \"pc\" \"npc\" \"mount\" \"pet\" \"pcpet\" \"npcpet\" \"xtarhater\" \"nopet\" \"corpse\" \"npccorpse\" \"pccorpse\" \"trigger\" \"untargetable\" \"trap\" \"chest\" \"timer\" \"aura\" \"object\" \"banner\" \"campfire\" \"mercenary\" \"flyer\" \"any\" \"next\" \"prev\" \"lfg\" \"gm\" \"group\" \"fellowship\" \"nogroup\" \"raid\" \"noguild\" \"trader\" \"named\" \"merchant\" \"banker\" \"tribute\" \"knight\" \"tank\" \"healer\" \"dps\" \"slower\" \"los\" \"targetable\" `\"range\"`` ``MinLevel`` ``MaxLevel``````` \"loc\"`````KnownLocation xLoc yLoc zLoc````` `````\"id\" bSpawnID SpawnID````` `\"radius\"` `````\"body\" ````BodyType``````````` \"class\" \"race\" ` [[ \"light\" Light, Lights[Light] ]] \"guild\" \"guildname\" \"alert\" \"noalert\" \"notnearalert\" \"nearalert\" \"zradius\" \"notid\" \"nopcnear\" \"playerstate\"`","title":"Spawn Search"},{"location":"reference/general/spawn-search/#spawn-search","text":"All Top-Level Objects and Data Types that support searching for spawns, can take the following options: Parameter Description alert # Any spawns on the alert list # aura Auras body bodytype Spawns with the specified bodytype chest Chests class classname Spawns with this class name (long name) corpse Corpses dps Returns Wizards, Rangers and Rogues fellowship includes toons in your fellowship that is in zone gm GMs and Guides group Group members guildname name Members of name guild guildname Members of your own guild healer Returns Druids and Clerics id # Spawn with ID # invis Invisible spawns knight Returns Paladins and Shadow Knights lfg All spawns Looking For Group light lightsource Spawns with the specified lightsource loc #x #y [#z] Spawn at the specified loc, Z is optional, if Z is not supplied it will use your current Z. (note: you must use radius with this keyword) los Spawns in Line of Sight (from your point of view) mercenary Spawn which is a mercenary merchant NPC Merchants name Spawn with this name named \"Named\" spawns (spawns whose names start with a #, or whose name does not start with \"a\" or \"an\") nearalert # Spawns close to alert list # next Next spawn matching the search criteria noalert # Spawns not on the alert list # noguild Spawns with no guild tag notid # Spawns not matching ID # npc Non-Player Characters npccorpse Non-Player Characters Corpses npcpet Pets Owned by Non-Player Characters pc Player Characters (default) pccorpse Player corpses pcpet Pets Owned by Player Characters pet Pets prev Previous spawn matching the search criteria race racename Spawns with the race racename radius # Within the radius # range low# high# Within the level range #(low) and #(high) slower Returns Shamans, Enchanters and Beastlords tank Returns Paladins, Shadow Knights and Warriors targetable Spawns that can be targeted timer Timer spawns trap Traps tribute Tribute Masters trigger Triggers untargettable Untargettable spawns zradius # Spawns within the specified Z-Axis radius Anything Else Anything not matched above is considered a name Complete list of searchables as of 30 march 2020 \"pc\" \"npc\" \"mount\" \"pet\" \"pcpet\" \"npcpet\" \"xtarhater\" \"nopet\" \"corpse\" \"npccorpse\" \"pccorpse\" \"trigger\" \"untargetable\" \"trap\" \"chest\" \"timer\" \"aura\" \"object\" \"banner\" \"campfire\" \"mercenary\" \"flyer\" \"any\" \"next\" \"prev\" \"lfg\" \"gm\" \"group\" \"fellowship\" \"nogroup\" \"raid\" \"noguild\" \"trader\" \"named\" \"merchant\" \"banker\" \"tribute\" \"knight\" \"tank\" \"healer\" \"dps\" \"slower\" \"los\" \"targetable\" `\"range\"`` ``MinLevel`` ``MaxLevel``````` \"loc\"`````KnownLocation xLoc yLoc zLoc````` `````\"id\" bSpawnID SpawnID````` `\"radius\"` `````\"body\" ````BodyType``````````` \"class\" \"race\" ` [[ \"light\" Light, Lights[Light] ]] \"guild\" \"guildname\" \"alert\" \"noalert\" \"notnearalert\" \"nearalert\" \"zradius\" \"notid\" \"nopcnear\" \"playerstate\"`","title":"Spawn Search"},{"location":"reference/macro-directives/","text":"Macro Directives \u00b6 Definition \u00b6 Macro directives are instructions to the macro engine that are not run during the macro. These directives will be run before the Main sub is run, and are traditionally located at the beginning of the macro file. Click on the list below to see more in-depth descriptions. bind chat define event include include_optional turbo warning example \u00b6 #warning #include Ninjadvloot.inc #include Spell_Routines.inc #include Defense.inc #turbo 80 #CHAT BC #CHAT RAIDSAY #CHAT GROUPSAY #Event AddCombatSong \"[MQ2] AddCombatSong #1#\" #Event Experience \"#*#You gain party experience#*#\" #Event AddAlertCommon \"[MQ2] AddAlertCommon #1#\" #Event WornOff \"#*#Your #1# spell has worn off of #2#.\"","title":"Macro Directives"},{"location":"reference/macro-directives/#macro-directives","text":"","title":"Macro Directives"},{"location":"reference/macro-directives/#definition","text":"Macro directives are instructions to the macro engine that are not run during the macro. These directives will be run before the Main sub is run, and are traditionally located at the beginning of the macro file. Click on the list below to see more in-depth descriptions. bind chat define event include include_optional turbo warning","title":"Definition"},{"location":"reference/macro-directives/#example","text":"#warning #include Ninjadvloot.inc #include Spell_Routines.inc #include Defense.inc #turbo 80 #CHAT BC #CHAT RAIDSAY #CHAT GROUPSAY #Event AddCombatSong \"[MQ2] AddCombatSong #1#\" #Event Experience \"#*#You gain party experience#*#\" #Event AddAlertCommon \"[MQ2] AddAlertCommon #1#\" #Event WornOff \"#*#Your #1# spell has worn off of #2#.\"","title":"example"},{"location":"reference/macro-directives/chat/","text":"#chat \u00b6 Description \u00b6 #chat channel This is a special type of #event which watches the specified channel. Content from the channel is accessed by creating a Sub Event_Chat. Use \u00b6 Valid channels are: tell, group, raid, ooc, say, shout, guild, auc, chat ( chat represents channels) Only one channel may be used on the #chat line, however multiple lines may be added. Example \u00b6 #chat guild #chat group Sub Event_Chat(Channel,Sender,Text) /echo ${Sender} told me ${Text} in ${Channel} /return This would trigger Event_Chat for both guild and group chat. /if (${Text.Find[send me to]} && ${Select[${Me.Class.ShortName},DRU,WIZ]}) { /call SendUs ${Text.Arg[4]} ${Sender} /return } This would watch for the key phrase \"send me to\" and then call the subroutine SendUs with the keyword following the phrase. Ex \"/g send me to pok\" would man the keyword was pok, and the subroutine would cast the appropriate spell to send you to Plane of Knowledge. /if (${Text.Find[open door]} || ${Text.Find[click door]}) { /doortarget /delay 1s /face door /if (${DoorTarget.Distance}>20) { /click left door } } In this instance the macro would watch for the key phrase \"open door\" or \"click door\" and, provide the door was with in twenty feet, click on the door. Also see here for information on #events and the #chat special event.","title":"#chat"},{"location":"reference/macro-directives/chat/#chat","text":"","title":"#chat"},{"location":"reference/macro-directives/chat/#description","text":"#chat channel This is a special type of #event which watches the specified channel. Content from the channel is accessed by creating a Sub Event_Chat.","title":"Description"},{"location":"reference/macro-directives/chat/#use","text":"Valid channels are: tell, group, raid, ooc, say, shout, guild, auc, chat ( chat represents channels) Only one channel may be used on the #chat line, however multiple lines may be added.","title":"Use"},{"location":"reference/macro-directives/chat/#example","text":"#chat guild #chat group Sub Event_Chat(Channel,Sender,Text) /echo ${Sender} told me ${Text} in ${Channel} /return This would trigger Event_Chat for both guild and group chat. /if (${Text.Find[send me to]} && ${Select[${Me.Class.ShortName},DRU,WIZ]}) { /call SendUs ${Text.Arg[4]} ${Sender} /return } This would watch for the key phrase \"send me to\" and then call the subroutine SendUs with the keyword following the phrase. Ex \"/g send me to pok\" would man the keyword was pok, and the subroutine would cast the appropriate spell to send you to Plane of Knowledge. /if (${Text.Find[open door]} || ${Text.Find[click door]}) { /doortarget /delay 1s /face door /if (${DoorTarget.Distance}>20) { /click left door } } In this instance the macro would watch for the key phrase \"open door\" or \"click door\" and, provide the door was with in twenty feet, click on the door. Also see here for information on #events and the #chat special event.","title":"Example"},{"location":"reference/macro-directives/define/","text":"#define \u00b6 Description \u00b6 #define can be used in place of some common variables, but variables are a lot more flexible (eg. they can be changed within the macro) and are preferred. One good use of #define would be to enable or disable debugging information within a macro. Use \u00b6 #define replaceme replacement Replaces all occurrences of replaceme with replacement throughout the macro. Example: #define Me charactername When the macro executes, all occurrences of \"Me\" will be replaced by \"charactername\". You can't use variables with define (since they execute before Sub Main). \u00b6 Example \u00b6 #define DEBUG /echo Sub Main /declare spell string local Complete Healing DEBUG I am casting ${spell} /call Cast \"${spell}\" gem1 /return In this situation, DEBUG would be replaced by /echo before the macro started, thereby giving you some information on which spell you were casting. Changing the #define line to this: #define DEBUG /squelch /echo Would effectively disable the debugging, since there would be no output to the screen. Also useful for color coding your echoes. For example: #define DEBUG \"/echo \\aw[\\arDEBUG\\aw]\\ax\" Sub Main /declare spell string local Complete Healing DEBUG I am casting ${spell} /call Cast \"${spell}\" gem1 /return Would allow your debug message to show up with a color coded prefix denoting that this message is from the debug side, and not a standard echo. In this case echoing out: [DEBUG] I am casting Yaulp Where the brackets are white, the word debug is red, and the text is your default color.","title":"#define"},{"location":"reference/macro-directives/define/#define","text":"","title":"#define"},{"location":"reference/macro-directives/define/#description","text":"#define can be used in place of some common variables, but variables are a lot more flexible (eg. they can be changed within the macro) and are preferred. One good use of #define would be to enable or disable debugging information within a macro.","title":"Description"},{"location":"reference/macro-directives/define/#use","text":"#define replaceme replacement Replaces all occurrences of replaceme with replacement throughout the macro. Example: #define Me charactername When the macro executes, all occurrences of \"Me\" will be replaced by \"charactername\". You can't use variables with","title":"Use"},{"location":"reference/macro-directives/define/#define-since-they-execute-before-sub-main","text":"","title":"define (since they execute before Sub Main)."},{"location":"reference/macro-directives/define/#example","text":"#define DEBUG /echo Sub Main /declare spell string local Complete Healing DEBUG I am casting ${spell} /call Cast \"${spell}\" gem1 /return In this situation, DEBUG would be replaced by /echo before the macro started, thereby giving you some information on which spell you were casting. Changing the #define line to this: #define DEBUG /squelch /echo Would effectively disable the debugging, since there would be no output to the screen. Also useful for color coding your echoes. For example: #define DEBUG \"/echo \\aw[\\arDEBUG\\aw]\\ax\" Sub Main /declare spell string local Complete Healing DEBUG I am casting ${spell} /call Cast \"${spell}\" gem1 /return Would allow your debug message to show up with a color coded prefix denoting that this message is from the debug side, and not a standard echo. In this case echoing out: [DEBUG] I am casting Yaulp Where the brackets are white, the word debug is red, and the text is your default color.","title":"Example"},{"location":"reference/macro-directives/event/","text":"#event \u00b6 Description \u00b6 event is used to specify strings to be triggered after you do /doevents Tutorial \u00b6 http://www.macroquest2.com/phpBB3/viewtopic.php?f=47&t=20199 Tutorial Macro \u00b6 #event stuff \"Ant Bat Cat Dog Emu\" #event stuff \"Ant #*# Cat\" #event stuff \"|${Me.Name}| is cool\" sub main /echo starting ${Macro.Name} :loop /delay 1s /doevents /goto :loop /return sub event_stuff(Line, word1, word2, word3, word4) /echo ${word1}, ${word2} /return Triggering your sub event_stuff \u00b6 This code will watch EQ chat for an exact message of \"Ant Bat Cat Dog Emu\" when /doevents is called it will trigger the sub event_stuff. /doevents will process all your events since the last time it was done If the event happened 5 times since the last /doevents then it will execute your sub 5 times It needs to be exact, nothing in front or behind of your string. If you received a tell it would not trigger as there are ' '. Multiple events calling same sub \u00b6 You can have multiple triggers if you use the same event_name with different strings it will trigger. Because everything in the example is #event stuff it will trigger the sub each time it sees it Using wildcard \u00b6 You can use wildcards via #*# #event stuff \"Ant #*# Cat\" This would trigger with /echo Ant Bird Cat /echo Ant Bird Cat Dog Would not trigger because there is no wildcard after Cat #event stuff \"Ant #*# Cat #*#\" This would trigger for /echo Ant Bird Cat and /echo Ant Bird Cat Dog Using parsed datatypes \u00b6 In the string for event_name you can use datatypes with |${DataType}| #event stuff \"|${Me.Name}| is cool\" Assuming your in game name is LamahHerder... This would call sub event_stuff if /echo LamahHerder is cool Passing a variable \u00b6 In the string for event_name you can use #int# to pass a variable to the event_name sub #event stuff \"Quick #1# this #2#\" sub event_stuff(Line, word1, word2, word3, word4) /echo ${word1}, ${word2} /return For /echo Quick burn this ${Target} This would have ${word1}=burn and ${word2}= Your Target as a local string variable in sub event_stuff Example Macro with Known Hit Messages \u00b6 http://www.macroquest2.com/phpBB3/viewtopic.php?f=47&t=20198&p=173345#p173345 | hitsmode Normal #Event hitSuccess \"You backstab #1# for #2# #*# of damage.\" #Event hitSuccess \"You bash #1# for #2# #*# of damage.\" #Event hitSuccess \"You bite #1# for #2# #*# of damage.\" #Event hitSuccess \"You claw #1# for #2# #*# of damage.\" #Event hitSuccess \"You crush #1# for #2# #*# of damage.\" #Event hitSuccess \"You frenzy on #1# for #2# #*# of damage.\" #Event hitSuccess \"You gore #1# for #2# #*# of damage.\" #Event hitSuccess \"You hit #1# for #2# #*# of damage.\" #Event hitSuccess \"You kick #1# for #2# #*# of damage.\" #Event hitSuccess \"You maul #1# for #2# #*# of damage.\" #Event hitSuccess \"You pierce #1# for #2# #*# of damage.\" #Event hitSuccess \"You punch #1# for #2# #*# of damage.\" #Event hitSuccess \"You rend #1# for #2# #*# of damage.\" #Event hitSuccess \"You shoot #1# for #2# #*# of damage.\" #Event hitSuccess \"You slash #1# for #2# #*# of damage.\" #Event hitSuccess \"You slice #1# for #2# #*# of damage.\" #Event hitSuccess \"You smash #1# for #2# #*# of damage.\" #Event hitSuccess \"You stab #1# for #2# #*# of damage.\" #Event hitSuccess \"You sting #1# for #2# #*# of damage.\" #Event hitSuccess \"You strike #1# for #2# #*# of damage.\" #Event hitSuccess \"You sweep #1# for #2# #*# of damage.\" | hitsmode Abbreviated #Event hitSuccess \"backstab #1# for #2# #*# of damage.\" #Event hitSuccess \"bash #1# for #2# #*# of damage.\" #Event hitSuccess \"bite #1# for #2# #*# of damage.\" #Event hitSuccess \"claw #1# for #2# #*# of damage.\" #Event hitSuccess \"crush #1# for #2# #*# of damage.\" #Event hitSuccess \"frenzy on #1# for #2# #*# of damage.\" #Event hitSuccess \"gore #1# for #2# #*# of damage.\" #Event hitSuccess \"hit #1# for #2# #*# of damage.\" #Event hitSuccess \"kick #1# for #2# #*# of damage.\" #Event hitSuccess \"maul #1# for #2# #*# of damage.\" #Event hitSuccess \"pierce #1# for #2# #*# of damage.\" #Event hitSuccess \"punch #1# for #2# #*# of damage.\" #Event hitSuccess \"rend #1# for #2# #*# of damage.\" #Event hitSuccess \"shoot #1# for #2# #*# of damage.\" #Event hitSuccess \"slash #1# for #2# #*# of damage.\" #Event hitSuccess \"slice #1# for #2# #*# of damage.\" #Event hitSuccess \"smash #1# for #2# #*# of damage.\" #Event hitSuccess \"stab #1# for #2# #*# of damage.\" #Event hitSuccess \"sting #1# for #2# #*# of damage.\" #Event hitSuccess \"strike #1# for #2# #*# of damage.\" #Event hitSuccess \"sweep #1# for #2# #*# of damage.\" | Spells and Procs #Event hitSuccess \"#1# has taken #2# damage from your #3#.\" #Event hitSuccess \"#1# was hit by non-melee for #2# #*# of damage.\" #Event hitSuccess \"|${Me}| hit #1# for #2# #*# of non-melee damage.\" | Pet hit's #Event hitSuccess \"|${Me.Pet.CleanName}| backstabs #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| bashes #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| bites #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| claws #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| crushes #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| frenzies on #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| gores #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| hit #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| hits #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| kicks #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| mauls #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| pierces #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| punches #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| rends #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| shoots #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| slashes #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| slices #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| smashes #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| stabs #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| stings #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| strikes #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| sweeps #1# for #2# #*# of damage.\" Sub Main /echo This Macro loops and triggers an event with an /echo when you hit something! :loop /doevents /delay 10 /goto :loop /return Sub Event_hitSuccess(Line, hitTarget, hitDMG, hitType) /echo [${hitTarget}] - [${hitDMG}] - [${hitType}] /doevents flush /delay 10 /return","title":"#event"},{"location":"reference/macro-directives/event/#event","text":"","title":"#event"},{"location":"reference/macro-directives/event/#description","text":"event is used to specify strings to be triggered after you do /doevents","title":"Description"},{"location":"reference/macro-directives/event/#tutorial","text":"http://www.macroquest2.com/phpBB3/viewtopic.php?f=47&t=20199","title":"Tutorial"},{"location":"reference/macro-directives/event/#tutorial-macro","text":"#event stuff \"Ant Bat Cat Dog Emu\" #event stuff \"Ant #*# Cat\" #event stuff \"|${Me.Name}| is cool\" sub main /echo starting ${Macro.Name} :loop /delay 1s /doevents /goto :loop /return sub event_stuff(Line, word1, word2, word3, word4) /echo ${word1}, ${word2} /return","title":"Tutorial Macro"},{"location":"reference/macro-directives/event/#triggering-your-sub-event_stuff","text":"This code will watch EQ chat for an exact message of \"Ant Bat Cat Dog Emu\" when /doevents is called it will trigger the sub event_stuff. /doevents will process all your events since the last time it was done If the event happened 5 times since the last /doevents then it will execute your sub 5 times It needs to be exact, nothing in front or behind of your string. If you received a tell it would not trigger as there are ' '.","title":"Triggering your sub event_stuff"},{"location":"reference/macro-directives/event/#multiple-events-calling-same-sub","text":"You can have multiple triggers if you use the same event_name with different strings it will trigger. Because everything in the example is #event stuff it will trigger the sub each time it sees it","title":"Multiple events calling same sub"},{"location":"reference/macro-directives/event/#using-wildcard","text":"You can use wildcards via #*# #event stuff \"Ant #*# Cat\" This would trigger with /echo Ant Bird Cat /echo Ant Bird Cat Dog Would not trigger because there is no wildcard after Cat #event stuff \"Ant #*# Cat #*#\" This would trigger for /echo Ant Bird Cat and /echo Ant Bird Cat Dog","title":"Using wildcard"},{"location":"reference/macro-directives/event/#using-parsed-datatypes","text":"In the string for event_name you can use datatypes with |${DataType}| #event stuff \"|${Me.Name}| is cool\" Assuming your in game name is LamahHerder... This would call sub event_stuff if /echo LamahHerder is cool","title":"Using parsed datatypes"},{"location":"reference/macro-directives/event/#passing-a-variable","text":"In the string for event_name you can use #int# to pass a variable to the event_name sub #event stuff \"Quick #1# this #2#\" sub event_stuff(Line, word1, word2, word3, word4) /echo ${word1}, ${word2} /return For /echo Quick burn this ${Target} This would have ${word1}=burn and ${word2}= Your Target as a local string variable in sub event_stuff","title":"Passing a variable"},{"location":"reference/macro-directives/event/#example-macro-with-known-hit-messages","text":"http://www.macroquest2.com/phpBB3/viewtopic.php?f=47&t=20198&p=173345#p173345 | hitsmode Normal #Event hitSuccess \"You backstab #1# for #2# #*# of damage.\" #Event hitSuccess \"You bash #1# for #2# #*# of damage.\" #Event hitSuccess \"You bite #1# for #2# #*# of damage.\" #Event hitSuccess \"You claw #1# for #2# #*# of damage.\" #Event hitSuccess \"You crush #1# for #2# #*# of damage.\" #Event hitSuccess \"You frenzy on #1# for #2# #*# of damage.\" #Event hitSuccess \"You gore #1# for #2# #*# of damage.\" #Event hitSuccess \"You hit #1# for #2# #*# of damage.\" #Event hitSuccess \"You kick #1# for #2# #*# of damage.\" #Event hitSuccess \"You maul #1# for #2# #*# of damage.\" #Event hitSuccess \"You pierce #1# for #2# #*# of damage.\" #Event hitSuccess \"You punch #1# for #2# #*# of damage.\" #Event hitSuccess \"You rend #1# for #2# #*# of damage.\" #Event hitSuccess \"You shoot #1# for #2# #*# of damage.\" #Event hitSuccess \"You slash #1# for #2# #*# of damage.\" #Event hitSuccess \"You slice #1# for #2# #*# of damage.\" #Event hitSuccess \"You smash #1# for #2# #*# of damage.\" #Event hitSuccess \"You stab #1# for #2# #*# of damage.\" #Event hitSuccess \"You sting #1# for #2# #*# of damage.\" #Event hitSuccess \"You strike #1# for #2# #*# of damage.\" #Event hitSuccess \"You sweep #1# for #2# #*# of damage.\" | hitsmode Abbreviated #Event hitSuccess \"backstab #1# for #2# #*# of damage.\" #Event hitSuccess \"bash #1# for #2# #*# of damage.\" #Event hitSuccess \"bite #1# for #2# #*# of damage.\" #Event hitSuccess \"claw #1# for #2# #*# of damage.\" #Event hitSuccess \"crush #1# for #2# #*# of damage.\" #Event hitSuccess \"frenzy on #1# for #2# #*# of damage.\" #Event hitSuccess \"gore #1# for #2# #*# of damage.\" #Event hitSuccess \"hit #1# for #2# #*# of damage.\" #Event hitSuccess \"kick #1# for #2# #*# of damage.\" #Event hitSuccess \"maul #1# for #2# #*# of damage.\" #Event hitSuccess \"pierce #1# for #2# #*# of damage.\" #Event hitSuccess \"punch #1# for #2# #*# of damage.\" #Event hitSuccess \"rend #1# for #2# #*# of damage.\" #Event hitSuccess \"shoot #1# for #2# #*# of damage.\" #Event hitSuccess \"slash #1# for #2# #*# of damage.\" #Event hitSuccess \"slice #1# for #2# #*# of damage.\" #Event hitSuccess \"smash #1# for #2# #*# of damage.\" #Event hitSuccess \"stab #1# for #2# #*# of damage.\" #Event hitSuccess \"sting #1# for #2# #*# of damage.\" #Event hitSuccess \"strike #1# for #2# #*# of damage.\" #Event hitSuccess \"sweep #1# for #2# #*# of damage.\" | Spells and Procs #Event hitSuccess \"#1# has taken #2# damage from your #3#.\" #Event hitSuccess \"#1# was hit by non-melee for #2# #*# of damage.\" #Event hitSuccess \"|${Me}| hit #1# for #2# #*# of non-melee damage.\" | Pet hit's #Event hitSuccess \"|${Me.Pet.CleanName}| backstabs #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| bashes #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| bites #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| claws #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| crushes #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| frenzies on #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| gores #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| hit #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| hits #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| kicks #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| mauls #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| pierces #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| punches #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| rends #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| shoots #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| slashes #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| slices #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| smashes #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| stabs #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| stings #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| strikes #1# for #2# #*# of damage.\" #Event hitSuccess \"|${Me.Pet.CleanName}| sweeps #1# for #2# #*# of damage.\" Sub Main /echo This Macro loops and triggers an event with an /echo when you hit something! :loop /doevents /delay 10 /goto :loop /return Sub Event_hitSuccess(Line, hitTarget, hitDMG, hitType) /echo [${hitTarget}] - [${hitDMG}] - [${hitType}] /doevents flush /delay 10 /return","title":"Example Macro with Known Hit Messages"},{"location":"reference/macro-directives/include/","text":"#include \u00b6 Description \u00b6 #include filename This allows you to include the contents of another file (called a \"snippet\") within your macro, as though the contents were part of the calling macro. You can access the Subroutines of the included file using /call, just as though they were a part of the original macro. Use \u00b6 Traditionally the filename extension .inc is used to indicate that it is an include file, but you may use any extension name that you like. When you are including a file, you must make sure you type the name correctly. Include files are case-insensitive (eg. spells.inc = spellS.inc). Example \u00b6 #include spell_routines.inc Sub Main /call Cast \"Complete Healing\" gem1 /return","title":"#include"},{"location":"reference/macro-directives/include/#include","text":"","title":"#include"},{"location":"reference/macro-directives/include/#description","text":"#include filename This allows you to include the contents of another file (called a \"snippet\") within your macro, as though the contents were part of the calling macro. You can access the Subroutines of the included file using /call, just as though they were a part of the original macro.","title":"Description"},{"location":"reference/macro-directives/include/#use","text":"Traditionally the filename extension .inc is used to indicate that it is an include file, but you may use any extension name that you like. When you are including a file, you must make sure you type the name correctly. Include files are case-insensitive (eg. spells.inc = spellS.inc).","title":"Use"},{"location":"reference/macro-directives/include/#example","text":"#include spell_routines.inc Sub Main /call Cast \"Complete Healing\" gem1 /return","title":"Example"},{"location":"reference/macro-directives/include_optional/","text":"#include_optional \u00b6 Description \u00b6 #include_optional filename This allows you to optionally include the contents of another file (called a \"snippet\") within your macro. It functions identically to include except that if the file does not exist, it will continue without error. Example \u00b6 #include_optional spell_routines.inc Sub Main /call Cast \"Complete Healing\" gem1 /return","title":"#include_optional"},{"location":"reference/macro-directives/include_optional/#include_optional","text":"","title":"#include_optional"},{"location":"reference/macro-directives/include_optional/#description","text":"#include_optional filename This allows you to optionally include the contents of another file (called a \"snippet\") within your macro. It functions identically to include except that if the file does not exist, it will continue without error.","title":"Description"},{"location":"reference/macro-directives/include_optional/#example","text":"#include_optional spell_routines.inc Sub Main /call Cast \"Complete Healing\" gem1 /return","title":"Example"},{"location":"reference/macro-directives/macro-bind/","text":"#bind \u00b6 Description \u00b6 #bind Creates an ingame slash command that can be used to call the related sub routine while the macro is running Instead of sending yourself a keyword to trigger a #event you can just type /saymana and it will execute the function called \"Sub Bind_SayMana\" Use \u00b6 #bind_noparse UpdateSomething /updatesomething #bind SayMana /saymana bind gives a user a command they can use bind_noparse gives a user a command they can use that doesn't get parsed. Triggers On \u00b6 Binds only get triggered / parsed on certain things, such as /invoke /varset /echo /call Sub. To trick binds to be called often you can substitute your /doevents as a function like #bind TargetClosestNPC /near Sub Main /call Do_Events /return Sub Do_Events /doevents /return Sub Bind_TargetClosestNPC /echo Targeting the closest NPC becuase you typed /near /target ${NearestSpawn[npc]} /return Example \u00b6 #bind MyMana /MyMana Sub Main /declare CurMan int outer 0 :loop /varset CurMan ${Me.CurrentMana} /doevents /delay 5 /goto :loop /return Sub Bind_MyMana /call MyMana /return Sub MyMana /echo My Mana is ${CurMan} /return","title":"#bind"},{"location":"reference/macro-directives/macro-bind/#bind","text":"","title":"#bind"},{"location":"reference/macro-directives/macro-bind/#description","text":"#bind Creates an ingame slash command that can be used to call the related sub routine while the macro is running Instead of sending yourself a keyword to trigger a #event you can just type /saymana and it will execute the function called \"Sub Bind_SayMana\"","title":"Description"},{"location":"reference/macro-directives/macro-bind/#use","text":"#bind_noparse UpdateSomething /updatesomething #bind SayMana /saymana bind gives a user a command they can use bind_noparse gives a user a command they can use that doesn't get parsed.","title":"Use"},{"location":"reference/macro-directives/macro-bind/#triggers-on","text":"Binds only get triggered / parsed on certain things, such as /invoke /varset /echo /call Sub. To trick binds to be called often you can substitute your /doevents as a function like #bind TargetClosestNPC /near Sub Main /call Do_Events /return Sub Do_Events /doevents /return Sub Bind_TargetClosestNPC /echo Targeting the closest NPC becuase you typed /near /target ${NearestSpawn[npc]} /return","title":"Triggers On"},{"location":"reference/macro-directives/macro-bind/#example","text":"#bind MyMana /MyMana Sub Main /declare CurMan int outer 0 :loop /varset CurMan ${Me.CurrentMana} /doevents /delay 5 /goto :loop /return Sub Bind_MyMana /call MyMana /return Sub MyMana /echo My Mana is ${CurMan} /return","title":"Example"},{"location":"reference/macro-directives/turbo/","text":"#turbo \u00b6 Description \u00b6 #turbo ### This will prevent bad macros from locking up the client by allowing you to limit the number of commands per iteration. Use \u00b6 The default is 10, while the maximum value is 120. A value of 1 will essentially disable #turbo. #turbo is active with the default of 10 in all macros even if you do not use #turbo in your macro. Setting #turbo to 0 will set the value to 20. Example \u00b6 #turbo 120","title":"#turbo"},{"location":"reference/macro-directives/turbo/#turbo","text":"","title":"#turbo"},{"location":"reference/macro-directives/turbo/#description","text":"#turbo ### This will prevent bad macros from locking up the client by allowing you to limit the number of commands per iteration.","title":"Description"},{"location":"reference/macro-directives/turbo/#use","text":"The default is 10, while the maximum value is 120. A value of 1 will essentially disable #turbo. #turbo is active with the default of 10 in all macros even if you do not use #turbo in your macro. Setting #turbo to 0 will set the value to 20.","title":"Use"},{"location":"reference/macro-directives/turbo/#example","text":"#turbo 120","title":"Example"},{"location":"reference/macro-directives/warning/","text":"#warning \u00b6 Add it at the top of your macro, and you will get warnings if there are undeclared variables used in it. With #warning added to your macro, the macro will be issue a warning when it run in to an undefined, and pause. The warning will list the macro line number and line language, so you can go in a fix the macro. A common source of problems is using a variable that might not exist in an if statement to check if it has a value. Instead, you can determine if a variable is defined by using the Defined TLO . For example, the following is how you would check if a variable exists before being used. /if (${Defined[SomeVariable]} { /if (${SomeVariable}) { /echo SomeVariable exists. } }","title":"#warning"},{"location":"reference/macro-directives/warning/#warning","text":"Add it at the top of your macro, and you will get warnings if there are undeclared variables used in it. With #warning added to your macro, the macro will be issue a warning when it run in to an undefined, and pause. The warning will list the macro line number and line language, so you can go in a fix the macro. A common source of problems is using a variable that might not exist in an if statement to check if it has a value. Instead, you can determine if a variable is defined by using the Defined TLO . For example, the following is how you would check if a variable exists before being used. /if (${Defined[SomeVariable]} { /if (${SomeVariable}) { /echo SomeVariable exists. } }","title":"#warning"},{"location":"reference/top-level-objects/","text":"Top-Level Objects \u00b6 A \"Top-Level Object\" is any kind of object that you can start with when trying to find a property. TLOs are called Top-Level Objects because nothing comes before them. A TLO is not a member of any object, it is itself an accessor to objects. Note A TLO provides access to instances of datatypes. See Also: DataType Reference The data that a TLO gives you may depend on the parameters that are provided. Most TLOs don't take any parameters (like Me ). However, some TLOs return different data dependent on what is provided to them. This is explained in the documentation by using the term Forms . A TLO with multiple Forms may return different datatypes depending on what is passed in. Examples \u00b6 Me \u00b6 Me is a Top Level Object that returns a character . Me has access to the members of the character datatype, but Me is not the character datatype. You will notice that the character datatype inherits the spawn datatype, which means the TLO Me will have access to both the character and spawn members. Int \u00b6 The datatype named int and the Top Level Object named Int are not the same thing. The TLO is used to parse integer strings. the int datatype represents a numeric value. See Also \u00b6 A Beginners Guide to TLOs and MQ2DataVars may be useful for understanding how TLOs work. TLO List \u00b6 Links to pages (See sidebar for full list) Achievement Familiar Heading Mercenary Spell AdvLoot FindItem If Mount Switch Alert FindItemBank Illusion NearestSpawn Target Alias FindItemBankCount Ini Pet Task AltAbility FindItemCount Int Plugin Time Bool Float ItemTarget Raid Type Corpse FrameLimiter LastSpawn Range Window Defined Friends LineOfSight Select Zone DisplayItem GameTime Macro SelectedItem DoorTarget Ground MacroQuest Skill DynamicZone GroundItemCount Math Spawn EverQuest Group Me SpawnCount","title":"Top-Level Objects"},{"location":"reference/top-level-objects/#top-level-objects","text":"A \"Top-Level Object\" is any kind of object that you can start with when trying to find a property. TLOs are called Top-Level Objects because nothing comes before them. A TLO is not a member of any object, it is itself an accessor to objects. Note A TLO provides access to instances of datatypes. See Also: DataType Reference The data that a TLO gives you may depend on the parameters that are provided. Most TLOs don't take any parameters (like Me ). However, some TLOs return different data dependent on what is provided to them. This is explained in the documentation by using the term Forms . A TLO with multiple Forms may return different datatypes depending on what is passed in.","title":"Top-Level Objects"},{"location":"reference/top-level-objects/#examples","text":"","title":"Examples"},{"location":"reference/top-level-objects/#me","text":"Me is a Top Level Object that returns a character . Me has access to the members of the character datatype, but Me is not the character datatype. You will notice that the character datatype inherits the spawn datatype, which means the TLO Me will have access to both the character and spawn members.","title":"Me"},{"location":"reference/top-level-objects/#int","text":"The datatype named int and the Top Level Object named Int are not the same thing. The TLO is used to parse integer strings. the int datatype represents a numeric value.","title":"Int"},{"location":"reference/top-level-objects/#see-also","text":"A Beginners Guide to TLOs and MQ2DataVars may be useful for understanding how TLOs work.","title":"See Also"},{"location":"reference/top-level-objects/#tlo-list","text":"Links to pages (See sidebar for full list) Achievement Familiar Heading Mercenary Spell AdvLoot FindItem If Mount Switch Alert FindItemBank Illusion NearestSpawn Target Alias FindItemBankCount Ini Pet Task AltAbility FindItemCount Int Plugin Time Bool Float ItemTarget Raid Type Corpse FrameLimiter LastSpawn Range Window Defined Friends LineOfSight Select Zone DisplayItem GameTime Macro SelectedItem DoorTarget Ground MacroQuest Skill DynamicZone GroundItemCount Math Spawn EverQuest Group Me SpawnCount","title":"TLO List"},{"location":"reference/top-level-objects/tlo-achievement/","tags":["tlo"],"text":"Achievement \u00b6 Provides access to achievements. Forms \u00b6 Type Form Description achievement Achievement[#|Name] Look up an achievement by name or by id. achievementmgr Achievement Access the achievement manager which provides access to information about achievements Associated DataTypes \u00b6 achievementmgr Type \u00b6 Provides access achievements, achievement categories, and other information surrounding the achievement system. Type Name Description achievement Achievement[#|Name] Find an achievement by its ID or by its name. achievement AchivementByIndex[#] Find an achievement by its index. int AchivementCount The number of achievements in the manager. achievementcat Category[#|Name] Find an achievement category by its id or by its name.Note: If searching by name, only top-level categories are returned from the achievement manager. achievementcat CategoryByIndex[#] Find an achievement category by its index. int CategoryCount The number of achievement categories in the manager. int Points The total number of accumulated achievement points. int CompletedAchivements The number of completed achievements. int TotalAchivements The number of available achievements. bool Ready Indicates that the manager has loaded all achievement data and is ready to be used. Usage \u00b6 Warning Looking up achievements by name may not always return the correct achievement if multiple exist with the same name. Achievement IDs should be preferred over names as they don't change and are unique. Note About Achievement Indices Achievements and categories can be looked up by index. This is significantly faster than looking up by id or name. However, these indices are not stable and will change from patch to patch, but they will not change during the session. If an achievement is being utilized in a script many times, it may be more performant to look up an achievement's index (with its .Index member) and then use that in subsequent queries. See Achievement Examples for some examples of using indices for looking up achievements. Achievement [ # ] and Achievement.Achievement [ # ] are equivalent and are provided for consistency. The primary way to access achievement information should be via id. Achievement IDs are unique and do not change. To look up an achievement's ID, you can look up an achievement by name, or you can use the Achievements Inspector. Usage Examples \u00b6 MQScript Lua | Look up an achievement by name, and then print its ID. /echo ${Achievement[Master of Claws of Veeshan].ID} | print the completed status of achievement | \"Wayfarers Brotherhood Adventurer's Stone (Various 20+)\" /echo ${Achievement[500980300].Completed} -- Look up an achievement by name, and then print its ID. print ( mq . TLO . Achievement ( \"Master of Claws of Veeshan\" ). ID ()) -- print the completed status of achievement -- \"Wayfarers Brotherhood Adventurer's Stone (Various 20+)\" print ( mq . TLO . Achievement ( 500980300 ). Completed ())","title":"Achievement"},{"location":"reference/top-level-objects/tlo-achievement/#achievement","text":"Provides access to achievements.","title":"Achievement"},{"location":"reference/top-level-objects/tlo-achievement/#forms","text":"Type Form Description achievement Achievement[#|Name] Look up an achievement by name or by id. achievementmgr Achievement Access the achievement manager which provides access to information about achievements","title":"Forms"},{"location":"reference/top-level-objects/tlo-achievement/#associated-datatypes","text":"","title":"Associated DataTypes"},{"location":"reference/top-level-objects/tlo-achievement/#achievementmgr-type","text":"Provides access achievements, achievement categories, and other information surrounding the achievement system. Type Name Description achievement Achievement[#|Name] Find an achievement by its ID or by its name. achievement AchivementByIndex[#] Find an achievement by its index. int AchivementCount The number of achievements in the manager. achievementcat Category[#|Name] Find an achievement category by its id or by its name.Note: If searching by name, only top-level categories are returned from the achievement manager. achievementcat CategoryByIndex[#] Find an achievement category by its index. int CategoryCount The number of achievement categories in the manager. int Points The total number of accumulated achievement points. int CompletedAchivements The number of completed achievements. int TotalAchivements The number of available achievements. bool Ready Indicates that the manager has loaded all achievement data and is ready to be used.","title":"achievementmgr Type"},{"location":"reference/top-level-objects/tlo-achievement/#usage","text":"Warning Looking up achievements by name may not always return the correct achievement if multiple exist with the same name. Achievement IDs should be preferred over names as they don't change and are unique. Note About Achievement Indices Achievements and categories can be looked up by index. This is significantly faster than looking up by id or name. However, these indices are not stable and will change from patch to patch, but they will not change during the session. If an achievement is being utilized in a script many times, it may be more performant to look up an achievement's index (with its .Index member) and then use that in subsequent queries. See Achievement Examples for some examples of using indices for looking up achievements. Achievement [ # ] and Achievement.Achievement [ # ] are equivalent and are provided for consistency. The primary way to access achievement information should be via id. Achievement IDs are unique and do not change. To look up an achievement's ID, you can look up an achievement by name, or you can use the Achievements Inspector.","title":"Usage"},{"location":"reference/top-level-objects/tlo-achievement/#usage-examples","text":"MQScript Lua | Look up an achievement by name, and then print its ID. /echo ${Achievement[Master of Claws of Veeshan].ID} | print the completed status of achievement | \"Wayfarers Brotherhood Adventurer's Stone (Various 20+)\" /echo ${Achievement[500980300].Completed} -- Look up an achievement by name, and then print its ID. print ( mq . TLO . Achievement ( \"Master of Claws of Veeshan\" ). ID ()) -- print the completed status of achievement -- \"Wayfarers Brotherhood Adventurer's Stone (Various 20+)\" print ( mq . TLO . Achievement ( 500980300 ). Completed ())","title":"Usage Examples"},{"location":"reference/top-level-objects/tlo-advloot/","tags":["tlo"],"text":"AdvLoot \u00b6 The AdvLoot TLO grants access to items in the Advanced Loot window. Members \u00b6 Type Member Description itemfilterdata Filter [ ItemID ] Inspect the loot filter for a given ItemID. bool LootInProgress True/False if looting from AdvLoot is in progress int PCount item count from the Personal list advlootitem PList [ Index ] Inspect the item at the specified index in the personal loot list. int PWantCount Want count from the Personal list (AN + AG + ND + GD) int SCount Item count from the Shared list advlootitem SList [ Index ] Inspect the item at the specified index in the shared loot list. int SWantCount Want count from the Shared list (AN + AG + ND + GD) Associated DataTypes \u00b6 advlootitem Type \u00b6 Represents a discrete item being looted in an AdvLoot window. Type Member Description bool AlwaysGreed The Always Greed (AG) state of the item. bool AlwaysNeed The Always Need (AN) state of the item. bool AutoRoll The Auto Roll state (dice icon) of the item. spawn Corpse The spawn representing the corpse that is being looted, if available. bool Greed The Greed (GD) state of the item. int IconID The ID of the icon for the item. int64 ID The ID of the item. int Index The positional index of the item. string Name The name of the item. bool Need The Need (ND) state of the item. bool Never The Never (NV) state of the item. bool No The No state of the item. bool NoDrop Indicates if the item is NO DROP. int StackSize The size of the stack of items being looted. string To String Same as Name itemfilterdata Type \u00b6 A collection of settings that together describe the loot filter for an item. Type Member Description bool AutoRoll The Auto Roll state (dice icon). bool Greed The Greed (GD) state. int IconID The ID of the icon. int ID The ID of the item. string Name The Name of the item. bool Need The Need (ND) state. bool Never The Never (NV) state. int Types Bit field representing all the loot filter flags for this item. string To String Same as Name Usage Examples \u00b6 MQScript Lua | Echo the name of the first item in the personal loot list /echo ${AdvLoot.PList[1].Name} | Echo the number of items in the personal loot list. /echo There are ${AdvLoot.PCount} items in the personal loot list | Echo the stack size of the first item in the personal loot list. /echo The item in index 1 has a StackSize of ${AdvLoot.PList[1].StackSize} | If the first item in the shared loot list is marked as Need, then echo. /if (${AdvLoot.SList[1].Need}==TRUE) /echo I need that item! | Echo the NO DROP status of the first item in the personal loot list: TRUE or FALSE. /echo ${AdvLoot.PList[1].NoDrop} | Wait 10 seconds, or until AdvLoot is no longer in the process of looting. /delay 10s !${AdvLoot.LootInProgress} | Give the first item in the shared loot list to myself. /if (!${AdvLoot.LootInProgress}) { /echo Its safe to loot! /if (${AdvLoot.SCount}>=1) { /echo I am going to give 1 ${AdvLoot.SList[1].Name} to myself /advloot shared 1 giveto ${Me.Name} 1 } } else { /echo Do something else, loot is already in progress... } -- Print the name of the first item in the personal loot list print ( mq . TLO . AdvLoot . PList ( 1 ). Name ()) -- Print the number of items in the personal loot list print ( 'There are ' , mq . TLO . AdvLoot . PCount (), ' items in the personal loot list' ) -- Print the stack size of the first item in the personal loot list. print ( 'The item in index 1 has a StackSize of ' , mq . TLO . AdvLoot . PList ( 1 ). StackSize ())) -- If the first item in the shared loot list is marked as Need, then print a message. if mq . TLO . AdvLoot . SList ( 1 ). Need () then print ( 'I need that item!' ) end -- Print the NO DROP status of the first item in the personal loot list. print ( mq . TLO . AdvLoot . PList ( 1 ). NoDrop ()) -- Wait 10 seconds, or until AdvLoot is no longer in the process of looting. mq . delay ( '10s' , function () return not mq . TLO . AdvLoot . LootInProgress () end ) -- Give the first item in the shared loot list to myself. if not mq . TLO . AdvLoot . LootInProgress () then print ( 'Its safe to loot!' ) if mq . TLO . AdvLoot . SCount () >= 1 then print ( 'I am going to give 1 ' , mq . TLO . AdvLoot . SList ( 1 ). Name (), ' to myself' ) mq . cmdf ( '/advloot shared 1 giveto %s 1' , mq . TLO . Me . Name ()) end else print ( 'Do something else, loot is already in progress...' ) end","title":"AdvLoot"},{"location":"reference/top-level-objects/tlo-advloot/#advloot","text":"The AdvLoot TLO grants access to items in the Advanced Loot window.","title":"AdvLoot"},{"location":"reference/top-level-objects/tlo-advloot/#members","text":"Type Member Description itemfilterdata Filter [ ItemID ] Inspect the loot filter for a given ItemID. bool LootInProgress True/False if looting from AdvLoot is in progress int PCount item count from the Personal list advlootitem PList [ Index ] Inspect the item at the specified index in the personal loot list. int PWantCount Want count from the Personal list (AN + AG + ND + GD) int SCount Item count from the Shared list advlootitem SList [ Index ] Inspect the item at the specified index in the shared loot list. int SWantCount Want count from the Shared list (AN + AG + ND + GD)","title":"Members"},{"location":"reference/top-level-objects/tlo-advloot/#associated-datatypes","text":"","title":"Associated DataTypes"},{"location":"reference/top-level-objects/tlo-advloot/#advlootitem-type","text":"Represents a discrete item being looted in an AdvLoot window. Type Member Description bool AlwaysGreed The Always Greed (AG) state of the item. bool AlwaysNeed The Always Need (AN) state of the item. bool AutoRoll The Auto Roll state (dice icon) of the item. spawn Corpse The spawn representing the corpse that is being looted, if available. bool Greed The Greed (GD) state of the item. int IconID The ID of the icon for the item. int64 ID The ID of the item. int Index The positional index of the item. string Name The name of the item. bool Need The Need (ND) state of the item. bool Never The Never (NV) state of the item. bool No The No state of the item. bool NoDrop Indicates if the item is NO DROP. int StackSize The size of the stack of items being looted. string To String Same as Name","title":"advlootitem Type"},{"location":"reference/top-level-objects/tlo-advloot/#itemfilterdata-type","text":"A collection of settings that together describe the loot filter for an item. Type Member Description bool AutoRoll The Auto Roll state (dice icon). bool Greed The Greed (GD) state. int IconID The ID of the icon. int ID The ID of the item. string Name The Name of the item. bool Need The Need (ND) state. bool Never The Never (NV) state. int Types Bit field representing all the loot filter flags for this item. string To String Same as Name","title":"itemfilterdata Type"},{"location":"reference/top-level-objects/tlo-advloot/#usage-examples","text":"MQScript Lua | Echo the name of the first item in the personal loot list /echo ${AdvLoot.PList[1].Name} | Echo the number of items in the personal loot list. /echo There are ${AdvLoot.PCount} items in the personal loot list | Echo the stack size of the first item in the personal loot list. /echo The item in index 1 has a StackSize of ${AdvLoot.PList[1].StackSize} | If the first item in the shared loot list is marked as Need, then echo. /if (${AdvLoot.SList[1].Need}==TRUE) /echo I need that item! | Echo the NO DROP status of the first item in the personal loot list: TRUE or FALSE. /echo ${AdvLoot.PList[1].NoDrop} | Wait 10 seconds, or until AdvLoot is no longer in the process of looting. /delay 10s !${AdvLoot.LootInProgress} | Give the first item in the shared loot list to myself. /if (!${AdvLoot.LootInProgress}) { /echo Its safe to loot! /if (${AdvLoot.SCount}>=1) { /echo I am going to give 1 ${AdvLoot.SList[1].Name} to myself /advloot shared 1 giveto ${Me.Name} 1 } } else { /echo Do something else, loot is already in progress... } -- Print the name of the first item in the personal loot list print ( mq . TLO . AdvLoot . PList ( 1 ). Name ()) -- Print the number of items in the personal loot list print ( 'There are ' , mq . TLO . AdvLoot . PCount (), ' items in the personal loot list' ) -- Print the stack size of the first item in the personal loot list. print ( 'The item in index 1 has a StackSize of ' , mq . TLO . AdvLoot . PList ( 1 ). StackSize ())) -- If the first item in the shared loot list is marked as Need, then print a message. if mq . TLO . AdvLoot . SList ( 1 ). Need () then print ( 'I need that item!' ) end -- Print the NO DROP status of the first item in the personal loot list. print ( mq . TLO . AdvLoot . PList ( 1 ). NoDrop ()) -- Wait 10 seconds, or until AdvLoot is no longer in the process of looting. mq . delay ( '10s' , function () return not mq . TLO . AdvLoot . LootInProgress () end ) -- Give the first item in the shared loot list to myself. if not mq . TLO . AdvLoot . LootInProgress () then print ( 'Its safe to loot!' ) if mq . TLO . AdvLoot . SCount () >= 1 then print ( 'I am going to give 1 ' , mq . TLO . AdvLoot . SList ( 1 ). Name (), ' to myself' ) mq . cmdf ( '/advloot shared 1 giveto %s 1' , mq . TLO . Me . Name ()) end else print ( 'Do something else, loot is already in progress...' ) end","title":"Usage Examples"},{"location":"reference/top-level-objects/tlo-alert/","tags":["tlo"],"text":"Alert \u00b6 Provides access to spawn search filter criteria in alerts. Alerts are created using /alert . Forms \u00b6 Type Form Description alert Alert [ ID ] Retrieve information for the alert category by its id string Alert Returns pipe | separated list of alert ids Associated DataTypes \u00b6 alert Type \u00b6 Provides access to the values of an alert. Type Member Description alertlist List [ Index ] Get the item from the list at the specified index int Size Get the number of alerts string To String Returns Size as a string. alertlist Type \u00b6 Provides access to the properties of a spawn search associated with an alert. For a spawn to be entered into an alert it must match all the criteria specified by the alert list. See Also: Spawn Search . Type Member Description int AlertList Any spawn on the associated alert list bool bAlert Indicates usage of alert filter bool bAura Any aur. bool bBanker Any banker bool bBanner Any banner bool bCampfire Any campfire bool bDps Any player that is a DPS class bool bExactName Name match requiries an exact match bool bFellowship Any member of the fellowship bool bGM Any player flagged as a GM bool bGroup Any member of the group bool bHealer Any player that is a healer class bool bKnight Any player that is a knight bool bKnownLocation Indicates usage of a loc filter bool bLFG Any player that is flagged as LFG bool bLight Indicates usage of a light filter bool bLoS Any spawn in line of sight bool bMerchant Any merchant bool bNamed Any \"named\" NPC bool bNearAlert Indicates usage of nearalert filter bool bNoAlert Indicates usage of noalert filter bool bNoGroup Exclude any player that is in the group bool bNoGuild Exclude any player that is in the guild bool bNoPet Exclude any spawn that is a pet bool bNotNearAlert Indicates usage of notnearalert filter string BodyType Any spawn with given body type bool bRaid Any member of the raid bool bSlower Any player that is a slower bool bSpawnID Indicates usage of the id filter bool bTank Any player that is a tank class bool bTargetable Any spawn that is targetable bool bTargNext Indicates usage of the next filter bool bTargPrev Indicates usage of the prev filter bool bTrader Any player that is a trader bool bTributeMaster Any NPC that is a tribute master string Class Any spawn that is the given class double FRadius Any spawn that is given distance from the given loc filter int FromSpawnID Search starts at given spawn id int64 GuildID Any member of the guild with the given id string Light Any spawn that is equipped with the given light source int MaxLevel Any spawn that is at this level or lower int MinLevel Any spawn that is at this level or greater string Name Any spawn with the given name int NearAlertList Any spawn near the given alert list int NoAlertList Excludes any spawn in the given alert list int NotID Excludes any spawn with the given id int NotNearAlertList Excludes any spawn near the given alert list int PlayerState Any spawn with the given state string Race Any spawn with the given race float Radius Excludes the spawn if any player is within this distance ( nopcnear filter) int SortBy Indicates the sort order of the filter spawn Spawn If an ID or Name is part of the filter, attempts to return a spawn with the matching ID or Name int SpawnID Any spawn with the given Spawn ID int SpawnType Any spawn with the given type float xLoc x component of the loc filter float yLoc y component of the loc filter double ZRadius z distance component of the loc filter Usage Examples \u00b6 MQScript Lua | Add an alert entry for Fippy to Alert list 1 /alert add 1 Fippy | Will output 'Fippy' /echo ${Alert[1].List[0].Name} | Add an alert entry using our Spawn ID /alert add 1 id ${Me.ID} | Will output your Spawn ID /echo ${Alert[1].List[1].SpawnID} | Will output the number of alerts in list 1 /echo ${Alert[1].Size} -- Add an alert entry for Fippy to Alert list 1 mq . cmd ( '/alert add 1 Fippy' ) -- Will output 'Fippy' print ( mq . TLO . Alert ( 1 ). List ( 0 ). Name ()) -- Add an alert entry using our Spawn ID mq . cmdf ( '/alert add 1 id %d' , mq . TLO . Me . ID ()) -- Will output our Spawn ID print ( mq . TLO . Alert ( 1 ). List ( 1 ). SpawnID ()) -- Will output the number of alerts in list 1 print ( mq . TLO . Alert ( 1 ). Size ())","title":"Alert"},{"location":"reference/top-level-objects/tlo-alert/#alert","text":"Provides access to spawn search filter criteria in alerts. Alerts are created using /alert .","title":"Alert"},{"location":"reference/top-level-objects/tlo-alert/#forms","text":"Type Form Description alert Alert [ ID ] Retrieve information for the alert category by its id string Alert Returns pipe | separated list of alert ids","title":"Forms"},{"location":"reference/top-level-objects/tlo-alert/#associated-datatypes","text":"","title":"Associated DataTypes"},{"location":"reference/top-level-objects/tlo-alert/#alert-type","text":"Provides access to the values of an alert. Type Member Description alertlist List [ Index ] Get the item from the list at the specified index int Size Get the number of alerts string To String Returns Size as a string.","title":"alert Type"},{"location":"reference/top-level-objects/tlo-alert/#alertlist-type","text":"Provides access to the properties of a spawn search associated with an alert. For a spawn to be entered into an alert it must match all the criteria specified by the alert list. See Also: Spawn Search . Type Member Description int AlertList Any spawn on the associated alert list bool bAlert Indicates usage of alert filter bool bAura Any aur. bool bBanker Any banker bool bBanner Any banner bool bCampfire Any campfire bool bDps Any player that is a DPS class bool bExactName Name match requiries an exact match bool bFellowship Any member of the fellowship bool bGM Any player flagged as a GM bool bGroup Any member of the group bool bHealer Any player that is a healer class bool bKnight Any player that is a knight bool bKnownLocation Indicates usage of a loc filter bool bLFG Any player that is flagged as LFG bool bLight Indicates usage of a light filter bool bLoS Any spawn in line of sight bool bMerchant Any merchant bool bNamed Any \"named\" NPC bool bNearAlert Indicates usage of nearalert filter bool bNoAlert Indicates usage of noalert filter bool bNoGroup Exclude any player that is in the group bool bNoGuild Exclude any player that is in the guild bool bNoPet Exclude any spawn that is a pet bool bNotNearAlert Indicates usage of notnearalert filter string BodyType Any spawn with given body type bool bRaid Any member of the raid bool bSlower Any player that is a slower bool bSpawnID Indicates usage of the id filter bool bTank Any player that is a tank class bool bTargetable Any spawn that is targetable bool bTargNext Indicates usage of the next filter bool bTargPrev Indicates usage of the prev filter bool bTrader Any player that is a trader bool bTributeMaster Any NPC that is a tribute master string Class Any spawn that is the given class double FRadius Any spawn that is given distance from the given loc filter int FromSpawnID Search starts at given spawn id int64 GuildID Any member of the guild with the given id string Light Any spawn that is equipped with the given light source int MaxLevel Any spawn that is at this level or lower int MinLevel Any spawn that is at this level or greater string Name Any spawn with the given name int NearAlertList Any spawn near the given alert list int NoAlertList Excludes any spawn in the given alert list int NotID Excludes any spawn with the given id int NotNearAlertList Excludes any spawn near the given alert list int PlayerState Any spawn with the given state string Race Any spawn with the given race float Radius Excludes the spawn if any player is within this distance ( nopcnear filter) int SortBy Indicates the sort order of the filter spawn Spawn If an ID or Name is part of the filter, attempts to return a spawn with the matching ID or Name int SpawnID Any spawn with the given Spawn ID int SpawnType Any spawn with the given type float xLoc x component of the loc filter float yLoc y component of the loc filter double ZRadius z distance component of the loc filter","title":"alertlist Type"},{"location":"reference/top-level-objects/tlo-alert/#usage-examples","text":"MQScript Lua | Add an alert entry for Fippy to Alert list 1 /alert add 1 Fippy | Will output 'Fippy' /echo ${Alert[1].List[0].Name} | Add an alert entry using our Spawn ID /alert add 1 id ${Me.ID} | Will output your Spawn ID /echo ${Alert[1].List[1].SpawnID} | Will output the number of alerts in list 1 /echo ${Alert[1].Size} -- Add an alert entry for Fippy to Alert list 1 mq . cmd ( '/alert add 1 Fippy' ) -- Will output 'Fippy' print ( mq . TLO . Alert ( 1 ). List ( 0 ). Name ()) -- Add an alert entry using our Spawn ID mq . cmdf ( '/alert add 1 id %d' , mq . TLO . Me . ID ()) -- Will output our Spawn ID print ( mq . TLO . Alert ( 1 ). List ( 1 ). SpawnID ()) -- Will output the number of alerts in list 1 print ( mq . TLO . Alert ( 1 ). Size ())","title":"Usage Examples"},{"location":"reference/top-level-objects/tlo-alias/","tags":["tlo"],"text":"Alias \u00b6 Provides a way to query whether a given alias exists. See /alias . Forms \u00b6 Type Form Description bool Alias [ Name ] Returns bool indicating if named aliase exists Usage Examples \u00b6 MQScript Lua | prints TRUE if the /yes alias exists /echo ${Alias[/yes]} -- prints true if the /yes alias exists print ( mq . TLO . Alias ( '/yes' )())","title":"Alias"},{"location":"reference/top-level-objects/tlo-alias/#alias","text":"Provides a way to query whether a given alias exists. See /alias .","title":"Alias"},{"location":"reference/top-level-objects/tlo-alias/#forms","text":"Type Form Description bool Alias [ Name ] Returns bool indicating if named aliase exists","title":"Forms"},{"location":"reference/top-level-objects/tlo-alias/#usage-examples","text":"MQScript Lua | prints TRUE if the /yes alias exists /echo ${Alias[/yes]} -- prints true if the /yes alias exists print ( mq . TLO . Alias ( '/yes' )())","title":"Usage Examples"},{"location":"reference/top-level-objects/tlo-altability/","tags":["tlo"],"text":"AltAbility \u00b6 Danger The AltAbility TLO should not be used except for when experimenting with data. If you've already purchased the AA, use Me.AltAbility , which is tailored to your character and is much faster. Forms \u00b6 Type Form Description altability AltAbility [ Number ] Look up an AltAbility by its altability id altability AltAbility [ Name ] Look up an AltAbility by its name Example Usage \u00b6 MQScript Lua | Prints the pre-requisite AA ability needed to train Combat Stability /echo ${AltAbility[Combat Stability].RequiresAbility} -- Prints the pre-requisite AA ability needed to train Combat Stability print ( mq . TLO . AltAbility ( 'Combat Stability' ). RequiresAbility ())","title":"AltAbility"},{"location":"reference/top-level-objects/tlo-altability/#altability","text":"Danger The AltAbility TLO should not be used except for when experimenting with data. If you've already purchased the AA, use Me.AltAbility , which is tailored to your character and is much faster.","title":"AltAbility"},{"location":"reference/top-level-objects/tlo-altability/#forms","text":"Type Form Description altability AltAbility [ Number ] Look up an AltAbility by its altability id altability AltAbility [ Name ] Look up an AltAbility by its name","title":"Forms"},{"location":"reference/top-level-objects/tlo-altability/#example-usage","text":"MQScript Lua | Prints the pre-requisite AA ability needed to train Combat Stability /echo ${AltAbility[Combat Stability].RequiresAbility} -- Prints the pre-requisite AA ability needed to train Combat Stability print ( mq . TLO . AltAbility ( 'Combat Stability' ). RequiresAbility ())","title":"Example Usage"},{"location":"reference/top-level-objects/tlo-bool/","tags":["tlo"],"text":"Bool \u00b6 Creates a bool object from a string. The resulting value is a bool depending on whether the given string is falsey or not. \"Falsey\" is defined as any of the following values: Empty String FALSE NULL The string \"0\" If the string is one of these values, the resulting bool is false . Otherwise, it is true . Forms \u00b6 Type Form Description bool Bool [ Text ] Converts the given Text to a bool based on the rules presented above. Usage Examples \u00b6 MQScript Lua /declare MyVar bool /varset MyVar ${Bool[This is true]} | prints TRUE /echo ${MyVar} /varset MyVar ${Bool[NULL]} | prints FALSE /echo ${MyVar} local myVar -- prints true myVar = mq . TLO . Bool ( 'This is true' )() print ( myVar ) -- prints false myVar = mq . TLO . Bool ( 'NULL' )() print ( myVar )","title":"Bool"},{"location":"reference/top-level-objects/tlo-bool/#bool","text":"Creates a bool object from a string. The resulting value is a bool depending on whether the given string is falsey or not. \"Falsey\" is defined as any of the following values: Empty String FALSE NULL The string \"0\" If the string is one of these values, the resulting bool is false . Otherwise, it is true .","title":"Bool"},{"location":"reference/top-level-objects/tlo-bool/#forms","text":"Type Form Description bool Bool [ Text ] Converts the given Text to a bool based on the rules presented above.","title":"Forms"},{"location":"reference/top-level-objects/tlo-bool/#usage-examples","text":"MQScript Lua /declare MyVar bool /varset MyVar ${Bool[This is true]} | prints TRUE /echo ${MyVar} /varset MyVar ${Bool[NULL]} | prints FALSE /echo ${MyVar} local myVar -- prints true myVar = mq . TLO . Bool ( 'This is true' )() print ( myVar ) -- prints false myVar = mq . TLO . Bool ( 'NULL' )() print ( myVar )","title":"Usage Examples"},{"location":"reference/top-level-objects/tlo-corpse/","tags":["tlo"],"text":"Corpse \u00b6 Access to objects of type corpse, which is the currently active corpse (ie. the one you are looting). Forms \u00b6 corpse Corpse : Corpse you are looting. Examples \u00b6 /if (${Corpse.Open}) { /echo Corpse is open, proceeding with looting }","title":"Corpse"},{"location":"reference/top-level-objects/tlo-corpse/#corpse","text":"Access to objects of type corpse, which is the currently active corpse (ie. the one you are looting).","title":"Corpse"},{"location":"reference/top-level-objects/tlo-corpse/#forms","text":"corpse Corpse : Corpse you are looting.","title":"Forms"},{"location":"reference/top-level-objects/tlo-corpse/#examples","text":"/if (${Corpse.Open}) { /echo Corpse is open, proceeding with looting }","title":"Examples"},{"location":"reference/top-level-objects/tlo-cursor/","tags":["tlo"],"text":"Cursor \u00b6 Creates an object which references the item on your cursor. Forms \u00b6 item Cursor Examples \u00b6 /if (${Cursor.ID}) /autoinv If something is on your cursor, auto-inventory it.","title":"Cursor"},{"location":"reference/top-level-objects/tlo-cursor/#cursor","text":"Creates an object which references the item on your cursor.","title":"Cursor"},{"location":"reference/top-level-objects/tlo-cursor/#forms","text":"item Cursor","title":"Forms"},{"location":"reference/top-level-objects/tlo-cursor/#examples","text":"/if (${Cursor.ID}) /autoinv If something is on your cursor, auto-inventory it.","title":"Examples"},{"location":"reference/top-level-objects/tlo-defined/","tags":["tlo"],"text":"Defined \u00b6 Determines whether a variable, array, or timer with this name exists. The variable, array or timer must not be enclosed with ${}. Forms \u00b6 bool Defined [ name ] Returns true if the given variable name is defined. Examples \u00b6 /if (${Defined[varname]}) { /echo ${varname} }","title":"Defined"},{"location":"reference/top-level-objects/tlo-defined/#defined","text":"Determines whether a variable, array, or timer with this name exists. The variable, array or timer must not be enclosed with ${}.","title":"Defined"},{"location":"reference/top-level-objects/tlo-defined/#forms","text":"bool Defined [ name ] Returns true if the given variable name is defined.","title":"Forms"},{"location":"reference/top-level-objects/tlo-defined/#examples","text":"/if (${Defined[varname]}) { /echo ${varname} }","title":"Examples"},{"location":"reference/top-level-objects/tlo-displayitem/","tags":["tlo"],"text":"DisplayItem \u00b6 This TLO gives you access to all the information in the Item Display window. Forms \u00b6 item item","title":"DisplayItem"},{"location":"reference/top-level-objects/tlo-displayitem/#displayitem","text":"This TLO gives you access to all the information in the Item Display window.","title":"DisplayItem"},{"location":"reference/top-level-objects/tlo-displayitem/#forms","text":"item item","title":"Forms"},{"location":"reference/top-level-objects/tlo-doortarget/","tags":["tlo"],"text":"DoorTarget \u00b6 Object used to return information on your doortarget. Forms \u00b6 switch DoorTarget Examples \u00b6 /echo ${DoorTarget.ID} Returns the ID of your door target.","title":"DoorTarget"},{"location":"reference/top-level-objects/tlo-doortarget/#doortarget","text":"Object used to return information on your doortarget.","title":"DoorTarget"},{"location":"reference/top-level-objects/tlo-doortarget/#forms","text":"switch DoorTarget","title":"Forms"},{"location":"reference/top-level-objects/tlo-doortarget/#examples","text":"/echo ${DoorTarget.ID} Returns the ID of your door target.","title":"Examples"},{"location":"reference/top-level-objects/tlo-dynamiczone/","tags":["tlo"],"text":"DynamicZone \u00b6 Provides access to properties of the current dynamic (instanced) zone. Forms \u00b6 dynamiczone DynamicZone Gives access to the information about the current dynamic zone. Example Echo the name of the dynamic zone /echo ${DynamicZone.Name}","title":"DynamicZone"},{"location":"reference/top-level-objects/tlo-dynamiczone/#dynamiczone","text":"Provides access to properties of the current dynamic (instanced) zone.","title":"DynamicZone"},{"location":"reference/top-level-objects/tlo-dynamiczone/#forms","text":"dynamiczone DynamicZone Gives access to the information about the current dynamic zone. Example Echo the name of the dynamic zone /echo ${DynamicZone.Name}","title":"Forms"},{"location":"reference/top-level-objects/tlo-everquest/","tags":["tlo"],"text":"EverQuest \u00b6 Provides access to general information about the game and its state. Forms \u00b6 everquest EverQuest Usage \u00b6 See EverQuest for examples.","title":"EverQuest"},{"location":"reference/top-level-objects/tlo-everquest/#everquest","text":"Provides access to general information about the game and its state.","title":"EverQuest"},{"location":"reference/top-level-objects/tlo-everquest/#forms","text":"everquest EverQuest","title":"Forms"},{"location":"reference/top-level-objects/tlo-everquest/#usage","text":"See EverQuest for examples.","title":"Usage"},{"location":"reference/top-level-objects/tlo-familiar/","tags":["tlo"],"text":"Familiar \u00b6 Used to get information about items on your familiars keyring. Forms \u00b6 keyring Mount Access to the familiar keyring. keyringitem Mount [ N ] Retrieves the item in your familiar keyring by index. keyringitem Mount [ name ] Retrieve the item in your familiar keyring by name. A = can be prepended for an exact match. Examples \u00b6 See: DataType:keyring and DataType:keyringitem","title":"Familiar"},{"location":"reference/top-level-objects/tlo-familiar/#familiar","text":"Used to get information about items on your familiars keyring.","title":"Familiar"},{"location":"reference/top-level-objects/tlo-familiar/#forms","text":"keyring Mount Access to the familiar keyring. keyringitem Mount [ N ] Retrieves the item in your familiar keyring by index. keyringitem Mount [ name ] Retrieve the item in your familiar keyring by name. A = can be prepended for an exact match.","title":"Forms"},{"location":"reference/top-level-objects/tlo-familiar/#examples","text":"See: DataType:keyring and DataType:keyringitem","title":"Examples"},{"location":"reference/top-level-objects/tlo-finditem/","tags":["tlo"],"text":"FindItem \u00b6 A TLO used to find an item on your character, corpse, or a merchant by partial or exact name match. See examples below. Forms \u00b6 item FindItem [ name/id ] Search for an item using the given item id, or partial name match. Will search character inventory and any items stored in key rings (illusion, mount, etc). Example Looks for an item with the name swirling in it, and prints the ID. MQScript Lua /echo ${FindItem[swirling].ID} print ( mq . TLO . FindItem ( \"swirling\" ). ID ()) item FindItem [= name ] Search for an item using exact name match (case insensntive). Will search character inventory and any items stored in key rings (illusion, mount, etc). Example Looks for the Cleric Epic (by exact match) and prints its ID. MQScript Lua /echo ${FindItem[=Water Sprinkler of Nem Ankh].ID} print ( mq . TLO . FindItem ( \"=Water Sprinkler of Nem Ankh\" ). ID ())","title":"FindItem"},{"location":"reference/top-level-objects/tlo-finditem/#finditem","text":"A TLO used to find an item on your character, corpse, or a merchant by partial or exact name match. See examples below.","title":"FindItem"},{"location":"reference/top-level-objects/tlo-finditem/#forms","text":"item FindItem [ name/id ] Search for an item using the given item id, or partial name match. Will search character inventory and any items stored in key rings (illusion, mount, etc). Example Looks for an item with the name swirling in it, and prints the ID. MQScript Lua /echo ${FindItem[swirling].ID} print ( mq . TLO . FindItem ( \"swirling\" ). ID ()) item FindItem [= name ] Search for an item using exact name match (case insensntive). Will search character inventory and any items stored in key rings (illusion, mount, etc). Example Looks for the Cleric Epic (by exact match) and prints its ID. MQScript Lua /echo ${FindItem[=Water Sprinkler of Nem Ankh].ID} print ( mq . TLO . FindItem ( \"=Water Sprinkler of Nem Ankh\" ). ID ())","title":"Forms"},{"location":"reference/top-level-objects/tlo-finditembank/","tags":["tlo"],"text":"FindItemBank \u00b6 Find item in bank by partial name match. Using =name will find an exact match only. Of note: The FindItemBank with ItemSlot REQUIRES that bank item containers be open to function correctly. Due to potential exploits the command will not work if the bank containers are closed. This is in contrast to FindItem functionality with character containers, where ItemSlot was designed to allow inventory management without opening containers. Forms \u00b6 item FindItemBank[**name ]** Returns item in your bank by partial name match item FindItemBank[ =name**]** Returns item in your bank by exact name match Examples \u00b6 /echo ${FindItemBank[=Swirling Shadows]} This is a simple example with little use, but If the item is found, the name of the item will be echoed /echo ${FindItemBank[=Swirling Shadows].ItemSlot} Will return Bank's item slot","title":"FindItemBank"},{"location":"reference/top-level-objects/tlo-finditembank/#finditembank","text":"Find item in bank by partial name match. Using =name will find an exact match only. Of note: The FindItemBank with ItemSlot REQUIRES that bank item containers be open to function correctly. Due to potential exploits the command will not work if the bank containers are closed. This is in contrast to FindItem functionality with character containers, where ItemSlot was designed to allow inventory management without opening containers.","title":"FindItemBank"},{"location":"reference/top-level-objects/tlo-finditembank/#forms","text":"item FindItemBank[**name ]** Returns item in your bank by partial name match item FindItemBank[ =name**]** Returns item in your bank by exact name match","title":"Forms"},{"location":"reference/top-level-objects/tlo-finditembank/#examples","text":"/echo ${FindItemBank[=Swirling Shadows]} This is a simple example with little use, but If the item is found, the name of the item will be echoed /echo ${FindItemBank[=Swirling Shadows].ItemSlot} Will return Bank's item slot","title":"Examples"},{"location":"reference/top-level-objects/tlo-finditembankcount/","tags":["tlo"],"text":"FindItemBankCount \u00b6 Count of items in bank by partial name match. Using =name will find the exact match only. Forms \u00b6 int FindItemBankCount[**name ]** Count of items in bank by partial name match int FindItemBankCount[ =name**]** Count of items in bank by exact name match Examples \u00b6 /echo ${FindItemBankCount[=Swirling Shadows]} Returns how many Swirling Shadows you have in your bank","title":"FindItemBankCount"},{"location":"reference/top-level-objects/tlo-finditembankcount/#finditembankcount","text":"Count of items in bank by partial name match. Using =name will find the exact match only.","title":"FindItemBankCount"},{"location":"reference/top-level-objects/tlo-finditembankcount/#forms","text":"int FindItemBankCount[**name ]** Count of items in bank by partial name match int FindItemBankCount[ =name**]** Count of items in bank by exact name match","title":"Forms"},{"location":"reference/top-level-objects/tlo-finditembankcount/#examples","text":"/echo ${FindItemBankCount[=Swirling Shadows]} Returns how many Swirling Shadows you have in your bank","title":"Examples"},{"location":"reference/top-level-objects/tlo-finditemcount/","tags":["tlo"],"text":"FindItemCount \u00b6 Count of items on character by partial name match. Using =name will find an exact match only. Forms \u00b6 int FindItemCount[**name ]** Count of items on character by partial name match int FindItemCount[ =name**]** Count of items on character by exact name match Examples \u00b6 /echo ${FindItemCount[=Water Flask]} Echoes the number of Water Flasks you have in your inventory. /echo ${FindItemCount[\"=${SomeItem}\"]} Echoes the number of an item as defined by a string. Note the placement of the quotes, it is important.","title":"FindItemCount"},{"location":"reference/top-level-objects/tlo-finditemcount/#finditemcount","text":"Count of items on character by partial name match. Using =name will find an exact match only.","title":"FindItemCount"},{"location":"reference/top-level-objects/tlo-finditemcount/#forms","text":"int FindItemCount[**name ]** Count of items on character by partial name match int FindItemCount[ =name**]** Count of items on character by exact name match","title":"Forms"},{"location":"reference/top-level-objects/tlo-finditemcount/#examples","text":"/echo ${FindItemCount[=Water Flask]} Echoes the number of Water Flasks you have in your inventory. /echo ${FindItemCount[\"=${SomeItem}\"]} Echoes the number of an item as defined by a string. Note the placement of the quotes, it is important.","title":"Examples"},{"location":"reference/top-level-objects/tlo-float/","tags":["tlo"],"text":"Float \u00b6 Creates a float object from n. Forms \u00b6 float Float[**n ]** Examples \u00b6 /echo ${Float[12.345].Deci} Creates a float object of 12.345 and truncates the decimal to one decimal place.","title":"Float"},{"location":"reference/top-level-objects/tlo-float/#float","text":"Creates a float object from n.","title":"Float"},{"location":"reference/top-level-objects/tlo-float/#forms","text":"float Float[**n ]**","title":"Forms"},{"location":"reference/top-level-objects/tlo-float/#examples","text":"/echo ${Float[12.345].Deci} Creates a float object of 12.345 and truncates the decimal to one decimal place.","title":"Examples"},{"location":"reference/top-level-objects/tlo-framelimiter/","tags":["tlo"],"text":"FrameLimiter \u00b6 The FrameLimiter TLO provides access to the frame limiter feature Forms \u00b6 framelimiter FrameLimiter The frame limiter object Associated DataTypes \u00b6 framelimiter Type \u00b6 Represents the state of the frame limiter float BackgroundFPS : Value of the target background fps setting. bool ClearScreen Value of the clear screen when not rendering setting. float CPU : Current CPU usage as % bool Enabled TRUE if the frame limiter feature is currently active. float ForegroundFPS : Value of the target foreground fps setting. float MinSimulationFPS : Value of the minimum simualtion rate setting. float RenderFPS : Current graphics scene frame rate (visible fps). bool SaveByChar TRUE if settings for the frame limiter are being saved by character. float SimulationFPS : Current simulation frame rate (game updates per second). string Status Either \"Foreground\" or \"Background\". Usage \u00b6 Indicates that the frame limiter is enabled: /echo ${FrameLimiter.Enabled}","title":"FrameLimiter"},{"location":"reference/top-level-objects/tlo-framelimiter/#framelimiter","text":"The FrameLimiter TLO provides access to the frame limiter feature","title":"FrameLimiter"},{"location":"reference/top-level-objects/tlo-framelimiter/#forms","text":"framelimiter FrameLimiter The frame limiter object","title":"Forms"},{"location":"reference/top-level-objects/tlo-framelimiter/#associated-datatypes","text":"","title":"Associated DataTypes"},{"location":"reference/top-level-objects/tlo-framelimiter/#framelimiter-type","text":"Represents the state of the frame limiter float BackgroundFPS : Value of the target background fps setting. bool ClearScreen Value of the clear screen when not rendering setting. float CPU : Current CPU usage as % bool Enabled TRUE if the frame limiter feature is currently active. float ForegroundFPS : Value of the target foreground fps setting. float MinSimulationFPS : Value of the minimum simualtion rate setting. float RenderFPS : Current graphics scene frame rate (visible fps). bool SaveByChar TRUE if settings for the frame limiter are being saved by character. float SimulationFPS : Current simulation frame rate (game updates per second). string Status Either \"Foreground\" or \"Background\".","title":"framelimiter Type"},{"location":"reference/top-level-objects/tlo-framelimiter/#usage","text":"Indicates that the frame limiter is enabled: /echo ${FrameLimiter.Enabled}","title":"Usage"},{"location":"reference/top-level-objects/tlo-friends/","tags":["tlo"],"text":"Friends \u00b6 Grants access to your friends dlist. Forms \u00b6 Type Form Description friends Friends Access friends data Associated DataTypes \u00b6 friends Type \u00b6 Members \u00b6 Type Member Description bool Friend [ name ] Returns TRUE if name is on your friend list string Friend [ # ] Returns the name of friend list member # string To String Number of friends on your friends list Usage \u00b6 Example MQScript Lua | Echo the number of friends that you have /echo ${Friends} | Ech othe name of your first friend /echo ${Friends.Friend[1]} -- Echo the number of friends that you have print ( mq . TLO . Friends ()) -- Echo the name of your firsrt friend print ( mq . TLO . Friends . Friend ( 1 )())","title":"Friends"},{"location":"reference/top-level-objects/tlo-friends/#friends","text":"Grants access to your friends dlist.","title":"Friends"},{"location":"reference/top-level-objects/tlo-friends/#forms","text":"Type Form Description friends Friends Access friends data","title":"Forms"},{"location":"reference/top-level-objects/tlo-friends/#associated-datatypes","text":"","title":"Associated DataTypes"},{"location":"reference/top-level-objects/tlo-friends/#friends-type","text":"","title":"friends Type"},{"location":"reference/top-level-objects/tlo-friends/#members","text":"Type Member Description bool Friend [ name ] Returns TRUE if name is on your friend list string Friend [ # ] Returns the name of friend list member # string To String Number of friends on your friends list","title":"Members"},{"location":"reference/top-level-objects/tlo-friends/#usage","text":"Example MQScript Lua | Echo the number of friends that you have /echo ${Friends} | Ech othe name of your first friend /echo ${Friends.Friend[1]} -- Echo the number of friends that you have print ( mq . TLO . Friends ()) -- Echo the name of your firsrt friend print ( mq . TLO . Friends . Friend ( 1 )())","title":"Usage"},{"location":"reference/top-level-objects/tlo-gametime/","tags":["tlo"],"text":"GameTime \u00b6 A time object indicating EQ Game Time. Forms \u00b6 time GameTime Examples \u00b6 /echo ${GameTime.Date} Echos todays in-game date to the chat window.","title":"GameTime"},{"location":"reference/top-level-objects/tlo-gametime/#gametime","text":"A time object indicating EQ Game Time.","title":"GameTime"},{"location":"reference/top-level-objects/tlo-gametime/#forms","text":"time GameTime","title":"Forms"},{"location":"reference/top-level-objects/tlo-gametime/#examples","text":"/echo ${GameTime.Date} Echos todays in-game date to the chat window.","title":"Examples"},{"location":"reference/top-level-objects/tlo-ground/","tags":["tlo"],"text":"Ground \u00b6 Object which references the ground spawn item you have targeted. Forms \u00b6 ground Ground Examples \u00b6 /echo ${Ground.Distance} Echos the distance to the ground item you have targeted.","title":"Ground"},{"location":"reference/top-level-objects/tlo-ground/#ground","text":"Object which references the ground spawn item you have targeted.","title":"Ground"},{"location":"reference/top-level-objects/tlo-ground/#forms","text":"ground Ground","title":"Forms"},{"location":"reference/top-level-objects/tlo-ground/#examples","text":"/echo ${Ground.Distance} Echos the distance to the ground item you have targeted.","title":"Examples"},{"location":"reference/top-level-objects/tlo-grounditemcount/","tags":["tlo"],"text":"GroundItemCount \u00b6 Access to all Groundspawn item count information. Examples \u00b6 /echo There are ${GroundItemCount[apple]} Apples on the ground Output: There are 5 Apples on the ground /echo There are ${GroundItemCount} items on the ground in this zone. Output: There are 12 items on the ground in this zone.","title":"GroundItemCount"},{"location":"reference/top-level-objects/tlo-grounditemcount/#grounditemcount","text":"Access to all Groundspawn item count information.","title":"GroundItemCount"},{"location":"reference/top-level-objects/tlo-grounditemcount/#examples","text":"/echo There are ${GroundItemCount[apple]} Apples on the ground Output: There are 5 Apples on the ground /echo There are ${GroundItemCount} items on the ground in this zone. Output: There are 12 items on the ground in this zone.","title":"Examples"},{"location":"reference/top-level-objects/tlo-group/","tags":["tlo"],"text":"Group \u00b6 Access to all group-related information. Forms \u00b6 group Group Examples \u00b6 /echo ${Group.Leader.ID} Echo Groupleader ID, if any. /echo ${Group.Member[0]} Echo's your own name /echo ${Group.Member[1]} Echo's the next person on the list, after yourself.","title":"Group"},{"location":"reference/top-level-objects/tlo-group/#group","text":"Access to all group-related information.","title":"Group"},{"location":"reference/top-level-objects/tlo-group/#forms","text":"group Group","title":"Forms"},{"location":"reference/top-level-objects/tlo-group/#examples","text":"/echo ${Group.Leader.ID} Echo Groupleader ID, if any. /echo ${Group.Member[0]} Echo's your own name /echo ${Group.Member[1]} Echo's the next person on the list, after yourself.","title":"Examples"},{"location":"reference/top-level-objects/tlo-heading/","tags":["tlo"],"text":"Heading \u00b6 Object that refers to the directional heading to of a location or direction. Forms \u00b6 heading Heading[ # ] Creates a heading object using degrees (clockwise) heading Heading[**y,x ]** Creates a heading object using the heading to this y,x location heading Heading[**N,W ]** Same as above, just an alternate method Examples \u00b6 /echo ${Heading[15].ShortName} Echos the shortname of the heading of 15 degrees. /echo ${Heading[-342,700].ShortName} Echos the shortname heading to the location -342,700","title":"Heading"},{"location":"reference/top-level-objects/tlo-heading/#heading","text":"Object that refers to the directional heading to of a location or direction.","title":"Heading"},{"location":"reference/top-level-objects/tlo-heading/#forms","text":"heading Heading[ # ] Creates a heading object using degrees (clockwise) heading Heading[**y,x ]** Creates a heading object using the heading to this y,x location heading Heading[**N,W ]** Same as above, just an alternate method","title":"Forms"},{"location":"reference/top-level-objects/tlo-heading/#examples","text":"/echo ${Heading[15].ShortName} Echos the shortname of the heading of 15 degrees. /echo ${Heading[-342,700].ShortName} Echos the shortname heading to the location -342,700","title":"Examples"},{"location":"reference/top-level-objects/tlo-if/","tags":["tlo"],"text":"If \u00b6 Warning The If TLO is used to provide inline condition expressions for macros. It is not recommend for use with Lua. Executes an inline condiition, similar to a ternary expression in other languages. Forms \u00b6 string If [ conditions , whentrue , whenfalse ] Performs Math.Calc on conditions , gives whentrue if non-zero, gives whenfalse if zero. Example If I am sitting, stand up. Otherwise, echo \"I am not sitting down\" /docommand ${If[${Me.Sitting},/stand,/echo I am not sitting down]} string If [ conditions | whentrue | whenfalse ] Alternate syntax, behaves the same as above but uses the pipe character as a separator instead of a comma.","title":"If"},{"location":"reference/top-level-objects/tlo-if/#if","text":"Warning The If TLO is used to provide inline condition expressions for macros. It is not recommend for use with Lua. Executes an inline condiition, similar to a ternary expression in other languages.","title":"If"},{"location":"reference/top-level-objects/tlo-if/#forms","text":"string If [ conditions , whentrue , whenfalse ] Performs Math.Calc on conditions , gives whentrue if non-zero, gives whenfalse if zero. Example If I am sitting, stand up. Otherwise, echo \"I am not sitting down\" /docommand ${If[${Me.Sitting},/stand,/echo I am not sitting down]} string If [ conditions | whentrue | whenfalse ] Alternate syntax, behaves the same as above but uses the pipe character as a separator instead of a comma.","title":"Forms"},{"location":"reference/top-level-objects/tlo-illusion/","tags":["tlo"],"text":"Illusion \u00b6 Used to get information about items on your illusions keyring. Forms \u00b6 keyring Mount Access to the illusion keyring. keyringitem Mount [ N ] Retrieves the item in your illusion keyring by index. keyringitem Mount [ name ] Retrieve the item in your illusion keyring by name. A = can be prepended for an exact match. Examples \u00b6 See: DataType:keyring and DataType:keyringitem","title":"Illusion"},{"location":"reference/top-level-objects/tlo-illusion/#illusion","text":"Used to get information about items on your illusions keyring.","title":"Illusion"},{"location":"reference/top-level-objects/tlo-illusion/#forms","text":"keyring Mount Access to the illusion keyring. keyringitem Mount [ N ] Retrieves the item in your illusion keyring by index. keyringitem Mount [ name ] Retrieve the item in your illusion keyring by name. A = can be prepended for an exact match.","title":"Forms"},{"location":"reference/top-level-objects/tlo-illusion/#examples","text":"See: DataType:keyring and DataType:keyringitem","title":"Examples"},{"location":"reference/top-level-objects/tlo-ini/","tags":["tlo"],"text":"Ini \u00b6 Reads value(s) from an ini file located in a relative or absolute path. Forms \u00b6 string Ini [ filename , section , key , default ] The section , key , and default do not need to be given. If section or key are not given, multiple values are read. Section and key may be set to -1 to skip them and give a new value. If the ini is located in a directory other than the root Macros directory is located, you can use a DOS-style filepath (relative or absolute) to locate the ini. If the macro accessing the ini is in the same non-root directory, you will still to provide the (relative or absolute) filepath. ini Ini When passed with no parameters to Ini[] the more robust form of the Ini TLO is used. See below and the reference to the Key datatype for further usage. Examples \u00b6 If sample.ini contains: [SectionOne] key1 = foo key2 = bar [SectionTwo] key3 = foobar /echo ${Ini[sample.ini,SectionOne,key1]} foo /echo ${Ini[sample.ini,SectionOne]} key1|key2|| /echo ${Ini[..\\sample.ini]} SectionOne|SectionTwo|| If sample.ini is in \\Macros\\iniTest folder: /echo ${Ini[sample.ini]} NULL /echo ${Ini[iniTest\\sample.ini]} SectionOne|SectionTwo|| Ini (Robust Usage) \u00b6 The above form of Ini usage is usable or most tasks, but a more robust usage exists. In the more robust form ${Ini} returns an IniType instead of a string. This allows for dealing with duplicate keys as well as looping through a section by index. Examples \u00b6 If sample.ini contains: [SectionOne] key1 = foo key = bar key = foobar > /echo ${Ini.File[sample].Section.Count} 1 > /echo ${Ini.File[sample].Section[SectionOne].Key.Count} 3 > /echo ${Ini.File[sample].Section[SectionOne].Key[key].Count} 2 > /echo ${Ini.File[sample].Section[SectionOne].Key[key1].Value} foo > /echo ${Ini.File[sample].Section[SectionOne].Key[key].ValueAtIndex[2]} foobar > /echo ${Ini.File[sample].Section[SectionOne].Key.ValueAtIndex[2]} bar","title":"Ini"},{"location":"reference/top-level-objects/tlo-ini/#ini","text":"Reads value(s) from an ini file located in a relative or absolute path.","title":"Ini"},{"location":"reference/top-level-objects/tlo-ini/#forms","text":"string Ini [ filename , section , key , default ] The section , key , and default do not need to be given. If section or key are not given, multiple values are read. Section and key may be set to -1 to skip them and give a new value. If the ini is located in a directory other than the root Macros directory is located, you can use a DOS-style filepath (relative or absolute) to locate the ini. If the macro accessing the ini is in the same non-root directory, you will still to provide the (relative or absolute) filepath. ini Ini When passed with no parameters to Ini[] the more robust form of the Ini TLO is used. See below and the reference to the Key datatype for further usage.","title":"Forms"},{"location":"reference/top-level-objects/tlo-ini/#examples","text":"If sample.ini contains: [SectionOne] key1 = foo key2 = bar [SectionTwo] key3 = foobar /echo ${Ini[sample.ini,SectionOne,key1]} foo /echo ${Ini[sample.ini,SectionOne]} key1|key2|| /echo ${Ini[..\\sample.ini]} SectionOne|SectionTwo|| If sample.ini is in \\Macros\\iniTest folder: /echo ${Ini[sample.ini]} NULL /echo ${Ini[iniTest\\sample.ini]} SectionOne|SectionTwo||","title":"Examples"},{"location":"reference/top-level-objects/tlo-ini/#ini-robust-usage","text":"The above form of Ini usage is usable or most tasks, but a more robust usage exists. In the more robust form ${Ini} returns an IniType instead of a string. This allows for dealing with duplicate keys as well as looping through a section by index.","title":"Ini (Robust Usage)"},{"location":"reference/top-level-objects/tlo-ini/#examples_1","text":"If sample.ini contains: [SectionOne] key1 = foo key = bar key = foobar > /echo ${Ini.File[sample].Section.Count} 1 > /echo ${Ini.File[sample].Section[SectionOne].Key.Count} 3 > /echo ${Ini.File[sample].Section[SectionOne].Key[key].Count} 2 > /echo ${Ini.File[sample].Section[SectionOne].Key[key1].Value} foo > /echo ${Ini.File[sample].Section[SectionOne].Key[key].ValueAtIndex[2]} foobar > /echo ${Ini.File[sample].Section[SectionOne].Key.ValueAtIndex[2]} bar","title":"Examples"},{"location":"reference/top-level-objects/tlo-int/","tags":["tlo"],"text":"Int \u00b6 Object that creates an integer from n. Forms \u00b6 int Int [n] Parses whatever value for n is provided and converts it into an int . Examples \u00b6 /echo ${Int[123].Hex} Echos the result of the conversion of 123 to an int in hexadecimal. /echo ${Int[textstringhere]} Echos a zero - useful if passing a string to a macro or subroutine that could be a text string or a number and you want to do different actions depending on what you recieve /echo ${Int[123]} Echos 123","title":"Int"},{"location":"reference/top-level-objects/tlo-int/#int","text":"Object that creates an integer from n.","title":"Int"},{"location":"reference/top-level-objects/tlo-int/#forms","text":"int Int [n] Parses whatever value for n is provided and converts it into an int .","title":"Forms"},{"location":"reference/top-level-objects/tlo-int/#examples","text":"/echo ${Int[123].Hex} Echos the result of the conversion of 123 to an int in hexadecimal. /echo ${Int[textstringhere]} Echos a zero - useful if passing a string to a macro or subroutine that could be a text string or a number and you want to do different actions depending on what you recieve /echo ${Int[123]} Echos 123","title":"Examples"},{"location":"reference/top-level-objects/tlo-itemtarget/","tags":["tlo"],"text":"ItemTarget \u00b6 Gives access to the ground item that is previously targeted using /itemtarget . Forms \u00b6 ground ItemTarget Returns the current ground item target.","title":"ItemTarget"},{"location":"reference/top-level-objects/tlo-itemtarget/#itemtarget","text":"Gives access to the ground item that is previously targeted using /itemtarget .","title":"ItemTarget"},{"location":"reference/top-level-objects/tlo-itemtarget/#forms","text":"ground ItemTarget Returns the current ground item target.","title":"Forms"},{"location":"reference/top-level-objects/tlo-lastspawn/","tags":["tlo"],"text":"LastSpawn \u00b6 Information about the spawns that have occurred since you entered the zone. When you enter a zone you dont know the spawn order of anything already there, just anything that spawns while you are in the zone. The useful thing about ${LastSpawn[-1]} is just being able to get the first spawn in the list which you might use in conjunction with other spawn members to go through the entire spawn list in a loop. Forms \u00b6 spawn LastSpawn[**n ]** The nth latest spawn (chronological order) spawn LastSpawn[ -n**]** The nth oldest spawn (chronological order) Examples \u00b6 /echo ${LastSpawn[10].ID} Echos the spawnID of the 10 th mob to spawn in the zone /echo ${LastSpawn[-10]} Echos the name of the 10 th to last spawn in the zone","title":"LastSpawn"},{"location":"reference/top-level-objects/tlo-lastspawn/#lastspawn","text":"Information about the spawns that have occurred since you entered the zone. When you enter a zone you dont know the spawn order of anything already there, just anything that spawns while you are in the zone. The useful thing about ${LastSpawn[-1]} is just being able to get the first spawn in the list which you might use in conjunction with other spawn members to go through the entire spawn list in a loop.","title":"LastSpawn"},{"location":"reference/top-level-objects/tlo-lastspawn/#forms","text":"spawn LastSpawn[**n ]** The nth latest spawn (chronological order) spawn LastSpawn[ -n**]** The nth oldest spawn (chronological order)","title":"Forms"},{"location":"reference/top-level-objects/tlo-lastspawn/#examples","text":"/echo ${LastSpawn[10].ID} Echos the spawnID of the 10 th mob to spawn in the zone /echo ${LastSpawn[-10]} Echos the name of the 10 th to last spawn in the zone","title":"Examples"},{"location":"reference/top-level-objects/tlo-lineofsight/","tags":["tlo"],"text":"LineOfSight \u00b6 Object that is used to check if there is Line of Sight betwen two locations. Note: For ISXEQ all 6 parameters are required and will return NULL otherwise Forms \u00b6 bool LineOfSight[**y,x,z:y,x,z ]** bool LineOfSight[**y,x,z,y,x,z ]** (For ISXEQ) Examples \u00b6 /echo ${LineOfSight[20,40,-20:100,-300,70]} Returns TRUE if Line of Sight is clear between the two locations","title":"LineOfSight"},{"location":"reference/top-level-objects/tlo-lineofsight/#lineofsight","text":"Object that is used to check if there is Line of Sight betwen two locations. Note: For ISXEQ all 6 parameters are required and will return NULL otherwise","title":"LineOfSight"},{"location":"reference/top-level-objects/tlo-lineofsight/#forms","text":"bool LineOfSight[**y,x,z:y,x,z ]** bool LineOfSight[**y,x,z,y,x,z ]** (For ISXEQ)","title":"Forms"},{"location":"reference/top-level-objects/tlo-lineofsight/#examples","text":"/echo ${LineOfSight[20,40,-20:100,-300,70]} Returns TRUE if Line of Sight is clear between the two locations","title":"Examples"},{"location":"reference/top-level-objects/tlo-macro/","tags":["tlo"],"text":"Macro \u00b6 Forms \u00b6 macro Macro Returns an object related to the macro that is currently running. Example /echo This macro has been running for: ${Macro.RunTime} seconds","title":"Macro"},{"location":"reference/top-level-objects/tlo-macro/#macro","text":"","title":"Macro"},{"location":"reference/top-level-objects/tlo-macro/#forms","text":"macro Macro Returns an object related to the macro that is currently running. Example /echo This macro has been running for: ${Macro.RunTime} seconds","title":"Forms"},{"location":"reference/top-level-objects/tlo-macroquest/","tags":["tlo"],"text":"MacroQuest \u00b6 Creates an object related to MacroQuest information. Forms \u00b6 macroquest MacroQuest Examples \u00b6 /echo ${MacroQuest.LastTell} Returns the name of the last person that sent you a tell.","title":"MacroQuest"},{"location":"reference/top-level-objects/tlo-macroquest/#macroquest","text":"Creates an object related to MacroQuest information.","title":"MacroQuest"},{"location":"reference/top-level-objects/tlo-macroquest/#forms","text":"macroquest MacroQuest","title":"Forms"},{"location":"reference/top-level-objects/tlo-macroquest/#examples","text":"/echo ${MacroQuest.LastTell} Returns the name of the last person that sent you a tell.","title":"Examples"},{"location":"reference/top-level-objects/tlo-math/","tags":["tlo"],"text":"Math \u00b6 Creates a Math object which gives allows access to the math type members. Forms \u00b6 math Math Returns the math object which is used to perform math operations. Examples \u00b6 /echo ${Math.Calc[3-1]} Echoes 2.00 /echo ${Math.Calc[49%6+25]} Echoes the result of 49 modulo 6 + 25, or 1 + 25 /echo ${Math.Sqrt[49]} Echoes the square root of 49 /echo ${Math.Rand[500]} Echoes a random number between 1 and 500 Math.Rand now takes an optional min argument so you can get a random number between 2 variables. /echo ${Math.Rand[5,10]} this would return a randum number between 5 and 10.","title":"Math"},{"location":"reference/top-level-objects/tlo-math/#math","text":"Creates a Math object which gives allows access to the math type members.","title":"Math"},{"location":"reference/top-level-objects/tlo-math/#forms","text":"math Math Returns the math object which is used to perform math operations.","title":"Forms"},{"location":"reference/top-level-objects/tlo-math/#examples","text":"/echo ${Math.Calc[3-1]} Echoes 2.00 /echo ${Math.Calc[49%6+25]} Echoes the result of 49 modulo 6 + 25, or 1 + 25 /echo ${Math.Sqrt[49]} Echoes the square root of 49 /echo ${Math.Rand[500]} Echoes a random number between 1 and 500 Math.Rand now takes an optional min argument so you can get a random number between 2 variables. /echo ${Math.Rand[5,10]} this would return a randum number between 5 and 10.","title":"Examples"},{"location":"reference/top-level-objects/tlo-me/","tags":["tlo"],"text":"Me \u00b6 Character object which allows you to get properties of you as a character. Forms \u00b6 character Me Returns the character object which provides access to information about your own character. ${Me} is a character object, so has access to all the properties of the character type. The character type also has access to the properties of the spawn type. Examples \u00b6 /echo Current Mana: ${Me.PctMana}%","title":"Me"},{"location":"reference/top-level-objects/tlo-me/#me","text":"Character object which allows you to get properties of you as a character.","title":"Me"},{"location":"reference/top-level-objects/tlo-me/#forms","text":"character Me Returns the character object which provides access to information about your own character. ${Me} is a character object, so has access to all the properties of the character type. The character type also has access to the properties of the spawn type.","title":"Forms"},{"location":"reference/top-level-objects/tlo-me/#examples","text":"/echo Current Mana: ${Me.PctMana}%","title":"Examples"},{"location":"reference/top-level-objects/tlo-mercenary/","tags":["tlo"],"text":"Mercenary \u00b6 Object used to get information about your mercenary. Forms \u00b6 mercenary Mercenary Examples \u00b6 /echo ${Mercenary.Stance} Displays the current stance of the mercenary based on the type (Passive, Balanced, Aggressive, etc.) /echo ${Mercenary.State} Displays whether the mercenary is suspended or not.","title":"Mercenary"},{"location":"reference/top-level-objects/tlo-mercenary/#mercenary","text":"Object used to get information about your mercenary.","title":"Mercenary"},{"location":"reference/top-level-objects/tlo-mercenary/#forms","text":"mercenary Mercenary","title":"Forms"},{"location":"reference/top-level-objects/tlo-mercenary/#examples","text":"/echo ${Mercenary.Stance} Displays the current stance of the mercenary based on the type (Passive, Balanced, Aggressive, etc.) /echo ${Mercenary.State} Displays whether the mercenary is suspended or not.","title":"Examples"},{"location":"reference/top-level-objects/tlo-merchant/","tags":["tlo"],"text":"Merchant \u00b6 Object that interacts with the currently active merchant. Forms \u00b6 merchant Merchant Examples \u00b6 /echo ${Merchant.Name} Echos the name of the currently open merchant.","title":"Merchant"},{"location":"reference/top-level-objects/tlo-merchant/#merchant","text":"Object that interacts with the currently active merchant.","title":"Merchant"},{"location":"reference/top-level-objects/tlo-merchant/#forms","text":"merchant Merchant","title":"Forms"},{"location":"reference/top-level-objects/tlo-merchant/#examples","text":"/echo ${Merchant.Name} Echos the name of the currently open merchant.","title":"Examples"},{"location":"reference/top-level-objects/tlo-mount/","tags":["tlo"],"text":"Mount \u00b6 Used to get information about items on your Mount keyring. Forms \u00b6 keyring Mount Access to the Mount keyring. keyringitem Mount [ N ] Retrieves the item in your mount keyring by index. keyringitem Mount [ name ] Retrieve the item in your mount keyring by name. A = can be prepended for an exact match.","title":"Mount"},{"location":"reference/top-level-objects/tlo-mount/#mount","text":"Used to get information about items on your Mount keyring.","title":"Mount"},{"location":"reference/top-level-objects/tlo-mount/#forms","text":"keyring Mount Access to the Mount keyring. keyringitem Mount [ N ] Retrieves the item in your mount keyring by index. keyringitem Mount [ name ] Retrieve the item in your mount keyring by name. A = can be prepended for an exact match.","title":"Forms"},{"location":"reference/top-level-objects/tlo-nearestspawn/","tags":["tlo"],"text":"NearestSpawn \u00b6 Object that is used in finding spawns nearest to you. Forms \u00b6 spawn NearestSpawn [ N ] The Nth nearest spawn spawn NearestSpawn [ search ] The nearest spawn matching this search string (see Spawn Search ). spawn NearestSpawn [ N , search ] The Nth nearest spawn matching this search string (see Spawn Search ). Examples \u00b6 /echo ${NearestSpawn[npc radius 100 \"orc pawn\"]} Finds the npc containing orc pawn in its name that is within 100 of you. /echo ${NearestSpawn[2]} Finds the closest spawn to you ( ${NearestSpawn[1]} will always match yourself).","title":"NearestSpawn"},{"location":"reference/top-level-objects/tlo-nearestspawn/#nearestspawn","text":"Object that is used in finding spawns nearest to you.","title":"NearestSpawn"},{"location":"reference/top-level-objects/tlo-nearestspawn/#forms","text":"spawn NearestSpawn [ N ] The Nth nearest spawn spawn NearestSpawn [ search ] The nearest spawn matching this search string (see Spawn Search ). spawn NearestSpawn [ N , search ] The Nth nearest spawn matching this search string (see Spawn Search ).","title":"Forms"},{"location":"reference/top-level-objects/tlo-nearestspawn/#examples","text":"/echo ${NearestSpawn[npc radius 100 \"orc pawn\"]} Finds the npc containing orc pawn in its name that is within 100 of you. /echo ${NearestSpawn[2]} Finds the closest spawn to you ( ${NearestSpawn[1]} will always match yourself).","title":"Examples"},{"location":"reference/top-level-objects/tlo-pet/","tags":["tlo"],"text":"Pet \u00b6 Pet object which allows you to get properties of your pet. Forms \u00b6 pet Pet Provides access to your current Pet. The pet type extends from spawn, and as such has access to the properties of the spawn type as well. Examples \u00b6 /echo My Pet's Stance is currently set to: ${Pet.Stance} /echo My Pet's Name: ${Pet.CleanName}% /echo My Pet's Target has gone Berserk! ${Pet.Target.IsBerserk}","title":"Pet"},{"location":"reference/top-level-objects/tlo-pet/#pet","text":"Pet object which allows you to get properties of your pet.","title":"Pet"},{"location":"reference/top-level-objects/tlo-pet/#forms","text":"pet Pet Provides access to your current Pet. The pet type extends from spawn, and as such has access to the properties of the spawn type as well.","title":"Forms"},{"location":"reference/top-level-objects/tlo-pet/#examples","text":"/echo My Pet's Stance is currently set to: ${Pet.Stance} /echo My Pet's Name: ${Pet.CleanName}% /echo My Pet's Target has gone Berserk! ${Pet.Target.IsBerserk}","title":"Examples"},{"location":"reference/top-level-objects/tlo-plugin/","tags":["tlo"],"text":"Plugin \u00b6 Object that has access to members that provide information on a plugin. Forms \u00b6 plugin Plugin [ name ] Finds plugin by name, uses full name match, case insensitive. plugin Plugin [ N ] Plugin by index, starting with 1 and stopping whenever the list runs out of plugins. Examples \u00b6 To see if a plugin is loaded: MQScript Lua /if (${Plugin[MQ2MoveUtils].IsLoaded}) { /echo MQ2MoveUtils plugin is loaded! } if mq . TLO . Plugin ( 'MQ2MoveUtils' ). IsLoaded () then print ( 'MQ2MoveUtils plugin is loaded!' ) end To load a plugin if needed: MQScript /if (!${Plugin[MQ2MoveUtils].IsLoaded}) { /plugin MQ2MoveUtils noauto /if (!${Plugin[MQ2MoveUtils].IsLoaded}) { /echo To Use this macro you need to have MQ2MoveUtils Loaded /endmacro } }","title":"Plugin"},{"location":"reference/top-level-objects/tlo-plugin/#plugin","text":"Object that has access to members that provide information on a plugin.","title":"Plugin"},{"location":"reference/top-level-objects/tlo-plugin/#forms","text":"plugin Plugin [ name ] Finds plugin by name, uses full name match, case insensitive. plugin Plugin [ N ] Plugin by index, starting with 1 and stopping whenever the list runs out of plugins.","title":"Forms"},{"location":"reference/top-level-objects/tlo-plugin/#examples","text":"To see if a plugin is loaded: MQScript Lua /if (${Plugin[MQ2MoveUtils].IsLoaded}) { /echo MQ2MoveUtils plugin is loaded! } if mq . TLO . Plugin ( 'MQ2MoveUtils' ). IsLoaded () then print ( 'MQ2MoveUtils plugin is loaded!' ) end To load a plugin if needed: MQScript /if (!${Plugin[MQ2MoveUtils].IsLoaded}) { /plugin MQ2MoveUtils noauto /if (!${Plugin[MQ2MoveUtils].IsLoaded}) { /echo To Use this macro you need to have MQ2MoveUtils Loaded /endmacro } }","title":"Examples"},{"location":"reference/top-level-objects/tlo-raid/","tags":["tlo"],"text":"Raid \u00b6 Object that has access to members that provide information on your raid. Forms \u00b6 raid Raid Examples \u00b6 /echo ${Raid.Members} Echos the number of members in your raid","title":"Raid"},{"location":"reference/top-level-objects/tlo-raid/#raid","text":"Object that has access to members that provide information on your raid.","title":"Raid"},{"location":"reference/top-level-objects/tlo-raid/#forms","text":"raid Raid","title":"Forms"},{"location":"reference/top-level-objects/tlo-raid/#examples","text":"/echo ${Raid.Members} Echos the number of members in your raid","title":"Examples"},{"location":"reference/top-level-objects/tlo-range/","tags":["tlo"],"text":"Range \u00b6 Test if n is inside a range of 2 numbers or between 2 numbers Forms \u00b6 range Range","title":"Range"},{"location":"reference/top-level-objects/tlo-range/#range","text":"Test if n is inside a range of 2 numbers or between 2 numbers","title":"Range"},{"location":"reference/top-level-objects/tlo-range/#forms","text":"range Range","title":"Forms"},{"location":"reference/top-level-objects/tlo-select/","tags":["tlo"],"text":"Select \u00b6 Object used to determine if a match was made to argument in the given set of values. Forms \u00b6 int Select [ argument , value1 [, value2 ,...]] Example Given: /declare thing string outer foo The following are true: | Outputs: 1 /echo ${Select[${thing},foo,bar,baz]} | Outputs: 2 /echo ${Select[${thing},bin,foo,baz]} | Outputs: 3 /echo ${Select[${thing},bin,baz,foo]} | Outputs: 0 /echo ${Select[${thing},bin,bar,baz]} Example /if (${Select[${Target.Class.ShortName},CLR,DRU,SHM]} > 0) { /echo Target is a healer }","title":"Select"},{"location":"reference/top-level-objects/tlo-select/#select","text":"Object used to determine if a match was made to argument in the given set of values.","title":"Select"},{"location":"reference/top-level-objects/tlo-select/#forms","text":"int Select [ argument , value1 [, value2 ,...]] Example Given: /declare thing string outer foo The following are true: | Outputs: 1 /echo ${Select[${thing},foo,bar,baz]} | Outputs: 2 /echo ${Select[${thing},bin,foo,baz]} | Outputs: 3 /echo ${Select[${thing},bin,baz,foo]} | Outputs: 0 /echo ${Select[${thing},bin,bar,baz]} Example /if (${Select[${Target.Class.ShortName},CLR,DRU,SHM]} > 0) { /echo Target is a healer }","title":"Forms"},{"location":"reference/top-level-objects/tlo-selecteditem/","tags":["tlo"],"text":"SelectedItem \u00b6 Used to return information on the object that is selected in your own inventory while using a merchant. Forms \u00b6 item SelectedItem Example MQScript Lua /if (!${SelectedItem.ID}) { /echo Nothing in your inventory is selected } else { /echo Size of the item: ${SelectedItem.Size} /if (${SelectedItem.Charges} < 1) { /echo the selected item is out of charges } /if (${SelectedItem.Name.Equal[rusty dagger]}) { /echo the selected item is a rusty dagger } } if mq . TLO . SelectedItem () == nil then print ( 'Nothing in your inventory is selected' ) else print ( 'Size of the item: ' , mq . TLO . SelectedItem . Size ()) if mq . TLO . SelectedItem . Charges () < 1 then print ( 'The selected item is out of charges' ) end if mq . TLO . SelectedItem . Name . Equal ( 'rusty dagger' )() then print ( 'The selected item is a rusty dagger' ) end end","title":"SelectedItem"},{"location":"reference/top-level-objects/tlo-selecteditem/#selecteditem","text":"Used to return information on the object that is selected in your own inventory while using a merchant.","title":"SelectedItem"},{"location":"reference/top-level-objects/tlo-selecteditem/#forms","text":"item SelectedItem Example MQScript Lua /if (!${SelectedItem.ID}) { /echo Nothing in your inventory is selected } else { /echo Size of the item: ${SelectedItem.Size} /if (${SelectedItem.Charges} < 1) { /echo the selected item is out of charges } /if (${SelectedItem.Name.Equal[rusty dagger]}) { /echo the selected item is a rusty dagger } } if mq . TLO . SelectedItem () == nil then print ( 'Nothing in your inventory is selected' ) else print ( 'Size of the item: ' , mq . TLO . SelectedItem . Size ()) if mq . TLO . SelectedItem . Charges () < 1 then print ( 'The selected item is out of charges' ) end if mq . TLO . SelectedItem . Name . Equal ( 'rusty dagger' )() then print ( 'The selected item is a rusty dagger' ) end end","title":"Forms"},{"location":"reference/top-level-objects/tlo-skill/","tags":["tlo"],"text":"Skill \u00b6 Object used to get information on your character's skills. Forms \u00b6 skill Skill [ name ] Retrieve skill by name skill Skill [ N ] Retrieve skill by number Examples \u00b6 /echo ${Skill[1].ReuseTime} Displays the reuse time of skill 1 /echo ${Skill[backstab].ID} Displays the skill number of the backstab skill","title":"Skill"},{"location":"reference/top-level-objects/tlo-skill/#skill","text":"Object used to get information on your character's skills.","title":"Skill"},{"location":"reference/top-level-objects/tlo-skill/#forms","text":"skill Skill [ name ] Retrieve skill by name skill Skill [ N ] Retrieve skill by number","title":"Forms"},{"location":"reference/top-level-objects/tlo-skill/#examples","text":"/echo ${Skill[1].ReuseTime} Displays the reuse time of skill 1 /echo ${Skill[backstab].ID} Displays the skill number of the backstab skill","title":"Examples"},{"location":"reference/top-level-objects/tlo-spawn/","tags":["tlo"],"text":"Spawn \u00b6 Description \u00b6 Object used to get information on a specific spawn. Uses the filters under Spawn Search . Forms \u00b6 spawn Spawn [ N ] Spawn matching ID N . spawn Spawn [ search string ] Any spawns matching search string . See Spawn Search . Examples \u00b6 /echo ${Spawn[1000]} Displays the name of the spawn with id number 1000. /target ${Spawn[npc radius 500 trakanon]} Targets the npc with the name Trakanon only if within a radius of 500.","title":"Spawn"},{"location":"reference/top-level-objects/tlo-spawn/#spawn","text":"","title":"Spawn"},{"location":"reference/top-level-objects/tlo-spawn/#description","text":"Object used to get information on a specific spawn. Uses the filters under Spawn Search .","title":"Description"},{"location":"reference/top-level-objects/tlo-spawn/#forms","text":"spawn Spawn [ N ] Spawn matching ID N . spawn Spawn [ search string ] Any spawns matching search string . See Spawn Search .","title":"Forms"},{"location":"reference/top-level-objects/tlo-spawn/#examples","text":"/echo ${Spawn[1000]} Displays the name of the spawn with id number 1000. /target ${Spawn[npc radius 500 trakanon]} Targets the npc with the name Trakanon only if within a radius of 500.","title":"Examples"},{"location":"reference/top-level-objects/tlo-spawncount/","tags":["tlo"],"text":"SpawnCount \u00b6 Object used to count spawns based on a set of queries. Uses the filters under Spawn Search . Forms \u00b6 int SpawnCount Total number of spawns in current zone int SpawnCount [ search string ] Total number of spawns in current zone matching the search string . See Spawn Search . Examples \u00b6 /echo ${SpawnCount} Displays the count of all spawns. /echo ${SpawnCount[range 45 50]} Displays the count of all spawns in the level range of 45 to 50. /echo ${SpawnCount[npc radius 100]} Displays count of all NPCs within a radius of 100.","title":"SpawnCount"},{"location":"reference/top-level-objects/tlo-spawncount/#spawncount","text":"Object used to count spawns based on a set of queries. Uses the filters under Spawn Search .","title":"SpawnCount"},{"location":"reference/top-level-objects/tlo-spawncount/#forms","text":"int SpawnCount Total number of spawns in current zone int SpawnCount [ search string ] Total number of spawns in current zone matching the search string . See Spawn Search .","title":"Forms"},{"location":"reference/top-level-objects/tlo-spawncount/#examples","text":"/echo ${SpawnCount} Displays the count of all spawns. /echo ${SpawnCount[range 45 50]} Displays the count of all spawns in the level range of 45 to 50. /echo ${SpawnCount[npc radius 100]} Displays count of all NPCs within a radius of 100.","title":"Examples"},{"location":"reference/top-level-objects/tlo-spell/","tags":["tlo"],"text":"Spell \u00b6 Object used to return information on a spell by name or by ID. Forms \u00b6 spell Spell [ N ] Find spell by ID spell Spell [ name ] Find spell by name Examples \u00b6 /echo ${Spell[Splurt].ID} Will return 1620 /echo ${Spell[1620].Duration} Will return 16 (ie. 16 ticks)","title":"Spell"},{"location":"reference/top-level-objects/tlo-spell/#spell","text":"Object used to return information on a spell by name or by ID.","title":"Spell"},{"location":"reference/top-level-objects/tlo-spell/#forms","text":"spell Spell [ N ] Find spell by ID spell Spell [ name ] Find spell by name","title":"Forms"},{"location":"reference/top-level-objects/tlo-spell/#examples","text":"/echo ${Spell[Splurt].ID} Will return 1620 /echo ${Spell[1620].Duration} Will return 16 (ie. 16 ticks)","title":"Examples"},{"location":"reference/top-level-objects/tlo-switch/","tags":["tlo"],"text":"Switch \u00b6 Object used when you want to find information on targetted doors or switches such as the portals in PoK. Forms \u00b6 switch Switch Examples \u00b6 /echo ${Switch.Heading} Returns the direction to the switch /echo ${Switch.Open} Returns TRUE or FALSE","title":"Switch"},{"location":"reference/top-level-objects/tlo-switch/#switch","text":"Object used when you want to find information on targetted doors or switches such as the portals in PoK.","title":"Switch"},{"location":"reference/top-level-objects/tlo-switch/#forms","text":"switch Switch","title":"Forms"},{"location":"reference/top-level-objects/tlo-switch/#examples","text":"/echo ${Switch.Heading} Returns the direction to the switch /echo ${Switch.Open} Returns TRUE or FALSE","title":"Examples"},{"location":"reference/top-level-objects/tlo-target/","tags":["tlo"],"text":"Target \u00b6 Object used to get information about your current target. Forms \u00b6 spawn Target Returns the spawn object for the current target. Note These examples are not specific to target but work on any spawn type. Note To display the target's unique name as sent by EQ use ${Target} or ${Target.Name} This will return a_commander01 on a living mob or a_commander's_corpse0 on a dead mob. To display the target's clean name (also similar to %t on living mobs) use ${Target.CleanName} or ${Target.DisplayName} This will return a commander on a living mob or a commander's corpse on a dead mob. To display the name as used by '%t' on a corpse use the ${Target.DisplayName} This will return a commander when the corpse is targetted. Example To display the spell ID of the snare debuff use ${Target.Snared.ID} /echo ${Target.Snared.ID} Example of using new Slowed target datatype /echo ${Target.Slowed.Name} will fade in ${Target.Slowed.Duration.TotalSeconds}s returns \"Tepid Deeds will fade in 114s\" Example of using new Mezzed target datatype /echo ${Target} will break mezz in ${Target.Mezzed.Duration.TotalSeconds}s` returns \"a_pyre_beetle48 will break mezz in 66s\"","title":"Target"},{"location":"reference/top-level-objects/tlo-target/#target","text":"Object used to get information about your current target.","title":"Target"},{"location":"reference/top-level-objects/tlo-target/#forms","text":"spawn Target Returns the spawn object for the current target. Note These examples are not specific to target but work on any spawn type. Note To display the target's unique name as sent by EQ use ${Target} or ${Target.Name} This will return a_commander01 on a living mob or a_commander's_corpse0 on a dead mob. To display the target's clean name (also similar to %t on living mobs) use ${Target.CleanName} or ${Target.DisplayName} This will return a commander on a living mob or a commander's corpse on a dead mob. To display the name as used by '%t' on a corpse use the ${Target.DisplayName} This will return a commander when the corpse is targetted. Example To display the spell ID of the snare debuff use ${Target.Snared.ID} /echo ${Target.Snared.ID} Example of using new Slowed target datatype /echo ${Target.Slowed.Name} will fade in ${Target.Slowed.Duration.TotalSeconds}s returns \"Tepid Deeds will fade in 114s\" Example of using new Mezzed target datatype /echo ${Target} will break mezz in ${Target.Mezzed.Duration.TotalSeconds}s` returns \"a_pyre_beetle48 will break mezz in 66s\"","title":"Forms"},{"location":"reference/top-level-objects/tlo-task/","tags":["tlo"],"text":"Task \u00b6 Object used to return information on a current Task. Forms \u00b6 task Task Examples \u00b6 /echo ${Task[1].Title} Will return the name of the first task, or the current shared task if one exists.","title":"Task"},{"location":"reference/top-level-objects/tlo-task/#task","text":"Object used to return information on a current Task.","title":"Task"},{"location":"reference/top-level-objects/tlo-task/#forms","text":"task Task","title":"Forms"},{"location":"reference/top-level-objects/tlo-task/#examples","text":"/echo ${Task[1].Title} Will return the name of the first task, or the current shared task if one exists.","title":"Examples"},{"location":"reference/top-level-objects/tlo-time/","tags":["tlo"],"text":"Time \u00b6 Object used to return information on real time, not game time. Forms \u00b6 time Time Examples \u00b6 /echo ${Time.DayOfWeek} Returns the day of the week","title":"Time"},{"location":"reference/top-level-objects/tlo-time/#time","text":"Object used to return information on real time, not game time.","title":"Time"},{"location":"reference/top-level-objects/tlo-time/#forms","text":"time Time","title":"Forms"},{"location":"reference/top-level-objects/tlo-time/#examples","text":"/echo ${Time.DayOfWeek} Returns the day of the week","title":"Examples"},{"location":"reference/top-level-objects/tlo-type/","tags":["tlo"],"text":"Type \u00b6 Used to get information on data types. Forms \u00b6 type Type [ name ] Examples \u00b6 Determines if a member of a type exists: /echo ${Type[spawn].Member[ID]} Enumerate members of a type using a loop: /for n 1 to 100 /echo ${Type[spawn].Member[${n}]} /next n","title":"Type"},{"location":"reference/top-level-objects/tlo-type/#type","text":"Used to get information on data types.","title":"Type"},{"location":"reference/top-level-objects/tlo-type/#forms","text":"type Type [ name ]","title":"Forms"},{"location":"reference/top-level-objects/tlo-type/#examples","text":"Determines if a member of a type exists: /echo ${Type[spawn].Member[ID]} Enumerate members of a type using a loop: /for n 1 to 100 /echo ${Type[spawn].Member[${n}]} /next n","title":"Examples"},{"location":"reference/top-level-objects/tlo-window/","tags":["tlo"],"text":"Window \u00b6 Used to find information on a particular UI window. You can display a list of window names using the /windows command or by using the window inspector. Forms \u00b6 window Window [ name ]","title":"Window"},{"location":"reference/top-level-objects/tlo-window/#window","text":"Used to find information on a particular UI window. You can display a list of window names using the /windows command or by using the window inspector.","title":"Window"},{"location":"reference/top-level-objects/tlo-window/#forms","text":"window Window [ name ]","title":"Forms"},{"location":"reference/top-level-objects/tlo-zone/","tags":["tlo"],"text":"Zone \u00b6 Used to find information about a particular zone. Forms \u00b6 currentzone Zone Retrieves the current zone information zone Zone [ N ] Retrieves information about a zone by zone ID. If this zone is the current zone, then this will return currentzone . zone Zone [ shortname ] Retrieves information about a zone by short name. If this zone is the current zone, then this will return currentzone . Examples \u00b6 /echo ${Zone.Type} Returns an integer representing the zone you are currently in. /echo ${Zone.Indoor} Returns TRUE if you're indoors, FALSE if not. /echo ${Zone[zonename].ID} Returns the ID of zonename , even if you aren't in the zone. /echo ${Zone[zoneid].ShortName} Returns the short name of the zone with ID zoneid .","title":"Zone"},{"location":"reference/top-level-objects/tlo-zone/#zone","text":"Used to find information about a particular zone.","title":"Zone"},{"location":"reference/top-level-objects/tlo-zone/#forms","text":"currentzone Zone Retrieves the current zone information zone Zone [ N ] Retrieves information about a zone by zone ID. If this zone is the current zone, then this will return currentzone . zone Zone [ shortname ] Retrieves information about a zone by short name. If this zone is the current zone, then this will return currentzone .","title":"Forms"},{"location":"reference/top-level-objects/tlo-zone/#examples","text":"/echo ${Zone.Type} Returns an integer representing the zone you are currently in. /echo ${Zone.Indoor} Returns TRUE if you're indoors, FALSE if not. /echo ${Zone[zonename].ID} Returns the ID of zonename , even if you aren't in the zone. /echo ${Zone[zoneid].ShortName} Returns the short name of the zone with ID zoneid .","title":"Examples"},{"location":"tags/","text":"Tags \u00b6 command \u00b6 /mqclear /mqfont /mqmin /custombind /classhud /defaulthud /hud /loadhud /zonehud /inote /highlight /mapclick /mapfilter /maphide /mapnames /mapshow /i /iconnect /istatus /telnet /aa /advloot /alert /alias /altkey /banklist /beep /beepontells /bind /break /call /caption /captioncolor /cast /cecho /charinfo /cleanup /clearerrors /click /combine /continue /ctrlkey /declare /delay /deletevar /destroy /docommand /doevents /doors /doortarget /dosocial /drop /dumpbinds /echo /endmacro /eqtarget /exec /face /filter /flashontells /for /foreground /goto /help /hotbutton /identify /if /ini /invoke /itemnotify /items /itemtarget /keepkeys /keypress /listmacros /loadcfg /loadspells /location /loginname /look /lootall /macro /makemevisible /memspell /mouseto /mqcopylayout /mqlog /mqpause /mqtarget /multiline /netstatusxpos /netstatusypos /next /nomodkey /noparse /notify /plugin /popcustom /popup /popupecho /ranged /reloadui /removeaura /removebuff /removelev /removepetbuff /return /screenmode /selectitem /sellitem /setautorun /seterror /setprio /setwintitle /shiftkey /skills /spellslotinfo /spew /squelch /substitute /target /timed /timestamp /unload /updateitems /useitem /varcalc /vardata /varset /where /while /who /whofilter /whotarget /windows /windowstate /lootnodrop datatype \u00b6 DataType:bazaar DataType:bazaaritem MQ2EQIM:DataType:buddy DataType:FPS MQ2IRC:DataType:irc achievement achievementcat achievementobj altability argb array augtype auratype bandolier body bool buff byte cachedbuff character charselectlist class corpse currentzone deity double dynamiczone dzmember dztimer everquest evolving fellowship fellowshipmember float ground group groupmember heading ini inifile inifilesection inifilesectionkey int int64 invslot item itemspell keyring keyringitem macro macroquest math mercenary merchant pet plugin race raid raidmember range skill spawn spell string switch target task taskmember ticks time timer timestamp type window worldlocation xtarget zone lua \u00b6 Lua Events and Binds LuaRocks Modules MacroScript to Lua macro \u00b6 AAPurchase.inc Advanced Fishing Afcleric.mac - nils AutoBot.mac-V4.28+ AutoBot.mac Barter Cleric.mac - nytemyst Clockwork Grease Maker Defense.inc DRShmbot GemOpt.inc GenBot Group Language Trainer Guild Buff Bot Loot Any Corpse Modbot 4.0 ModBot Necro Helper Ninjadvloot.inc Puller.inc QuickBeg.inc RDCommon.ini Related Include Files Rogue Helper Command List Rogue Helper Script Examples Sk.mac - nytemyst Snare Spell Routines.inc Spell Skill Trainer Wait4Rez.inc plugin \u00b6 MQ2AutoLogin MQ2Chat MQ2EQBugFix MQ2Labels MQ2Bzsrch MQ2ChatWnd MQ2CustomBinds MQ2HUD MQ2ItemDisplay MQ2Map MQ2Web MQ2EQIM MQ2FPS MQ2IRC MQ2Telnet tlo \u00b6 TLO:Bazaar TLO:FPS TLO:Irc Achievement AdvLoot Alert Alias AltAbility Bool Corpse Cursor Defined DisplayItem DoorTarget DynamicZone EverQuest Familiar FindItem FindItemBank FindItemBankCount FindItemCount Float FrameLimiter Friends GameTime Ground GroundItemCount Group Heading If Illusion Ini Int ItemTarget LastSpawn LineOfSight Macro MacroQuest Math Me Mercenary Merchant Mount NearestSpawn Pet Plugin Raid Range Select SelectedItem Skill Spawn SpawnCount Spell Switch Target Task Time Type Window Zone","title":"Tags"},{"location":"tags/#tags","text":"","title":"Tags"},{"location":"tags/#command","text":"/mqclear /mqfont /mqmin /custombind /classhud /defaulthud /hud /loadhud /zonehud /inote /highlight /mapclick /mapfilter /maphide /mapnames /mapshow /i /iconnect /istatus /telnet /aa /advloot /alert /alias /altkey /banklist /beep /beepontells /bind /break /call /caption /captioncolor /cast /cecho /charinfo /cleanup /clearerrors /click /combine /continue /ctrlkey /declare /delay /deletevar /destroy /docommand /doevents /doors /doortarget /dosocial /drop /dumpbinds /echo /endmacro /eqtarget /exec /face /filter /flashontells /for /foreground /goto /help /hotbutton /identify /if /ini /invoke /itemnotify /items /itemtarget /keepkeys /keypress /listmacros /loadcfg /loadspells /location /loginname /look /lootall /macro /makemevisible /memspell /mouseto /mqcopylayout /mqlog /mqpause /mqtarget /multiline /netstatusxpos /netstatusypos /next /nomodkey /noparse /notify /plugin /popcustom /popup /popupecho /ranged /reloadui /removeaura /removebuff /removelev /removepetbuff /return /screenmode /selectitem /sellitem /setautorun /seterror /setprio /setwintitle /shiftkey /skills /spellslotinfo /spew /squelch /substitute /target /timed /timestamp /unload /updateitems /useitem /varcalc /vardata /varset /where /while /who /whofilter /whotarget /windows /windowstate /lootnodrop","title":"command"},{"location":"tags/#datatype","text":"DataType:bazaar DataType:bazaaritem MQ2EQIM:DataType:buddy DataType:FPS MQ2IRC:DataType:irc achievement achievementcat achievementobj altability argb array augtype auratype bandolier body bool buff byte cachedbuff character charselectlist class corpse currentzone deity double dynamiczone dzmember dztimer everquest evolving fellowship fellowshipmember float ground group groupmember heading ini inifile inifilesection inifilesectionkey int int64 invslot item itemspell keyring keyringitem macro macroquest math mercenary merchant pet plugin race raid raidmember range skill spawn spell string switch target task taskmember ticks time timer timestamp type window worldlocation xtarget zone","title":"datatype"},{"location":"tags/#lua","text":"Lua Events and Binds LuaRocks Modules MacroScript to Lua","title":"lua"},{"location":"tags/#macro","text":"AAPurchase.inc Advanced Fishing Afcleric.mac - nils AutoBot.mac-V4.28+ AutoBot.mac Barter Cleric.mac - nytemyst Clockwork Grease Maker Defense.inc DRShmbot GemOpt.inc GenBot Group Language Trainer Guild Buff Bot Loot Any Corpse Modbot 4.0 ModBot Necro Helper Ninjadvloot.inc Puller.inc QuickBeg.inc RDCommon.ini Related Include Files Rogue Helper Command List Rogue Helper Script Examples Sk.mac - nytemyst Snare Spell Routines.inc Spell Skill Trainer Wait4Rez.inc","title":"macro"},{"location":"tags/#plugin","text":"MQ2AutoLogin MQ2Chat MQ2EQBugFix MQ2Labels MQ2Bzsrch MQ2ChatWnd MQ2CustomBinds MQ2HUD MQ2ItemDisplay MQ2Map MQ2Web MQ2EQIM MQ2FPS MQ2IRC MQ2Telnet","title":"plugin"},{"location":"tags/#tlo","text":"TLO:Bazaar TLO:FPS TLO:Irc Achievement AdvLoot Alert Alias AltAbility Bool Corpse Cursor Defined DisplayItem DoorTarget DynamicZone EverQuest Familiar FindItem FindItemBank FindItemBankCount FindItemCount Float FrameLimiter Friends GameTime Ground GroundItemCount Group Heading If Illusion Ini Int ItemTarget LastSpawn LineOfSight Macro MacroQuest Math Me Mercenary Merchant Mount NearestSpawn Pet Plugin Raid Range Select SelectedItem Skill Spawn SpawnCount Spell Switch Target Task Time Type Window Zone","title":"tlo"}]}